syntax = "proto3";
import "KFDefineMessage.proto";
package KFMsg;

enum ServerProtocol
{	
	S2S_SERVER_PROTOCOL_UNKNOW = 0;					// pb3 0 开始

	// server
	S2S_BROADCAST_TO_WORLD = 20001;					// 广播消息
	S2S_BROADCAST_TO_GAME = 20002;					// 广播消息
	S2S_BROADCAST_TO_GATE = 20003;					// 广播消息
	S2S_TRANSMIT_TO_PLAYER = 20004;					// 转发消息
	S2S_TRANSMIT_TO_SERVER = 20005;					// 转发消息

	// player
	S2S_KICK_GAME_PLAYER_REQ = 20011;				// 踢掉在线玩家
	S2S_KICK_GATE_PLAYER_REQ = 20012;				// 踢掉在线玩家
	S2S_LOGIN_LOGIN_VERIFY_REQ = 20013;				// 登录验证请求	
	S2S_LOGIN_LOGIN_VERIFY_ACK = 20014;				// 登录验证结果
	S2S_LOGIN_TELL_TOKEN_TO_GAME_REQ = 20015;		// 通知登录Token信息
	S2S_LOGIN_WORLD_VERIFY_REQ = 20016;				// 登录验证请求
	S2S_LOGIN_FAILED_TO_LOGIN_ACK = 20017;			// 登录失败结果
	S2S_LOGIN_GAME_ACK = 20018;						// 请求登录游戏服务器
	S2S_LOGIN_LOAD_PLAYER_REQ = 20019;				// 请求加载玩家数据
	S2S_LOGIN_LOAD_PLAYER_ACK = 20020;				// 加载玩家数据回馈
	S2S_SAVE_PLAYER_REQ = 20021;					// 保存玩家数据
	S2S_GAME_SYNC_ONLINE_REQ = 20022;				// 同步在线人家
	S2S_PLAYER_ENTER_WORLD_REQ = 20023;				// 游戏玩家进入游戏
	S2S_PLAYER_LEAVE_WORLD_REQ = 20024;				// 游戏玩家离开游戏
	S2S_LOGIN_OUT_REQ = 20025;						// 登出游戏
	S2S_QUERY_PLAYER_REQ = 20026;					// 查询玩家数据
	S2S_QUERY_PLAYER_ACK = 20027;					// 查询玩家数据

	// attribute


	// public
	S2S_UPDATE_PUBLIC_DATA_REQ = 21001;				// 更新公共数据




	S2S_REGISTER_MATCH_REQ = 11101;					// 注册匹配
	S2S_MATCH_TO_PROXY_REQ = 11102;					// 请求匹配
	S2S_MATCH_TO_SHARD_REQ = 11103;					// 请求匹配
	S2S_MATCH_TO_CLIENT_ACK = 11104;				// 匹配回馈
	S2S_CANCEL_MATCH_TO_PROXY_REQ = 11107;			// 取消匹配
	S2S_CANCEL_MATCH_TO_SHARD_REQ = 11108;			// 取消匹配
	S2S_NOTICE_MATCH_ROOM_REQ = 11109;				// 匹配结果
	S2S_NOTICE_MATCH_ROOM_ACK = 11110;				// 匹配结果
	S2S_QUERY_MATCH_ROOM_REQ = 11111;				// 查询匹配
	S2S_QUERY_MATCH_ROOM_ACK = 11112;				// 查询匹配	
	S2S_QUERY_BATTLE_ROOM_REQ = 11113;				// 查询匹配
	S2S_QUERY_BATTLE_ROOM_ACK = 11114;				// 查询匹配
	S2S_QUERY_ROOM_TO_MATCH_SHARD_REQ = 11115;		// 查询匹配
	S2S_QUERY_ROOM_TO_BATTLE_SHARD_REQ = 11116;		// 查询匹配
	S2S_CANCEL_MATCH_TO_BATTLE_SHARD_REQ = 11118; 	// 取消匹配
	S2S_PLAYER_ONLINE_TO_BATTLE_SHARD_REQ = 11120;	// 玩家上线
	S2S_NOTICE_MATCH_STATE_REQ = 11121;				// 匹配状态
	S2S_RESET_MATCH_ROOM_REQ = 11122;				// 重置房间

	S2S_REGISTER_BATTLE_SERVER_REQ = 11200;				// 注册战斗服务器
	S2S_REGISTER_BATTLE_SERVER_ACK = 11201;				// 注册战斗服务器
	S2S_DISCONNECT_SERVER_TO_BATTLE_SHARD_REQ = 11202;	// 战后服务器断开连接
	S2S_REGISTER_SERVER_TO_BATTLE_SHARD_REQ = 11203;	// 注册战斗服务器
	S2S_CREATE_ROOM_TO_BATTLE_PROXY_REQ = 11204;		// 请求创建战斗房间
	S2S_CREATE_ROOM_TO_BATTLE_SHARD_REQ = 11205;		// 请求创建战斗房间
	S2S_CREATE_ROOM_TO_MATCH_SHARD_ACK = 11206;			// 请求创建战斗房间
	S2S_OPEN_BATTLE_ROOM_REQ = 11207;					// 请求开启房间
	S2S_OPEN_BATTLE_ROOM_ACK = 11208;					// 开启战场结果
	S2S_OPEN_ROOM_TO_BATTLE_SHARD_ACK = 11209;			// 开启战场结果
	S2S_PLAYER_ENTER_BATTLE_ROOM_REQ = 11210;			// 玩家匹配进入战场
	S2S_PLAYER_ENTER_BATTLE_ROOM_ACK = 11211;			// 玩家匹配进入战场
	S2S_PLAYER_ENTER_ROOM_TO_BATTLE_SHARD_ACK = 11212;	// 玩家匹配进入战场
	S2S_PLAYER_LEAVE_BATTLE_ROOM_REQ = 11213;			// 玩家主动离开了房间(非断线重连)(从进入房间到战斗结束之前)
	S2S_PLAYER_LEAVE_ROOM_TO_MATCH_SHARD_REQ = 11214;	// 玩家离开了房间
	S2S_TELL_BATTLE_ROOM_START_REQ = 11215;				// 通知服务器战场开启
	S2S_TELL_BATTLE_ROOM_START_ACK = 11216;				// 通知服务器战场开启
	S2S_TELL_ROOM_START_TO_MATCH_SHARD_REQ = 11217;		// 通知服务器战场开启
	S2S_OPEN_ROOM_TO_MATCH_SHARD_REQ = 11218;			// 通知服务器战场开启
	S2S_TELL_BATTLE_ROOM_FINISH_REQ = 11219;			// 通知服务器战场关闭
	S2S_LEAVE_BATTLE_ROOM_TO_CLIENT_ACK = 11220;		// 玩家离开战场
	S2S_TELL_ROOM_START_TO_BATTLE_SHARD_REQ = 11221;	// 战场开始
	S2S_TELL_ROOM_FINISH_TO_BATTLE_SAHRD_REQ = 11222;	// 战场场结束
	S2S_ADD_CAMP_TO_BATTLE_SHARD_REQ = 11223;			// 添加匹配阵营
	S2S_ADD_CAMP_TO_MATCH_SHARD_ACK = 11224;			// 添加匹配阵营
	S2S_REMOVE_CAMP_TO_BATTLE_SHARD_REQ = 11225;		// 删除阵营
	S2S_PLAYER_CANCEL_MATCH_REQ = 11226;				// 玩家取消匹配
	S2S_PLAYER_LEAVE_BATTLE_ROOM_ACK = 11227;			// 玩家离开房间
	S2S_PLAYER_CANCEL_MATCH_ACK = 11228;				// 玩家取消匹配
	S2S_TELL_BATTLE_ROOM_FINISH_ACK = 11229;			// 战场结束
	S2S_PLAYER_LEAVE_ROOM_TO_BATTLE_SHARD_REQ = 11230;	// 离开战场
	S2S_PLAYER_LOGIN_BATTLE_ROOM_REQ = 11231;			// 玩家登陆战场服务器
	S2S_PLAYER_LOGIN_BATTLE_ROOM_ACK = 11232;			// 玩家登陆战场服务器
	S2S_PLAYER_LOGIN_ROOM_TO_BATTLE_SHARD_REQ = 11233; 	// 玩家登陆战场服务器
	S2S_TELL_ROOM_START_TO_BATTLE_SHARD_ACK = 11234;	// 战场开始 
	S2S_TELL_BATTLE_REGISTER_TO_SHARD_REQ = 11235;		// 通知注册
	S2S_TELL_ROOM_CLOSE_TO_MATCH_SHARD_REQ = 11236;		// 通知战场关闭
	S2S_PLAYER_BATTLE_SCORE_REQ = 11237;				// 玩家战绩
	S2S_PLAYER_BATTLE_SCORE_ACK = 11238;				// 玩家战绩
	S2S_BATTLE_ROOM_SCORE_BALANCE_REQ = 11239;			// 玩家战绩
	S2S_BATTLE_ROOM_SCORE_BALANCE_ACK = 11240;			// 玩家战绩
	S2S_BATTLE_SCORE_BALANCE_TO_SHARD_REQ = 11241;		// 战场结算
	S2S_ONLINE_QUERY_BATTLE_SCORE_REQ = 11242;			// 查询结算
	S2S_OPEN_BATTLE_ROOM_TO_SHARD_ACK = 11243;			// 开启战场
	S2S_RESET_BATTLE_ROOM_REQ = 11244;					// 重置战场房间
	S2S_BATTLE_PING_REQ = 11245;						// 战场ping
	S2S_BATTLE_PING_ACK = 11246;						// 战场ping
	S2S_ALLOC_BATTLE_ID_REQ = 11247;					// 申请分配战场id
	S2S_ALLOC_BATTLE_ID_ACK = 11248;					// 申请分配战场id




	S2S_SET_PLAYER_NAME_REQ = 21124;				// 设置名字请求
	S2S_SET_PLAYER_NAME_ACK = 21125;				// 设置名字回应
	S2S_PLAYER_DISCONNECTION_REQ  = 21126;			// 玩家掉线
	S2S_QUERY_MAIL_REQ = 21127;						// 查询邮件
	S2S_QUERY_MAIL_ACK = 21128;						// 查询邮件
	S2S_DELETE_MAIL_REQ = 21129;					// 删除邮件
	S2S_QUERY_FRIEND_REQ = 21130;					// 查询好友信息
	S2S_ADD_FRIEND_INVITE_REQ = 21131;				// 添加好友请求
	S2S_DEL_FRIEND_REQ = 21132;						// 删除好友请求
	S2S_QUERY_FRIEND_ACK = 21133;					// 查询好友信息
	S2S_QUERY_FRIEND_INVITE_ACK = 21134;			// 查询好友申请信息
	S2S_ADD_FRIEND_INVITE_ACK = 21135;				// 添加好友请求
	S2S_DEL_FRIEND_INVITE_REQ = 21136;				// 删除好友邀请
	S2S_ADD_FRIEND_REQ = 21137;						// 添加好友
	S2S_DEL_FRIEND_ACK = 21138;						// 删除好友
	S2S_ADD_FRIEND_ACK = 21139;						// 添加好友
	S2S_UPDATE_FRIEND_REQ = 21140;					// 更新好友
	S2S_ADD_MAIL_REQ = 21141;						// 添加邮件
	S2S_NOTICE_NEW_MAIL_REQ = 21142;				// 通知新邮件
	S2S_UPDATE_FRIEND_LINESS_REQ = 21143;			// 更新好友度
	S2S_QUERY_BASIC_REQ = 21144;					// 查询好友基础数据

	S2S_QUERY_BASIC_ACK = 21146;					// 查询好友基础数据
	S2S_QUERY_FRIEND_INVITE_REQ = 21148;			// 查询好友申请信息
	S2S_CREATE_ROLE_REQ = 21150;					// 创建角色
	S2S_CREATE_ROLE_ACK = 21151;					// 创建角色
	S2S_UPDATE_MAIL_FLAG_REQ = 21152;				// 设置邮件状态请求
	S2S_UPDATE_MAIL_FLAG_ACK = 21153;				// 设置邮件状态响应
	S2S_PLAYER_TOAST_REQ = 21156;					// 玩家敬酒请求
	S2S_PLAYER_TOAST_ACK = 21157;					// 玩家敬酒回馈
	S2S_UPDATE_FRIENDLINESS_ACK = 21158;			// 更新好友度反馈
	S2S_CREATE_MATCH_GROUP_REQ = 21159;				// 创建匹配队伍
	S2S_RECEIVE_INVITE_MATCH_GROUP_REQ = 21160;		// 接收到组队邀请
	S2S_CONSENT_INVITE_MATCH_GROUP_REQ = 21161;		// 回复邀请操作
	S2S_ADD_MATCH_GROUP_MEMBER_REQ = 21162;			// 添加队员
 	S2S_REMOVE_MATCH_GROUP_MEMBER_ACK = 21163;		// 删除队员
	S2S_LEAVE_MATCH_GROUP_REQ = 21164;				// 离开队伍请求
	S2S_KICK_MATCH_GROUP_REQ = 21165;				// 踢出队员
	S2S_APPLY_MATCH_GROUP_REQ = 21166;				// 队员信息
	S2S_LEAVE_MATCH_GROUP_ACK = 21167;				// 离开队伍
	S2S_CONSENT_APPLY_MATCH_GROUP_ACK = 21168;		// 同意加入队伍
	S2S_ONLINE_QUERY_MATCH_GROUP_REQ = 21169;		// 上线查询队伍信息
	S2S_ADD_MATCH_GROUP_MEMBER_ACK = 21170;			// 添加队员
	S2S_UPDATE_GROUP_MEMBER_ACK = 21171;			// 更新玩家基础信息
	S2S_UPDATE_GROUP_MEMBER_REQ = 21172;			// 更新玩家基础信息
	S2S_OFFLINE_UPDATE_MATCH_GROUP_REQ = 21173;		// 离线更新队伍信息
	S2S_CREATE_MATCH_GROUP_TO_SHARD_REQ = 21174;	// 创建队伍
	
	
	S2S_UPDATE_GUEST_LIST_REQ = 21175;				// 更新访客列表
	S2S_QUERY_GUEST_REQ = 21176;					// 查询访客信息请求
	S2S_QUERY_GUEST_ACK = 21177;					// 查询访客信息回馈
	S2S_UPDATE_GROUP_DATA_ACK = 21178;				// 更新队伍属性
	S2S_APPLY_MATCH_GROUP_ACK = 21179;				// 申请加入队伍
	S2S_QUERY_TOAST_COUNT_REQ = 21180;				// 查询总的敬酒次数请求
	S2S_QUERY_TOAST_COUNT_ACK = 21181;				// 查询总的敬酒次数回馈
	S2S_UPDATE_GROUP_MATCH_REQ = 21182;				// 更新队伍匹配模式
	S2S_NEW_PLAYER_LOGIN_MAIL_REQ = 21184;			// 新玩家登陆邮件服务
	S2S_QUERY_RANK_LIST_REQ = 21187;				// 查询全服排行榜
	S2S_QUERY_FRIEND_RANK_LIST_REQ = 21188;			// 查询好友排行榜
	S2S_TELL_MATCH_GROUP_DATA_ACK = 21192;			// 通知队伍数据
	S2S_UPDATE_RANK_DATA_REQ = 21193;				// 更新排行榜数据
	S2S_ADD_RECENT_PLAYER_DATA_REQ = 21194;			// 结算最近的人相关数据
	S2S_QUERY_RECENT_LIST_REQ = 21195;				// 请求最近游戏列表
	S2S_QUERY_RECENT_LIST_ACK = 21196;				// 通知处理最近游戏列表	

	S2S_CREATE_GUILD_REQ = 21197;					// 创建帮派请求
	S2S_CREATE_GUILD_TO_SHARD_REQ = 21198;			// 创建帮派请求发送到shard
	S2S_CREATE_GUILD_ACK = 21199;					// 创建帮派返回
	S2S_UPDATE_MEMBER_BASIC_DATA_REQ = 21200;		// 更新帮派成员基础信息
	S2S_INVITE_GUILD_REQ = 21201;					// 邀请好友加入帮派请求
	S2S_INVITE_GUILD_ACK = 21202;					// 邀请好友加入帮派反馈
	S2S_APPLY_GUILD_REQ = 21203;					// 申请加入帮派请求
	S2S_APPLY_GUILD_ACK = 21204;					// 申请加入帮派反馈
	S2S_PLAYER_GUILD_CHANGE_REQ = 21205;			// 玩家帮派状态变化guild->zone	
	S2S_EXIT_GUILD_REQ = 21206;						// 玩家退出帮派
	S2S_TRANSFER_MASTER_REQ = 21207;				// 转让帮派请求
	S2S_REVIEW_APPLY_REQ = 21208;					// 审核帮派成员加入	
	S2S_DISSOLVE_GUILD_REQ = 21209;					// 解散帮派
	S2S_MODIFY_MEDAL_REQ = 21210;					// 修改帮派徽章
	S2S_QUERY_GUILD_LIST_REQ = 21211;				// 请求帮派列表
	S2S_KICK_MEMBER_REQ = 21212;					// 请求踢人
	S2S_LOGIN_QUERY_GUILD_REQ = 21213;				// 登录请求自身帮派数据
	S2S_LOGIN_QUERY_GUILD_ACK = 21214;				// 请求帮派数据返回
	S2S_UPDATE_GUILD_DATA_REQ = 21215;				// 更新帮派成员数据
	S2S_UPGRADE_GUILD_REQ = 21216;					// 帮派升级
	S2S_UPGRADE_GUILD_ACK = 21217;					// 帮派升级反馈
	S2S_APPOINT_GUILD_MEMBER_REQ = 21218;			// 任命帮派成员请求
	S2S_SEARCH_GUILD_BY_NAME_REQ = 21219;			// 根据帮派名字搜索帮派信息
	S2S_SET_GUILD_SWITCH_REQ = 21220;				// 设置帮派管理开关
	S2S_LOGIN_QUERY_GUILDID_REQ = 21221;			// 登录请求guildid
	S2S_LOGIN_QUERY_GUILDID_ACK = 21222;			// 登录请求guildid返回
	S2S_QUERY_GUILD_LOG_REQ = 21223;				// 查询帮派日志
	S2S_ADD_GUILD_ACTIVENESS_REQ = 21224;			// 增加帮派活跃度
	S2S_GM_ADD_MAIL_REQ = 21300;					// GM增加邮件
	S2S_SEND_CHAT_TO_SERVER = 21301;				// 发送聊天内容

 }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// S2S_TRANSMIT_MESSAGE_REQ
message S2STransmitMessageReq
{
	uint64 playerid = 1;
	uint32 msgid = 2;
	bytes msgdata = 3;
}

// S2S_BROADCAST_MESSAGE_REQ
message S2SBroadcastMessageReq
{
	uint32 msgid = 1;			// 消息id
	bytes msgdata = 2;		// 消息内容
}

// S2S_BROADCAST_TO_WORLD
message S2SBroadcastToWord
{
	uint32 msgid = 1;			// 消息id
	bytes msgdata = 2;		// 消息内容
}

// S2S_BROADCAST_TO_GAME
message S2SBroadcastToGame
{
	uint32 msgid = 1;			// 消息id
	bytes msgdata = 2;		// 消息内容
}

// S2S_BROADCAST_TO_GATE
message S2SBroadcastToGate
{
	uint32 msgid = 1;			// 消息id
	bytes msgdata = 2;		// 消息内容
}

// S2S_TRANSMIT_TO_PLAYER
message S2STransmitToPlayer
{
	uint64 playerid = 1;		// 玩家id
	uint32 msgid = 2;			// 消息id
	bytes msgdata = 3;		// 消息内容
}

// S2S_TRANSMIT_TO_SERVER
message S2STransmitToServer
{
	uint32 msgid = 2;			// 消息id
	bytes msgdata = 3;		// 消息内容
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 更新公共数据
// S2S_UPDATE_PUBLIC_DATA_REQ
message S2SUpdatePublicDataReq
{
	uint64 playerid = 1;		// 玩家id
	map<string, bytes> pbdata = 4;		// 属性
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// S2S_KICK_GAME_PLAYER_REQ
message S2SKickGamePlayerReq
{
	uint64 playerid = 1;		// 角色id
	uint32 type = 2;
}

// S2S_KICK_GATE_PLAYER_REQ
message S2SKickGatePlayerReq
{
	uint64 playerid = 1;		// 角色id
	uint32 type = 2;

}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 登录验证请求
// S2S_LOGIN_LOGIN_VERIFY_REQ
message S2SLoginLoginVerifyReq
{
	uint64 accountid = 1;	// 账号id
	bytes token = 2;		// token
	bytes ip = 3;			// ip
	uint64 sessionid = 4;	// sessionid
}

// 登录验证请求
// S2S_LOGIN_LOGIN_VERIFY_ACK
message S2SLoginLoginVerifyAck
{
	uint32 result = 1;		// 结果
	uint64 accountid = 2;	// 账号id
	uint64 sessionid = 3;	// sessionid
	uint64 bantime = 4;	// 禁止游戏的时间
}

message PBLoginData
{
	bytes token = 1;		// token
	uint64 gateid = 2;		// 服务器id
	uint64 sessionid = 3;	// sessionid
	uint32 channel = 4;		// 渠道id
	bytes account = 5;		// 账号
	uint64 accountid = 6;	// 账号id
	uint64 playerid = 7;	// 角色id
	map<string, bytes> channeldata = 8;	// 渠道数据	
}

// 世界服务器验证
// S2S_LOGIN_WORLD_VERIFY_REQ
message S2SLoginWorldVerifyReq
{
	PBLoginData pblogin = 1;
}

// 登录失败
// S2S_LOGIN_FAILED_TO_LOGIN_ACK
message S2SLoginFailedToLoginAck
{
	uint64 gateid = 1;	// 服务器id
	uint32 result = 2;	// 结果
	uint64 accountid = 3;	// 账号id
	uint64 sessionid = 4;	// sessionid
}

// 通知登录节点Token信息
// S2S_LOGIN_TELL_TOKEN_TO_GAME_REQ
message S2SLoginTellTokenToGameReq
{
	PBLoginData pblogin = 1;
}

// S2S_LOGIN_GAME_ACK
message S2SLoginGameAck
{
	PBLoginData pblogin = 1;
	uint32 result = 2;
	uint64 servertime = 3;
	PBObject playerdata = 4;
}

// 加载游戏数据
// S2S_LOGIN_LOAD_PLAYER_REQ
message S2SLoginLoadPlayerReq
{
	PBLoginData pblogin = 1;	
}

// 加载游戏数据结果
// S2S_LOGIN_LOAD_PLAYER_ACK
message S2SLoginLoadPlayerAck
{
	uint32 result = 1;
	PBLoginData pblogin = 2;
	PBObject playerdata = 3;	
}

// 保存玩家数据
// S2S_SAVE_PLAYER_REQ
message S2SSavePlayerReq
{
	uint64 id = 1;
	PBObject data = 3;
}

// S2S_LOGIN_OUT_REQ
message S2SLoginOutReq
{
	uint64 playerid = 1; 
}

// S2S_PLAYER_DISCONNECTION_REQ
message S2SPlayerDisconnectionReq
{
	uint64 playerid = 1; 
}

// 查询属性
// S2S_QUERY_PLAYER_REQ
message S2SQueryPlayerReq
{
	uint64 playerid = 1;
}

// 查询属性
// S2S_QUERY_PLAYER_ACK
message S2SQueryPlayerAck
{
	uint32 result = 1;
	PBObject playerdata = 2;
}

// S2S_SET_PLAYER_NAME_REQ
message S2SSetPlayerNameReq
{
	uint64 playerid = 1;
	bytes oldname = 2;
	bytes newname = 3;
	uint64 itemguid = 4;
}

// S2S_SET_PLAYER_NAME_ACK
message S2SSetPlayerNameAck
{
	uint32 result = 1;
	uint64 playerid = 2;
	bytes name = 3;
	uint64 itemguid = 4;
}
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
// 查询角色id请求
// S2S_PLAYER_ENTER_WORLD_REQ
message S2SPlayerEnterWorldReq
{
	uint64 playerid = 1;		// 角色id	
	uint64 accountid = 2;		// 账号id
}

// S2S_PLAYER_LEAVE_WORLD_REQ
message S2SPlayerLeaveWorldReq
{
	uint64 playerid = 1;		// 角色id
	uint64 accountid = 2;		// 账号id
}

// 同步在线玩家
// S2S_GAME_SYNC_ONLINE_REQ
message S2SGameSyncOnlineReq
{
	repeated uint64 playerid = 1;
}
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
// 查询邮件请求
// S2S_QUERY_MAIL_REQ
message S2SQueryMailReq
{
	uint64 playerid = 1;		//  角色id
	uint32 mailtype = 2;		//  邮件类型
	uint64 maxmailid = 3;			// 最大的邮件id
}

// 邮件信息
message PBMail
{
	map<string, bytes> data = 1;
}

message PBMails
{
	repeated PBMail mail = 1;	// 邮件信息
}

// 查询邮件请求
// S2S_QUERY_MAIL_ACK
message S2SQueryMailAck
{
	uint64 playerid = 1;	//  角色id
	PBMails mails = 2;	// 邮件信息
	uint32 mailtype = 3;	// 邮件类型
}

// 删除邮件
// S2S_DELETE_MAIL_REQ
message S2SDeleteMailReq
{
	uint64 playerid = 1;		// 角色id
	uint64 mailid = 2;			// 邮件id
	uint32 mailtype = 3;		// 邮件类型
}

// 添加邮件
// S2S_ADD_MAIL_REQ
message S2SAddMailReq
{
	uint64 playerid = 1;		// 角色id
	uint32 mailtype = 3;		// 邮件类型
	PBMail pbmail = 5;			// 邮件信息
}

// 通知有新邮件
// S2S_NOTICE_NEW_MAIL_REQ
message S2SNoticeNewMailReq
{
	uint64 playerid = 1;	// 角色id	
	uint32 mailtype = 2;	// 邮件类型	
}

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
message PBRelation
{
	uint64 playerid = 1;
	map<string, bytes> playerdata = 2;
	map<string, bytes> relationdata = 3;
}

// 查询好友信息
// S2S_QUERY_FRIEND_REQ
message S2SQueryFriendReq
{
	uint64 playerid = 1;	// 玩家id
	uint64 serverid = 2;
}

// 查询好友申请信息
// S2S_QUERY_FRIEND_INVITE_REQ
message S2SQueryFriendInviteReq
{
	uint64 playerid = 1;	// 玩家id
	uint64 serverid = 2;
}

// 查询好友信息
// S2S_QUERY_FRIEND_ACK
message S2SQueryFriendAck
{
	uint64 playerid = 1;	// 玩家id
	repeated PBRelation pbfriend = 2;	// 好友数据	
}

// 查询好友信息
// S2S_QUERY_FRIEND_INVITE_ACK
message S2SQueryFriendInviteAck
{
	uint64 playerid = 1;	// 玩家id
	repeated PBRelation pbfriend = 2;	// 好友数据	
}

// 添加好友请求
// S2S_ADD_FRIEND_INVITE_REQ
message S2SAddFriendInviteReq
{
	uint64 selfplayerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
	bytes message = 3;		// 留言	
	uint64 serverid = 4;
	bytes targetname = 5;		// 对方名字
}

// 添加好友申请
// S2S_ADD_FRIEND_INVITE_ACK
message S2SAddFriendInviteAck
{
	uint64 playerid = 1;	// 玩家id
	PBRelation pbfriend = 2;	// 好友数据	
}

// 删除好友请求
// S2S_DEL_FRIEND_REQ
message S2SDelFriendReq
{
	uint64 selfplayerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
}

// 删除好友
// S2S_DEL_FRIEND_ACK
message S2SDelFriendAck
{
	uint64 playerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
}

// 删除好友请求
// S2S_DEL_FRIEND_INVITE_REQ
message S2SDelFriendInviteReq
{
	uint64 selfplayerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
}

// 添加好友
// S2S_ADD_FRIEND_REQ
message S2SAddFriendReq
{
	uint64 selfplayerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
	uint64 serverid = 3;
	bytes targetname = 4;		// 对方名字
}

// 添加好友
// S2S_ADD_FRIEND_ACK
message S2SAddFriendAck
{
	uint64 playerid = 1;		// 玩家id
	PBRelation pbfriend = 2;		// 好友信息
}

// 更新好友属性
// S2S_UPDATE_FRIEND_REQ
message S2SUpdateFriendReq
{
	uint64 friendid = 1;
	uint64 serverid = 2;
	map<string, bytes> pbdata = 3;
}

// 更新好友度
// S2S_UPDATE_FRIEND_LINESS_REQ
message S2SUpdateFriendLinessReq
{
	uint64 selfplayerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
	uint32 friendliness = 3;	// 好友度
	uint32 type = 4;			// 类型
	//optional uint32 serverid = 5;		// 申请服务器id
	//optional bytes targetname = 6;		// 对方名字
}

// 查询基础数据
// S2S_QUERY_BASIC_REQ
message S2SQueryBasicReq
{
	uint64 playerid = 1;
	bytes name = 2;
}

// 查询基础数据
// S2S_QUERY_BASIC_ACK
message S2SQueryBasicAck
{
	uint64 playerid = 1;
	uint32 result = 2;
	PBObject pbobject = 3;
}



// 设置邮件状态请求
// S2S_UPDATE_MAIL_FLAG_REQ
message S2SUpdateMailFlagReq
{
	uint64 playerid = 1;
	uint64 mailid = 2;
	uint32 mailtype = 3;
	uint32 flag = 4;
}

// 设置邮件状态响应
// S2S_UPDATE_MAIL_FLAG_ACK
message S2SUpdateMailFlagAck
{
	uint64 playerid = 1;
	uint64 mailid = 2;
	uint32 mailtype = 3;
	uint32 flag = 4;
}

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

// 玩家敬酒请求
//S2S_PLAYER_TOAST_REQ
message S2SPlayerToastReq
{
	uint64 selfplayerid = 1;			// 敬酒人
	uint64 targetplayerid = 2;         // 被敬酒人
	uint64 serverid = 3;         		// 服务器id
}

//玩家敬酒回馈
//S2S_PLAYER_TOAST_ACK
message S2SPlayerToastAck
{
	uint32 result = 1;					// 敬酒结果
	uint64 playerid = 2;				// 敬酒人
	uint64 targetplayerid = 3;			// 被敬酒人
	uint64 targetserverid = 4;			// 被敬酒人serverid
}

// 查询总的敬酒次数请求
//S2S_QUERY_TOAST_COUNT_REQ
message S2SQueryToastCountReq
{
	uint64 selfplayerid = 1;
	uint64 targetplayerid = 2;
}

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

// 更新好友度反馈
// S2S_UPDATE_FRIENDLINESS_ACK
message S2SUpdateFriendLinessAck
{
	uint64 playerid = 1;	// 申请id
	uint64 targetplayerid = 2;	// 对方id
	uint64 friendliness = 3;	// 好友度
}

// 创建匹配小组
// S2S_CREATE_MATCH_GROUP_REQ
message S2SCreateMatchGroupReq
{
	PBObject pbmember = 1;
	uint64 groupid = 2;
	uint32 maxcount = 3;
	uint32 matchid = 4;
	uint64 playerid = 5;
}

// 更新队伍信息
// S2S_UPDATE_GROUP_MATCH_REQ
message S2SUpdateGroupMatchReq
{
	uint64 groupid = 1;
	uint32 maxcount = 2;
	uint32 matchid = 3;
	uint64 playerid = 4;
}

// 创建匹配小组
// S2S_CREATE_MATCH_GROUP_TO_SHARD_REQ
message S2SCreateMatchGroupToShardReq
{
	PBObject pbmember = 1;
	uint64 groupid = 2;
	uint32 maxcount = 3;
	uint32 matchid = 4;
	uint64 playerid = 5;
}

// 接收到组队请求
// S2S_RECEIVE_INVITE_MATCH_GROUP_REQ
message S2SReceiveInviteMatchGroupReq
{
	uint64 playerid = 1;		 // 玩家id
	uint64 groupid = 2;		 // 队伍id
	PBObject inviter = 3;		 // 邀请者(BasicPlayer)
	bytes source = 4;			 // 从哪里发起邀请
	uint32 matchid = 5;		 // 匹配模式
	uint64 inviterplayerid = 6; // 邀请者id
	uint64 inviterserverid = 7; // 服务器id
	bytes playername = 8;		 // 被邀请玩家名字
}

// 同意玩家邀请请求
// S2S_CONSENT_INVITE_MATCH_GROUP_REQ
message S2SConsentInviteMatchGroupReq
{
	uint64 groupid = 1;		// 队伍id
	uint64 playerid = 2;		// 玩家id
	uint64 serverid = 3;		// 服务器id
	PBObject pbmember = 4;		// 队员信息
}

// 同意玩家邀请请求
// S2S_ADD_MATCH_GROUP_MEMBER_REQ
message S2SAddMatchGroupMemberReq
{
	uint64 groupid = 1;		// 队伍id
	uint64 playerid = 2;		// 玩家id
	uint64 serverid = 3;		// 服务器id
	PBObject pbmember = 4;		// 队员信息
}

// 添加匹配队员
// S2S_ADD_MATCH_GROUP_MEMBER_ACK
message S2SAddMatchGroupMemberAck
{
	PBObject pbmember = 1;
}

// 通知队伍信息
// S2S_TELL_MATCH_GROUP_DATA_ACK
message S2STellMatchGroupDataAck
{
	repeated PBObject pbmember = 1;
	uint64 groupid = 2;
	uint64 captainid = 3;
	uint32 maxcount = 4;
	uint32 matchid = 5;
	bool newadd = 6;		// 是否新加入队伍
}

// 添加匹配队员
// S2S_REMOVE_MATCH_GROUP_MEMBER_ACK
message S2SRemoveMatchGroupMemberAck
{
	uint64 memberid = 1;
}

// 离开队伍请求
// S2S_LEAVE_MATCH_GROUP_REQ
message S2SLeaveMatchGroupReq
{
	uint64 groupid = 1;
	uint64 playerid = 2;	
}

// 踢出队员
// S2S_KICK_MATCH_GROUP_REQ
message S2SKickMatchGroupReq
{
	uint64 groupid = 1;
	uint64 captainid = 2;	
	uint64 serverid = 3;
	uint64 memberid = 4;	
}

// 离开队伍
// S2S_LEAVE_MATCH_GROUP_ACK
message S2SLeaveMatchGroupAck
{
	uint64 playerid = 1;	
}

// 申请加入队伍
// S2S_APPLY_MATCH_GROUP_REQ
message S2SApplyMatchGroupReq
{
	uint64 groupid = 1;		// 队伍id
	uint64 playerid = 2;		// 玩家id
	uint64 serverid = 3;		// 服务器id
	PBObject pbmember = 4;		// 队员信息
}

// 申请加入队伍
// S2S_APPLY_MATCH_GROUP_ACK
message S2SApplyMatchGroupAck
{
	uint64 playerid = 1;
	PBObject pbmember = 2;		// 队员信息
	uint64 serverid = 3;		// 服务器id
}


// 回复申请加入队伍
// S2S_CONSENT_APPLY_MATCH_GROUP_ACK
message S2SConsentApplyMatchGroupAck
{
	uint64 groupid = 1;		// 队伍id
	uint64 playerid = 2;		// 申请人id
	uint64 captainid = 3;		// 队长id
	uint64 serverid = 4;		// 服务器id
	bytes playername = 5;		// 玩家名字
}

// 上线查询队伍信息
// S2S_ONLINE_QUERY_MATCH_GROUP_REQ
message S2SOnLineQueryMatchGroupReq
{
	uint64 groupid = 1;	// 队伍id
	uint64 playerid = 2;	// 玩家id
	uint64 serverid = 3;	// 服务器id
}

// 离线更新队伍信息
// S2S_OFFLINE_UPDATE_MATCH_GROUP_REQ
message S2SOffLineUpdateMatchGroupReq
{
	uint64 groupid = 1;	// 队伍id
	uint64 playerid = 2;	// 玩家id
}

// 更新队员的基础信息
// S2S_UPDATE_GROUP_MEMBER_REQ
message S2SUpdateGroupMemberReq
{
	uint64 groupid = 1;		// 队伍
	uint64 memberid = 2;		// 队员id
	bytes dataname = 3;		// 属性名称
	map<string, bytes> pbstrings = 4;	// 更新数值
}

// 更新队员的基础信息
// S2S_UPDATE_GROUP_MEMBER_ACK
message S2SUpdateGroupMemberAck
{
	uint64 memberid = 1;		// 队员id
	bytes dataname = 2;		// 属性名称
	map<string, bytes> pbstrings = 3;	// 更新数值
}

// 变更为队长
// S2S_UPDATE_GROUP_DATA_ACK
message S2SUpdateGroupDataAck
{
	map<string, bytes> pbstring = 1;	// 更新数值
}


// 更新访客列表
// S2S_UPDATE_GUEST_LIST_REQ
message S2SUpdateGuestListReq
{
	uint64 playerid = 1;		// 玩家id
	uint64 guestid = 2;		// 访客id
	uint64 guesttime = 3;		// 拜访时间戳
}

// 查询访客信息请求
// S2S_QUERY_GUEST_REQ
message S2SQueryGuestReq
{
	uint64 playerid = 1;		// 发起请求的玩家id
	uint64 queryid = 2;		// 被查询的玩家id
	uint64 querytime = 3;		// 请求时间戳
}

// 查询访客信息回馈
// S2S_QUERY_GUEST_ACK
message S2SQueryGuestAck
{
	uint64 playerid = 1;		// 发起请求的玩家id
	uint64 queryid = 2;		// 被查询的玩家id
	uint32 guestcount = 3;		// 本月访客数量
	repeated PBGuestData guestdata = 4;	// 最近访客信息
}

// 新玩家登陆邮件服务
// S2S_NEW_PLAYER_LOGIN_MAIL_REQ
message S2SNewPlayerLoginMailReq
{
	uint64 playerid = 1;		// 玩家id
}

// 更新排行榜数据
// S2S_UPDATE_RANK_DATA_REQ
message S2SUpdateRankDataReq
{
	uint64 playerid = 1;		// 玩家id
	uint32 rankid = 2;		// 榜单id
	uint32 zoneid = 3;		// 小区id
	PBRankData pbrankdata = 4;	// 排行榜数据
}

// 查询全服排行榜
// S2S_QUERY_RANK_LIST_REQ
message S2SQueryRankListReq
{
	uint64 playerid = 1;		// 玩家id
	uint64 serverid = 2;		// 服务器id
	uint32 rankid = 3;			// 排行榜id
	uint32 zoneid = 4;			// 小区id
}

// 查询好友排行榜
// S2S_QUERY_FRIEND_RANK_LIST_REQ
message S2SQueryFriendRankListReq
{
	uint64 playerid = 1;		// 玩家id
	uint64 serverid = 2;		// 服务器id
	uint32 rankid = 3;			// 榜单类型
	repeated uint64 friendid = 4;		// 待查询的玩家好友id
}

// 添加最近的人游戏数据
// S2S_ADD_RECENT_PLAYER_DATA_REQ
message S2SAddRecentPlayerDataReq
{
	uint64 roomid = 1;
	uint64 playerid = 2;
	repeated uint64 members = 3;
	map<string, bytes> pbdata = 4;
}

// 请求最近游戏列表
// S2S_QUERY_RECENT_LIST_REQ
message S2SQueryRecentListReq
{
	uint64 playerid = 1;		// 玩家id
}

// 通知处理最近游戏列表	
// S2S_QUERY_RECENT_LIST_ACK
message S2SQueryRecentListAck
{
	uint64 playerid = 1;		// 角色id
	repeated PBRelation pbrelation = 2;	// 最近玩家数据	
}

// 创建帮派请求
// S2S_CREATE_GUILD_REQ
message S2SCreateGuidReq
{
	uint64 playerid = 1;	// 玩家id
	uint64 serverid = 2;	//服务器id
	bytes name = 3;	// 玩家名字
	bytes guildname = 4;	// 帮派名字
	uint32 medal = 5;	// 帮派勋章
	bytes manifesto = 6;	// 帮派宣言 
}

// 创建帮派请求发送到shard
// S2S_CREATE_GUILD_TO_SHARD_REQ
message S2SCreateGuildToShardReq
{
	uint64 playerid = 1;	// 玩家id
	uint64 serverid = 2;	//服务器id
	bytes name = 3;	// 玩家名字
	bytes guildname = 4;	// 帮派名字
	uint32 medal = 5;	// 帮派勋章
	bytes manifesto = 6;	// 帮派宣言
	uint64 guildid = 7;	// 帮派id
}

// 创建帮派返回
// S2S_CREATE_GUILD_ACK
message S2SCreateGuildAck
{
	uint32 code = 1;	// 处理结果
	uint64 playerid = 2;	//玩家id
	uint64 guildid = 3;	// 帮派id
	uint32 medal = 4;	// 帮派勋章
	bytes manifesto = 5;	// 帮派宣言	
}

// 更新帮派成员基础信息
// S2S_UPDATE_MEMBER_BASIC_DATA_REQ
message S2SUpdateMemberBasicDataReq
{
	uint64 playerid = 1;	// 角色id
	uint64 guildid = 2;	// 帮派id
	map<string, bytes> pbdata = 3;   // 角色基础信息
}


// 邀请好友加入帮派
// S2S_INVITE_GUILD_REQ
message S2SInviteGuildReq
{
	uint64 guildid = 1;	// 邀请加入的帮派id
	uint64 invitor = 2;	// 邀请者id
	uint64 invitedid = 3;	// 被邀请者的id
	uint64 serverid = 4;	// 邀请者服务Id
}

// 邀请好友加入帮派反馈
// S2S_INVITE_GUILD_ACK
message S2SInviteGuildAck
{
	uint64 guildid = 1;	// 邀请加入的帮派id
	uint64 playerid = 2;	// 邀请者id
	uint64 invitedid = 3;	// 被邀请者的id
}

// 申请加入帮派请求
// S2S_APPLY_GUILD_REQ
message S2SApplyGuildReq
{
	uint64 guildid = 1;			// 申请加入的帮派
	uint64 invitor = 2;			// 推荐者id
	uint64 playerid = 3;			// 申请者id
}

// 申请加入帮派反馈
// S2S_APPLY_GUILD_ACK
message S2SApplyGuildAck
{
	uint64 playerid = 1;			// 申请者id
	uint64 guildid = 2;			// 申请加入的帮派
	uint32 code = 3;			// 标志位
}

// 玩家帮派状态变化
// S2S_PLAYER_GUILD_CHANGE_REQ
message S2SPlayerGuildChangeReq
{
	uint64 playerid = 1;			// 玩家id
	uint64 guildid = 2;			// 帮派id
	uint32 code = 3;			// 状态码//加入帮派//退出帮派等
}

// 玩家退出帮派
// S2S_EXIT_GUILD_REQ
message S2SExitGuildReq
{
	uint64 guildid = 1;			// 帮派id
	uint64 playerid = 2;			// 玩家id
	uint64 serverid = 3;			// 服务器id
}

// 转让帮派请求
// S2S_TRANSFER_MASTER_REQ
message S2STransferMasterReq
{
	uint64 guildid = 1;			// 帮派id
	uint64 playerid = 2;			// 现任帮主id
	uint64 newmasterid = 3;		// 新的帮主id
	uint64 serverid = 4;			// 服务器id
}

// 审核帮派成员加入
// S2S_REVIEW_APPLY_REQ
message S2SReviewApplyReq
{
	uint32 playerid = 1;			// 操作者id
	uint64 dealplayerid = 2;		// 被操作人id
	uint32 operatortype = 3;		// 操作类型
	uint64 guildid= 4;			// 帮派id
	uint64 serverid = 5;			// 服务器id
}

// 解散帮派
// S2S_DISSOLVE_GUILD_REQ
message S2SDissolveGuildReq
{
	uint64 playerid =1;			// 操作者id
	uint64 guildid = 2;			// 帮派id
	uint64 serverid = 3;			// 服务器id
}

// 修改帮派徽章
// S2S_MODIFY_MEDAL_REQ
message S2SModifyMedalReq
{
	uint64 playerid = 1;			// 操作者id
	uint64 guildid = 2;			// 帮派id
	uint64 serverid =3;			// 服务器id
	uint32 newmedal = 4;		// 新的徽章id
}

// 请求帮派列表
// S2S_QUERY_GUILD_LIST_REQ
message S2SQueryGuildListReq
{
	uint64 playerid = 1;			// 操作者id
	uint64 serverid = 2;			// 服务器id
	repeated uint64 guilds = 3;	// 要查询的帮派id
	uint32 cursor = 4;		// 查询的游标（从0开始）
}

// 请求踢人
// S2S_KICK_MEMBER_REQ
message S2SKickMemberReq
{
	uint64 playerid = 1;			// 操作者id
	uint64 guildid = 2;			// 帮派id
	uint64 toplayerid = 3;			// 被踢人的id
	uint64 serverid = 4;			// 服务器id
}

// 登录请求自身帮派数据
// S2S_LOGIN_QUERY_GUILD_REQ
message S2SLoginQueryGuildReq
{
	uint64 guildid = 1;			// 帮派id
	uint32 playerid = 2;			// 玩家Id
	uint32 serverid = 3;			// 服务器id
}

// 请求帮派数据返回
// S2S_LOGIN_QUERY_GUILD_ACK
message S2SLoginQueryGuildAck
{
	uint64 playerid = 1;			// 角色id
	PBObject guilddata = 2;		// 帮派数据
	bool showapplicant = 3;		// 是否展示申请列表
	uint64 guildid = 4;			// 帮派id
}

// 更新帮派成员数据
// S2S_UPDATE_GUILD_DATA_REQ
message S2SUpdateGuildDataReq
{
	uint64 guildid = 1;
	uint64 playerid = 2;		// 玩家id
	map<string, bytes> pbdata = 3;		// 属性
}

// 帮派升级
// S2S_UPGRADE_GUILD_REQ
message S2SUpgradeGuildReq
{
	uint64 guildid = 1;		// 帮派id
	uint64 playerid = 2;		// 玩家id
}

// 帮派升级反馈
// S2S_UPGRADE_GUILD_ACK
message S2SUpgradeGuildAck
{
	uint64 playerid = 1;		// 玩家id
	uint32 level = 2;		// 帮派等级
	uint32 code = 3;		// retcode
}

// 任命帮派成员请求
// S2S_APPOINT_GUILD_MEMBER_REQ
message S2SAppointGuildMemberReq
{
	uint64 playerid = 1;	// 玩家id
	uint64 guildid = 2;	// 帮派id
	uint64 toplayerid = 3;	// 任命玩家的id
	uint32 title = 4;		// 任命的职位
	uint64 serverid = 5;	// 服务器id
}

// 根据帮派名字搜索帮派信息
// S2S_SEARCH_GUILD_BY_NAME_REQ
message S2SSearchGuildByNameReq
{
	bytes guildname = 1;		// 帮派名字
	uint64 serverid = 2;		// 服务器id
	uint64 playerid = 3;		// 玩家id
}

// 设置帮派管理开关
// S2S_SET_GUILD_SWITCH_REQ
message S2SSetGuildSwitchReq
{
	uint64 playerid = 1;		// 玩家id
	uint64 guildid = 2;		// 帮派id
	bytes type = 3;		// 帮派管理类别
	uint32 flag = 4;		// 设置的值
	uint64 serverid = 5;		// 服务器id
}

// 登录请求guildid
// S2S_LOGIN_QUERY_GUILDID_REQ
message S2SLoginQueryGuildidReq
{
	uint64 playerid = 1;		// 玩家id
	uint64 serverid = 2;		// 服务器id
}

// S2S_LOGIN_QUERY_GUILDID_ACK
message S2SLoginQueryGuildidAck
{
	uint64 playerid = 1;		// 玩家id
	uint64 guildid = 2;		// 帮派id
}

// 查询帮派日志
// S2S_QUERY_GUILD_LOG_REQ
message S2SQueryGuildLogReq
{
	uint64 guildid= 1;		// 帮派id
	uint64 playerid = 2;		// 玩家id
	uint64 serverid = 3;		// 服务器id
	uint32 beginpos = 4;		// 开始位置
	uint32 endpos = 5;		// 结束位置
	uint32 page = 6;		// 页数
}

// 增加帮派活跃度
// S2S_ADD_GUILD_ACTIVENESS_REQ
message S2SAddGuildActivenessReq
{
	uint64 guildid = 1;		// 帮派id
	uint64 playerid = 2;		// 玩家id
	uint32 activeness = 3;		// 活跃度
}

// GM增加邮件
// S2S_GM_ADD_MAIL_REQ
message S2SGMAddMailReq
{
	repeated uint64 playerids = 1;		// 角色id
	uint32 mailtype = 2;			// 邮件类型
	PBMail pbmail = 3;			// 邮件信息
}

// 聊天消息
// S2S_SEND_CHAT_TO_SERVER
message S2SSendChatToServer
{
	bytes chatinfo = 1;		//聊天内容
	uint32 isvoice = 2;		//是否是语音消息
	bytes playername = 3;		//发送聊天的玩家名字
	uint64 playerid = 4;		//发送聊天的玩家id
	bytes playericon = 5;		//发送聊天的玩家头像
	uint32 playergrade = 6;	//发送聊天的玩家评分等级
	uint32 playersex = 7;		//发送聊天的玩家性别
	bytes playericonbox = 8;	//发送聊天的玩家头像框
	uint64 playerserverid = 9;	//发送聊天的玩家服务器id
}


// 注册匹配信息
// S2S_REGISTER_MATCH_REQ
message S2SRegisterMatchReq
{
	repeated uint32 matchid = 1; 
}

// 请求匹配
// S2S_MATCH_TO_PROXY_REQ
message S2SMatchToProxyReq
{
	PBMatchGroup pbgroup = 1;
	uint32 matchid = 2;
	bool allowgroup = 3;
	uint64 playerid = 4;
	uint64 serverid = 5;
	uint64 battleserverid = 6;
	bytes version = 7;			// 客户端版本
}

// S2S_MATCH_TO_CLIENT_ACK
message S2SMatchToClientAck
{
	uint32 result = 1;
	uint32 matchid = 2;
	uint64 playerid = 3;
}

// S2S_MATCH_TO_SHARD_REQ
message S2SMatchToShardReq
{
	PBMatchGroup pbgroup = 1;
	uint32 matchid = 2;
	bool allowgroup = 3;
	uint64 playerid = 4;
	uint64 serverid = 5;
	uint64 battleserverid = 6;
	bytes version = 7;			// 客户端版本
}

// 取消匹配
// S2S_CANCEL_MATCH_TO_PROXY_REQ
message S2SCancelMatchToProxyReq
{
	uint32 matchid = 1;	// 匹配模式	
	uint64 playerid = 2;	// 玩家id	
}

// 取消匹配
// S2S_CANCEL_MATCH_TO_SHARD_REQ
message S2SCancelMatchToShardReq
{
	uint32 matchid = 1;	// 匹配模式	
	uint64 playerid = 2;	// 玩家id		
}

// 取消匹配
// S2S_CANCEL_MATCH_TO_BATTLE_SHARD_REQ
message S2SCancelMatchToBattleShardReq
{
	uint64 roomid = 1;
	uint32 campid = 2;
	uint64 groupid = 3;
}

// 匹配结果
// S2S_NOTICE_MATCH_ROOM_REQ
message S2SNoticeMatchRoomReq
{
	uint32 matchid = 1;
	uint64 battleshardid = 2;
	uint32 campid = 3;
	uint64 playerid = 4;
	uint64 serverid = 5;
	uint64 roomid = 6;
	bytes ip = 7;
	uint32 port = 8;
	bytes token = 9;
}

// 匹配结果
// S2S_NOTICE_MATCH_ROOM_ACK
message S2SNoticeMatchRoomAck
{
	uint64 roomid = 1;
	uint32 campid = 2;
	uint64 playerid = 3;
}

// 查询匹配信息
// S2S_QUERY_MATCH_ROOM_REQ
message S2SQueryMatchRoomReq
{
	uint32 matchid = 1;
	uint64 playerid = 2;
	uint64 serverid = 3;
}

// 查询匹配信息
// S2S_QUERY_ROOM_TO_MATCH_SHARD_REQ
message S2SQueryRoomToMatchShardReq
{
	uint32 matchid = 1;
	uint64 playerid = 2;
	uint64 serverid = 3;	
}

// 查询匹配信息
// S2S_QUERY_MATCH_ROOM_ACK
message S2SQueryMatchRoomAck
{
	uint32 matchid = 1;
	uint64 playerid = 2;
}

// 查询匹配信息
// S2S_QUERY_BATTLE_ROOM_REQ
message S2SQueryBattleRoomReq
{
	uint64 roomid = 1;
	uint64 playerid = 2;
	uint64 serverid = 3;		
}

// S2S_QUERY_BATTLE_ROOM_ACK
message S2SQueryBattleRoomAck
{
	uint64 playerid = 1;	
	uint64 roomid = 2;
	uint32 matchid = 3;
}

// 查询匹配信息
// S2S_QUERY_ROOM_TO_BATTLE_SHARD_REQ
message S2SQueryRoomToBattleShardReq
{
	uint64 roomid = 1;
	uint64 playerid = 2;
	uint64 serverid = 3;		
}

// 通知战斗服务器玩家上线
// S2S_PLAYER_ONLINE_TO_BATTLE_SHARD_REQ
message S2SPlayerOnlineToBattleShardReq
{	
	uint64 roomid = 1;
	uint32 campid = 2;
	uint64 playerid = 3;
	uint64 serverid = 4;	
}

// 通知玩家处于匹配状态
// S2S_NOTICE_MATCH_STATE_REQ
message S2SNoticeMatchStateReq
{
	uint64 playerid = 1;
	uint32 matchid = 2;
}

// 重置匹配房间
// S2S_RESET_MATCH_ROOM_REQ
message S2SResetMatchRoomReq
{
	uint32 matchid = 1;
	uint64 roomid = 2;
}


// 分配战场id
// S2S_ALLOC_BATTLE_ID_REQ
message S2SAllocBattleIdReq
{
	bytes ip = 1;
	uint32 port = 2;
}

// 分配战场id
// S2S_ALLOC_BATTLE_ID_ACK
message S2SAllocBattleIdAck
{
	uint64 id = 1;
}

// 战斗服务器=>战斗服务器集群
// 注册战斗服务器
// S2S_REGISTER_BATTLE_SERVER_REQ
message S2SRegisterBattleServerReq
{
	uint64 serverid = 1;		// 服务器id
	bytes ip = 2;				// ip
	uint32 port = 3;			// port
	uint64 roomid = 4;			// 如果已经开启房间 没有 = 0
	uint64 battleshardid = 5;	// 战斗服务器集群逻辑分片id		
	bytes version = 6;		// 版本号
}

// 战斗服务器集群=>战斗服务器
// 注册战斗服务器
// S2S_REGISTER_BATTLE_SERVER_ACK
message S2SRegisterBattleServerAck
{
	uint64 serverid = 1;		// 服务器id
	uint32 result = 2;			// 注册结果 
}

// 战斗服务器集群代理=>战斗服务器集群逻辑分片
// 注册战斗服务器
// S2S_REGISTER_SERVER_TO_BATTLE_SHARD_REQ
message S2SRegisterServerToBattleShardReq
{
	uint64 serverid = 1;		// 服务器id
	bytes ip = 2;				// ip
	uint32 port = 3;			// port
	uint64 roomid = 4;			// 如果已经开启房间 没有 = 0
	bytes version = 5;		// 版本号
}

// 战斗服务器集群代理=>战斗服务器集群逻辑分片
// 广播给所有服务器
// S2S_TELL_BATTLE_REGISTER_TO_SHARD_REQ
message S2STellBattleRegisterToShardReq
{
	uint64 serverid = 1;		// 服务器id
	uint64 roomid = 2;			// 房间id
	bytes ip = 3;				// ip
	uint32 port = 4;			// port
	bytes version = 5;		// 版本号
}

// 战斗服务器集群代理=>战斗服务器集群逻辑分片
// 战斗服务器断开连接
// S2S_DISCONNECT_SERVER_TO_BATTLE_SHARD_REQ
message S2SDisconnectServerToBattleShardReq
{
	uint64 serverid = 1;		// 服务器id
}

// 匹配服务器集群逻辑分片=>战斗服务器集群代理
// 请求创建房间
// S2S_CREATE_ROOM_TO_BATTLE_PROXY_REQ
message S2SCreateRoomToBattleProxyReq
{
	uint32 matchid = 1;			// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 2;				// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint32 maxplayercount = 3;		// 这个房间的最大人数
	uint64 battleserverid = 4;		// 指定的房间id
	bytes version = 5;			// 版本号

}

// 战斗服务器集群代理=>战斗服务器集群逻辑分片
// 请求开启战斗房间
// 战场服务器收到消息,
// 如果战场没有开启, 直接开启, 返回成功
// 如果战场已经开启 判断matchid 和roomid是否相同, 如果相同返回成功, 否则返回失败
// S2S_CREATE_ROOM_TO_BATTLE_SHARD_REQ
message S2SCreateRoomToBattleShardReq
{
	uint32 matchid = 1;			// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 2;				// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint64 matchshardid = 3;		// 匹配shardid
	uint32 maxplayercount = 4;		// 这个房间的最大人数
	uint64 battleserverid = 5;		// 指定的房间id
	bytes version = 6;			// 版本号
}

// 战斗服务器集群逻辑分片=>匹配服务器集群逻辑分片
// 请求创建房间
// S2S_CREATE_ROOM_TO_MATCH_SHARD_ACK
message S2SCreateRoomToMatchShardAck
{
	uint32 matchid = 1;		// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 2;			// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint64 battleshardid = 3;	// 战场服务器shardid
}

// 匹配服务器集群逻辑分片=>战斗服务器集群逻辑分片
// 玩家加入战场
// S2S_ADD_CAMP_TO_BATTLE_SHARD_REQ
message S2SAddCampToBattleShardReq
{
	uint64 roomid = 1;
	PBBattleCamp pbcamp = 2;	// 阵营信息
	uint32 matchid = 3;
	uint64 matchshardid = 4;
}

// 战斗服务器集群逻辑分片=>匹配服务器集群逻辑分片
// 玩家加入战场
// S2S_ADD_CAMP_TO_MATCH_SHARD_ACK
message S2SAddCampToMatchShardAck
{
	uint32 matchid = 1;
	uint64 roomid = 2;
	uint32 campid = 3;
	bool addok = 4;
}

// 战斗服务器集群逻辑分片=>战斗服务器
// 请求开启战斗房间
// S2S_OPEN_BATTLE_ROOM_REQ
message S2SOpenBattleRoomReq
{
	uint32 matchid = 1;		// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 2;			// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint64 battleshardid = 3;	// 战斗服务器集群逻辑分片id
	uint32 maxplayercount = 4;	// 这个房间的最大人数
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 开启战场结果回馈
// S2S_OPEN_BATTLE_ROOM_ACK
message S2SOpenBattleRoomAck
{
	uint64 battleshardid = 1;	// 战斗服务器集群逻辑分片id
	uint32 matchid = 2;		// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 3;			// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint32 result = 4;			// 开启结果 ( 对应BattleEnum, 目前只有成功失败, 以后其他原因再细分)
	uint32 waittime = 5;		// 等待时间( 单位: 秒 )
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 开启战场结果回馈
// S2S_OPEN_BATTLE_ROOM_TO_SHARD_ACK
message S2SOpenBattleRoomToShardAck
{
	uint32 matchid = 1;		// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 2;			// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint32 result = 3;			// 开启结果 ( 对应BattleEnum, 目前只有成功失败, 以后其他原因再细分)
	uint32 waittime = 4;		// 等待时间( 单位: 秒 )
}

// 战斗服务器集群逻辑分片=>匹配服务器集群逻辑分片
// 开启战场结果回馈
// S2S_OPEN_ROOM_TO_MATCH_SHARD_REQ
message S2SOpenRoomToMatchShardReq
{
	uint32 matchid = 1;		// 匹配模式id, 如果不需要就不用管, 先预留出来
	uint64 roomid = 2;			// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
	uint32 waittime = 3;		// 房间等待时间
}

// 战斗服务器集群逻辑分片=>匹配服务器集群逻辑分片
// 开启战场结果回馈
// S2S_OPEN_ROOM_TO_BATTLE_SHARD_ACK
message S2SOpenRoomToBattleShardAck
{
	uint64 roomid = 1;			// 房间id( 如果一个进程多个房间, 需要用id来区分他们 )
}

// 战斗服务器集群逻辑分片=>战斗服务器
// 玩家匹配进入战场房间
// S2S_PLAYER_ENTER_BATTLE_ROOM_REQ
message S2SPlayerEnterBattleRoomReq
{
	uint64 roomid = 1;			// 房间id	
	PBBattlePlayer player = 2;	// 玩家
	bytes token = 3;			// token
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 玩家匹配进入战场结果
// 收到S2SPlayerEnterBattleRoomReq 以后, 
// 战场服务器把玩家数据加入列表以后回这个消息, 如果已经在列表中也需要回复
// S2S_PLAYER_ENTER_BATTLE_ROOM_ACK
message S2SPlayerEnterBattleRoomAck
{
	uint64 battleshardid = 1;	// 战斗服务器集群逻辑分片id	
	uint64 roomid = 2;			// 房间id
	uint32 campid = 3;			// 阵营id
	uint64 playerid = 4;		// 玩家id
}

// 战斗服务器集群代理=>战斗服务器集群逻辑分片
// 玩家匹配进入战场结果
// S2S_PLAYER_ENTER_ROOM_TO_BATTLE_SHARD_ACK
message S2SPlayerEnterRoomToBattleShardAck
{
	uint64 roomid = 1;			// 房间id
	uint32 campid = 2;			// 阵营id
	uint64 playerid = 3;		// 玩家id
}

/////////////////////////////////////////////////////////////////////////////
// 战斗服务器=>战斗服务器集群逻辑分片
// 玩家登陆到服务器
// S2S_PLAYER_LOGIN_BATTLE_ROOM_REQ
message S2SPlayerLoginBattleRoomReq
{
	uint64 battleshardid = 1;	// 战斗服务器集群逻辑分片id		
	uint64 roomid = 2;			// 房间id
	uint32 campid = 3;			// 阵营id
	uint64 playerid = 4;		// 玩家id
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 玩家登陆到服务器
// S2S_PLAYER_LOGIN_BATTLE_ROOM_ACK
message S2SPlayerLoginBattleRoomAck
{
	uint64 roomid = 1;			// 房间id
	uint32 campid = 2;			// 阵营id
	uint32 playerid = 3;		// 玩家id
}


// 战斗服务器集群逻辑代理=>战斗服务器集群逻辑分片
// 玩家登陆到服务器
// S2S_PLAYER_LOGIN_ROOM_TO_BATTLE_SHARD_REQ
message S2SPlayerLoginRoomToBattleShardReq
{
	uint64 roomid = 2;			// 房间id
	uint32 campid = 3;			// 阵营id
	uint64 playerid = 4;		// 玩家id
}

/////////////////////////////////////////////////////////////////////////////


// 战斗服务器集群逻辑分片=>战斗服务器
// 玩家取消匹配
// S2S_PLAYER_CANCEL_MATCH_REQ
message S2SPlayerCancelMatchReq
{
	uint64 roomid = 1;			// 房间id
	uint32 campid = 2;			// 阵营id
	uint64 playerid = 3;		// 玩家id
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 玩家离开了房间
// S2S_PLAYER_LEAVE_BATTLE_ROOM_REQ
message S2SPlayerLeaveBattleRoomReq
{
	uint64 roomid = 1;			// 房间id
	uint64 battleshardid = 2;	// 战斗服务器集群逻辑分片id	
	uint32 campid = 3;			// 玩家阵营id
	uint64 playerid = 4;		// 玩家id
}

// 战斗服务器集群逻辑分片=>战斗服务器
// 玩家离开了房间
// S2S_PLAYER_LEAVE_BATTLE_ROOM_ACK
message S2SPlayerLeaveBattleRoomAck
{
	uint64 roomid = 1;			// 房间id
	uint32 campid = 2;			// 玩家阵营id
	uint64 playerid = 3;		// 玩家id
}

// 战斗服务器集群逻辑代理=>战斗服务器集群逻辑分片
// 玩家离开了房间
// S2S_PLAYER_LEAVE_ROOM_TO_BATTLE_SHARD_REQ
message S2SPlayerLeaveRoomToBattleShardReq
{
	uint64 roomid = 1;			// 房间id
	uint32 campid = 2;			// 玩家阵营id
	uint64 playerid = 3;		// 玩家id
}

// 战斗服务器集群逻辑分片=>匹配服务器集群逻辑分片
// 玩家离开了房间
// S2S_PLAYER_LEAVE_ROOM_TO_MATCH_SHARD_REQ
message S2SPlayerLeaveRoomToMatchShardReq
{
	uint64 matchid = 1;	// 匹配模式
	uint64 roomid = 2;		// 房间id
	uint32 campid = 3;		// 玩家阵营id
	uint64 groupid = 4;	// 队伍id
	uint64 playerid = 5;	// 玩家id
}

// 战斗服务器集群逻辑分片=>大厅服务器
// 玩家离开战场
// S2S_LEAVE_BATTLE_ROOM_TO_CLIENT_ACK
message S2SLeaveBattleRoomToClientAck
{
	uint64 playerid = 1;	// 玩家id
	uint64 roomid = 2;		// 房间id
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 通知服务器战场正式开始
// S2S_TELL_BATTLE_ROOM_START_REQ
message S2STellBattleRoomStartReq
{
	uint64 battleshardid = 1;	// 战斗服务器集群逻辑分片id	
	uint64 roomid = 2;			// 房间id
	uint32 maxtime = 3;		// 这次战斗最长的时间 单位:秒
}

// 战斗服务器集群代理=>战斗服务器集群逻辑分片
// 通知服务器战场正式开始
// S2S_TELL_ROOM_START_TO_BATTLE_SHARD_REQ
message S2STellRoomStartToBattleShardReq
{
	uint64 roomid = 1;			// 房间id
	uint32 maxtime = 2;		// 这次战斗最长的时间 单位:秒
}

// 战斗服务器集群逻辑分片=>战斗服务器
// 通知服务器战场正式开始
// S2S_TELL_BATTLE_ROOM_START_ACK
message S2STellBattleRoomStartAck
{
	uint64 roomid = 1;			// 房间id
}

// 战斗服务器集群逻辑分片=>匹配服务器集群逻辑分片
// 通知服务器战场正式开始
// S2S_TELL_ROOM_START_TO_MATCH_SHARD_REQ
message S2STellRoomStartToMatchShardReq
{
	uint32 matchid = 1;	// 匹配模式	
	uint64 roomid = 2;		// 房间id
}

// 匹配服务器集群逻辑分片=>战斗服务器集群逻辑分片
// 通知服务器战场正式开始
// S2S_TELL_ROOM_START_TO_BATTLE_SHARD_ACK
message S2STellRoomStartToMatchShardAck
{
	uint64 roomid = 1;		// 房间id
}

// 战斗服务器=>战斗服务器集群逻辑分片
// 通知战场结束
// S2S_TELL_BATTLE_ROOM_FINISH_REQ
message S2STellBattleRoomFinishReq
{
	uint64 battleshardid = 1;	// 战斗服务器集群逻辑分片id
	uint64 roomid = 2;			// 房间id
	uint64 serverid = 3;		// 服务器id
	bytes ip = 4;				// ip
}

// 战斗服务器=>战斗服务器集群逻辑分
// 通知战场结束
// S2S_TELL_BATTLE_ROOM_FINISH_ACK
message S2STellBattleRoomFinishAck
{
	uint64 roomid = 1;			// 房间id
}

// 战斗服务器=>战斗服务器集群逻辑
// 战场数据结算 
// S2S_BATTLE_ROOM_SCORE_BALANCE_REQ
message S2SBattleRoomScoreBalanceReq
{
	uint64 roomid = 1;			// 房间id
	uint32 battleshardid = 2;	// battleshardid
	PBBattleScore pbscore = 3;	// 战绩列表
}

// 战斗服务器集群逻辑分=>战斗服务器
// 战场数据结算
// S2S_BATTLE_ROOM_SCORE_BALANCE_ACK
message S2SBattleRoomScoreBalanceAck
{
	uint64 roomid = 1;		// 房间id
	uint64 playerid = 2;	// 玩家列表
	bytes reward = 3;		// 奖励字串( 需要解析 )
}

// 战斗服务器集群逻辑=>战斗服务器集群逻辑
// 战场数据结算
// S2S_BATTLE_SCORE_BALANCE_TO_SHARD_REQ
message S2SBattleScoreBalanceToShardReq
{
	uint64 roomid = 1;			// 房间id
	PBBattleScore pbscore = 2;	// 战绩列表
}

// 玩家战场数据
// S2S_PLAYER_BATTLE_SCORE_REQ
message S2SPlayerBattleScoreReq
{
	uint64 playerid = 1;	// 玩家列表
	uint64 roomid = 2;		// 房间id
	PBBattleScore pbscore = 3;	// 战绩列表
}

// 玩家战场数据
// S2S_PLAYER_BATTLE_SCORE_ACK
message S2SPlayerBattleScoreAck
{
	uint64 playerid = 1;	// 玩家列表
	uint64 roomid = 2;		// 房间id
}

// 上线查询结算
// S2S_ONLINE_QUERY_BATTLE_SCORE_REQ
message S2SOnlieQueryBattleScoreReq
{
	uint64 playerid = 1;	// 玩家列表
}

// 通知战场结束
// S2S_TELL_ROOM_FINISH_TO_BATTLE_SAHRD_REQ
message S2STellRoomFinishToBattleShardReq
{
	uint64 roomid = 1;		// 房间id
	uint64 serverid = 2;	// 服务器id
	bytes ip = 3;			// ip
}

// 通知战场关闭
// S2S_TELL_ROOM_CLOSE_TO_MATCH_SHARD_REQ
message S2STellRoomCloseToMatchShardReq
{
	uint64 matchid = 1;	// 匹配模式
	uint64 roomid = 2;		// 房间id
}

// 重置战场房间
// S2S_RESET_BATTLE_ROOM_REQ
message S2SResetBattleRoomReq
{
	uint64 roomid = 1;		// 房间id
}