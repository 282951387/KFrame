syntax = "proto3";
package KFMsg;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
message Vector3D
{
	double x = 1;
	double y = 2;
	double z = 3;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
message PBInt32
{
	bytes name = 1;
	sint32 value = 2;
}

message PBUInt32
{
	bytes name = 1;
	uint32 value = 2;
}

message PBInt64
{
	bytes name = 1;
	sint64 value = 2;
}

message PBUInt64
{
	bytes name = 1;
	uint64 value = 2;
}

message PBDouble
{
	bytes name = 1;
	double value = 2;
}

message PBString
{
	bytes name = 1;
	bytes value = 2;
}

message PBStrings
{
	repeated PBString pbstring = 1;
}

message PBVector3D
{
	bytes name = 1;
	Vector3D value = 2;
}

message PBArray
{
	bytes name = 1;
	repeated sint32 pbint32 = 2;
	repeated uint32 pbuint32 = 3;
	repeated sint64 pbint64 = 4;
	repeated uint64 pbuint64 = 5;
	repeated double pbdouble = 6;
	repeated bytes pbstring = 7;
	repeated Vector3D pbvector3d = 8;
}

message PBObject
{
	bytes name = 1;		// 属性名字
	uint64 key = 2;		// 对象的key值, 逻辑使用( 没有是0 )
	repeated PBInt32 pbint32 = 3;		
	repeated PBUInt32 pbuint32 = 4;
	repeated PBInt64 pbint64 = 5;
	repeated PBUInt64 pbuint64 = 6;
	repeated PBDouble pbdouble = 7;
	repeated PBString pbstring = 8;
	repeated PBVector3D pbvector3d = 9;
	repeated PBArray pbarray = 10;
	repeated PBObject pbobject = 11;		// 所有对象
	repeated PBRecord pbrecord = 12;		// 所有的数组对象
}

message PBRecord
{
	bytes name = 1;			// 属性名字
 	repeated PBObject pbobject = 2;		// 对象列表
}

message PBRankData
{
	uint32 rankindex = 1;		// 从1开始
	uint64 playerid = 2;		// 玩家id
	uint64 rankscore = 3;		// 排行的数据( 客户端好友排行根据这个排序 )
	PBStrings pbdata = 4;		// 排行榜数据
}

message PBRankDatas
{
	repeated PBRankData rankdata = 3;		// 排行榜数据
}

message PBTaskData
{
	uint32 id = 1;			// id
	uint32 value = 2;		// 完成数值
}


message PBTaskDatas
{
	repeated PBTaskData taskdata = 1;	//任务数据
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 进入房间的房间信息
message PBBattlePlayer
{
	uint64 serverid = 1;		// 游戏内服务器id
	uint64 playerid = 2;		// 玩家id
	bytes name = 3;			// 玩家名字
	uint32 sex = 4;			// 玩家性别
	bytes icon = 5;			// 玩家icon
	bytes iconbox = 6;			// 玩家头像框
	uint32 grading = 7;		// 段位
	uint32 modelid = 8;		// 模型id
	uint32 clothesid = 9;		// 时装id
	uint64 groupid = 10;		// 队伍id
	uint32 campid = 11;		// 阵营id( 根据此id来判断是否敌对 )
	PBTaskDatas achieve = 12;	// 成就数据

}

// 战场阵营
message PBBattleCamp
{
	uint32 campid = 1;			// 阵营id
	repeated PBBattlePlayer pbplayer = 2;	// 玩家列表
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 匹配小队
message PBMatchGroup
{
	uint64 groupid = 1;
	repeated PBBattlePlayer pbplayer = 2;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 访客信息
message PBGuestData
{
	uint64 guestid = 1;		// 访客id
	bytes guesticon = 2;		// 访客头像
	bytes guesticonbox = 3;	// 访客头像框
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 战绩
message PBBattleScore
{
	uint64 playerid = 1;		// 玩家id
	uint32 ranking = 2;		// 排名( 从1开始 )
	repeated PBUInt32 pbdata = 3;		// 各项数据
	sint32 score = 4;			// 评分
	uint32 matchid = 5;		// 属性字段( 服务器使用 )
	bytes reward = 6;			// 奖励字串( 服务器使用 )
	PBTaskDatas achieve = 7;	// 成就数据	
	repeated uint64 members = 8;		// 同阵营的玩家
	uint32 playercount = 9;	// 战场总人数
}

// 最近玩家
message PBRecentData
{
	uint64 playerid = 1;	// 玩家id
	uint32 ranking = 2;	// 排名
	uint32 totalnum =3;	// 单局游戏人数
	uint32 kill  = 4;	// 单局击杀人数
	uint32 score = 5;	// 评分
	uint32 bekillid = 6;	// 淘汰者
	uint32 relationtype = 7; // 关系类型 0:好友 1:被淘汰者
}

// 帮派申请列表数据结构
message PBApplicationlist
{
	uint64 playerid = 1;	// 申请者玩家id
	uint64 time = 2;	// 申请时间
	PBStrings basic = 3;	// 申请者基础信息
}

// 帮派申请列表
message PBApplicationlists
{
	repeated PBApplicationlist applylists = 1;	// 玩家id
}

// 帮派id数组
message PBGuildIdArray
{
	repeated uint64 guildid = 1;		// 帮派id
}
