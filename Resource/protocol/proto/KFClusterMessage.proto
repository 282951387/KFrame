syntax = "proto3";
package KFMsg;

enum ClusterProtocol
{
	s2s_cluster_temp = 0;
	S2S_CLUSTER_REGISTER_REQ = 10101;			// 注册到服务器集群
	S2S_CLUSTER_UPDATE_REQ = 10102;				// 更新集群连接器连接数量
	S2S_CLUSTER_AUTH_REQ = 10103;				// 集群登录认证
	S2S_CLUSTER_AUTH_ACK = 10104;				// 集群登录认证
	S2S_CLUSTER_TOKEN_REQ = 10105;				// 集群Token
	S2S_CLUSTER_VERIFY_REQ = 10106;				// 验证token请求
	S2S_CLUSTER_VERIFY_ACK = 10107;				// 验证token回馈
	S2S_CLUSTER_CLIENT_DISCOVER_REQ = 10108;	// 发现客户端列表
	S2S_ADD_OBJECT_TO_PROXY_REQ = 10109;		// 添加对象映射
	S2S_REMOVE_OBJECT_TO_PROXY_REQ = 10110;		// 删除对象映射
	S2S_ALLOC_OBJECT_TO_MASTER_REQ = 10112;		// 请求分配shard
	S2S_ALLOC_OBJECT_TO_PROXY_ACK = 10113;		// 请求分配shard
	S2S_ALLOC_OBJECT_TO_SHARD_ACK = 10114;		// 请求分配shard
	S2S_SEND_TO_STATIC_OBJECT_REQ = 10115;		// 发送到静态对象
	S2S_SEND_TO_DYNAMIC_OBJECT_REQ = 10116;		// 发送到动态对象
	S2S_CLUSTER_CLIENT_LOST_REQ = 10117;		// 丢失客户端列表
 }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 集群注册
// S2S_CLUSTER_REGISTER_REQ
message S2SClusterRegisterReq
{
	bytes type = 1;
	uint64 id = 2;
	bytes name = 3;
	bytes ip = 4;
	uint32 port = 5;
}

// 更新集群连接器连接数量
// S2S_CLUSTER_UPDATE_REQ
message S2SClusterUpdateReq
{
	bytes type = 1;
	uint64 id = 2;
	bytes name = 3;
	bytes ip = 4;
	uint32 port = 5;
	uint32 count = 6;
}

// 集群登录认证
// S2S_CLUSTER_AUTH_REQ
message S2SClusterAuthReq
{
	bytes clustertype = 1;
	bytes clusterkey = 2;
}

// 集群登录认证回馈
// S2S_CLUSTER_AUTH_ACK
message S2SClusterAuthAck
{
	bytes clustertype = 1;
	bytes token = 2;
	bytes type = 3;
	uint64 id = 4;
	bytes name = 5;
	bytes ip = 6;
	uint32 port = 7;	
}

// 更新token信息
// S2S_CLUSTER_TOKEN_REQ
message S2SClusterTokenReq
{
	bytes token = 1;
	uint64 gateid = 2;
}

// 验证token
// S2S_CLUSTER_VERIFY_REQ
message S2SClusterVerifyReq
{
	bytes clustertype = 1;
	bytes token = 2;
	uint64 serverid = 3;
}

// 认证回馈
// S2S_CLUSTER_VERIFY_ACK
message S2SClusterVerifyAck
{
	bytes clustertype = 1;	// 集群类型
	uint64 serverid = 2;		// =0 认证不成功, 重新连接集群master地址
}

// 发现客户端列表
// S2S_CLUSTER_CLIENT_DISCOVER_REQ
message S2SClusterClientDiscoverReq
{
	repeated uint64 clientid = 1;	// 客户端列表
}

// 丢失客户端列表
// S2S_CLUSTER_CLIENT_LOST_REQ
message S2SClusterClientLostReq
{
	repeated uint64 clientid = 1;	// 客户端列表
}

// 注册对象映射
// S2S_ADD_OBJECT_TO_PROXY_REQ
message S2SAddObjectToProxyReq
{
	repeated uint64 objectid = 1;
}

// 删除对象映射
// S2S_REMOVE_OBJECT_TO_PROXY_REQ
message S2SRemoveObjectToProxyReq
{
	repeated uint64 objectid = 2;
}

// 请求分派Shard
// S2S_ALLOC_OBJECT_TO_MASTER_REQ
message S2SAllocObjectToMasterReq
{
	repeated uint64 objectid = 1;
}

// 请求分派Shard
// S2S_ALLOC_OBJECT_TO_PROXY_ACK
message S2SAllocObjectToProxyAck
{
	repeated uint64 objectid = 1;
	repeated uint64 shardid = 2;
}

// 请求分派Shard
// S2S_ALLOC_OBJECT_TO_SHARD_ACK
message S2SAllocObjectToShardAck
{
	repeated uint64 objectid = 1;
}

// 发送消息到动态对象
// S2S_SEND_TO_DYNAMIC_OBJECT_REQ
message S2SSendToDynamicObjectReq
{
	uint64 objectid = 1;
	uint64	serverid = 2;
	uint32 msgid = 3;
	bytes msgdata = 4;
}

// 发送消息到静态对象
// S2S_SEND_TO_STATIC_OBJECT_REQ
message S2SSendToStaticObjectReq
{
	uint64 objectid = 1;
	uint64	serverid = 2;
	uint32 msgid = 3;
	bytes msgdata = 4;
}
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////