package KFMsg;

//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

enum AckEnum
{
	Success 					= 1;		// 成功
	SignError					= 2;		// 签名错误
	WeiXinError 				= 3;		// 访问微信错误
	WeiXinCodeError 			= 4;		// 微信code错误
	WeiXinTokenTimeout 			= 5;		// 微信Token过期
	WeiXinTokenError 			= 6;		// 微信Token错误
	WeiXinUserError 			= 7;		// 微信读取用户数据错误
	ChannelError				= 8;		// 错误的渠道信息
	ChannelNotOpen				= 9;		// 渠道没有开放
	WorldSystemBusy 			= 10;		// 世界服务器出错了
	LoginSystemBusy 			= 11;		// 登录服务器出错了
	CanNotFindProxy 			= 12;		// 没有可登录的节点
	PlatformBusy 				= 13;		// 平台服务器出错了
	PlatformDatabaseBusy		= 14;		// 平台数据库出错了 
	CanNotFindGame 				= 15;		// 没有可登录的游戏服务器
	LoginTokenError 			= 16;		// 登录token错误
	LoadDataFailed 				= 17;		// 加载失败
	HttpDataError 				= 18;		// http内部数据错误
	LoginDatabaseError 			= 19;		// 登录数据库错误
	CreatePlayerError 			= 20;		// 创建角色失败
	SexSetOK					= 21;		// 设置性别成功
	NameAlreadySet				= 22;		// 不能重复设置名字
	NameAlreadyExist			= 23;		// <Text>%s</Text>名字已经存在
	PublicDatabaseError			= 24;		// 公共数据库错误
	NameSetOK					= 25;		// 名字设置成功
	AccountIsEmpty         		= 26;		// 账号不能为空
	CreateRoleAlready			= 27;		// 不能重复创建角色
	CreateRoleOK				= 28;		// 创建角色成功
	LoginAlreadyOnline      	= 29;		// 已经在线
	ChangeIconOK            	= 30;		// 修改头像成功
	NameEmpty 					= 31;		// 名字不能为空
	ChangeMottoOK				= 32;		// 修改个性签名成功
	ModuleIdNotFind				= 33;		// 你未获得该模型
	SetModelClothesOK			= 34;		// 模型的默认时装设置成功
	ChangeIconBoxOK				= 35;		// 修改头像框成功
	DataSystemBusy				= 36;		// 数据服务器出错, 请稍后登录
	ActivationAccount 			= 37;		// 请先激活账号
	ActivationCodeError			= 38;		// 激活码错误
	LoginCanNotFindGate 		= 39;		// 找不到可登录的服务器
	TaskIdCanNotFind 			= 40;		// 任务<Text>%s</Text>配置错误
	TaskNotInValidTime 			= 41;		// 任务不在有效时间范围内
	CanNotFindPlayer 			= 42;		// 玩家数据错误, 请重新登录
	CanNotFindTaskData 			= 43;		// 你还没有完成该任务
	TaskNotDone 				= 44;		// 请先完成任务
	TaskAlreadyReceived 		= 45;		// 你已经领取任务奖励
	TaskReceiveRewardOK 		= 46;		// 领取任务奖励成功
	CanNotInquireSelf			= 47;		// 不能查询自己的数据
	ActivityIdCanNotFind 		= 48;		// 活动配置错误
	CanNotFindActivityType 		= 49;		// 还没有完成活动
	ActivityAlreadyReceived 	= 50;		// 你已经领取活动奖励
	ActivityNotDone 			= 51;		// 请先完成活动内容
	ActivityReceiveRewardOK 	= 52;		// 领取活动奖励成功
	AchieveIdCanNotFind 		= 53;		// 成就<Text>%s</Text>配置错误
	CanNotFindAchieveData 		= 54;		// 你还没有完成成就
	AchieveAlreadyReceived 		= 55;		// 你已经领取成就奖励
	AchieveNotDone 				= 56;		// 请先完成成就
	AchieveReceiveRewardOK 		= 57;		// 领取成就奖励成功
	ReceiveGiftOK 				= 58;		// 领取礼包成功
	ReceiveGiftFailed 			= 59;		// 领取礼包失败	
	MailNotExist				= 60;		// 邮件不存在
	MailAlreadyReceived			= 61;		// 邮件奖励已经领取
	MailNotHaveReward			= 62;		// 邮件没有奖励
	MailDeleteFailed			= 63;		// 还有奖励没有领取, 删除邮件失败
	MailTimeOut					= 64;		// 邮件已经过期
	ToastSendCountOver			= 65;		// 每日敬酒次数已用完
	ToastCanNotRepeat			= 66;		// 不能重复敬酒
	ToastGetCountOver			= 67;		// 每日被敬酒次数已用完
	ToastFailed					= 68;		// 敬酒失败
	ToastOK						= 69;		// 敬酒成功
	MatchAlreadyWait       		= 70;		// 正在等待匹配中, 不能重复申请
	MatchClusterBusy			= 71;		// 申请匹配失败, 请重试
	MatchCanNotFindServer  		= 72;		// 找不到可以匹配的服务器
	MatchCanNotFindMatch		= 73;		// 匹配模式错误
	MatchGroupPlayerLimit 		= 74;		// 超过组队最大人数
	MatchRequestSuccess 		= 75;		// 申请匹配成功,请等待
	MatchCancelSuccess 			= 76;		// 取消匹配成功
	FriendInviteOK				= 77;		// 向<Text>%s</Text>发送好友申请成功
	FriendRefuseInvite			= 78;		// <Text>%s</Text>设置拒绝添加好友
	FriendTargetLimit			= 79;		// <Text>%s</Text>的好友数量已经超过最大限制
	FriendSelfLimit				= 80;		// 你的好友数量已经达到<Text>%s</Text>个
	FriendAlready				= 81;		// 与<Text>%s</Text>已经是好友关系
	FriendNotExist				= 82;		// 对方不是你的好友
	FriendDelOK					= 83;		// 你与<Player id=%s>%s</Player>不再是好友了
	FriendInviteLimit			= 84;		// <Text>%s</Text>的好友申请列表满了
	FriendInviteNotExist    	= 85;		// 好友邀请信息不存在
	MatchNotInMatch				= 86;		// 你已经不在匹配
	FriendInviteAlready			= 87;		// 已经向<Text>%s</Text>申请添加好友了
	MatchMustPrepare			= 88;		// 队员全部准备才能开始匹配
	StoreParamError				= 89;		// 商品<Text>%s</Text>配置错误
	StoreLackCost				= 90;		// 商城购买消耗品花费不足
	StoreOutOfLimits			= 91;		// 已经超过商品限购次数
	StoreOutOfLimitOwm			= 92;		// 已经拥有物品, 不能购买
	StoreOutOfLimitDate			= 93;		// 商品限购不在指定日期内
	WishOrderEmpty				= 94;		// 心愿单为空
	WishOrderNoExist			= 95;		// 心愿单中不存在该物品
	WishOrderNoStoreId			= 96;		// 添加心愿单失败，未找到该商品
	WishOrderHadStoreId			= 97;		// 心愿单中已经存在该商品	
	WishOrderMaxSize			= 98;		// 心愿单已满
	WishOrderStateRepeatSet		= 99;		// 心愿单状态重复设置
	GiveLackCost				= 100;		// 赠送消耗品花费不足
	ClothesNotExist 			= 101;		// 时装不存在
	ClothesDataError			= 102;		// 时装<Text>%s</Text>配置错误
	ClothesModleNotMatch    	= 103;		// 时装和模型不匹配
	ClothesDressOK				= 104;		// 时装穿戴成功
	ModelNotExist				= 105;		// 模型不存在
	ModelChangeOK				= 106;		// 模型修改成功
	ChatByteTooLong				= 107;		// 聊天内容超长
	ChatNotFindPlayer			= 108;		// 你不在聊天室中
	ChatIntervalError			= 109;		// 请不要频繁发言
	ChatFriendIdError			= 110;		// 好友聊天好友id错误
	InviteMatchGroupOK 			= 111;		// 已经向<Text>%s</Text>发送组队邀请
	GroupLeaveOK				= 112;		// 你已经离开队伍
	GroupMemberIsFull      		= 113;		// 队伍成员满了
	GroupServerBusy				= 114;		// 队伍服务器错误, 请稍后重试
	GroupInviteNotExist 		= 115;		// 邀请不存在
	GroupCanNotKickSelf			= 116;		// 不能踢自己
	GroupInGroup				= 117;		// 你已经在队伍中
	GroupApplyNotExist     	    = 118;		// 组队申请不存在
	GroupNotInGroup				= 119;		// 你不在队伍中
	ItemNotExist				= 120;		// 你没有该道具
	ItemDataError				= 121;		// 道具<Text>%s</Text>配置错误
	ItemCanNotUse				= 122;		// 道具不能使用
	GroupNotExist				= 123;		// 队伍已经解散
	StoreBuyOK					= 124;		// 购买商品成功
	GiveBuyOK					= 125;		// 赠送商品成功
	GroupPlayerOffline			= 126;		// <Text>%s</Text>已经离线
	GroupAlreadyInGroup			= 127;		// <Text>%s</Text>已经在队伍中
	GroupRefuseInvite			= 128;		// <Text>%s</Text>设置拒绝组队邀请
	GroupRefuseYourInvite		= 129;		// <Text>%s</Text>拒绝你的组队邀请!
	GroupMemberLeave			= 130;		// <Text>%s</Text>离开了队伍
	GroupRefuseApply			= 131;		// <Text>%s</Text>拒绝你的组队申请!
	GroupCaptainOffline			= 132;		// 队长不在线
	GroupNoCaption				= 133;		// 没有队长数据
	GroupNotCaption				= 134;		// 你不是队长
	FriendServerBusy			= 135;		// 好友服务器繁忙, 请稍后再试
	FriendRefuseYourInvite		= 136;		// <Text>%s</Text>拒绝了你的好友请求
	FriendAddOK					= 137;		// 与<Text>%s</Text>已为知交
	FriendInviteReq				= 138;		// <Text>%s</Text>向你发送了好友申请
	GroupJoinOK					= 139;		// 已经加入队伍
	GroupMemberJoin				= 140;		// <Text>%s</Text>加入了队伍
	GroupIsNewCaption			= 141;		// 你已经成为队长
	FriendLinessAdd				= 142;		// 与<Text>%s</Text>情义小涨<Text>%s</Text>
	FriendLinessAddLimit		= 143;		// 今日与<Text>%s</Text>情义已满
	FriendLinessAddByWinGame	= 144;		// 拔得头筹，与<Text>%s</Text>情义另涨<Text>%s</Text>
	FriendLinessMaxLimit		= 145;		// 与<Text>%s</Text>已是刎颈之交
	WishPanelAddSuccessed		= 146;		// 添加心愿单成功
	GroupInviteInMatch			= 147;		// 已经在匹配中不能邀请入队
	GroupApplyInMatch			= 148;		// 已经在匹配中不能申请入队
	GroupInviteTimeOut			= 149;		// 邀请已经超时, 无法加入队伍
	GroupInviteMatchError		= 150;		// 该模式下不能组队
	GroupApplyTimeOut			= 151;		// 申请已经超时, 无法加入队伍
	OperateFrequently			= 152;		// 操作太频繁, 稍后再试
	DataNotEnough				= 153;		// 没有足够的数据
	CompoundNotExist			= 154;		// 合成配置不存在
	LoginIsClose				= 155;		// 登录已经关闭
	RankNotExist				= 156;		// 排行榜不存在
	RankServerBusy				= 157;		// 排行榜服务器忙
	SignInNotDay				= 161;		// 还没有签到
	SignInDataError				= 162;		// 签到配置错误
	SignInRewardAlready			= 163;		// 已经领取签到奖励
	

	FriendFriendCountOver		= 10000;	// 好友列表已满  (超过10000的是客户端自己的消息提示，服务器不需要处理)
	FriendApplyCountOver		= 10001;	// 申请列表已满
	FriendSearchEmpty			= 10002;	// 请输入玩家的名字
	FriendAddFriendSuccessed	= 10003;	// 添加好友成功
	EquipDeleteTipContent		= 10004;	// 即将销毁此道具，是否同意
	ClothesDeleteTipContent		= 10005;	// 即将销毁此时装，是否同意
	NoCanSettingDefault			= 10006;	// 未穿戴时装时无法设为默认
	ClothesNotFit				= 10007;	// 该套装不适合你
	KickLoginBeKick				= 10008;	// 被登录踢下线
	KickPlatformBeKick			= 10009;	// 被平台踢下线
	AutographCharOverLength 	= 10010;	// 字符超过了30 个字符
	ContainIIleagalChar			= 10011;	// 包含非法字符
	ClothesNotMatchModel		= 10012;	// 此时装不适合当前人物
	MoneyIsLack					= 10013;	// 您的铜钱不足，可通过比赛对战等途径获得
	DiamondIsLack				= 10014;	// 您的银两不足，可充值获得
	MoneyGet					= 10015;	// 获得铜钱
	DiamondGet					= 10016;	// 获得银两
	WishOverCount				= 10017;	// 你添加的心愿已达上限（6个），请移除某个心愿后再继续添加
	PleaseLogin					= 10018;	//请先登录
	CreateRoleNameIllegal		= 10019; 	//创建角色-名字不符合规则
	PleaseClickRole				= 10020;	//创建角色-未选择角色点击随机名,创建角色-未选择角色点击进入
	ChatCharIllegal				= 10021;	//聊天-输入违禁字
	ChatUnCheckInNearbyChanel	= 10022;	//聊天-最近频道未选择玩家点击发送
	ChatUnJoinWarTeam			= 10023;	//聊天-战队频道未加入战队点击发送
	ChatUnJoinTeam				= 10024;	//聊天-队伍频道未加入队伍点击发送
	MatchRepeatInviteToCode		= 10025;	//组队-10秒内再次点击邀请入队
	CopySuccessed				= 10026;	//系统|个人信息：复制成功
	GiveFaildForLimitsGoods		= 10027;	//商城：限量商品无法赠送
	MatchHasPrepared			= 10028;	//匹配: 已准备就绪
	MatchHasCanceled			= 10029;	//匹配: 已取消准备

}

enum ChannelEnum
{
	Internal = 1;		// 内部测试
	WeiXin = 2;			// 微信
}

enum SexEnum
{
	Unknow = 0;			// 无效
	Male = 1;			// 男性
	Female = 2;			// 女性
}

enum KickEnum
{
	LoginBeKick = 1;		// 被登录踢下线
	PlatformBeKick = 2;		// 被平台踢下线
}

enum FlagEnum
{
	Init 			= 0;		// 初始状态
	Done 			= 1;		// 已经完成
	Received		= 2;		// 已经领取奖励
	Remove			= 3;		// 删除	
	ReceiveRemove 	= 4;		// 领取并删除
}

enum MailEnum
{
	WholeMail = 1;			// 系统全体邮件
	FriendMail = 2;			// 好友邮件
	GiftMail = 3;			// 礼物邮件		
}

enum MailConfigEnum
{
	ToastMail = 1;			// 敬酒邮件配置ID
}

enum StatusEnum
{
	OnlineStatus = 1;		// 在线状态
	GroupStatus = 2;		// 组队状态
	MatchStatus = 3;		// 匹配状态
	PlayingStatus = 4;		// 游戏中
	OfflineStatus = 5;		// 离线
}

enum ChatEnum
{
	Jianghu = 1;		// 江湖频道
}

enum InviteEnum
{
	Consent = 1;		// 同意邀请
	Refuse = 2;			// 拒绝邀请
	Delete = 3;			// 直接删除
	RefuseMinute = 4;	// 5分内拒绝
}


enum StoreWishEnum
{
	Add = 1;		// 增加心愿单物品操作
	Del = 2;		// 删除心愿单物品操作
	Modify = 3;		// 修改心愿单可见状态
	
}

enum WishStateEnum
{
	AllWatch = 0;		// 心愿单所有人可见
	NoneWatch = 1;		// 心愿单仅自己可见
	FriendWatch = 2;	// 心愿单仅好友可见
	TeamWatch = 3;		// 心愿单仅战队成员可见
}

enum RankListEnum
{
	SingleRank = 1;		// 单人榜单
	DoubleRank = 2;		// 双人榜单
	FourRank = 3;		// 四人榜单
	TotalRank = 4;		// 总榜单
}


enum FriendLinessEnum
{
	Team = 1;		// 组队
	Win = 2;		// 胜利
	Laud =3;		// 敬酒
	Give = 4;		// 送礼
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
message Vector3D
{
	optional double x = 1;
	optional double y = 2;
	optional double z = 3;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
message PBInt32
{
	optional string name = 1;
	optional sint32 value = 2;
}

message PBUIntUInt
{
	optional uint64 key = 1;
	optional uint32 value = 2;
}


message PBUInt32
{
	optional string name = 1;
	optional uint32 value = 2;
}

message PBInt64
{
	optional string name = 1;
	optional sint64 value = 2;
}

message PBUInt64
{
	optional string name = 1;
	optional uint64 value = 2;
}

message PBDouble
{
	optional string name = 1;
	optional double value = 2;
}

message PBString
{
	optional string name = 1;
	optional string value = 2;
}

message PBStrings
{
	repeated PBString pbstring = 1;
}

message PBVector3D
{
	optional string name = 1;
	optional Vector3D value = 2;
}

message PBArray
{
	optional string name = 1;
	repeated sint32 pbint32 = 2;
	repeated uint32 pbuint32 = 3;
	repeated sint64 pbint64 = 4;
	repeated uint64 pbuint64 = 5;
	repeated double pbdouble = 6;
	repeated string pbstring = 7;
	repeated Vector3D pbvector3d = 8;
}

message PBObject
{
	optional string name = 1;		// 属性名字
	optional uint64 key = 2;		// 对象的key值, 逻辑使用( 没有是0 )
	repeated PBInt32 pbint32 = 3;		
	repeated PBUInt32 pbuint32 = 4;
	repeated PBInt64 pbint64 = 5;
	repeated PBUInt64 pbuint64 = 6;
	repeated PBDouble pbdouble = 7;
	repeated PBString pbstring = 8;
	repeated PBVector3D pbvector3d = 9;
	repeated PBArray pbarray = 10;
	repeated PBObject pbobject = 11;		// 所有对象
	repeated PBRecord pbrecord = 12;		// 所有的数组对象
}

message PBRecord
{
	optional string name = 1;			// 属性名字
 	repeated PBObject pbobject = 2;		// 对象列表
}

message PBRankData
{
	optional uint32 rankindex = 1;		// 从1开始
	optional uint32 playerid = 2;		// 玩家id
	optional uint64 rankscore = 3;		// 排行的数据( 客户端好友排行根据这个排序 )
	optional PBStrings pbdata = 4;		// 排行榜数据
}

message PBRankDatas
{
	repeated PBRankData rankdata = 3;		// 排行榜数据
}

message PBTaskData
{
	optional uint32 id = 1;			// id
	optional uint32 value = 2;		// 完成数值
}


message PBTaskDatas
{
	repeated PBTaskData taskdata = 1;	//任务数据
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 进入房间的房间信息
message PBBattlePlayer
{
	optional uint32 zoneid = 1;			// 游戏分区id
	optional uint32 serverid = 2;		// 游戏内服务器id
	optional uint32 playerid = 3;		// 玩家id
	optional string name = 4;			// 玩家名字
	optional uint32 sex = 5;			// 玩家性别
	optional string icon = 6;			// 玩家icon
	optional string iconbox = 7;		// 玩家头像框
	optional uint32 grading = 8;		// 段位
	optional uint32 modelid = 9;		// 模型id
	optional uint32 clothesid = 10;		// 时装id
	optional uint64 groupid = 11;		// 队伍id
	optional uint32 campid = 12;		// 阵营id( 根据此id来判断是否敌对 )
	optional PBTaskDatas achieve = 13;	// 成就数据

}

// 战场阵营
message PBBattleCamp
{
	required uint32 campid = 1;			// 阵营id
	repeated PBBattlePlayer pbplayer = 2;	// 玩家列表
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 匹配小队
message PBMatchGroup
{
	required uint64 groupid = 1;
	repeated PBBattlePlayer pbplayer = 2;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 访客信息
message PBGuestData
{
	required uint32 guestid = 1;		// 访客id
	required string guesticon = 2;		// 访客头像
	required string guesticonbox = 3;	// 访客头像框
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 战绩
message PBBattleScore
{
	required uint32 playerid = 1;	// 玩家id
	required uint32 ranking = 2;	// 排名( 从1开始 )
	repeated PBUInt32 pbdata = 3;	// 各项数据
	optional uint32 score = 4;		// 评分
	optional uint32 matchid = 5;	// 属性字段( 服务器使用 )
	optional string reward = 6;		// 奖励字串( 服务器使用 )
	optional PBTaskDatas achieve = 7;	// 成就数据	
}

// 最近玩家
message PBRecentData
{
	required uint32 playerid = 1;	// 玩家id
	required uint32 ranking = 2;	// 排名
	required uint32 totalnum =3;	// 单局游戏人数
	optional uint32 kill  = 4;	// 单局击杀人数
	optional uint32 score = 5;	// 评分
	optional uint32 bekillid = 6;	// 淘汰者
	optional uint32 relationtype = 7; // 关系类型 0:好友 1:被淘汰者
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 玩家id
message PBPlayerIds
{
	repeated uint32 playerid = 1;	// 玩家id
}