// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFServerMessage.proto

#ifndef PROTOBUF_INCLUDED_KFServerMessage_2eproto
#define PROTOBUF_INCLUDED_KFServerMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "KFDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFServerMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFServerMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[191];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFServerMessage_2eproto
namespace KFMsg {
class PBLoginData;
class PBLoginDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBLoginDataDefaultTypeInternal _PBLoginData_default_instance_;
class PBLoginData_ChanneldataEntry_DoNotUse;
class PBLoginData_ChanneldataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBLoginData_ChanneldataEntry_DoNotUseDefaultTypeInternal _PBLoginData_ChanneldataEntry_DoNotUse_default_instance_;
class PBMail;
class PBMailDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMailDefaultTypeInternal _PBMail_default_instance_;
class PBMail_DataEntry_DoNotUse;
class PBMail_DataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMail_DataEntry_DoNotUseDefaultTypeInternal _PBMail_DataEntry_DoNotUse_default_instance_;
class PBRelation;
class PBRelationDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRelationDefaultTypeInternal _PBRelation_default_instance_;
class PBRelation_PlayerdataEntry_DoNotUse;
class PBRelation_PlayerdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRelation_PlayerdataEntry_DoNotUseDefaultTypeInternal _PBRelation_PlayerdataEntry_DoNotUse_default_instance_;
class PBRelation_RelationdataEntry_DoNotUse;
class PBRelation_RelationdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRelation_RelationdataEntry_DoNotUseDefaultTypeInternal _PBRelation_RelationdataEntry_DoNotUse_default_instance_;
class S2SAddCampToBattleShardReq;
class S2SAddCampToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddCampToBattleShardReqDefaultTypeInternal _S2SAddCampToBattleShardReq_default_instance_;
class S2SAddCampToMatchShardAck;
class S2SAddCampToMatchShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddCampToMatchShardAckDefaultTypeInternal _S2SAddCampToMatchShardAck_default_instance_;
class S2SAddFriendInviteToGameAck;
class S2SAddFriendInviteToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddFriendInviteToGameAckDefaultTypeInternal _S2SAddFriendInviteToGameAck_default_instance_;
class S2SAddFriendInviteToRelationReq;
class S2SAddFriendInviteToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddFriendInviteToRelationReqDefaultTypeInternal _S2SAddFriendInviteToRelationReq_default_instance_;
class S2SAddFriendToGameAck;
class S2SAddFriendToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddFriendToGameAckDefaultTypeInternal _S2SAddFriendToGameAck_default_instance_;
class S2SAddFriendToRelationReq;
class S2SAddFriendToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddFriendToRelationReqDefaultTypeInternal _S2SAddFriendToRelationReq_default_instance_;
class S2SAddGuildActivenessReq;
class S2SAddGuildActivenessReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddGuildActivenessReqDefaultTypeInternal _S2SAddGuildActivenessReq_default_instance_;
class S2SAddMailReq;
class S2SAddMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddMailReqDefaultTypeInternal _S2SAddMailReq_default_instance_;
class S2SAddMatchGroupMemberAck;
class S2SAddMatchGroupMemberAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddMatchGroupMemberAckDefaultTypeInternal _S2SAddMatchGroupMemberAck_default_instance_;
class S2SAddMatchGroupMemberReq;
class S2SAddMatchGroupMemberReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddMatchGroupMemberReqDefaultTypeInternal _S2SAddMatchGroupMemberReq_default_instance_;
class S2SAddRecentPlayerDataReq;
class S2SAddRecentPlayerDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddRecentPlayerDataReqDefaultTypeInternal _S2SAddRecentPlayerDataReq_default_instance_;
class S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse;
class S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse_default_instance_;
class S2SAllocBattleIdAck;
class S2SAllocBattleIdAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAllocBattleIdAckDefaultTypeInternal _S2SAllocBattleIdAck_default_instance_;
class S2SAllocBattleIdReq;
class S2SAllocBattleIdReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAllocBattleIdReqDefaultTypeInternal _S2SAllocBattleIdReq_default_instance_;
class S2SApplyGuildAck;
class S2SApplyGuildAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SApplyGuildAckDefaultTypeInternal _S2SApplyGuildAck_default_instance_;
class S2SApplyGuildReq;
class S2SApplyGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SApplyGuildReqDefaultTypeInternal _S2SApplyGuildReq_default_instance_;
class S2SApplyMatchGroupAck;
class S2SApplyMatchGroupAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SApplyMatchGroupAckDefaultTypeInternal _S2SApplyMatchGroupAck_default_instance_;
class S2SApplyMatchGroupReq;
class S2SApplyMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SApplyMatchGroupReqDefaultTypeInternal _S2SApplyMatchGroupReq_default_instance_;
class S2SAppointGuildMemberReq;
class S2SAppointGuildMemberReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAppointGuildMemberReqDefaultTypeInternal _S2SAppointGuildMemberReq_default_instance_;
class S2SBattleRoomScoreBalanceAck;
class S2SBattleRoomScoreBalanceAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBattleRoomScoreBalanceAckDefaultTypeInternal _S2SBattleRoomScoreBalanceAck_default_instance_;
class S2SBattleRoomScoreBalanceReq;
class S2SBattleRoomScoreBalanceReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBattleRoomScoreBalanceReqDefaultTypeInternal _S2SBattleRoomScoreBalanceReq_default_instance_;
class S2SBattleScoreBalanceToShardReq;
class S2SBattleScoreBalanceToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBattleScoreBalanceToShardReqDefaultTypeInternal _S2SBattleScoreBalanceToShardReq_default_instance_;
class S2SBroadcastMessageReq;
class S2SBroadcastMessageReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastMessageReqDefaultTypeInternal _S2SBroadcastMessageReq_default_instance_;
class S2SBroadcastToGame;
class S2SBroadcastToGameDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGameDefaultTypeInternal _S2SBroadcastToGame_default_instance_;
class S2SBroadcastToGate;
class S2SBroadcastToGateDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGateDefaultTypeInternal _S2SBroadcastToGate_default_instance_;
class S2SBroadcastToWord;
class S2SBroadcastToWordDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToWordDefaultTypeInternal _S2SBroadcastToWord_default_instance_;
class S2SCancelMatchToBattleShardReq;
class S2SCancelMatchToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCancelMatchToBattleShardReqDefaultTypeInternal _S2SCancelMatchToBattleShardReq_default_instance_;
class S2SCancelMatchToProxyReq;
class S2SCancelMatchToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCancelMatchToProxyReqDefaultTypeInternal _S2SCancelMatchToProxyReq_default_instance_;
class S2SCancelMatchToShardReq;
class S2SCancelMatchToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCancelMatchToShardReqDefaultTypeInternal _S2SCancelMatchToShardReq_default_instance_;
class S2SConsentApplyMatchGroupAck;
class S2SConsentApplyMatchGroupAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SConsentApplyMatchGroupAckDefaultTypeInternal _S2SConsentApplyMatchGroupAck_default_instance_;
class S2SConsentInviteMatchGroupReq;
class S2SConsentInviteMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SConsentInviteMatchGroupReqDefaultTypeInternal _S2SConsentInviteMatchGroupReq_default_instance_;
class S2SCreateGuidReq;
class S2SCreateGuidReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateGuidReqDefaultTypeInternal _S2SCreateGuidReq_default_instance_;
class S2SCreateGuildAck;
class S2SCreateGuildAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateGuildAckDefaultTypeInternal _S2SCreateGuildAck_default_instance_;
class S2SCreateGuildToShardReq;
class S2SCreateGuildToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateGuildToShardReqDefaultTypeInternal _S2SCreateGuildToShardReq_default_instance_;
class S2SCreateMatchGroupReq;
class S2SCreateMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateMatchGroupReqDefaultTypeInternal _S2SCreateMatchGroupReq_default_instance_;
class S2SCreateMatchGroupToShardReq;
class S2SCreateMatchGroupToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateMatchGroupToShardReqDefaultTypeInternal _S2SCreateMatchGroupToShardReq_default_instance_;
class S2SCreateRoomToBattleProxyReq;
class S2SCreateRoomToBattleProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateRoomToBattleProxyReqDefaultTypeInternal _S2SCreateRoomToBattleProxyReq_default_instance_;
class S2SCreateRoomToBattleShardReq;
class S2SCreateRoomToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateRoomToBattleShardReqDefaultTypeInternal _S2SCreateRoomToBattleShardReq_default_instance_;
class S2SCreateRoomToMatchShardAck;
class S2SCreateRoomToMatchShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SCreateRoomToMatchShardAckDefaultTypeInternal _S2SCreateRoomToMatchShardAck_default_instance_;
class S2SDelFriendInviteToRelationReq;
class S2SDelFriendInviteToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDelFriendInviteToRelationReqDefaultTypeInternal _S2SDelFriendInviteToRelationReq_default_instance_;
class S2SDelFriendToGameAck;
class S2SDelFriendToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDelFriendToGameAckDefaultTypeInternal _S2SDelFriendToGameAck_default_instance_;
class S2SDelFriendToRelationReq;
class S2SDelFriendToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDelFriendToRelationReqDefaultTypeInternal _S2SDelFriendToRelationReq_default_instance_;
class S2SDisconnectServerToBattleShardReq;
class S2SDisconnectServerToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDisconnectServerToBattleShardReqDefaultTypeInternal _S2SDisconnectServerToBattleShardReq_default_instance_;
class S2SDissolveGuildReq;
class S2SDissolveGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDissolveGuildReqDefaultTypeInternal _S2SDissolveGuildReq_default_instance_;
class S2SExitGuildReq;
class S2SExitGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SExitGuildReqDefaultTypeInternal _S2SExitGuildReq_default_instance_;
class S2SGameSyncOnlineReq;
class S2SGameSyncOnlineReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SGameSyncOnlineReqDefaultTypeInternal _S2SGameSyncOnlineReq_default_instance_;
class S2SInviteGuildAck;
class S2SInviteGuildAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SInviteGuildAckDefaultTypeInternal _S2SInviteGuildAck_default_instance_;
class S2SInviteGuildReq;
class S2SInviteGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SInviteGuildReqDefaultTypeInternal _S2SInviteGuildReq_default_instance_;
class S2SKickGamePlayerReq;
class S2SKickGamePlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickGamePlayerReqDefaultTypeInternal _S2SKickGamePlayerReq_default_instance_;
class S2SKickGatePlayerReq;
class S2SKickGatePlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickGatePlayerReqDefaultTypeInternal _S2SKickGatePlayerReq_default_instance_;
class S2SKickMatchGroupReq;
class S2SKickMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickMatchGroupReqDefaultTypeInternal _S2SKickMatchGroupReq_default_instance_;
class S2SKickMemberReq;
class S2SKickMemberReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickMemberReqDefaultTypeInternal _S2SKickMemberReq_default_instance_;
class S2SLeaveBattleRoomToClientAck;
class S2SLeaveBattleRoomToClientAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLeaveBattleRoomToClientAckDefaultTypeInternal _S2SLeaveBattleRoomToClientAck_default_instance_;
class S2SLeaveMatchGroupAck;
class S2SLeaveMatchGroupAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLeaveMatchGroupAckDefaultTypeInternal _S2SLeaveMatchGroupAck_default_instance_;
class S2SLeaveMatchGroupReq;
class S2SLeaveMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLeaveMatchGroupReqDefaultTypeInternal _S2SLeaveMatchGroupReq_default_instance_;
class S2SLoginFailedToLoginAck;
class S2SLoginFailedToLoginAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginFailedToLoginAckDefaultTypeInternal _S2SLoginFailedToLoginAck_default_instance_;
class S2SLoginGameAck;
class S2SLoginGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginGameAckDefaultTypeInternal _S2SLoginGameAck_default_instance_;
class S2SLoginLoadPlayerAck;
class S2SLoginLoadPlayerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginLoadPlayerAckDefaultTypeInternal _S2SLoginLoadPlayerAck_default_instance_;
class S2SLoginLoadPlayerReq;
class S2SLoginLoadPlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginLoadPlayerReqDefaultTypeInternal _S2SLoginLoadPlayerReq_default_instance_;
class S2SLoginLoginVerifyAck;
class S2SLoginLoginVerifyAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginLoginVerifyAckDefaultTypeInternal _S2SLoginLoginVerifyAck_default_instance_;
class S2SLoginLoginVerifyReq;
class S2SLoginLoginVerifyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginLoginVerifyReqDefaultTypeInternal _S2SLoginLoginVerifyReq_default_instance_;
class S2SLoginOutReq;
class S2SLoginOutReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginOutReqDefaultTypeInternal _S2SLoginOutReq_default_instance_;
class S2SLoginQueryGuildAck;
class S2SLoginQueryGuildAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginQueryGuildAckDefaultTypeInternal _S2SLoginQueryGuildAck_default_instance_;
class S2SLoginQueryGuildReq;
class S2SLoginQueryGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginQueryGuildReqDefaultTypeInternal _S2SLoginQueryGuildReq_default_instance_;
class S2SLoginQueryGuildidAck;
class S2SLoginQueryGuildidAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginQueryGuildidAckDefaultTypeInternal _S2SLoginQueryGuildidAck_default_instance_;
class S2SLoginQueryGuildidReq;
class S2SLoginQueryGuildidReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginQueryGuildidReqDefaultTypeInternal _S2SLoginQueryGuildidReq_default_instance_;
class S2SLoginTellTokenToGameReq;
class S2SLoginTellTokenToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginTellTokenToGameReqDefaultTypeInternal _S2SLoginTellTokenToGameReq_default_instance_;
class S2SLoginWorldVerifyReq;
class S2SLoginWorldVerifyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginWorldVerifyReqDefaultTypeInternal _S2SLoginWorldVerifyReq_default_instance_;
class S2SMatchToClientAck;
class S2SMatchToClientAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SMatchToClientAckDefaultTypeInternal _S2SMatchToClientAck_default_instance_;
class S2SMatchToProxyReq;
class S2SMatchToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SMatchToProxyReqDefaultTypeInternal _S2SMatchToProxyReq_default_instance_;
class S2SMatchToShardReq;
class S2SMatchToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SMatchToShardReqDefaultTypeInternal _S2SMatchToShardReq_default_instance_;
class S2SModifyMedalReq;
class S2SModifyMedalReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SModifyMedalReqDefaultTypeInternal _S2SModifyMedalReq_default_instance_;
class S2SNewPlayerMailReq;
class S2SNewPlayerMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNewPlayerMailReqDefaultTypeInternal _S2SNewPlayerMailReq_default_instance_;
class S2SNoticeMatchRoomAck;
class S2SNoticeMatchRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNoticeMatchRoomAckDefaultTypeInternal _S2SNoticeMatchRoomAck_default_instance_;
class S2SNoticeMatchRoomReq;
class S2SNoticeMatchRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNoticeMatchRoomReqDefaultTypeInternal _S2SNoticeMatchRoomReq_default_instance_;
class S2SNoticeMatchStateReq;
class S2SNoticeMatchStateReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNoticeMatchStateReqDefaultTypeInternal _S2SNoticeMatchStateReq_default_instance_;
class S2SNoticeNewMailReq;
class S2SNoticeNewMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNoticeNewMailReqDefaultTypeInternal _S2SNoticeNewMailReq_default_instance_;
class S2SOffLineUpdateMatchGroupReq;
class S2SOffLineUpdateMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOffLineUpdateMatchGroupReqDefaultTypeInternal _S2SOffLineUpdateMatchGroupReq_default_instance_;
class S2SOnLineQueryMatchGroupReq;
class S2SOnLineQueryMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOnLineQueryMatchGroupReqDefaultTypeInternal _S2SOnLineQueryMatchGroupReq_default_instance_;
class S2SOnlieQueryBattleScoreReq;
class S2SOnlieQueryBattleScoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOnlieQueryBattleScoreReqDefaultTypeInternal _S2SOnlieQueryBattleScoreReq_default_instance_;
class S2SOpenBattleRoomAck;
class S2SOpenBattleRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOpenBattleRoomAckDefaultTypeInternal _S2SOpenBattleRoomAck_default_instance_;
class S2SOpenBattleRoomReq;
class S2SOpenBattleRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOpenBattleRoomReqDefaultTypeInternal _S2SOpenBattleRoomReq_default_instance_;
class S2SOpenBattleRoomToShardAck;
class S2SOpenBattleRoomToShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOpenBattleRoomToShardAckDefaultTypeInternal _S2SOpenBattleRoomToShardAck_default_instance_;
class S2SOpenRoomToBattleShardAck;
class S2SOpenRoomToBattleShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOpenRoomToBattleShardAckDefaultTypeInternal _S2SOpenRoomToBattleShardAck_default_instance_;
class S2SOpenRoomToMatchShardReq;
class S2SOpenRoomToMatchShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SOpenRoomToMatchShardReqDefaultTypeInternal _S2SOpenRoomToMatchShardReq_default_instance_;
class S2SPlayerBattleScoreAck;
class S2SPlayerBattleScoreAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerBattleScoreAckDefaultTypeInternal _S2SPlayerBattleScoreAck_default_instance_;
class S2SPlayerBattleScoreReq;
class S2SPlayerBattleScoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerBattleScoreReqDefaultTypeInternal _S2SPlayerBattleScoreReq_default_instance_;
class S2SPlayerCancelMatchReq;
class S2SPlayerCancelMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerCancelMatchReqDefaultTypeInternal _S2SPlayerCancelMatchReq_default_instance_;
class S2SPlayerDisconnectionReq;
class S2SPlayerDisconnectionReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerDisconnectionReqDefaultTypeInternal _S2SPlayerDisconnectionReq_default_instance_;
class S2SPlayerEnterBattleRoomAck;
class S2SPlayerEnterBattleRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerEnterBattleRoomAckDefaultTypeInternal _S2SPlayerEnterBattleRoomAck_default_instance_;
class S2SPlayerEnterBattleRoomReq;
class S2SPlayerEnterBattleRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerEnterBattleRoomReqDefaultTypeInternal _S2SPlayerEnterBattleRoomReq_default_instance_;
class S2SPlayerEnterRoomToBattleShardAck;
class S2SPlayerEnterRoomToBattleShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerEnterRoomToBattleShardAckDefaultTypeInternal _S2SPlayerEnterRoomToBattleShardAck_default_instance_;
class S2SPlayerEnterWorldReq;
class S2SPlayerEnterWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerEnterWorldReqDefaultTypeInternal _S2SPlayerEnterWorldReq_default_instance_;
class S2SPlayerGuildChangeReq;
class S2SPlayerGuildChangeReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerGuildChangeReqDefaultTypeInternal _S2SPlayerGuildChangeReq_default_instance_;
class S2SPlayerLeaveBattleRoomAck;
class S2SPlayerLeaveBattleRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveBattleRoomAckDefaultTypeInternal _S2SPlayerLeaveBattleRoomAck_default_instance_;
class S2SPlayerLeaveBattleRoomReq;
class S2SPlayerLeaveBattleRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveBattleRoomReqDefaultTypeInternal _S2SPlayerLeaveBattleRoomReq_default_instance_;
class S2SPlayerLeaveRoomToBattleShardReq;
class S2SPlayerLeaveRoomToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveRoomToBattleShardReqDefaultTypeInternal _S2SPlayerLeaveRoomToBattleShardReq_default_instance_;
class S2SPlayerLeaveRoomToMatchShardReq;
class S2SPlayerLeaveRoomToMatchShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveRoomToMatchShardReqDefaultTypeInternal _S2SPlayerLeaveRoomToMatchShardReq_default_instance_;
class S2SPlayerLeaveWorldReq;
class S2SPlayerLeaveWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveWorldReqDefaultTypeInternal _S2SPlayerLeaveWorldReq_default_instance_;
class S2SPlayerLoginBattleRoomAck;
class S2SPlayerLoginBattleRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLoginBattleRoomAckDefaultTypeInternal _S2SPlayerLoginBattleRoomAck_default_instance_;
class S2SPlayerLoginBattleRoomReq;
class S2SPlayerLoginBattleRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLoginBattleRoomReqDefaultTypeInternal _S2SPlayerLoginBattleRoomReq_default_instance_;
class S2SPlayerLoginRoomToBattleShardReq;
class S2SPlayerLoginRoomToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLoginRoomToBattleShardReqDefaultTypeInternal _S2SPlayerLoginRoomToBattleShardReq_default_instance_;
class S2SPlayerOnlineToBattleShardReq;
class S2SPlayerOnlineToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerOnlineToBattleShardReqDefaultTypeInternal _S2SPlayerOnlineToBattleShardReq_default_instance_;
class S2SPlayerToastAck;
class S2SPlayerToastAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerToastAckDefaultTypeInternal _S2SPlayerToastAck_default_instance_;
class S2SPlayerToastReq;
class S2SPlayerToastReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerToastReqDefaultTypeInternal _S2SPlayerToastReq_default_instance_;
class S2SQueryBasicToGameAck;
class S2SQueryBasicToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryBasicToGameAckDefaultTypeInternal _S2SQueryBasicToGameAck_default_instance_;
class S2SQueryBasicToGameAck_PbdataEntry_DoNotUse;
class S2SQueryBasicToGameAck_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryBasicToGameAck_PbdataEntry_DoNotUseDefaultTypeInternal _S2SQueryBasicToGameAck_PbdataEntry_DoNotUse_default_instance_;
class S2SQueryBasicToPublicReq;
class S2SQueryBasicToPublicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryBasicToPublicReqDefaultTypeInternal _S2SQueryBasicToPublicReq_default_instance_;
class S2SQueryBattleRoomAck;
class S2SQueryBattleRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryBattleRoomAckDefaultTypeInternal _S2SQueryBattleRoomAck_default_instance_;
class S2SQueryBattleRoomReq;
class S2SQueryBattleRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryBattleRoomReqDefaultTypeInternal _S2SQueryBattleRoomReq_default_instance_;
class S2SQueryFriendInviteToGameAck;
class S2SQueryFriendInviteToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryFriendInviteToGameAckDefaultTypeInternal _S2SQueryFriendInviteToGameAck_default_instance_;
class S2SQueryFriendInviteToRelationReq;
class S2SQueryFriendInviteToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryFriendInviteToRelationReqDefaultTypeInternal _S2SQueryFriendInviteToRelationReq_default_instance_;
class S2SQueryFriendRankListReq;
class S2SQueryFriendRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryFriendRankListReqDefaultTypeInternal _S2SQueryFriendRankListReq_default_instance_;
class S2SQueryFriendToGameAck;
class S2SQueryFriendToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryFriendToGameAckDefaultTypeInternal _S2SQueryFriendToGameAck_default_instance_;
class S2SQueryFriendToRelationReq;
class S2SQueryFriendToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryFriendToRelationReqDefaultTypeInternal _S2SQueryFriendToRelationReq_default_instance_;
class S2SQueryGuestAck;
class S2SQueryGuestAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryGuestAckDefaultTypeInternal _S2SQueryGuestAck_default_instance_;
class S2SQueryGuestReq;
class S2SQueryGuestReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryGuestReqDefaultTypeInternal _S2SQueryGuestReq_default_instance_;
class S2SQueryGuildListReq;
class S2SQueryGuildListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryGuildListReqDefaultTypeInternal _S2SQueryGuildListReq_default_instance_;
class S2SQueryGuildLogReq;
class S2SQueryGuildLogReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryGuildLogReqDefaultTypeInternal _S2SQueryGuildLogReq_default_instance_;
class S2SQueryMailAck;
class S2SQueryMailAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryMailAckDefaultTypeInternal _S2SQueryMailAck_default_instance_;
class S2SQueryMailReq;
class S2SQueryMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryMailReqDefaultTypeInternal _S2SQueryMailReq_default_instance_;
class S2SQueryMatchRoomAck;
class S2SQueryMatchRoomAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryMatchRoomAckDefaultTypeInternal _S2SQueryMatchRoomAck_default_instance_;
class S2SQueryMatchRoomReq;
class S2SQueryMatchRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryMatchRoomReqDefaultTypeInternal _S2SQueryMatchRoomReq_default_instance_;
class S2SQueryPlayerAck;
class S2SQueryPlayerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryPlayerAckDefaultTypeInternal _S2SQueryPlayerAck_default_instance_;
class S2SQueryPlayerReq;
class S2SQueryPlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryPlayerReqDefaultTypeInternal _S2SQueryPlayerReq_default_instance_;
class S2SQueryRankListReq;
class S2SQueryRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRankListReqDefaultTypeInternal _S2SQueryRankListReq_default_instance_;
class S2SQueryRecentListAck;
class S2SQueryRecentListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRecentListAckDefaultTypeInternal _S2SQueryRecentListAck_default_instance_;
class S2SQueryRecentListReq;
class S2SQueryRecentListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRecentListReqDefaultTypeInternal _S2SQueryRecentListReq_default_instance_;
class S2SQueryRoomToBattleShardReq;
class S2SQueryRoomToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRoomToBattleShardReqDefaultTypeInternal _S2SQueryRoomToBattleShardReq_default_instance_;
class S2SQueryRoomToMatchShardReq;
class S2SQueryRoomToMatchShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRoomToMatchShardReqDefaultTypeInternal _S2SQueryRoomToMatchShardReq_default_instance_;
class S2SQueryToastCountReq;
class S2SQueryToastCountReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryToastCountReqDefaultTypeInternal _S2SQueryToastCountReq_default_instance_;
class S2SReceiveInviteMatchGroupReq;
class S2SReceiveInviteMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SReceiveInviteMatchGroupReqDefaultTypeInternal _S2SReceiveInviteMatchGroupReq_default_instance_;
class S2SRegisterBattleServerAck;
class S2SRegisterBattleServerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterBattleServerAckDefaultTypeInternal _S2SRegisterBattleServerAck_default_instance_;
class S2SRegisterBattleServerReq;
class S2SRegisterBattleServerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterBattleServerReqDefaultTypeInternal _S2SRegisterBattleServerReq_default_instance_;
class S2SRegisterMatchReq;
class S2SRegisterMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterMatchReqDefaultTypeInternal _S2SRegisterMatchReq_default_instance_;
class S2SRegisterServerToBattleShardReq;
class S2SRegisterServerToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterServerToBattleShardReqDefaultTypeInternal _S2SRegisterServerToBattleShardReq_default_instance_;
class S2SRemoveMatchGroupMemberAck;
class S2SRemoveMatchGroupMemberAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRemoveMatchGroupMemberAckDefaultTypeInternal _S2SRemoveMatchGroupMemberAck_default_instance_;
class S2SResetBattleRoomReq;
class S2SResetBattleRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SResetBattleRoomReqDefaultTypeInternal _S2SResetBattleRoomReq_default_instance_;
class S2SResetMatchRoomReq;
class S2SResetMatchRoomReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SResetMatchRoomReqDefaultTypeInternal _S2SResetMatchRoomReq_default_instance_;
class S2SReviewApplyReq;
class S2SReviewApplyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SReviewApplyReqDefaultTypeInternal _S2SReviewApplyReq_default_instance_;
class S2SSavePlayerReq;
class S2SSavePlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSavePlayerReqDefaultTypeInternal _S2SSavePlayerReq_default_instance_;
class S2SSearchGuildByNameReq;
class S2SSearchGuildByNameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSearchGuildByNameReqDefaultTypeInternal _S2SSearchGuildByNameReq_default_instance_;
class S2SSendChatToServer;
class S2SSendChatToServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSendChatToServerDefaultTypeInternal _S2SSendChatToServer_default_instance_;
class S2SSetGuildSwitchReq;
class S2SSetGuildSwitchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSetGuildSwitchReqDefaultTypeInternal _S2SSetGuildSwitchReq_default_instance_;
class S2SSetPlayerNameAck;
class S2SSetPlayerNameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSetPlayerNameAckDefaultTypeInternal _S2SSetPlayerNameAck_default_instance_;
class S2SSetPlayerNameReq;
class S2SSetPlayerNameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSetPlayerNameReqDefaultTypeInternal _S2SSetPlayerNameReq_default_instance_;
class S2STellBattleRegisterToShardReq;
class S2STellBattleRegisterToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellBattleRegisterToShardReqDefaultTypeInternal _S2STellBattleRegisterToShardReq_default_instance_;
class S2STellBattleRoomFinishAck;
class S2STellBattleRoomFinishAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellBattleRoomFinishAckDefaultTypeInternal _S2STellBattleRoomFinishAck_default_instance_;
class S2STellBattleRoomFinishReq;
class S2STellBattleRoomFinishReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellBattleRoomFinishReqDefaultTypeInternal _S2STellBattleRoomFinishReq_default_instance_;
class S2STellBattleRoomStartAck;
class S2STellBattleRoomStartAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellBattleRoomStartAckDefaultTypeInternal _S2STellBattleRoomStartAck_default_instance_;
class S2STellBattleRoomStartReq;
class S2STellBattleRoomStartReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellBattleRoomStartReqDefaultTypeInternal _S2STellBattleRoomStartReq_default_instance_;
class S2STellMatchGroupDataAck;
class S2STellMatchGroupDataAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellMatchGroupDataAckDefaultTypeInternal _S2STellMatchGroupDataAck_default_instance_;
class S2STellRoomCloseToMatchShardReq;
class S2STellRoomCloseToMatchShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellRoomCloseToMatchShardReqDefaultTypeInternal _S2STellRoomCloseToMatchShardReq_default_instance_;
class S2STellRoomFinishToBattleShardReq;
class S2STellRoomFinishToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellRoomFinishToBattleShardReqDefaultTypeInternal _S2STellRoomFinishToBattleShardReq_default_instance_;
class S2STellRoomStartToBattleShardReq;
class S2STellRoomStartToBattleShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellRoomStartToBattleShardReqDefaultTypeInternal _S2STellRoomStartToBattleShardReq_default_instance_;
class S2STellRoomStartToMatchShardAck;
class S2STellRoomStartToMatchShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellRoomStartToMatchShardAckDefaultTypeInternal _S2STellRoomStartToMatchShardAck_default_instance_;
class S2STellRoomStartToMatchShardReq;
class S2STellRoomStartToMatchShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STellRoomStartToMatchShardReqDefaultTypeInternal _S2STellRoomStartToMatchShardReq_default_instance_;
class S2STransferMasterReq;
class S2STransferMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransferMasterReqDefaultTypeInternal _S2STransferMasterReq_default_instance_;
class S2STransmitMessageReq;
class S2STransmitMessageReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitMessageReqDefaultTypeInternal _S2STransmitMessageReq_default_instance_;
class S2STransmitToPlayer;
class S2STransmitToPlayerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitToPlayerDefaultTypeInternal _S2STransmitToPlayer_default_instance_;
class S2STransmitToServer;
class S2STransmitToServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitToServerDefaultTypeInternal _S2STransmitToServer_default_instance_;
class S2SUpdateDataToFriendReq;
class S2SUpdateDataToFriendReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateDataToFriendReqDefaultTypeInternal _S2SUpdateDataToFriendReq_default_instance_;
class S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse;
class S2SUpdateDataToFriendReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateDataToFriendReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateDataToPublicReq;
class S2SUpdateDataToPublicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateDataToPublicReqDefaultTypeInternal _S2SUpdateDataToPublicReq_default_instance_;
class S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse;
class S2SUpdateDataToPublicReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateDataToPublicReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateFriendLinessToGameAck;
class S2SUpdateFriendLinessToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateFriendLinessToGameAckDefaultTypeInternal _S2SUpdateFriendLinessToGameAck_default_instance_;
class S2SUpdateFriendLinessToRelationReq;
class S2SUpdateFriendLinessToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateFriendLinessToRelationReqDefaultTypeInternal _S2SUpdateFriendLinessToRelationReq_default_instance_;
class S2SUpdateGroupDataAck;
class S2SUpdateGroupDataAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupDataAckDefaultTypeInternal _S2SUpdateGroupDataAck_default_instance_;
class S2SUpdateGroupDataAck_PbstringEntry_DoNotUse;
class S2SUpdateGroupDataAck_PbstringEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupDataAck_PbstringEntry_DoNotUseDefaultTypeInternal _S2SUpdateGroupDataAck_PbstringEntry_DoNotUse_default_instance_;
class S2SUpdateGroupMatchReq;
class S2SUpdateGroupMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupMatchReqDefaultTypeInternal _S2SUpdateGroupMatchReq_default_instance_;
class S2SUpdateGroupMemberAck;
class S2SUpdateGroupMemberAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupMemberAckDefaultTypeInternal _S2SUpdateGroupMemberAck_default_instance_;
class S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse;
class S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUseDefaultTypeInternal _S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse_default_instance_;
class S2SUpdateGroupMemberReq;
class S2SUpdateGroupMemberReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupMemberReqDefaultTypeInternal _S2SUpdateGroupMemberReq_default_instance_;
class S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse;
class S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUseDefaultTypeInternal _S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse_default_instance_;
class S2SUpdateGuestListReq;
class S2SUpdateGuestListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGuestListReqDefaultTypeInternal _S2SUpdateGuestListReq_default_instance_;
class S2SUpdateGuildDataReq;
class S2SUpdateGuildDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGuildDataReqDefaultTypeInternal _S2SUpdateGuildDataReq_default_instance_;
class S2SUpdateGuildDataReq_PbdataEntry_DoNotUse;
class S2SUpdateGuildDataReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateGuildDataReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateGuildDataReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateMailStatusAck;
class S2SUpdateMailStatusAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateMailStatusAckDefaultTypeInternal _S2SUpdateMailStatusAck_default_instance_;
class S2SUpdateMailStatusReq;
class S2SUpdateMailStatusReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateMailStatusReqDefaultTypeInternal _S2SUpdateMailStatusReq_default_instance_;
class S2SUpdateMemberBasicDataReq;
class S2SUpdateMemberBasicDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateMemberBasicDataReqDefaultTypeInternal _S2SUpdateMemberBasicDataReq_default_instance_;
class S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse;
class S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateRankDataReq;
class S2SUpdateRankDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateRankDataReqDefaultTypeInternal _S2SUpdateRankDataReq_default_instance_;
class S2SUpgradeGuildAck;
class S2SUpgradeGuildAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpgradeGuildAckDefaultTypeInternal _S2SUpgradeGuildAck_default_instance_;
class S2SUpgradeGuildReq;
class S2SUpgradeGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpgradeGuildReqDefaultTypeInternal _S2SUpgradeGuildReq_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::PBLoginData* Arena::CreateMaybeMessage<::KFMsg::PBLoginData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBMail* Arena::CreateMaybeMessage<::KFMsg::PBMail>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBMail_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBMail_DataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRelation* Arena::CreateMaybeMessage<::KFMsg::PBRelation>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRelation_PlayerdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBRelation_PlayerdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRelation_RelationdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBRelation_RelationdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddCampToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddCampToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddCampToMatchShardAck* Arena::CreateMaybeMessage<::KFMsg::S2SAddCampToMatchShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddFriendInviteToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SAddFriendInviteToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddFriendInviteToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddFriendInviteToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddFriendToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SAddFriendToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddFriendToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddFriendToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddGuildActivenessReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddGuildActivenessReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddMatchGroupMemberAck* Arena::CreateMaybeMessage<::KFMsg::S2SAddMatchGroupMemberAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddMatchGroupMemberReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddMatchGroupMemberReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddRecentPlayerDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddRecentPlayerDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAllocBattleIdAck* Arena::CreateMaybeMessage<::KFMsg::S2SAllocBattleIdAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAllocBattleIdReq* Arena::CreateMaybeMessage<::KFMsg::S2SAllocBattleIdReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SApplyGuildAck* Arena::CreateMaybeMessage<::KFMsg::S2SApplyGuildAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SApplyGuildReq* Arena::CreateMaybeMessage<::KFMsg::S2SApplyGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SApplyMatchGroupAck* Arena::CreateMaybeMessage<::KFMsg::S2SApplyMatchGroupAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SApplyMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SApplyMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAppointGuildMemberReq* Arena::CreateMaybeMessage<::KFMsg::S2SAppointGuildMemberReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBattleRoomScoreBalanceAck* Arena::CreateMaybeMessage<::KFMsg::S2SBattleRoomScoreBalanceAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBattleRoomScoreBalanceReq* Arena::CreateMaybeMessage<::KFMsg::S2SBattleRoomScoreBalanceReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBattleScoreBalanceToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SBattleScoreBalanceToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastMessageReq* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastMessageReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGame* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGame>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGate* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGate>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToWord* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToWord>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCancelMatchToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SCancelMatchToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCancelMatchToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SCancelMatchToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCancelMatchToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SCancelMatchToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SConsentApplyMatchGroupAck* Arena::CreateMaybeMessage<::KFMsg::S2SConsentApplyMatchGroupAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SConsentInviteMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SConsentInviteMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateGuidReq* Arena::CreateMaybeMessage<::KFMsg::S2SCreateGuidReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateGuildAck* Arena::CreateMaybeMessage<::KFMsg::S2SCreateGuildAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateGuildToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SCreateGuildToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SCreateMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateMatchGroupToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SCreateMatchGroupToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateRoomToBattleProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SCreateRoomToBattleProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateRoomToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SCreateRoomToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SCreateRoomToMatchShardAck* Arena::CreateMaybeMessage<::KFMsg::S2SCreateRoomToMatchShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDelFriendInviteToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SDelFriendInviteToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDelFriendToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SDelFriendToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDelFriendToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SDelFriendToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDisconnectServerToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SDisconnectServerToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDissolveGuildReq* Arena::CreateMaybeMessage<::KFMsg::S2SDissolveGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SExitGuildReq* Arena::CreateMaybeMessage<::KFMsg::S2SExitGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SGameSyncOnlineReq* Arena::CreateMaybeMessage<::KFMsg::S2SGameSyncOnlineReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SInviteGuildAck* Arena::CreateMaybeMessage<::KFMsg::S2SInviteGuildAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SInviteGuildReq* Arena::CreateMaybeMessage<::KFMsg::S2SInviteGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickGamePlayerReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickGamePlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickGatePlayerReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickGatePlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickMemberReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickMemberReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLeaveBattleRoomToClientAck* Arena::CreateMaybeMessage<::KFMsg::S2SLeaveBattleRoomToClientAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLeaveMatchGroupAck* Arena::CreateMaybeMessage<::KFMsg::S2SLeaveMatchGroupAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLeaveMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SLeaveMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginFailedToLoginAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginFailedToLoginAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginLoadPlayerAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginLoadPlayerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginLoadPlayerReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginLoadPlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginLoginVerifyAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginLoginVerifyAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginLoginVerifyReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginLoginVerifyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginOutReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginOutReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginQueryGuildAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginQueryGuildAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginQueryGuildReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginQueryGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginQueryGuildidAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginQueryGuildidAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginQueryGuildidReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginQueryGuildidReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginTellTokenToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginTellTokenToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginWorldVerifyReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginWorldVerifyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SMatchToClientAck* Arena::CreateMaybeMessage<::KFMsg::S2SMatchToClientAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SMatchToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SMatchToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SMatchToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SMatchToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SModifyMedalReq* Arena::CreateMaybeMessage<::KFMsg::S2SModifyMedalReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNewPlayerMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SNewPlayerMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNoticeMatchRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SNoticeMatchRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNoticeMatchRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SNoticeMatchRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNoticeMatchStateReq* Arena::CreateMaybeMessage<::KFMsg::S2SNoticeMatchStateReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNoticeNewMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SNoticeNewMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOffLineUpdateMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SOffLineUpdateMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOnLineQueryMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SOnLineQueryMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOnlieQueryBattleScoreReq* Arena::CreateMaybeMessage<::KFMsg::S2SOnlieQueryBattleScoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOpenBattleRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SOpenBattleRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOpenBattleRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SOpenBattleRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOpenBattleRoomToShardAck* Arena::CreateMaybeMessage<::KFMsg::S2SOpenBattleRoomToShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOpenRoomToBattleShardAck* Arena::CreateMaybeMessage<::KFMsg::S2SOpenRoomToBattleShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SOpenRoomToMatchShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SOpenRoomToMatchShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerBattleScoreAck* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerBattleScoreAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerBattleScoreReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerBattleScoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerCancelMatchReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerCancelMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerDisconnectionReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerDisconnectionReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerEnterBattleRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerEnterBattleRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerEnterBattleRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerEnterBattleRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerEnterRoomToBattleShardAck* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerEnterRoomToBattleShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerEnterWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerEnterWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerGuildChangeReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerGuildChangeReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveBattleRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveBattleRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveBattleRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveBattleRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveRoomToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveRoomToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveRoomToMatchShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveRoomToMatchShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLoginBattleRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLoginBattleRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLoginBattleRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLoginBattleRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLoginRoomToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLoginRoomToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerOnlineToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerOnlineToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerToastAck* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerToastAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerToastReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerToastReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryBasicToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryBasicToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryBasicToPublicReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryBasicToPublicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryBattleRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryBattleRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryBattleRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryBattleRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryFriendInviteToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryFriendInviteToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryFriendInviteToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryFriendInviteToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryFriendRankListReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryFriendRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryFriendToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryFriendToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryFriendToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryFriendToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryGuestAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryGuestAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryGuestReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryGuestReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryGuildListReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryGuildListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryGuildLogReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryGuildLogReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryMailAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryMailAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryMatchRoomAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryMatchRoomAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryMatchRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryMatchRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryPlayerAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryPlayerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryPlayerReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryPlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRankListReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRecentListAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRecentListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRecentListReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRecentListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRoomToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRoomToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRoomToMatchShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRoomToMatchShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryToastCountReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryToastCountReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SReceiveInviteMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::S2SReceiveInviteMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterBattleServerAck* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterBattleServerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterBattleServerReq* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterBattleServerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterMatchReq* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterServerToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterServerToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRemoveMatchGroupMemberAck* Arena::CreateMaybeMessage<::KFMsg::S2SRemoveMatchGroupMemberAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SResetBattleRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SResetBattleRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SResetMatchRoomReq* Arena::CreateMaybeMessage<::KFMsg::S2SResetMatchRoomReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SReviewApplyReq* Arena::CreateMaybeMessage<::KFMsg::S2SReviewApplyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSavePlayerReq* Arena::CreateMaybeMessage<::KFMsg::S2SSavePlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSearchGuildByNameReq* Arena::CreateMaybeMessage<::KFMsg::S2SSearchGuildByNameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSendChatToServer* Arena::CreateMaybeMessage<::KFMsg::S2SSendChatToServer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSetGuildSwitchReq* Arena::CreateMaybeMessage<::KFMsg::S2SSetGuildSwitchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSetPlayerNameAck* Arena::CreateMaybeMessage<::KFMsg::S2SSetPlayerNameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSetPlayerNameReq* Arena::CreateMaybeMessage<::KFMsg::S2SSetPlayerNameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellBattleRegisterToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2STellBattleRegisterToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellBattleRoomFinishAck* Arena::CreateMaybeMessage<::KFMsg::S2STellBattleRoomFinishAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellBattleRoomFinishReq* Arena::CreateMaybeMessage<::KFMsg::S2STellBattleRoomFinishReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellBattleRoomStartAck* Arena::CreateMaybeMessage<::KFMsg::S2STellBattleRoomStartAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellBattleRoomStartReq* Arena::CreateMaybeMessage<::KFMsg::S2STellBattleRoomStartReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellMatchGroupDataAck* Arena::CreateMaybeMessage<::KFMsg::S2STellMatchGroupDataAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellRoomCloseToMatchShardReq* Arena::CreateMaybeMessage<::KFMsg::S2STellRoomCloseToMatchShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellRoomFinishToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2STellRoomFinishToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellRoomStartToBattleShardReq* Arena::CreateMaybeMessage<::KFMsg::S2STellRoomStartToBattleShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellRoomStartToMatchShardAck* Arena::CreateMaybeMessage<::KFMsg::S2STellRoomStartToMatchShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STellRoomStartToMatchShardReq* Arena::CreateMaybeMessage<::KFMsg::S2STellRoomStartToMatchShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransferMasterReq* Arena::CreateMaybeMessage<::KFMsg::S2STransferMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitMessageReq* Arena::CreateMaybeMessage<::KFMsg::S2STransmitMessageReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitToPlayer* Arena::CreateMaybeMessage<::KFMsg::S2STransmitToPlayer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitToServer* Arena::CreateMaybeMessage<::KFMsg::S2STransmitToServer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateDataToFriendReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateDataToFriendReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateDataToPublicReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateDataToPublicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateFriendLinessToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateFriendLinessToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateFriendLinessToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateFriendLinessToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupDataAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupDataAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupDataAck_PbstringEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupDataAck_PbstringEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupMatchReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupMemberAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupMemberAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupMemberReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupMemberReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGuestListReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGuestListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGuildDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGuildDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateGuildDataReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateGuildDataReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateMailStatusAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateMailStatusAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateMailStatusReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateMailStatusReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateMemberBasicDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateMemberBasicDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateRankDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateRankDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpgradeGuildAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpgradeGuildAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpgradeGuildReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpgradeGuildReq>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum ServerProtocol {
  S2S_SERVER_PROTOCOL_UNKNOW = 0,
  S2S_BROADCAST_TO_WORLD = 20001,
  S2S_BROADCAST_TO_GAME = 20002,
  S2S_BROADCAST_TO_GATE = 20003,
  S2S_TRANSMIT_TO_PLAYER = 20004,
  S2S_TRANSMIT_TO_SERVER = 20005,
  S2S_KICK_GAME_PLAYER_REQ = 20011,
  S2S_KICK_GATE_PLAYER_REQ = 20012,
  S2S_LOGIN_LOGIN_VERIFY_REQ = 20013,
  S2S_LOGIN_LOGIN_VERIFY_ACK = 20014,
  S2S_LOGIN_TELL_TOKEN_TO_GAME_REQ = 20015,
  S2S_LOGIN_WORLD_VERIFY_REQ = 20016,
  S2S_LOGIN_FAILED_TO_LOGIN_ACK = 20017,
  S2S_LOGIN_GAME_ACK = 20018,
  S2S_LOGIN_LOAD_PLAYER_REQ = 20019,
  S2S_LOGIN_LOAD_PLAYER_ACK = 20020,
  S2S_SAVE_PLAYER_REQ = 20021,
  S2S_GAME_SYNC_ONLINE_REQ = 20022,
  S2S_PLAYER_ENTER_WORLD_REQ = 20023,
  S2S_PLAYER_LEAVE_WORLD_REQ = 20024,
  S2S_LOGIN_OUT_REQ = 20025,
  S2S_QUERY_PLAYER_REQ = 20026,
  S2S_QUERY_PLAYER_ACK = 20027,
  S2S_UPDATE_DATA_TO_PUBLIC_REQ = 21001,
  S2S_QUERY_BASIC_TO_PUBLIC_REQ = 21002,
  S2S_QUERY_BASIC_TO_GAME_ACK = 21003,
  S2S_NEW_PLAYER_MAIL_REQ = 21101,
  S2S_QUERY_MAIL_REQ = 21102,
  S2S_QUERY_MAIL_ACK = 21103,
  S2S_ADD_MAIL_REQ = 21104,
  S2S_NOTICE_NEW_MAIL_REQ = 21105,
  S2S_UPDATE_MAIL_STATUS_REQ = 21106,
  S2S_UPDATE_MAIL_STATUS_ACK = 21107,
  S2S_QUERY_FRIEND_TO_RELATION_REQ = 21201,
  S2S_QUERY_FRIEND_TO_GAME_ACK = 21202,
  S2S_QUERY_FRIEND_INVITE_TO_RELATION_REQ = 21203,
  S2S_QUERY_FRIEND_INVITE_TO_GAME_ACK = 21204,
  S2S_UPDATE_DATA_TO_FRIEND_REQ = 21205,
  S2S_ADD_FRIEND_INVITE_TO_RELATION_REQ = 21206,
  S2S_ADD_FRIEND_INVITE_TO_GAME_ACK = 21207,
  S2S_DEL_FRIEND_INVITE_TO_RELATION_REQ = 21208,
  S2S_ADD_FRIEND_TO_RELATION_REQ = 21209,
  S2S_ADD_FRIEND_TO_GAME_ACK = 21210,
  S2S_DEL_FRIEND_TO_RELATION_REQ = 21211,
  S2S_DEL_FRIEND_TO_GAME_ACK = 21212,
  S2S_UPDATE_FRIENDLINESS_TO_RELATION_REQ = 21213,
  S2S_UPDATE_FRIENDLINESS_TO_GAME_ACK = 21214,
  S2S_REGISTER_MATCH_REQ = 11101,
  S2S_MATCH_TO_PROXY_REQ = 11102,
  S2S_MATCH_TO_SHARD_REQ = 11103,
  S2S_MATCH_TO_CLIENT_ACK = 11104,
  S2S_CANCEL_MATCH_TO_PROXY_REQ = 11107,
  S2S_CANCEL_MATCH_TO_SHARD_REQ = 11108,
  S2S_NOTICE_MATCH_ROOM_REQ = 11109,
  S2S_NOTICE_MATCH_ROOM_ACK = 11110,
  S2S_QUERY_MATCH_ROOM_REQ = 11111,
  S2S_QUERY_MATCH_ROOM_ACK = 11112,
  S2S_QUERY_BATTLE_ROOM_REQ = 11113,
  S2S_QUERY_BATTLE_ROOM_ACK = 11114,
  S2S_QUERY_ROOM_TO_MATCH_SHARD_REQ = 11115,
  S2S_QUERY_ROOM_TO_BATTLE_SHARD_REQ = 11116,
  S2S_CANCEL_MATCH_TO_BATTLE_SHARD_REQ = 11118,
  S2S_PLAYER_ONLINE_TO_BATTLE_SHARD_REQ = 11120,
  S2S_NOTICE_MATCH_STATE_REQ = 11121,
  S2S_RESET_MATCH_ROOM_REQ = 11122,
  S2S_REGISTER_BATTLE_SERVER_REQ = 11200,
  S2S_REGISTER_BATTLE_SERVER_ACK = 11201,
  S2S_DISCONNECT_SERVER_TO_BATTLE_SHARD_REQ = 11202,
  S2S_REGISTER_SERVER_TO_BATTLE_SHARD_REQ = 11203,
  S2S_CREATE_ROOM_TO_BATTLE_PROXY_REQ = 11204,
  S2S_CREATE_ROOM_TO_BATTLE_SHARD_REQ = 11205,
  S2S_CREATE_ROOM_TO_MATCH_SHARD_ACK = 11206,
  S2S_OPEN_BATTLE_ROOM_REQ = 11207,
  S2S_OPEN_BATTLE_ROOM_ACK = 11208,
  S2S_OPEN_ROOM_TO_BATTLE_SHARD_ACK = 11209,
  S2S_PLAYER_ENTER_BATTLE_ROOM_REQ = 11210,
  S2S_PLAYER_ENTER_BATTLE_ROOM_ACK = 11211,
  S2S_PLAYER_ENTER_ROOM_TO_BATTLE_SHARD_ACK = 11212,
  S2S_PLAYER_LEAVE_BATTLE_ROOM_REQ = 11213,
  S2S_PLAYER_LEAVE_ROOM_TO_MATCH_SHARD_REQ = 11214,
  S2S_TELL_BATTLE_ROOM_START_REQ = 11215,
  S2S_TELL_BATTLE_ROOM_START_ACK = 11216,
  S2S_TELL_ROOM_START_TO_MATCH_SHARD_REQ = 11217,
  S2S_OPEN_ROOM_TO_MATCH_SHARD_REQ = 11218,
  S2S_TELL_BATTLE_ROOM_FINISH_REQ = 11219,
  S2S_LEAVE_BATTLE_ROOM_TO_CLIENT_ACK = 11220,
  S2S_TELL_ROOM_START_TO_BATTLE_SHARD_REQ = 11221,
  S2S_TELL_ROOM_FINISH_TO_BATTLE_SAHRD_REQ = 11222,
  S2S_ADD_CAMP_TO_BATTLE_SHARD_REQ = 11223,
  S2S_ADD_CAMP_TO_MATCH_SHARD_ACK = 11224,
  S2S_REMOVE_CAMP_TO_BATTLE_SHARD_REQ = 11225,
  S2S_PLAYER_CANCEL_MATCH_REQ = 11226,
  S2S_PLAYER_LEAVE_BATTLE_ROOM_ACK = 11227,
  S2S_PLAYER_CANCEL_MATCH_ACK = 11228,
  S2S_TELL_BATTLE_ROOM_FINISH_ACK = 11229,
  S2S_PLAYER_LEAVE_ROOM_TO_BATTLE_SHARD_REQ = 11230,
  S2S_PLAYER_LOGIN_BATTLE_ROOM_REQ = 11231,
  S2S_PLAYER_LOGIN_BATTLE_ROOM_ACK = 11232,
  S2S_PLAYER_LOGIN_ROOM_TO_BATTLE_SHARD_REQ = 11233,
  S2S_TELL_ROOM_START_TO_BATTLE_SHARD_ACK = 11234,
  S2S_TELL_BATTLE_REGISTER_TO_SHARD_REQ = 11235,
  S2S_TELL_ROOM_CLOSE_TO_MATCH_SHARD_REQ = 11236,
  S2S_PLAYER_BATTLE_SCORE_REQ = 11237,
  S2S_PLAYER_BATTLE_SCORE_ACK = 11238,
  S2S_BATTLE_ROOM_SCORE_BALANCE_REQ = 11239,
  S2S_BATTLE_ROOM_SCORE_BALANCE_ACK = 11240,
  S2S_BATTLE_SCORE_BALANCE_TO_SHARD_REQ = 11241,
  S2S_ONLINE_QUERY_BATTLE_SCORE_REQ = 11242,
  S2S_OPEN_BATTLE_ROOM_TO_SHARD_ACK = 11243,
  S2S_RESET_BATTLE_ROOM_REQ = 11244,
  S2S_BATTLE_PING_REQ = 11245,
  S2S_BATTLE_PING_ACK = 11246,
  S2S_ALLOC_BATTLE_ID_REQ = 11247,
  S2S_ALLOC_BATTLE_ID_ACK = 11248,
  S2S_SET_PLAYER_NAME_REQ = 21124,
  S2S_SET_PLAYER_NAME_ACK = 21125,
  S2S_PLAYER_DISCONNECTION_REQ = 21126,
  S2S_CREATE_ROLE_REQ = 21150,
  S2S_CREATE_ROLE_ACK = 21151,
  S2S_CREATE_MATCH_GROUP_REQ = 21159,
  S2S_RECEIVE_INVITE_MATCH_GROUP_REQ = 21160,
  S2S_CONSENT_INVITE_MATCH_GROUP_REQ = 21161,
  S2S_ADD_MATCH_GROUP_MEMBER_REQ = 21162,
  S2S_REMOVE_MATCH_GROUP_MEMBER_ACK = 21163,
  S2S_LEAVE_MATCH_GROUP_REQ = 21164,
  S2S_KICK_MATCH_GROUP_REQ = 21165,
  S2S_APPLY_MATCH_GROUP_REQ = 21166,
  S2S_LEAVE_MATCH_GROUP_ACK = 21167,
  S2S_CONSENT_APPLY_MATCH_GROUP_ACK = 21168,
  S2S_ONLINE_QUERY_MATCH_GROUP_REQ = 21169,
  S2S_ADD_MATCH_GROUP_MEMBER_ACK = 21170,
  S2S_UPDATE_GROUP_MEMBER_ACK = 21171,
  S2S_UPDATE_GROUP_MEMBER_REQ = 21172,
  S2S_OFFLINE_UPDATE_MATCH_GROUP_REQ = 21173,
  S2S_CREATE_MATCH_GROUP_TO_SHARD_REQ = 21174,
  S2S_UPDATE_GUEST_LIST_REQ = 21175,
  S2S_QUERY_GUEST_REQ = 21176,
  S2S_QUERY_GUEST_ACK = 21177,
  S2S_UPDATE_GROUP_DATA_ACK = 21178,
  S2S_APPLY_MATCH_GROUP_ACK = 21179,
  S2S_QUERY_TOAST_COUNT_REQ = 21180,
  S2S_QUERY_TOAST_COUNT_ACK = 21181,
  S2S_UPDATE_GROUP_MATCH_REQ = 21182,
  S2S_QUERY_RANK_LIST_REQ = 21187,
  S2S_QUERY_FRIEND_RANK_LIST_REQ = 21188,
  S2S_TELL_MATCH_GROUP_DATA_ACK = 21192,
  S2S_UPDATE_RANK_DATA_REQ = 21193,
  S2S_ADD_RECENT_PLAYER_DATA_REQ = 21194,
  S2S_QUERY_RECENT_LIST_REQ = 21195,
  S2S_QUERY_RECENT_LIST_ACK = 21196,
  S2S_CREATE_GUILD_REQ = 21197,
  S2S_CREATE_GUILD_TO_SHARD_REQ = 21198,
  S2S_CREATE_GUILD_ACK = 21199,
  S2S_UPDATE_MEMBER_BASIC_DATA_REQ = 21200,
  S2S_INVITE_GUILD_REQ = 212011,
  S2S_INVITE_GUILD_ACK = 31202,
  S2S_APPLY_GUILD_REQ = 31203,
  S2S_APPLY_GUILD_ACK = 31204,
  S2S_PLAYER_GUILD_CHANGE_REQ = 31205,
  S2S_EXIT_GUILD_REQ = 31206,
  S2S_TRANSFER_MASTER_REQ = 31207,
  S2S_REVIEW_APPLY_REQ = 31208,
  S2S_DISSOLVE_GUILD_REQ = 31209,
  S2S_MODIFY_MEDAL_REQ = 31210,
  S2S_QUERY_GUILD_LIST_REQ = 31211,
  S2S_KICK_MEMBER_REQ = 31212,
  S2S_LOGIN_QUERY_GUILD_REQ = 31213,
  S2S_LOGIN_QUERY_GUILD_ACK = 31214,
  S2S_UPDATE_GUILD_DATA_REQ = 31215,
  S2S_UPGRADE_GUILD_REQ = 31216,
  S2S_UPGRADE_GUILD_ACK = 31217,
  S2S_APPOINT_GUILD_MEMBER_REQ = 31218,
  S2S_SEARCH_GUILD_BY_NAME_REQ = 31219,
  S2S_SET_GUILD_SWITCH_REQ = 31220,
  S2S_LOGIN_QUERY_GUILDID_REQ = 31221,
  S2S_LOGIN_QUERY_GUILDID_ACK = 31222,
  S2S_QUERY_GUILD_LOG_REQ = 31223,
  S2S_ADD_GUILD_ACTIVENESS_REQ = 31224,
  S2S_SEND_CHAT_TO_SERVER = 31301,
  ServerProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool ServerProtocol_IsValid(int value);
const ServerProtocol ServerProtocol_MIN = S2S_SERVER_PROTOCOL_UNKNOW;
const ServerProtocol ServerProtocol_MAX = S2S_INVITE_GUILD_REQ;
const int ServerProtocol_ARRAYSIZE = ServerProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* ServerProtocol_descriptor();
inline const ::std::string& ServerProtocol_Name(ServerProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerProtocol_descriptor(), value);
}
inline bool ServerProtocol_Parse(
    const ::std::string& name, ServerProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerProtocol>(
    ServerProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT S2STransmitMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitMessageReq) */ {
 public:
  S2STransmitMessageReq();
  virtual ~S2STransmitMessageReq();

  S2STransmitMessageReq(const S2STransmitMessageReq& from);

  inline S2STransmitMessageReq& operator=(const S2STransmitMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitMessageReq(S2STransmitMessageReq&& from) noexcept
    : S2STransmitMessageReq() {
    *this = ::std::move(from);
  }

  inline S2STransmitMessageReq& operator=(S2STransmitMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitMessageReq* internal_default_instance() {
    return reinterpret_cast<const S2STransmitMessageReq*>(
               &_S2STransmitMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(S2STransmitMessageReq* other);
  friend void swap(S2STransmitMessageReq& a, S2STransmitMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitMessageReq* New() const final {
    return CreateMaybeMessage<S2STransmitMessageReq>(NULL);
  }

  S2STransmitMessageReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitMessageReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitMessageReq& from);
  void MergeFrom(const S2STransmitMessageReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 3;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 3;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastMessageReq) */ {
 public:
  S2SBroadcastMessageReq();
  virtual ~S2SBroadcastMessageReq();

  S2SBroadcastMessageReq(const S2SBroadcastMessageReq& from);

  inline S2SBroadcastMessageReq& operator=(const S2SBroadcastMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastMessageReq(S2SBroadcastMessageReq&& from) noexcept
    : S2SBroadcastMessageReq() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastMessageReq& operator=(S2SBroadcastMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastMessageReq* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastMessageReq*>(
               &_S2SBroadcastMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(S2SBroadcastMessageReq* other);
  friend void swap(S2SBroadcastMessageReq& a, S2SBroadcastMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastMessageReq* New() const final {
    return CreateMaybeMessage<S2SBroadcastMessageReq>(NULL);
  }

  S2SBroadcastMessageReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastMessageReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastMessageReq& from);
  void MergeFrom(const S2SBroadcastMessageReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToWord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToWord) */ {
 public:
  S2SBroadcastToWord();
  virtual ~S2SBroadcastToWord();

  S2SBroadcastToWord(const S2SBroadcastToWord& from);

  inline S2SBroadcastToWord& operator=(const S2SBroadcastToWord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToWord(S2SBroadcastToWord&& from) noexcept
    : S2SBroadcastToWord() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToWord& operator=(S2SBroadcastToWord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToWord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToWord* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToWord*>(
               &_S2SBroadcastToWord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(S2SBroadcastToWord* other);
  friend void swap(S2SBroadcastToWord& a, S2SBroadcastToWord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToWord* New() const final {
    return CreateMaybeMessage<S2SBroadcastToWord>(NULL);
  }

  S2SBroadcastToWord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToWord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToWord& from);
  void MergeFrom(const S2SBroadcastToWord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToWord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToWord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGame) */ {
 public:
  S2SBroadcastToGame();
  virtual ~S2SBroadcastToGame();

  S2SBroadcastToGame(const S2SBroadcastToGame& from);

  inline S2SBroadcastToGame& operator=(const S2SBroadcastToGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGame(S2SBroadcastToGame&& from) noexcept
    : S2SBroadcastToGame() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGame& operator=(S2SBroadcastToGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGame* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGame*>(
               &_S2SBroadcastToGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(S2SBroadcastToGame* other);
  friend void swap(S2SBroadcastToGame& a, S2SBroadcastToGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGame* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGame>(NULL);
  }

  S2SBroadcastToGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGame& from);
  void MergeFrom(const S2SBroadcastToGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGate) */ {
 public:
  S2SBroadcastToGate();
  virtual ~S2SBroadcastToGate();

  S2SBroadcastToGate(const S2SBroadcastToGate& from);

  inline S2SBroadcastToGate& operator=(const S2SBroadcastToGate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGate(S2SBroadcastToGate&& from) noexcept
    : S2SBroadcastToGate() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGate& operator=(S2SBroadcastToGate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGate* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGate*>(
               &_S2SBroadcastToGate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(S2SBroadcastToGate* other);
  friend void swap(S2SBroadcastToGate& a, S2SBroadcastToGate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGate* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGate>(NULL);
  }

  S2SBroadcastToGate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGate& from);
  void MergeFrom(const S2SBroadcastToGate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitToPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitToPlayer) */ {
 public:
  S2STransmitToPlayer();
  virtual ~S2STransmitToPlayer();

  S2STransmitToPlayer(const S2STransmitToPlayer& from);

  inline S2STransmitToPlayer& operator=(const S2STransmitToPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitToPlayer(S2STransmitToPlayer&& from) noexcept
    : S2STransmitToPlayer() {
    *this = ::std::move(from);
  }

  inline S2STransmitToPlayer& operator=(S2STransmitToPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitToPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitToPlayer* internal_default_instance() {
    return reinterpret_cast<const S2STransmitToPlayer*>(
               &_S2STransmitToPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(S2STransmitToPlayer* other);
  friend void swap(S2STransmitToPlayer& a, S2STransmitToPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitToPlayer* New() const final {
    return CreateMaybeMessage<S2STransmitToPlayer>(NULL);
  }

  S2STransmitToPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitToPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitToPlayer& from);
  void MergeFrom(const S2STransmitToPlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitToPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 3;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 3;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitToPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitToServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitToServer) */ {
 public:
  S2STransmitToServer();
  virtual ~S2STransmitToServer();

  S2STransmitToServer(const S2STransmitToServer& from);

  inline S2STransmitToServer& operator=(const S2STransmitToServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitToServer(S2STransmitToServer&& from) noexcept
    : S2STransmitToServer() {
    *this = ::std::move(from);
  }

  inline S2STransmitToServer& operator=(S2STransmitToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitToServer* internal_default_instance() {
    return reinterpret_cast<const S2STransmitToServer*>(
               &_S2STransmitToServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(S2STransmitToServer* other);
  friend void swap(S2STransmitToServer& a, S2STransmitToServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitToServer* New() const final {
    return CreateMaybeMessage<S2STransmitToServer>(NULL);
  }

  S2STransmitToServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitToServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitToServer& from);
  void MergeFrom(const S2STransmitToServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 3;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 3;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitToServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse();
  S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse*>(&_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateDataToPublicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateDataToPublicReq) */ {
 public:
  S2SUpdateDataToPublicReq();
  virtual ~S2SUpdateDataToPublicReq();

  S2SUpdateDataToPublicReq(const S2SUpdateDataToPublicReq& from);

  inline S2SUpdateDataToPublicReq& operator=(const S2SUpdateDataToPublicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateDataToPublicReq(S2SUpdateDataToPublicReq&& from) noexcept
    : S2SUpdateDataToPublicReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateDataToPublicReq& operator=(S2SUpdateDataToPublicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateDataToPublicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateDataToPublicReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateDataToPublicReq*>(
               &_S2SUpdateDataToPublicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(S2SUpdateDataToPublicReq* other);
  friend void swap(S2SUpdateDataToPublicReq& a, S2SUpdateDataToPublicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateDataToPublicReq* New() const final {
    return CreateMaybeMessage<S2SUpdateDataToPublicReq>(NULL);
  }

  S2SUpdateDataToPublicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateDataToPublicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateDataToPublicReq& from);
  void MergeFrom(const S2SUpdateDataToPublicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateDataToPublicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 1;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateDataToPublicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryBasicToPublicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryBasicToPublicReq) */ {
 public:
  S2SQueryBasicToPublicReq();
  virtual ~S2SQueryBasicToPublicReq();

  S2SQueryBasicToPublicReq(const S2SQueryBasicToPublicReq& from);

  inline S2SQueryBasicToPublicReq& operator=(const S2SQueryBasicToPublicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryBasicToPublicReq(S2SQueryBasicToPublicReq&& from) noexcept
    : S2SQueryBasicToPublicReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryBasicToPublicReq& operator=(S2SQueryBasicToPublicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryBasicToPublicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryBasicToPublicReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryBasicToPublicReq*>(
               &_S2SQueryBasicToPublicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(S2SQueryBasicToPublicReq* other);
  friend void swap(S2SQueryBasicToPublicReq& a, S2SQueryBasicToPublicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryBasicToPublicReq* New() const final {
    return CreateMaybeMessage<S2SQueryBasicToPublicReq>(NULL);
  }

  S2SQueryBasicToPublicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryBasicToPublicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryBasicToPublicReq& from);
  void MergeFrom(const S2SQueryBasicToPublicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryBasicToPublicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryBasicToPublicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SQueryBasicToGameAck_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SQueryBasicToGameAck_PbdataEntry_DoNotUse();
  S2SQueryBasicToGameAck_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SQueryBasicToGameAck_PbdataEntry_DoNotUse& other);
  static const S2SQueryBasicToGameAck_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SQueryBasicToGameAck_PbdataEntry_DoNotUse*>(&_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryBasicToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryBasicToGameAck) */ {
 public:
  S2SQueryBasicToGameAck();
  virtual ~S2SQueryBasicToGameAck();

  S2SQueryBasicToGameAck(const S2SQueryBasicToGameAck& from);

  inline S2SQueryBasicToGameAck& operator=(const S2SQueryBasicToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryBasicToGameAck(S2SQueryBasicToGameAck&& from) noexcept
    : S2SQueryBasicToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryBasicToGameAck& operator=(S2SQueryBasicToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryBasicToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryBasicToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryBasicToGameAck*>(
               &_S2SQueryBasicToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(S2SQueryBasicToGameAck* other);
  friend void swap(S2SQueryBasicToGameAck& a, S2SQueryBasicToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryBasicToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryBasicToGameAck>(NULL);
  }

  S2SQueryBasicToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryBasicToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryBasicToGameAck& from);
  void MergeFrom(const S2SQueryBasicToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryBasicToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryBasicToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SQueryBasicToGameAck_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickGamePlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickGamePlayerReq) */ {
 public:
  S2SKickGamePlayerReq();
  virtual ~S2SKickGamePlayerReq();

  S2SKickGamePlayerReq(const S2SKickGamePlayerReq& from);

  inline S2SKickGamePlayerReq& operator=(const S2SKickGamePlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickGamePlayerReq(S2SKickGamePlayerReq&& from) noexcept
    : S2SKickGamePlayerReq() {
    *this = ::std::move(from);
  }

  inline S2SKickGamePlayerReq& operator=(S2SKickGamePlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickGamePlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickGamePlayerReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickGamePlayerReq*>(
               &_S2SKickGamePlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(S2SKickGamePlayerReq* other);
  friend void swap(S2SKickGamePlayerReq& a, S2SKickGamePlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickGamePlayerReq* New() const final {
    return CreateMaybeMessage<S2SKickGamePlayerReq>(NULL);
  }

  S2SKickGamePlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickGamePlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickGamePlayerReq& from);
  void MergeFrom(const S2SKickGamePlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickGamePlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickGamePlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickGatePlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickGatePlayerReq) */ {
 public:
  S2SKickGatePlayerReq();
  virtual ~S2SKickGatePlayerReq();

  S2SKickGatePlayerReq(const S2SKickGatePlayerReq& from);

  inline S2SKickGatePlayerReq& operator=(const S2SKickGatePlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickGatePlayerReq(S2SKickGatePlayerReq&& from) noexcept
    : S2SKickGatePlayerReq() {
    *this = ::std::move(from);
  }

  inline S2SKickGatePlayerReq& operator=(S2SKickGatePlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickGatePlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickGatePlayerReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickGatePlayerReq*>(
               &_S2SKickGatePlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(S2SKickGatePlayerReq* other);
  friend void swap(S2SKickGatePlayerReq& a, S2SKickGatePlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickGatePlayerReq* New() const final {
    return CreateMaybeMessage<S2SKickGatePlayerReq>(NULL);
  }

  S2SKickGatePlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickGatePlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickGatePlayerReq& from);
  void MergeFrom(const S2SKickGatePlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickGatePlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickGatePlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginLoginVerifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginLoginVerifyReq) */ {
 public:
  S2SLoginLoginVerifyReq();
  virtual ~S2SLoginLoginVerifyReq();

  S2SLoginLoginVerifyReq(const S2SLoginLoginVerifyReq& from);

  inline S2SLoginLoginVerifyReq& operator=(const S2SLoginLoginVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginLoginVerifyReq(S2SLoginLoginVerifyReq&& from) noexcept
    : S2SLoginLoginVerifyReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginLoginVerifyReq& operator=(S2SLoginLoginVerifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginLoginVerifyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginLoginVerifyReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginLoginVerifyReq*>(
               &_S2SLoginLoginVerifyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(S2SLoginLoginVerifyReq* other);
  friend void swap(S2SLoginLoginVerifyReq& a, S2SLoginLoginVerifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginLoginVerifyReq* New() const final {
    return CreateMaybeMessage<S2SLoginLoginVerifyReq>(NULL);
  }

  S2SLoginLoginVerifyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginLoginVerifyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginLoginVerifyReq& from);
  void MergeFrom(const S2SLoginLoginVerifyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginLoginVerifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 accountid = 1;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 4;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginLoginVerifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginLoginVerifyAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginLoginVerifyAck) */ {
 public:
  S2SLoginLoginVerifyAck();
  virtual ~S2SLoginLoginVerifyAck();

  S2SLoginLoginVerifyAck(const S2SLoginLoginVerifyAck& from);

  inline S2SLoginLoginVerifyAck& operator=(const S2SLoginLoginVerifyAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginLoginVerifyAck(S2SLoginLoginVerifyAck&& from) noexcept
    : S2SLoginLoginVerifyAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginLoginVerifyAck& operator=(S2SLoginLoginVerifyAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginLoginVerifyAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginLoginVerifyAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginLoginVerifyAck*>(
               &_S2SLoginLoginVerifyAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(S2SLoginLoginVerifyAck* other);
  friend void swap(S2SLoginLoginVerifyAck& a, S2SLoginLoginVerifyAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginLoginVerifyAck* New() const final {
    return CreateMaybeMessage<S2SLoginLoginVerifyAck>(NULL);
  }

  S2SLoginLoginVerifyAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginLoginVerifyAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginLoginVerifyAck& from);
  void MergeFrom(const S2SLoginLoginVerifyAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginLoginVerifyAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 bantime = 4;
  void clear_bantime();
  static const int kBantimeFieldNumber = 4;
  ::google::protobuf::uint64 bantime() const;
  void set_bantime(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginLoginVerifyAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 bantime_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLoginData_ChanneldataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBLoginData_ChanneldataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBLoginData_ChanneldataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBLoginData_ChanneldataEntry_DoNotUse();
  PBLoginData_ChanneldataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBLoginData_ChanneldataEntry_DoNotUse& other);
  static const PBLoginData_ChanneldataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBLoginData_ChanneldataEntry_DoNotUse*>(&_PBLoginData_ChanneldataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBLoginData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBLoginData) */ {
 public:
  PBLoginData();
  virtual ~PBLoginData();

  PBLoginData(const PBLoginData& from);

  inline PBLoginData& operator=(const PBLoginData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBLoginData(PBLoginData&& from) noexcept
    : PBLoginData() {
    *this = ::std::move(from);
  }

  inline PBLoginData& operator=(PBLoginData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLoginData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBLoginData* internal_default_instance() {
    return reinterpret_cast<const PBLoginData*>(
               &_PBLoginData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(PBLoginData* other);
  friend void swap(PBLoginData& a, PBLoginData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBLoginData* New() const final {
    return CreateMaybeMessage<PBLoginData>(NULL);
  }

  PBLoginData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBLoginData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBLoginData& from);
  void MergeFrom(const PBLoginData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLoginData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> channeldata = 8;
  int channeldata_size() const;
  void clear_channeldata();
  static const int kChanneldataFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      channeldata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_channeldata();

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes account = 5;
  void clear_account();
  static const int kAccountFieldNumber = 5;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // uint64 gateid = 2;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::uint64 gateid() const;
  void set_gateid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 accountid = 6;
  void clear_accountid();
  static const int kAccountidFieldNumber = 6;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 playerid = 7;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 7;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 channel = 4;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBLoginData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBLoginData_ChanneldataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > channeldata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::uint64 gateid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginWorldVerifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginWorldVerifyReq) */ {
 public:
  S2SLoginWorldVerifyReq();
  virtual ~S2SLoginWorldVerifyReq();

  S2SLoginWorldVerifyReq(const S2SLoginWorldVerifyReq& from);

  inline S2SLoginWorldVerifyReq& operator=(const S2SLoginWorldVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginWorldVerifyReq(S2SLoginWorldVerifyReq&& from) noexcept
    : S2SLoginWorldVerifyReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginWorldVerifyReq& operator=(S2SLoginWorldVerifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginWorldVerifyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginWorldVerifyReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginWorldVerifyReq*>(
               &_S2SLoginWorldVerifyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(S2SLoginWorldVerifyReq* other);
  friend void swap(S2SLoginWorldVerifyReq& a, S2SLoginWorldVerifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginWorldVerifyReq* New() const final {
    return CreateMaybeMessage<S2SLoginWorldVerifyReq>(NULL);
  }

  S2SLoginWorldVerifyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginWorldVerifyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginWorldVerifyReq& from);
  void MergeFrom(const S2SLoginWorldVerifyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginWorldVerifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginWorldVerifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginFailedToLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginFailedToLoginAck) */ {
 public:
  S2SLoginFailedToLoginAck();
  virtual ~S2SLoginFailedToLoginAck();

  S2SLoginFailedToLoginAck(const S2SLoginFailedToLoginAck& from);

  inline S2SLoginFailedToLoginAck& operator=(const S2SLoginFailedToLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginFailedToLoginAck(S2SLoginFailedToLoginAck&& from) noexcept
    : S2SLoginFailedToLoginAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginFailedToLoginAck& operator=(S2SLoginFailedToLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginFailedToLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginFailedToLoginAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginFailedToLoginAck*>(
               &_S2SLoginFailedToLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(S2SLoginFailedToLoginAck* other);
  friend void swap(S2SLoginFailedToLoginAck& a, S2SLoginFailedToLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginFailedToLoginAck* New() const final {
    return CreateMaybeMessage<S2SLoginFailedToLoginAck>(NULL);
  }

  S2SLoginFailedToLoginAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginFailedToLoginAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginFailedToLoginAck& from);
  void MergeFrom(const S2SLoginFailedToLoginAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginFailedToLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gateid = 1;
  void clear_gateid();
  static const int kGateidFieldNumber = 1;
  ::google::protobuf::uint64 gateid() const;
  void set_gateid(::google::protobuf::uint64 value);

  // uint64 accountid = 3;
  void clear_accountid();
  static const int kAccountidFieldNumber = 3;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 4;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginFailedToLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gateid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginTellTokenToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginTellTokenToGameReq) */ {
 public:
  S2SLoginTellTokenToGameReq();
  virtual ~S2SLoginTellTokenToGameReq();

  S2SLoginTellTokenToGameReq(const S2SLoginTellTokenToGameReq& from);

  inline S2SLoginTellTokenToGameReq& operator=(const S2SLoginTellTokenToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginTellTokenToGameReq(S2SLoginTellTokenToGameReq&& from) noexcept
    : S2SLoginTellTokenToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginTellTokenToGameReq& operator=(S2SLoginTellTokenToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginTellTokenToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginTellTokenToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginTellTokenToGameReq*>(
               &_S2SLoginTellTokenToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(S2SLoginTellTokenToGameReq* other);
  friend void swap(S2SLoginTellTokenToGameReq& a, S2SLoginTellTokenToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginTellTokenToGameReq* New() const final {
    return CreateMaybeMessage<S2SLoginTellTokenToGameReq>(NULL);
  }

  S2SLoginTellTokenToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginTellTokenToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginTellTokenToGameReq& from);
  void MergeFrom(const S2SLoginTellTokenToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginTellTokenToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginTellTokenToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginGameAck) */ {
 public:
  S2SLoginGameAck();
  virtual ~S2SLoginGameAck();

  S2SLoginGameAck(const S2SLoginGameAck& from);

  inline S2SLoginGameAck& operator=(const S2SLoginGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginGameAck(S2SLoginGameAck&& from) noexcept
    : S2SLoginGameAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginGameAck& operator=(S2SLoginGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginGameAck*>(
               &_S2SLoginGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(S2SLoginGameAck* other);
  friend void swap(S2SLoginGameAck& a, S2SLoginGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginGameAck* New() const final {
    return CreateMaybeMessage<S2SLoginGameAck>(NULL);
  }

  S2SLoginGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginGameAck& from);
  void MergeFrom(const S2SLoginGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // .KFMsg.PBObject playerdata = 4;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 4;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 servertime = 3;
  void clear_servertime();
  static const int kServertimeFieldNumber = 3;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // uint32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 servertime_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginLoadPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginLoadPlayerReq) */ {
 public:
  S2SLoginLoadPlayerReq();
  virtual ~S2SLoginLoadPlayerReq();

  S2SLoginLoadPlayerReq(const S2SLoginLoadPlayerReq& from);

  inline S2SLoginLoadPlayerReq& operator=(const S2SLoginLoadPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginLoadPlayerReq(S2SLoginLoadPlayerReq&& from) noexcept
    : S2SLoginLoadPlayerReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginLoadPlayerReq& operator=(S2SLoginLoadPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginLoadPlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginLoadPlayerReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginLoadPlayerReq*>(
               &_S2SLoginLoadPlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(S2SLoginLoadPlayerReq* other);
  friend void swap(S2SLoginLoadPlayerReq& a, S2SLoginLoadPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginLoadPlayerReq* New() const final {
    return CreateMaybeMessage<S2SLoginLoadPlayerReq>(NULL);
  }

  S2SLoginLoadPlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginLoadPlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginLoadPlayerReq& from);
  void MergeFrom(const S2SLoginLoadPlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginLoadPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginLoadPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginLoadPlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginLoadPlayerAck) */ {
 public:
  S2SLoginLoadPlayerAck();
  virtual ~S2SLoginLoadPlayerAck();

  S2SLoginLoadPlayerAck(const S2SLoginLoadPlayerAck& from);

  inline S2SLoginLoadPlayerAck& operator=(const S2SLoginLoadPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginLoadPlayerAck(S2SLoginLoadPlayerAck&& from) noexcept
    : S2SLoginLoadPlayerAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginLoadPlayerAck& operator=(S2SLoginLoadPlayerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginLoadPlayerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginLoadPlayerAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginLoadPlayerAck*>(
               &_S2SLoginLoadPlayerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(S2SLoginLoadPlayerAck* other);
  friend void swap(S2SLoginLoadPlayerAck& a, S2SLoginLoadPlayerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginLoadPlayerAck* New() const final {
    return CreateMaybeMessage<S2SLoginLoadPlayerAck>(NULL);
  }

  S2SLoginLoadPlayerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginLoadPlayerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginLoadPlayerAck& from);
  void MergeFrom(const S2SLoginLoadPlayerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginLoadPlayerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 2;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 2;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // .KFMsg.PBObject playerdata = 3;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 3;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginLoadPlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSavePlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSavePlayerReq) */ {
 public:
  S2SSavePlayerReq();
  virtual ~S2SSavePlayerReq();

  S2SSavePlayerReq(const S2SSavePlayerReq& from);

  inline S2SSavePlayerReq& operator=(const S2SSavePlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSavePlayerReq(S2SSavePlayerReq&& from) noexcept
    : S2SSavePlayerReq() {
    *this = ::std::move(from);
  }

  inline S2SSavePlayerReq& operator=(S2SSavePlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSavePlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSavePlayerReq* internal_default_instance() {
    return reinterpret_cast<const S2SSavePlayerReq*>(
               &_S2SSavePlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(S2SSavePlayerReq* other);
  friend void swap(S2SSavePlayerReq& a, S2SSavePlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSavePlayerReq* New() const final {
    return CreateMaybeMessage<S2SSavePlayerReq>(NULL);
  }

  S2SSavePlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSavePlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSavePlayerReq& from);
  void MergeFrom(const S2SSavePlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSavePlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  private:
  const ::KFMsg::PBObject& _internal_data() const;
  public:
  const ::KFMsg::PBObject& data() const;
  ::KFMsg::PBObject* release_data();
  ::KFMsg::PBObject* mutable_data();
  void set_allocated_data(::KFMsg::PBObject* data);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSavePlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* data_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginOutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginOutReq) */ {
 public:
  S2SLoginOutReq();
  virtual ~S2SLoginOutReq();

  S2SLoginOutReq(const S2SLoginOutReq& from);

  inline S2SLoginOutReq& operator=(const S2SLoginOutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginOutReq(S2SLoginOutReq&& from) noexcept
    : S2SLoginOutReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginOutReq& operator=(S2SLoginOutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginOutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginOutReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginOutReq*>(
               &_S2SLoginOutReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(S2SLoginOutReq* other);
  friend void swap(S2SLoginOutReq& a, S2SLoginOutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginOutReq* New() const final {
    return CreateMaybeMessage<S2SLoginOutReq>(NULL);
  }

  S2SLoginOutReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginOutReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginOutReq& from);
  void MergeFrom(const S2SLoginOutReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginOutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginOutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerDisconnectionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerDisconnectionReq) */ {
 public:
  S2SPlayerDisconnectionReq();
  virtual ~S2SPlayerDisconnectionReq();

  S2SPlayerDisconnectionReq(const S2SPlayerDisconnectionReq& from);

  inline S2SPlayerDisconnectionReq& operator=(const S2SPlayerDisconnectionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerDisconnectionReq(S2SPlayerDisconnectionReq&& from) noexcept
    : S2SPlayerDisconnectionReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerDisconnectionReq& operator=(S2SPlayerDisconnectionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerDisconnectionReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerDisconnectionReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerDisconnectionReq*>(
               &_S2SPlayerDisconnectionReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(S2SPlayerDisconnectionReq* other);
  friend void swap(S2SPlayerDisconnectionReq& a, S2SPlayerDisconnectionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerDisconnectionReq* New() const final {
    return CreateMaybeMessage<S2SPlayerDisconnectionReq>(NULL);
  }

  S2SPlayerDisconnectionReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerDisconnectionReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerDisconnectionReq& from);
  void MergeFrom(const S2SPlayerDisconnectionReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerDisconnectionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerDisconnectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryPlayerReq) */ {
 public:
  S2SQueryPlayerReq();
  virtual ~S2SQueryPlayerReq();

  S2SQueryPlayerReq(const S2SQueryPlayerReq& from);

  inline S2SQueryPlayerReq& operator=(const S2SQueryPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryPlayerReq(S2SQueryPlayerReq&& from) noexcept
    : S2SQueryPlayerReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryPlayerReq& operator=(S2SQueryPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryPlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryPlayerReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryPlayerReq*>(
               &_S2SQueryPlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(S2SQueryPlayerReq* other);
  friend void swap(S2SQueryPlayerReq& a, S2SQueryPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryPlayerReq* New() const final {
    return CreateMaybeMessage<S2SQueryPlayerReq>(NULL);
  }

  S2SQueryPlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryPlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryPlayerReq& from);
  void MergeFrom(const S2SQueryPlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryPlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryPlayerAck) */ {
 public:
  S2SQueryPlayerAck();
  virtual ~S2SQueryPlayerAck();

  S2SQueryPlayerAck(const S2SQueryPlayerAck& from);

  inline S2SQueryPlayerAck& operator=(const S2SQueryPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryPlayerAck(S2SQueryPlayerAck&& from) noexcept
    : S2SQueryPlayerAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryPlayerAck& operator=(S2SQueryPlayerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryPlayerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryPlayerAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryPlayerAck*>(
               &_S2SQueryPlayerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(S2SQueryPlayerAck* other);
  friend void swap(S2SQueryPlayerAck& a, S2SQueryPlayerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryPlayerAck* New() const final {
    return CreateMaybeMessage<S2SQueryPlayerAck>(NULL);
  }

  S2SQueryPlayerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryPlayerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryPlayerAck& from);
  void MergeFrom(const S2SQueryPlayerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryPlayerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryPlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSetPlayerNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSetPlayerNameReq) */ {
 public:
  S2SSetPlayerNameReq();
  virtual ~S2SSetPlayerNameReq();

  S2SSetPlayerNameReq(const S2SSetPlayerNameReq& from);

  inline S2SSetPlayerNameReq& operator=(const S2SSetPlayerNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSetPlayerNameReq(S2SSetPlayerNameReq&& from) noexcept
    : S2SSetPlayerNameReq() {
    *this = ::std::move(from);
  }

  inline S2SSetPlayerNameReq& operator=(S2SSetPlayerNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSetPlayerNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSetPlayerNameReq* internal_default_instance() {
    return reinterpret_cast<const S2SSetPlayerNameReq*>(
               &_S2SSetPlayerNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(S2SSetPlayerNameReq* other);
  friend void swap(S2SSetPlayerNameReq& a, S2SSetPlayerNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSetPlayerNameReq* New() const final {
    return CreateMaybeMessage<S2SSetPlayerNameReq>(NULL);
  }

  S2SSetPlayerNameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSetPlayerNameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSetPlayerNameReq& from);
  void MergeFrom(const S2SSetPlayerNameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSetPlayerNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes oldname = 2;
  void clear_oldname();
  static const int kOldnameFieldNumber = 2;
  const ::std::string& oldname() const;
  void set_oldname(const ::std::string& value);
  #if LANG_CXX11
  void set_oldname(::std::string&& value);
  #endif
  void set_oldname(const char* value);
  void set_oldname(const void* value, size_t size);
  ::std::string* mutable_oldname();
  ::std::string* release_oldname();
  void set_allocated_oldname(::std::string* oldname);

  // bytes newname = 3;
  void clear_newname();
  static const int kNewnameFieldNumber = 3;
  const ::std::string& newname() const;
  void set_newname(const ::std::string& value);
  #if LANG_CXX11
  void set_newname(::std::string&& value);
  #endif
  void set_newname(const char* value);
  void set_newname(const void* value, size_t size);
  ::std::string* mutable_newname();
  ::std::string* release_newname();
  void set_allocated_newname(::std::string* newname);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 itemguid = 4;
  void clear_itemguid();
  static const int kItemguidFieldNumber = 4;
  ::google::protobuf::uint64 itemguid() const;
  void set_itemguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSetPlayerNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oldname_;
  ::google::protobuf::internal::ArenaStringPtr newname_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 itemguid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSetPlayerNameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSetPlayerNameAck) */ {
 public:
  S2SSetPlayerNameAck();
  virtual ~S2SSetPlayerNameAck();

  S2SSetPlayerNameAck(const S2SSetPlayerNameAck& from);

  inline S2SSetPlayerNameAck& operator=(const S2SSetPlayerNameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSetPlayerNameAck(S2SSetPlayerNameAck&& from) noexcept
    : S2SSetPlayerNameAck() {
    *this = ::std::move(from);
  }

  inline S2SSetPlayerNameAck& operator=(S2SSetPlayerNameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSetPlayerNameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSetPlayerNameAck* internal_default_instance() {
    return reinterpret_cast<const S2SSetPlayerNameAck*>(
               &_S2SSetPlayerNameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(S2SSetPlayerNameAck* other);
  friend void swap(S2SSetPlayerNameAck& a, S2SSetPlayerNameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSetPlayerNameAck* New() const final {
    return CreateMaybeMessage<S2SSetPlayerNameAck>(NULL);
  }

  S2SSetPlayerNameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSetPlayerNameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSetPlayerNameAck& from);
  void MergeFrom(const S2SSetPlayerNameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSetPlayerNameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 itemguid = 4;
  void clear_itemguid();
  static const int kItemguidFieldNumber = 4;
  ::google::protobuf::uint64 itemguid() const;
  void set_itemguid(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSetPlayerNameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 itemguid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerEnterWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerEnterWorldReq) */ {
 public:
  S2SPlayerEnterWorldReq();
  virtual ~S2SPlayerEnterWorldReq();

  S2SPlayerEnterWorldReq(const S2SPlayerEnterWorldReq& from);

  inline S2SPlayerEnterWorldReq& operator=(const S2SPlayerEnterWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerEnterWorldReq(S2SPlayerEnterWorldReq&& from) noexcept
    : S2SPlayerEnterWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerEnterWorldReq& operator=(S2SPlayerEnterWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerEnterWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerEnterWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerEnterWorldReq*>(
               &_S2SPlayerEnterWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(S2SPlayerEnterWorldReq* other);
  friend void swap(S2SPlayerEnterWorldReq& a, S2SPlayerEnterWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerEnterWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerEnterWorldReq>(NULL);
  }

  S2SPlayerEnterWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerEnterWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerEnterWorldReq& from);
  void MergeFrom(const S2SPlayerEnterWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerEnterWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerEnterWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveWorldReq) */ {
 public:
  S2SPlayerLeaveWorldReq();
  virtual ~S2SPlayerLeaveWorldReq();

  S2SPlayerLeaveWorldReq(const S2SPlayerLeaveWorldReq& from);

  inline S2SPlayerLeaveWorldReq& operator=(const S2SPlayerLeaveWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveWorldReq(S2SPlayerLeaveWorldReq&& from) noexcept
    : S2SPlayerLeaveWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveWorldReq& operator=(S2SPlayerLeaveWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveWorldReq*>(
               &_S2SPlayerLeaveWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(S2SPlayerLeaveWorldReq* other);
  friend void swap(S2SPlayerLeaveWorldReq& a, S2SPlayerLeaveWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveWorldReq>(NULL);
  }

  S2SPlayerLeaveWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveWorldReq& from);
  void MergeFrom(const S2SPlayerLeaveWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SGameSyncOnlineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SGameSyncOnlineReq) */ {
 public:
  S2SGameSyncOnlineReq();
  virtual ~S2SGameSyncOnlineReq();

  S2SGameSyncOnlineReq(const S2SGameSyncOnlineReq& from);

  inline S2SGameSyncOnlineReq& operator=(const S2SGameSyncOnlineReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SGameSyncOnlineReq(S2SGameSyncOnlineReq&& from) noexcept
    : S2SGameSyncOnlineReq() {
    *this = ::std::move(from);
  }

  inline S2SGameSyncOnlineReq& operator=(S2SGameSyncOnlineReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SGameSyncOnlineReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SGameSyncOnlineReq* internal_default_instance() {
    return reinterpret_cast<const S2SGameSyncOnlineReq*>(
               &_S2SGameSyncOnlineReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(S2SGameSyncOnlineReq* other);
  friend void swap(S2SGameSyncOnlineReq& a, S2SGameSyncOnlineReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SGameSyncOnlineReq* New() const final {
    return CreateMaybeMessage<S2SGameSyncOnlineReq>(NULL);
  }

  S2SGameSyncOnlineReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SGameSyncOnlineReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SGameSyncOnlineReq& from);
  void MergeFrom(const S2SGameSyncOnlineReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SGameSyncOnlineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 playerid = 1;
  int playerid_size() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid(int index) const;
  void set_playerid(int index, ::google::protobuf::uint64 value);
  void add_playerid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      playerid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_playerid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SGameSyncOnlineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > playerid_;
  mutable int _playerid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMail_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBMail_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBMail_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBMail_DataEntry_DoNotUse();
  PBMail_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBMail_DataEntry_DoNotUse& other);
  static const PBMail_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBMail_DataEntry_DoNotUse*>(&_PBMail_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBMail) */ {
 public:
  PBMail();
  virtual ~PBMail();

  PBMail(const PBMail& from);

  inline PBMail& operator=(const PBMail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMail(PBMail&& from) noexcept
    : PBMail() {
    *this = ::std::move(from);
  }

  inline PBMail& operator=(PBMail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMail* internal_default_instance() {
    return reinterpret_cast<const PBMail*>(
               &_PBMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(PBMail* other);
  friend void swap(PBMail& a, PBMail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMail* New() const final {
    return CreateMaybeMessage<PBMail>(NULL);
  }

  PBMail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMail& from);
  void MergeFrom(const PBMail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:KFMsg.PBMail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBMail_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryMailReq) */ {
 public:
  S2SQueryMailReq();
  virtual ~S2SQueryMailReq();

  S2SQueryMailReq(const S2SQueryMailReq& from);

  inline S2SQueryMailReq& operator=(const S2SQueryMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryMailReq(S2SQueryMailReq&& from) noexcept
    : S2SQueryMailReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryMailReq& operator=(S2SQueryMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryMailReq*>(
               &_S2SQueryMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(S2SQueryMailReq* other);
  friend void swap(S2SQueryMailReq& a, S2SQueryMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryMailReq* New() const final {
    return CreateMaybeMessage<S2SQueryMailReq>(NULL);
  }

  S2SQueryMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryMailReq& from);
  void MergeFrom(const S2SQueryMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 maxid = 3;
  void clear_maxid();
  static const int kMaxidFieldNumber = 3;
  ::google::protobuf::uint64 maxid() const;
  void set_maxid(::google::protobuf::uint64 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 maxid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryMailAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryMailAck) */ {
 public:
  S2SQueryMailAck();
  virtual ~S2SQueryMailAck();

  S2SQueryMailAck(const S2SQueryMailAck& from);

  inline S2SQueryMailAck& operator=(const S2SQueryMailAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryMailAck(S2SQueryMailAck&& from) noexcept
    : S2SQueryMailAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryMailAck& operator=(S2SQueryMailAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryMailAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryMailAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryMailAck*>(
               &_S2SQueryMailAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(S2SQueryMailAck* other);
  friend void swap(S2SQueryMailAck& a, S2SQueryMailAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryMailAck* New() const final {
    return CreateMaybeMessage<S2SQueryMailAck>(NULL);
  }

  S2SQueryMailAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryMailAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryMailAck& from);
  void MergeFrom(const S2SQueryMailAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryMailAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBMail mail = 2;
  int mail_size() const;
  void clear_mail();
  static const int kMailFieldNumber = 2;
  ::KFMsg::PBMail* mutable_mail(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >*
      mutable_mail();
  const ::KFMsg::PBMail& mail(int index) const;
  ::KFMsg::PBMail* add_mail();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >&
      mail() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryMailAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail > mail_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddMailReq) */ {
 public:
  S2SAddMailReq();
  virtual ~S2SAddMailReq();

  S2SAddMailReq(const S2SAddMailReq& from);

  inline S2SAddMailReq& operator=(const S2SAddMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddMailReq(S2SAddMailReq&& from) noexcept
    : S2SAddMailReq() {
    *this = ::std::move(from);
  }

  inline S2SAddMailReq& operator=(S2SAddMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddMailReq*>(
               &_S2SAddMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(S2SAddMailReq* other);
  friend void swap(S2SAddMailReq& a, S2SAddMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddMailReq* New() const final {
    return CreateMaybeMessage<S2SAddMailReq>(NULL);
  }

  S2SAddMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddMailReq& from);
  void MergeFrom(const S2SAddMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBMail pbmail = 3;
  bool has_pbmail() const;
  void clear_pbmail();
  static const int kPbmailFieldNumber = 3;
  private:
  const ::KFMsg::PBMail& _internal_pbmail() const;
  public:
  const ::KFMsg::PBMail& pbmail() const;
  ::KFMsg::PBMail* release_pbmail();
  ::KFMsg::PBMail* mutable_pbmail();
  void set_allocated_pbmail(::KFMsg::PBMail* pbmail);

  // uint64 objectid = 2;
  void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  ::google::protobuf::uint64 objectid() const;
  void set_objectid(::google::protobuf::uint64 value);

  // uint32 flag = 1;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBMail* pbmail_;
  ::google::protobuf::uint64 objectid_;
  ::google::protobuf::uint32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNoticeNewMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNoticeNewMailReq) */ {
 public:
  S2SNoticeNewMailReq();
  virtual ~S2SNoticeNewMailReq();

  S2SNoticeNewMailReq(const S2SNoticeNewMailReq& from);

  inline S2SNoticeNewMailReq& operator=(const S2SNoticeNewMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNoticeNewMailReq(S2SNoticeNewMailReq&& from) noexcept
    : S2SNoticeNewMailReq() {
    *this = ::std::move(from);
  }

  inline S2SNoticeNewMailReq& operator=(S2SNoticeNewMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNoticeNewMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNoticeNewMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SNoticeNewMailReq*>(
               &_S2SNoticeNewMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(S2SNoticeNewMailReq* other);
  friend void swap(S2SNoticeNewMailReq& a, S2SNoticeNewMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNoticeNewMailReq* New() const final {
    return CreateMaybeMessage<S2SNoticeNewMailReq>(NULL);
  }

  S2SNoticeNewMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNoticeNewMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNoticeNewMailReq& from);
  void MergeFrom(const S2SNoticeNewMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNoticeNewMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNoticeNewMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNewPlayerMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNewPlayerMailReq) */ {
 public:
  S2SNewPlayerMailReq();
  virtual ~S2SNewPlayerMailReq();

  S2SNewPlayerMailReq(const S2SNewPlayerMailReq& from);

  inline S2SNewPlayerMailReq& operator=(const S2SNewPlayerMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNewPlayerMailReq(S2SNewPlayerMailReq&& from) noexcept
    : S2SNewPlayerMailReq() {
    *this = ::std::move(from);
  }

  inline S2SNewPlayerMailReq& operator=(S2SNewPlayerMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNewPlayerMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNewPlayerMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SNewPlayerMailReq*>(
               &_S2SNewPlayerMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(S2SNewPlayerMailReq* other);
  friend void swap(S2SNewPlayerMailReq& a, S2SNewPlayerMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNewPlayerMailReq* New() const final {
    return CreateMaybeMessage<S2SNewPlayerMailReq>(NULL);
  }

  S2SNewPlayerMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNewPlayerMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNewPlayerMailReq& from);
  void MergeFrom(const S2SNewPlayerMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNewPlayerMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNewPlayerMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateMailStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateMailStatusReq) */ {
 public:
  S2SUpdateMailStatusReq();
  virtual ~S2SUpdateMailStatusReq();

  S2SUpdateMailStatusReq(const S2SUpdateMailStatusReq& from);

  inline S2SUpdateMailStatusReq& operator=(const S2SUpdateMailStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateMailStatusReq(S2SUpdateMailStatusReq&& from) noexcept
    : S2SUpdateMailStatusReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateMailStatusReq& operator=(S2SUpdateMailStatusReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateMailStatusReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateMailStatusReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateMailStatusReq*>(
               &_S2SUpdateMailStatusReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(S2SUpdateMailStatusReq* other);
  friend void swap(S2SUpdateMailStatusReq& a, S2SUpdateMailStatusReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateMailStatusReq* New() const final {
    return CreateMaybeMessage<S2SUpdateMailStatusReq>(NULL);
  }

  S2SUpdateMailStatusReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateMailStatusReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateMailStatusReq& from);
  void MergeFrom(const S2SUpdateMailStatusReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateMailStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 flag = 3;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // uint32 status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateMailStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateMailStatusAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateMailStatusAck) */ {
 public:
  S2SUpdateMailStatusAck();
  virtual ~S2SUpdateMailStatusAck();

  S2SUpdateMailStatusAck(const S2SUpdateMailStatusAck& from);

  inline S2SUpdateMailStatusAck& operator=(const S2SUpdateMailStatusAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateMailStatusAck(S2SUpdateMailStatusAck&& from) noexcept
    : S2SUpdateMailStatusAck() {
    *this = ::std::move(from);
  }

  inline S2SUpdateMailStatusAck& operator=(S2SUpdateMailStatusAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateMailStatusAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateMailStatusAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateMailStatusAck*>(
               &_S2SUpdateMailStatusAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(S2SUpdateMailStatusAck* other);
  friend void swap(S2SUpdateMailStatusAck& a, S2SUpdateMailStatusAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateMailStatusAck* New() const final {
    return CreateMaybeMessage<S2SUpdateMailStatusAck>(NULL);
  }

  S2SUpdateMailStatusAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateMailStatusAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateMailStatusAck& from);
  void MergeFrom(const S2SUpdateMailStatusAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateMailStatusAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateMailStatusAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBRelation_PlayerdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBRelation_PlayerdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBRelation_PlayerdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBRelation_PlayerdataEntry_DoNotUse();
  PBRelation_PlayerdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBRelation_PlayerdataEntry_DoNotUse& other);
  static const PBRelation_PlayerdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBRelation_PlayerdataEntry_DoNotUse*>(&_PBRelation_PlayerdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PBRelation_RelationdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBRelation_RelationdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBRelation_RelationdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBRelation_RelationdataEntry_DoNotUse();
  PBRelation_RelationdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBRelation_RelationdataEntry_DoNotUse& other);
  static const PBRelation_RelationdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBRelation_RelationdataEntry_DoNotUse*>(&_PBRelation_RelationdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRelation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRelation) */ {
 public:
  PBRelation();
  virtual ~PBRelation();

  PBRelation(const PBRelation& from);

  inline PBRelation& operator=(const PBRelation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRelation(PBRelation&& from) noexcept
    : PBRelation() {
    *this = ::std::move(from);
  }

  inline PBRelation& operator=(PBRelation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRelation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRelation* internal_default_instance() {
    return reinterpret_cast<const PBRelation*>(
               &_PBRelation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(PBRelation* other);
  friend void swap(PBRelation& a, PBRelation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRelation* New() const final {
    return CreateMaybeMessage<PBRelation>(NULL);
  }

  PBRelation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRelation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRelation& from);
  void MergeFrom(const PBRelation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRelation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> playerdata = 2;
  int playerdata_size() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      playerdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_playerdata();

  // map<string, bytes> relationdata = 3;
  int relationdata_size() const;
  void clear_relationdata();
  static const int kRelationdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      relationdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_relationdata();

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBRelation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBRelation_PlayerdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > playerdata_;
  ::google::protobuf::internal::MapField<
      PBRelation_RelationdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > relationdata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryFriendToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryFriendToRelationReq) */ {
 public:
  S2SQueryFriendToRelationReq();
  virtual ~S2SQueryFriendToRelationReq();

  S2SQueryFriendToRelationReq(const S2SQueryFriendToRelationReq& from);

  inline S2SQueryFriendToRelationReq& operator=(const S2SQueryFriendToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryFriendToRelationReq(S2SQueryFriendToRelationReq&& from) noexcept
    : S2SQueryFriendToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryFriendToRelationReq& operator=(S2SQueryFriendToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryFriendToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryFriendToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryFriendToRelationReq*>(
               &_S2SQueryFriendToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(S2SQueryFriendToRelationReq* other);
  friend void swap(S2SQueryFriendToRelationReq& a, S2SQueryFriendToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryFriendToRelationReq* New() const final {
    return CreateMaybeMessage<S2SQueryFriendToRelationReq>(NULL);
  }

  S2SQueryFriendToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryFriendToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryFriendToRelationReq& from);
  void MergeFrom(const S2SQueryFriendToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryFriendToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryFriendToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryFriendToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryFriendToGameAck) */ {
 public:
  S2SQueryFriendToGameAck();
  virtual ~S2SQueryFriendToGameAck();

  S2SQueryFriendToGameAck(const S2SQueryFriendToGameAck& from);

  inline S2SQueryFriendToGameAck& operator=(const S2SQueryFriendToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryFriendToGameAck(S2SQueryFriendToGameAck&& from) noexcept
    : S2SQueryFriendToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryFriendToGameAck& operator=(S2SQueryFriendToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryFriendToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryFriendToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryFriendToGameAck*>(
               &_S2SQueryFriendToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(S2SQueryFriendToGameAck* other);
  friend void swap(S2SQueryFriendToGameAck& a, S2SQueryFriendToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryFriendToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryFriendToGameAck>(NULL);
  }

  S2SQueryFriendToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryFriendToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryFriendToGameAck& from);
  void MergeFrom(const S2SQueryFriendToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryFriendToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRelation pbfriend = 2;
  int pbfriend_size() const;
  void clear_pbfriend();
  static const int kPbfriendFieldNumber = 2;
  ::KFMsg::PBRelation* mutable_pbfriend(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
      mutable_pbfriend();
  const ::KFMsg::PBRelation& pbfriend(int index) const;
  ::KFMsg::PBRelation* add_pbfriend();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
      pbfriend() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryFriendToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation > pbfriend_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryFriendInviteToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryFriendInviteToRelationReq) */ {
 public:
  S2SQueryFriendInviteToRelationReq();
  virtual ~S2SQueryFriendInviteToRelationReq();

  S2SQueryFriendInviteToRelationReq(const S2SQueryFriendInviteToRelationReq& from);

  inline S2SQueryFriendInviteToRelationReq& operator=(const S2SQueryFriendInviteToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryFriendInviteToRelationReq(S2SQueryFriendInviteToRelationReq&& from) noexcept
    : S2SQueryFriendInviteToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryFriendInviteToRelationReq& operator=(S2SQueryFriendInviteToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryFriendInviteToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryFriendInviteToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryFriendInviteToRelationReq*>(
               &_S2SQueryFriendInviteToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(S2SQueryFriendInviteToRelationReq* other);
  friend void swap(S2SQueryFriendInviteToRelationReq& a, S2SQueryFriendInviteToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryFriendInviteToRelationReq* New() const final {
    return CreateMaybeMessage<S2SQueryFriendInviteToRelationReq>(NULL);
  }

  S2SQueryFriendInviteToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryFriendInviteToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryFriendInviteToRelationReq& from);
  void MergeFrom(const S2SQueryFriendInviteToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryFriendInviteToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryFriendInviteToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryFriendInviteToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryFriendInviteToGameAck) */ {
 public:
  S2SQueryFriendInviteToGameAck();
  virtual ~S2SQueryFriendInviteToGameAck();

  S2SQueryFriendInviteToGameAck(const S2SQueryFriendInviteToGameAck& from);

  inline S2SQueryFriendInviteToGameAck& operator=(const S2SQueryFriendInviteToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryFriendInviteToGameAck(S2SQueryFriendInviteToGameAck&& from) noexcept
    : S2SQueryFriendInviteToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryFriendInviteToGameAck& operator=(S2SQueryFriendInviteToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryFriendInviteToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryFriendInviteToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryFriendInviteToGameAck*>(
               &_S2SQueryFriendInviteToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(S2SQueryFriendInviteToGameAck* other);
  friend void swap(S2SQueryFriendInviteToGameAck& a, S2SQueryFriendInviteToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryFriendInviteToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryFriendInviteToGameAck>(NULL);
  }

  S2SQueryFriendInviteToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryFriendInviteToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryFriendInviteToGameAck& from);
  void MergeFrom(const S2SQueryFriendInviteToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryFriendInviteToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRelation pbinvite = 2;
  int pbinvite_size() const;
  void clear_pbinvite();
  static const int kPbinviteFieldNumber = 2;
  ::KFMsg::PBRelation* mutable_pbinvite(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
      mutable_pbinvite();
  const ::KFMsg::PBRelation& pbinvite(int index) const;
  ::KFMsg::PBRelation* add_pbinvite();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
      pbinvite() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryFriendInviteToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation > pbinvite_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse();
  S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse*>(&_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateDataToFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateDataToFriendReq) */ {
 public:
  S2SUpdateDataToFriendReq();
  virtual ~S2SUpdateDataToFriendReq();

  S2SUpdateDataToFriendReq(const S2SUpdateDataToFriendReq& from);

  inline S2SUpdateDataToFriendReq& operator=(const S2SUpdateDataToFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateDataToFriendReq(S2SUpdateDataToFriendReq&& from) noexcept
    : S2SUpdateDataToFriendReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateDataToFriendReq& operator=(S2SUpdateDataToFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateDataToFriendReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateDataToFriendReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateDataToFriendReq*>(
               &_S2SUpdateDataToFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(S2SUpdateDataToFriendReq* other);
  friend void swap(S2SUpdateDataToFriendReq& a, S2SUpdateDataToFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateDataToFriendReq* New() const final {
    return CreateMaybeMessage<S2SUpdateDataToFriendReq>(NULL);
  }

  S2SUpdateDataToFriendReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateDataToFriendReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateDataToFriendReq& from);
  void MergeFrom(const S2SUpdateDataToFriendReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateDataToFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateDataToFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddFriendInviteToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddFriendInviteToRelationReq) */ {
 public:
  S2SAddFriendInviteToRelationReq();
  virtual ~S2SAddFriendInviteToRelationReq();

  S2SAddFriendInviteToRelationReq(const S2SAddFriendInviteToRelationReq& from);

  inline S2SAddFriendInviteToRelationReq& operator=(const S2SAddFriendInviteToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddFriendInviteToRelationReq(S2SAddFriendInviteToRelationReq&& from) noexcept
    : S2SAddFriendInviteToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SAddFriendInviteToRelationReq& operator=(S2SAddFriendInviteToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddFriendInviteToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddFriendInviteToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddFriendInviteToRelationReq*>(
               &_S2SAddFriendInviteToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(S2SAddFriendInviteToRelationReq* other);
  friend void swap(S2SAddFriendInviteToRelationReq& a, S2SAddFriendInviteToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddFriendInviteToRelationReq* New() const final {
    return CreateMaybeMessage<S2SAddFriendInviteToRelationReq>(NULL);
  }

  S2SAddFriendInviteToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddFriendInviteToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddFriendInviteToRelationReq& from);
  void MergeFrom(const S2SAddFriendInviteToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddFriendInviteToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddFriendInviteToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddFriendInviteToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddFriendInviteToGameAck) */ {
 public:
  S2SAddFriendInviteToGameAck();
  virtual ~S2SAddFriendInviteToGameAck();

  S2SAddFriendInviteToGameAck(const S2SAddFriendInviteToGameAck& from);

  inline S2SAddFriendInviteToGameAck& operator=(const S2SAddFriendInviteToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddFriendInviteToGameAck(S2SAddFriendInviteToGameAck&& from) noexcept
    : S2SAddFriendInviteToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SAddFriendInviteToGameAck& operator=(S2SAddFriendInviteToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddFriendInviteToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddFriendInviteToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SAddFriendInviteToGameAck*>(
               &_S2SAddFriendInviteToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(S2SAddFriendInviteToGameAck* other);
  friend void swap(S2SAddFriendInviteToGameAck& a, S2SAddFriendInviteToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddFriendInviteToGameAck* New() const final {
    return CreateMaybeMessage<S2SAddFriendInviteToGameAck>(NULL);
  }

  S2SAddFriendInviteToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddFriendInviteToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddFriendInviteToGameAck& from);
  void MergeFrom(const S2SAddFriendInviteToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddFriendInviteToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRelation pbinvite = 2;
  bool has_pbinvite() const;
  void clear_pbinvite();
  static const int kPbinviteFieldNumber = 2;
  private:
  const ::KFMsg::PBRelation& _internal_pbinvite() const;
  public:
  const ::KFMsg::PBRelation& pbinvite() const;
  ::KFMsg::PBRelation* release_pbinvite();
  ::KFMsg::PBRelation* mutable_pbinvite();
  void set_allocated_pbinvite(::KFMsg::PBRelation* pbinvite);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddFriendInviteToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRelation* pbinvite_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDelFriendInviteToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDelFriendInviteToRelationReq) */ {
 public:
  S2SDelFriendInviteToRelationReq();
  virtual ~S2SDelFriendInviteToRelationReq();

  S2SDelFriendInviteToRelationReq(const S2SDelFriendInviteToRelationReq& from);

  inline S2SDelFriendInviteToRelationReq& operator=(const S2SDelFriendInviteToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDelFriendInviteToRelationReq(S2SDelFriendInviteToRelationReq&& from) noexcept
    : S2SDelFriendInviteToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SDelFriendInviteToRelationReq& operator=(S2SDelFriendInviteToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDelFriendInviteToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDelFriendInviteToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SDelFriendInviteToRelationReq*>(
               &_S2SDelFriendInviteToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(S2SDelFriendInviteToRelationReq* other);
  friend void swap(S2SDelFriendInviteToRelationReq& a, S2SDelFriendInviteToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDelFriendInviteToRelationReq* New() const final {
    return CreateMaybeMessage<S2SDelFriendInviteToRelationReq>(NULL);
  }

  S2SDelFriendInviteToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDelFriendInviteToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDelFriendInviteToRelationReq& from);
  void MergeFrom(const S2SDelFriendInviteToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDelFriendInviteToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 selfplayerid = 1;
  void clear_selfplayerid();
  static const int kSelfplayeridFieldNumber = 1;
  ::google::protobuf::uint64 selfplayerid() const;
  void set_selfplayerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 2;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 2;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDelFriendInviteToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 selfplayerid_;
  ::google::protobuf::uint64 targetplayerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddFriendToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddFriendToRelationReq) */ {
 public:
  S2SAddFriendToRelationReq();
  virtual ~S2SAddFriendToRelationReq();

  S2SAddFriendToRelationReq(const S2SAddFriendToRelationReq& from);

  inline S2SAddFriendToRelationReq& operator=(const S2SAddFriendToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddFriendToRelationReq(S2SAddFriendToRelationReq&& from) noexcept
    : S2SAddFriendToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SAddFriendToRelationReq& operator=(S2SAddFriendToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddFriendToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddFriendToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddFriendToRelationReq*>(
               &_S2SAddFriendToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(S2SAddFriendToRelationReq* other);
  friend void swap(S2SAddFriendToRelationReq& a, S2SAddFriendToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddFriendToRelationReq* New() const final {
    return CreateMaybeMessage<S2SAddFriendToRelationReq>(NULL);
  }

  S2SAddFriendToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddFriendToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddFriendToRelationReq& from);
  void MergeFrom(const S2SAddFriendToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddFriendToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddFriendToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddFriendToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddFriendToGameAck) */ {
 public:
  S2SAddFriendToGameAck();
  virtual ~S2SAddFriendToGameAck();

  S2SAddFriendToGameAck(const S2SAddFriendToGameAck& from);

  inline S2SAddFriendToGameAck& operator=(const S2SAddFriendToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddFriendToGameAck(S2SAddFriendToGameAck&& from) noexcept
    : S2SAddFriendToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SAddFriendToGameAck& operator=(S2SAddFriendToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddFriendToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddFriendToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SAddFriendToGameAck*>(
               &_S2SAddFriendToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(S2SAddFriendToGameAck* other);
  friend void swap(S2SAddFriendToGameAck& a, S2SAddFriendToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddFriendToGameAck* New() const final {
    return CreateMaybeMessage<S2SAddFriendToGameAck>(NULL);
  }

  S2SAddFriendToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddFriendToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddFriendToGameAck& from);
  void MergeFrom(const S2SAddFriendToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddFriendToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRelation pbfriend = 2;
  bool has_pbfriend() const;
  void clear_pbfriend();
  static const int kPbfriendFieldNumber = 2;
  private:
  const ::KFMsg::PBRelation& _internal_pbfriend() const;
  public:
  const ::KFMsg::PBRelation& pbfriend() const;
  ::KFMsg::PBRelation* release_pbfriend();
  ::KFMsg::PBRelation* mutable_pbfriend();
  void set_allocated_pbfriend(::KFMsg::PBRelation* pbfriend);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddFriendToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRelation* pbfriend_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDelFriendToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDelFriendToRelationReq) */ {
 public:
  S2SDelFriendToRelationReq();
  virtual ~S2SDelFriendToRelationReq();

  S2SDelFriendToRelationReq(const S2SDelFriendToRelationReq& from);

  inline S2SDelFriendToRelationReq& operator=(const S2SDelFriendToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDelFriendToRelationReq(S2SDelFriendToRelationReq&& from) noexcept
    : S2SDelFriendToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SDelFriendToRelationReq& operator=(S2SDelFriendToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDelFriendToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDelFriendToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SDelFriendToRelationReq*>(
               &_S2SDelFriendToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(S2SDelFriendToRelationReq* other);
  friend void swap(S2SDelFriendToRelationReq& a, S2SDelFriendToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDelFriendToRelationReq* New() const final {
    return CreateMaybeMessage<S2SDelFriendToRelationReq>(NULL);
  }

  S2SDelFriendToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDelFriendToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDelFriendToRelationReq& from);
  void MergeFrom(const S2SDelFriendToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDelFriendToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDelFriendToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDelFriendToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDelFriendToGameAck) */ {
 public:
  S2SDelFriendToGameAck();
  virtual ~S2SDelFriendToGameAck();

  S2SDelFriendToGameAck(const S2SDelFriendToGameAck& from);

  inline S2SDelFriendToGameAck& operator=(const S2SDelFriendToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDelFriendToGameAck(S2SDelFriendToGameAck&& from) noexcept
    : S2SDelFriendToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SDelFriendToGameAck& operator=(S2SDelFriendToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDelFriendToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDelFriendToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SDelFriendToGameAck*>(
               &_S2SDelFriendToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(S2SDelFriendToGameAck* other);
  friend void swap(S2SDelFriendToGameAck& a, S2SDelFriendToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDelFriendToGameAck* New() const final {
    return CreateMaybeMessage<S2SDelFriendToGameAck>(NULL);
  }

  S2SDelFriendToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDelFriendToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDelFriendToGameAck& from);
  void MergeFrom(const S2SDelFriendToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDelFriendToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 friendid = 2;
  void clear_friendid();
  static const int kFriendidFieldNumber = 2;
  ::google::protobuf::uint64 friendid() const;
  void set_friendid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDelFriendToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 friendid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateFriendLinessToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateFriendLinessToRelationReq) */ {
 public:
  S2SUpdateFriendLinessToRelationReq();
  virtual ~S2SUpdateFriendLinessToRelationReq();

  S2SUpdateFriendLinessToRelationReq(const S2SUpdateFriendLinessToRelationReq& from);

  inline S2SUpdateFriendLinessToRelationReq& operator=(const S2SUpdateFriendLinessToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateFriendLinessToRelationReq(S2SUpdateFriendLinessToRelationReq&& from) noexcept
    : S2SUpdateFriendLinessToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateFriendLinessToRelationReq& operator=(S2SUpdateFriendLinessToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateFriendLinessToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateFriendLinessToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateFriendLinessToRelationReq*>(
               &_S2SUpdateFriendLinessToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(S2SUpdateFriendLinessToRelationReq* other);
  friend void swap(S2SUpdateFriendLinessToRelationReq& a, S2SUpdateFriendLinessToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateFriendLinessToRelationReq* New() const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToRelationReq>(NULL);
  }

  S2SUpdateFriendLinessToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateFriendLinessToRelationReq& from);
  void MergeFrom(const S2SUpdateFriendLinessToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateFriendLinessToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 selfplayerid = 2;
  void clear_selfplayerid();
  static const int kSelfplayeridFieldNumber = 2;
  ::google::protobuf::uint64 selfplayerid() const;
  void set_selfplayerid(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 friendliness = 4;
  void clear_friendliness();
  static const int kFriendlinessFieldNumber = 4;
  ::google::protobuf::uint32 friendliness() const;
  void set_friendliness(::google::protobuf::uint32 value);

  // uint64 targetplayerid = 3;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 3;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateFriendLinessToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 selfplayerid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 friendliness_;
  ::google::protobuf::uint64 targetplayerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateFriendLinessToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateFriendLinessToGameAck) */ {
 public:
  S2SUpdateFriendLinessToGameAck();
  virtual ~S2SUpdateFriendLinessToGameAck();

  S2SUpdateFriendLinessToGameAck(const S2SUpdateFriendLinessToGameAck& from);

  inline S2SUpdateFriendLinessToGameAck& operator=(const S2SUpdateFriendLinessToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateFriendLinessToGameAck(S2SUpdateFriendLinessToGameAck&& from) noexcept
    : S2SUpdateFriendLinessToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SUpdateFriendLinessToGameAck& operator=(S2SUpdateFriendLinessToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateFriendLinessToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateFriendLinessToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateFriendLinessToGameAck*>(
               &_S2SUpdateFriendLinessToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(S2SUpdateFriendLinessToGameAck* other);
  friend void swap(S2SUpdateFriendLinessToGameAck& a, S2SUpdateFriendLinessToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateFriendLinessToGameAck* New() const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToGameAck>(NULL);
  }

  S2SUpdateFriendLinessToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateFriendLinessToGameAck& from);
  void MergeFrom(const S2SUpdateFriendLinessToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateFriendLinessToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 2;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 2;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // uint32 friendliness = 3;
  void clear_friendliness();
  static const int kFriendlinessFieldNumber = 3;
  ::google::protobuf::uint32 friendliness() const;
  void set_friendliness(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateFriendLinessToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 targetplayerid_;
  ::google::protobuf::uint32 friendliness_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerToastReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerToastReq) */ {
 public:
  S2SPlayerToastReq();
  virtual ~S2SPlayerToastReq();

  S2SPlayerToastReq(const S2SPlayerToastReq& from);

  inline S2SPlayerToastReq& operator=(const S2SPlayerToastReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerToastReq(S2SPlayerToastReq&& from) noexcept
    : S2SPlayerToastReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerToastReq& operator=(S2SPlayerToastReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerToastReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerToastReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerToastReq*>(
               &_S2SPlayerToastReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(S2SPlayerToastReq* other);
  friend void swap(S2SPlayerToastReq& a, S2SPlayerToastReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerToastReq* New() const final {
    return CreateMaybeMessage<S2SPlayerToastReq>(NULL);
  }

  S2SPlayerToastReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerToastReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerToastReq& from);
  void MergeFrom(const S2SPlayerToastReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerToastReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 selfplayerid = 1;
  void clear_selfplayerid();
  static const int kSelfplayeridFieldNumber = 1;
  ::google::protobuf::uint64 selfplayerid() const;
  void set_selfplayerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 2;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 2;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerToastReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 selfplayerid_;
  ::google::protobuf::uint64 targetplayerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerToastAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerToastAck) */ {
 public:
  S2SPlayerToastAck();
  virtual ~S2SPlayerToastAck();

  S2SPlayerToastAck(const S2SPlayerToastAck& from);

  inline S2SPlayerToastAck& operator=(const S2SPlayerToastAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerToastAck(S2SPlayerToastAck&& from) noexcept
    : S2SPlayerToastAck() {
    *this = ::std::move(from);
  }

  inline S2SPlayerToastAck& operator=(S2SPlayerToastAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerToastAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerToastAck* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerToastAck*>(
               &_S2SPlayerToastAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(S2SPlayerToastAck* other);
  friend void swap(S2SPlayerToastAck& a, S2SPlayerToastAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerToastAck* New() const final {
    return CreateMaybeMessage<S2SPlayerToastAck>(NULL);
  }

  S2SPlayerToastAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerToastAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerToastAck& from);
  void MergeFrom(const S2SPlayerToastAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerToastAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 3;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 3;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // uint64 targetserverid = 4;
  void clear_targetserverid();
  static const int kTargetserveridFieldNumber = 4;
  ::google::protobuf::uint64 targetserverid() const;
  void set_targetserverid(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerToastAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 targetplayerid_;
  ::google::protobuf::uint64 targetserverid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryToastCountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryToastCountReq) */ {
 public:
  S2SQueryToastCountReq();
  virtual ~S2SQueryToastCountReq();

  S2SQueryToastCountReq(const S2SQueryToastCountReq& from);

  inline S2SQueryToastCountReq& operator=(const S2SQueryToastCountReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryToastCountReq(S2SQueryToastCountReq&& from) noexcept
    : S2SQueryToastCountReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryToastCountReq& operator=(S2SQueryToastCountReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryToastCountReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryToastCountReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryToastCountReq*>(
               &_S2SQueryToastCountReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(S2SQueryToastCountReq* other);
  friend void swap(S2SQueryToastCountReq& a, S2SQueryToastCountReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryToastCountReq* New() const final {
    return CreateMaybeMessage<S2SQueryToastCountReq>(NULL);
  }

  S2SQueryToastCountReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryToastCountReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryToastCountReq& from);
  void MergeFrom(const S2SQueryToastCountReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryToastCountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 selfplayerid = 1;
  void clear_selfplayerid();
  static const int kSelfplayeridFieldNumber = 1;
  ::google::protobuf::uint64 selfplayerid() const;
  void set_selfplayerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 2;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 2;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryToastCountReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 selfplayerid_;
  ::google::protobuf::uint64 targetplayerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateMatchGroupReq) */ {
 public:
  S2SCreateMatchGroupReq();
  virtual ~S2SCreateMatchGroupReq();

  S2SCreateMatchGroupReq(const S2SCreateMatchGroupReq& from);

  inline S2SCreateMatchGroupReq& operator=(const S2SCreateMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateMatchGroupReq(S2SCreateMatchGroupReq&& from) noexcept
    : S2SCreateMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SCreateMatchGroupReq& operator=(S2SCreateMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SCreateMatchGroupReq*>(
               &_S2SCreateMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(S2SCreateMatchGroupReq* other);
  friend void swap(S2SCreateMatchGroupReq& a, S2SCreateMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SCreateMatchGroupReq>(NULL);
  }

  S2SCreateMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateMatchGroupReq& from);
  void MergeFrom(const S2SCreateMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 1;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // uint64 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 maxcount = 3;
  void clear_maxcount();
  static const int kMaxcountFieldNumber = 3;
  ::google::protobuf::uint32 maxcount() const;
  void set_maxcount(::google::protobuf::uint32 value);

  // uint32 matchid = 4;
  void clear_matchid();
  static const int kMatchidFieldNumber = 4;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint64 playerid = 5;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 5;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 maxcount_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateGroupMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateGroupMatchReq) */ {
 public:
  S2SUpdateGroupMatchReq();
  virtual ~S2SUpdateGroupMatchReq();

  S2SUpdateGroupMatchReq(const S2SUpdateGroupMatchReq& from);

  inline S2SUpdateGroupMatchReq& operator=(const S2SUpdateGroupMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateGroupMatchReq(S2SUpdateGroupMatchReq&& from) noexcept
    : S2SUpdateGroupMatchReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateGroupMatchReq& operator=(S2SUpdateGroupMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateGroupMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateGroupMatchReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateGroupMatchReq*>(
               &_S2SUpdateGroupMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(S2SUpdateGroupMatchReq* other);
  friend void swap(S2SUpdateGroupMatchReq& a, S2SUpdateGroupMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateGroupMatchReq* New() const final {
    return CreateMaybeMessage<S2SUpdateGroupMatchReq>(NULL);
  }

  S2SUpdateGroupMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateGroupMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateGroupMatchReq& from);
  void MergeFrom(const S2SUpdateGroupMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateGroupMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 maxcount = 2;
  void clear_maxcount();
  static const int kMaxcountFieldNumber = 2;
  ::google::protobuf::uint32 maxcount() const;
  void set_maxcount(::google::protobuf::uint32 value);

  // uint32 matchid = 3;
  void clear_matchid();
  static const int kMatchidFieldNumber = 3;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateGroupMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 maxcount_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateMatchGroupToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateMatchGroupToShardReq) */ {
 public:
  S2SCreateMatchGroupToShardReq();
  virtual ~S2SCreateMatchGroupToShardReq();

  S2SCreateMatchGroupToShardReq(const S2SCreateMatchGroupToShardReq& from);

  inline S2SCreateMatchGroupToShardReq& operator=(const S2SCreateMatchGroupToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateMatchGroupToShardReq(S2SCreateMatchGroupToShardReq&& from) noexcept
    : S2SCreateMatchGroupToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SCreateMatchGroupToShardReq& operator=(S2SCreateMatchGroupToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateMatchGroupToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateMatchGroupToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SCreateMatchGroupToShardReq*>(
               &_S2SCreateMatchGroupToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(S2SCreateMatchGroupToShardReq* other);
  friend void swap(S2SCreateMatchGroupToShardReq& a, S2SCreateMatchGroupToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateMatchGroupToShardReq* New() const final {
    return CreateMaybeMessage<S2SCreateMatchGroupToShardReq>(NULL);
  }

  S2SCreateMatchGroupToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateMatchGroupToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateMatchGroupToShardReq& from);
  void MergeFrom(const S2SCreateMatchGroupToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateMatchGroupToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 1;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // uint64 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 maxcount = 3;
  void clear_maxcount();
  static const int kMaxcountFieldNumber = 3;
  ::google::protobuf::uint32 maxcount() const;
  void set_maxcount(::google::protobuf::uint32 value);

  // uint32 matchid = 4;
  void clear_matchid();
  static const int kMatchidFieldNumber = 4;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint64 playerid = 5;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 5;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateMatchGroupToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 maxcount_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SReceiveInviteMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SReceiveInviteMatchGroupReq) */ {
 public:
  S2SReceiveInviteMatchGroupReq();
  virtual ~S2SReceiveInviteMatchGroupReq();

  S2SReceiveInviteMatchGroupReq(const S2SReceiveInviteMatchGroupReq& from);

  inline S2SReceiveInviteMatchGroupReq& operator=(const S2SReceiveInviteMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SReceiveInviteMatchGroupReq(S2SReceiveInviteMatchGroupReq&& from) noexcept
    : S2SReceiveInviteMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SReceiveInviteMatchGroupReq& operator=(S2SReceiveInviteMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SReceiveInviteMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SReceiveInviteMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SReceiveInviteMatchGroupReq*>(
               &_S2SReceiveInviteMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(S2SReceiveInviteMatchGroupReq* other);
  friend void swap(S2SReceiveInviteMatchGroupReq& a, S2SReceiveInviteMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SReceiveInviteMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SReceiveInviteMatchGroupReq>(NULL);
  }

  S2SReceiveInviteMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SReceiveInviteMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SReceiveInviteMatchGroupReq& from);
  void MergeFrom(const S2SReceiveInviteMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SReceiveInviteMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes source = 4;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const void* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // bytes playername = 8;
  void clear_playername();
  static const int kPlayernameFieldNumber = 8;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // .KFMsg.PBObject inviter = 3;
  bool has_inviter() const;
  void clear_inviter();
  static const int kInviterFieldNumber = 3;
  private:
  const ::KFMsg::PBObject& _internal_inviter() const;
  public:
  const ::KFMsg::PBObject& inviter() const;
  ::KFMsg::PBObject* release_inviter();
  ::KFMsg::PBObject* mutable_inviter();
  void set_allocated_inviter(::KFMsg::PBObject* inviter);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 inviterplayerid = 6;
  void clear_inviterplayerid();
  static const int kInviterplayeridFieldNumber = 6;
  ::google::protobuf::uint64 inviterplayerid() const;
  void set_inviterplayerid(::google::protobuf::uint64 value);

  // uint64 inviterserverid = 7;
  void clear_inviterserverid();
  static const int kInviterserveridFieldNumber = 7;
  ::google::protobuf::uint64 inviterserverid() const;
  void set_inviterserverid(::google::protobuf::uint64 value);

  // uint32 matchid = 5;
  void clear_matchid();
  static const int kMatchidFieldNumber = 5;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SReceiveInviteMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::KFMsg::PBObject* inviter_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 inviterplayerid_;
  ::google::protobuf::uint64 inviterserverid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SConsentInviteMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SConsentInviteMatchGroupReq) */ {
 public:
  S2SConsentInviteMatchGroupReq();
  virtual ~S2SConsentInviteMatchGroupReq();

  S2SConsentInviteMatchGroupReq(const S2SConsentInviteMatchGroupReq& from);

  inline S2SConsentInviteMatchGroupReq& operator=(const S2SConsentInviteMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SConsentInviteMatchGroupReq(S2SConsentInviteMatchGroupReq&& from) noexcept
    : S2SConsentInviteMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SConsentInviteMatchGroupReq& operator=(S2SConsentInviteMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SConsentInviteMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SConsentInviteMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SConsentInviteMatchGroupReq*>(
               &_S2SConsentInviteMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(S2SConsentInviteMatchGroupReq* other);
  friend void swap(S2SConsentInviteMatchGroupReq& a, S2SConsentInviteMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SConsentInviteMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SConsentInviteMatchGroupReq>(NULL);
  }

  S2SConsentInviteMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SConsentInviteMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SConsentInviteMatchGroupReq& from);
  void MergeFrom(const S2SConsentInviteMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SConsentInviteMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 4;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 4;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SConsentInviteMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddMatchGroupMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddMatchGroupMemberReq) */ {
 public:
  S2SAddMatchGroupMemberReq();
  virtual ~S2SAddMatchGroupMemberReq();

  S2SAddMatchGroupMemberReq(const S2SAddMatchGroupMemberReq& from);

  inline S2SAddMatchGroupMemberReq& operator=(const S2SAddMatchGroupMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddMatchGroupMemberReq(S2SAddMatchGroupMemberReq&& from) noexcept
    : S2SAddMatchGroupMemberReq() {
    *this = ::std::move(from);
  }

  inline S2SAddMatchGroupMemberReq& operator=(S2SAddMatchGroupMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddMatchGroupMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddMatchGroupMemberReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddMatchGroupMemberReq*>(
               &_S2SAddMatchGroupMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(S2SAddMatchGroupMemberReq* other);
  friend void swap(S2SAddMatchGroupMemberReq& a, S2SAddMatchGroupMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddMatchGroupMemberReq* New() const final {
    return CreateMaybeMessage<S2SAddMatchGroupMemberReq>(NULL);
  }

  S2SAddMatchGroupMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddMatchGroupMemberReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddMatchGroupMemberReq& from);
  void MergeFrom(const S2SAddMatchGroupMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddMatchGroupMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 4;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 4;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddMatchGroupMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddMatchGroupMemberAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddMatchGroupMemberAck) */ {
 public:
  S2SAddMatchGroupMemberAck();
  virtual ~S2SAddMatchGroupMemberAck();

  S2SAddMatchGroupMemberAck(const S2SAddMatchGroupMemberAck& from);

  inline S2SAddMatchGroupMemberAck& operator=(const S2SAddMatchGroupMemberAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddMatchGroupMemberAck(S2SAddMatchGroupMemberAck&& from) noexcept
    : S2SAddMatchGroupMemberAck() {
    *this = ::std::move(from);
  }

  inline S2SAddMatchGroupMemberAck& operator=(S2SAddMatchGroupMemberAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddMatchGroupMemberAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddMatchGroupMemberAck* internal_default_instance() {
    return reinterpret_cast<const S2SAddMatchGroupMemberAck*>(
               &_S2SAddMatchGroupMemberAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(S2SAddMatchGroupMemberAck* other);
  friend void swap(S2SAddMatchGroupMemberAck& a, S2SAddMatchGroupMemberAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddMatchGroupMemberAck* New() const final {
    return CreateMaybeMessage<S2SAddMatchGroupMemberAck>(NULL);
  }

  S2SAddMatchGroupMemberAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddMatchGroupMemberAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddMatchGroupMemberAck& from);
  void MergeFrom(const S2SAddMatchGroupMemberAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddMatchGroupMemberAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 1;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddMatchGroupMemberAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellMatchGroupDataAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellMatchGroupDataAck) */ {
 public:
  S2STellMatchGroupDataAck();
  virtual ~S2STellMatchGroupDataAck();

  S2STellMatchGroupDataAck(const S2STellMatchGroupDataAck& from);

  inline S2STellMatchGroupDataAck& operator=(const S2STellMatchGroupDataAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellMatchGroupDataAck(S2STellMatchGroupDataAck&& from) noexcept
    : S2STellMatchGroupDataAck() {
    *this = ::std::move(from);
  }

  inline S2STellMatchGroupDataAck& operator=(S2STellMatchGroupDataAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellMatchGroupDataAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellMatchGroupDataAck* internal_default_instance() {
    return reinterpret_cast<const S2STellMatchGroupDataAck*>(
               &_S2STellMatchGroupDataAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(S2STellMatchGroupDataAck* other);
  friend void swap(S2STellMatchGroupDataAck& a, S2STellMatchGroupDataAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellMatchGroupDataAck* New() const final {
    return CreateMaybeMessage<S2STellMatchGroupDataAck>(NULL);
  }

  S2STellMatchGroupDataAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellMatchGroupDataAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellMatchGroupDataAck& from);
  void MergeFrom(const S2STellMatchGroupDataAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellMatchGroupDataAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBObject pbmember = 1;
  int pbmember_size() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 1;
  ::KFMsg::PBObject* mutable_pbmember(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >*
      mutable_pbmember();
  const ::KFMsg::PBObject& pbmember(int index) const;
  ::KFMsg::PBObject* add_pbmember();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >&
      pbmember() const;

  // uint64 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 captainid = 3;
  void clear_captainid();
  static const int kCaptainidFieldNumber = 3;
  ::google::protobuf::uint64 captainid() const;
  void set_captainid(::google::protobuf::uint64 value);

  // uint32 maxcount = 4;
  void clear_maxcount();
  static const int kMaxcountFieldNumber = 4;
  ::google::protobuf::uint32 maxcount() const;
  void set_maxcount(::google::protobuf::uint32 value);

  // uint32 matchid = 5;
  void clear_matchid();
  static const int kMatchidFieldNumber = 5;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // bool newadd = 6;
  void clear_newadd();
  static const int kNewaddFieldNumber = 6;
  bool newadd() const;
  void set_newadd(bool value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellMatchGroupDataAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject > pbmember_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 captainid_;
  ::google::protobuf::uint32 maxcount_;
  ::google::protobuf::uint32 matchid_;
  bool newadd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRemoveMatchGroupMemberAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRemoveMatchGroupMemberAck) */ {
 public:
  S2SRemoveMatchGroupMemberAck();
  virtual ~S2SRemoveMatchGroupMemberAck();

  S2SRemoveMatchGroupMemberAck(const S2SRemoveMatchGroupMemberAck& from);

  inline S2SRemoveMatchGroupMemberAck& operator=(const S2SRemoveMatchGroupMemberAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRemoveMatchGroupMemberAck(S2SRemoveMatchGroupMemberAck&& from) noexcept
    : S2SRemoveMatchGroupMemberAck() {
    *this = ::std::move(from);
  }

  inline S2SRemoveMatchGroupMemberAck& operator=(S2SRemoveMatchGroupMemberAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRemoveMatchGroupMemberAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRemoveMatchGroupMemberAck* internal_default_instance() {
    return reinterpret_cast<const S2SRemoveMatchGroupMemberAck*>(
               &_S2SRemoveMatchGroupMemberAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(S2SRemoveMatchGroupMemberAck* other);
  friend void swap(S2SRemoveMatchGroupMemberAck& a, S2SRemoveMatchGroupMemberAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRemoveMatchGroupMemberAck* New() const final {
    return CreateMaybeMessage<S2SRemoveMatchGroupMemberAck>(NULL);
  }

  S2SRemoveMatchGroupMemberAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRemoveMatchGroupMemberAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRemoveMatchGroupMemberAck& from);
  void MergeFrom(const S2SRemoveMatchGroupMemberAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRemoveMatchGroupMemberAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 memberid = 1;
  void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRemoveMatchGroupMemberAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLeaveMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLeaveMatchGroupReq) */ {
 public:
  S2SLeaveMatchGroupReq();
  virtual ~S2SLeaveMatchGroupReq();

  S2SLeaveMatchGroupReq(const S2SLeaveMatchGroupReq& from);

  inline S2SLeaveMatchGroupReq& operator=(const S2SLeaveMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLeaveMatchGroupReq(S2SLeaveMatchGroupReq&& from) noexcept
    : S2SLeaveMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SLeaveMatchGroupReq& operator=(S2SLeaveMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLeaveMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLeaveMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SLeaveMatchGroupReq*>(
               &_S2SLeaveMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(S2SLeaveMatchGroupReq* other);
  friend void swap(S2SLeaveMatchGroupReq& a, S2SLeaveMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLeaveMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SLeaveMatchGroupReq>(NULL);
  }

  S2SLeaveMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLeaveMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLeaveMatchGroupReq& from);
  void MergeFrom(const S2SLeaveMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLeaveMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLeaveMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickMatchGroupReq) */ {
 public:
  S2SKickMatchGroupReq();
  virtual ~S2SKickMatchGroupReq();

  S2SKickMatchGroupReq(const S2SKickMatchGroupReq& from);

  inline S2SKickMatchGroupReq& operator=(const S2SKickMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickMatchGroupReq(S2SKickMatchGroupReq&& from) noexcept
    : S2SKickMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SKickMatchGroupReq& operator=(S2SKickMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickMatchGroupReq*>(
               &_S2SKickMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(S2SKickMatchGroupReq* other);
  friend void swap(S2SKickMatchGroupReq& a, S2SKickMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SKickMatchGroupReq>(NULL);
  }

  S2SKickMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickMatchGroupReq& from);
  void MergeFrom(const S2SKickMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 captainid = 2;
  void clear_captainid();
  static const int kCaptainidFieldNumber = 2;
  ::google::protobuf::uint64 captainid() const;
  void set_captainid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 memberid = 4;
  void clear_memberid();
  static const int kMemberidFieldNumber = 4;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 captainid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLeaveMatchGroupAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLeaveMatchGroupAck) */ {
 public:
  S2SLeaveMatchGroupAck();
  virtual ~S2SLeaveMatchGroupAck();

  S2SLeaveMatchGroupAck(const S2SLeaveMatchGroupAck& from);

  inline S2SLeaveMatchGroupAck& operator=(const S2SLeaveMatchGroupAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLeaveMatchGroupAck(S2SLeaveMatchGroupAck&& from) noexcept
    : S2SLeaveMatchGroupAck() {
    *this = ::std::move(from);
  }

  inline S2SLeaveMatchGroupAck& operator=(S2SLeaveMatchGroupAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLeaveMatchGroupAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLeaveMatchGroupAck* internal_default_instance() {
    return reinterpret_cast<const S2SLeaveMatchGroupAck*>(
               &_S2SLeaveMatchGroupAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(S2SLeaveMatchGroupAck* other);
  friend void swap(S2SLeaveMatchGroupAck& a, S2SLeaveMatchGroupAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLeaveMatchGroupAck* New() const final {
    return CreateMaybeMessage<S2SLeaveMatchGroupAck>(NULL);
  }

  S2SLeaveMatchGroupAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLeaveMatchGroupAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLeaveMatchGroupAck& from);
  void MergeFrom(const S2SLeaveMatchGroupAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLeaveMatchGroupAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLeaveMatchGroupAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SApplyMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SApplyMatchGroupReq) */ {
 public:
  S2SApplyMatchGroupReq();
  virtual ~S2SApplyMatchGroupReq();

  S2SApplyMatchGroupReq(const S2SApplyMatchGroupReq& from);

  inline S2SApplyMatchGroupReq& operator=(const S2SApplyMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SApplyMatchGroupReq(S2SApplyMatchGroupReq&& from) noexcept
    : S2SApplyMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SApplyMatchGroupReq& operator=(S2SApplyMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SApplyMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SApplyMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SApplyMatchGroupReq*>(
               &_S2SApplyMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(S2SApplyMatchGroupReq* other);
  friend void swap(S2SApplyMatchGroupReq& a, S2SApplyMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SApplyMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SApplyMatchGroupReq>(NULL);
  }

  S2SApplyMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SApplyMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SApplyMatchGroupReq& from);
  void MergeFrom(const S2SApplyMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SApplyMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 4;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 4;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SApplyMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SApplyMatchGroupAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SApplyMatchGroupAck) */ {
 public:
  S2SApplyMatchGroupAck();
  virtual ~S2SApplyMatchGroupAck();

  S2SApplyMatchGroupAck(const S2SApplyMatchGroupAck& from);

  inline S2SApplyMatchGroupAck& operator=(const S2SApplyMatchGroupAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SApplyMatchGroupAck(S2SApplyMatchGroupAck&& from) noexcept
    : S2SApplyMatchGroupAck() {
    *this = ::std::move(from);
  }

  inline S2SApplyMatchGroupAck& operator=(S2SApplyMatchGroupAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SApplyMatchGroupAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SApplyMatchGroupAck* internal_default_instance() {
    return reinterpret_cast<const S2SApplyMatchGroupAck*>(
               &_S2SApplyMatchGroupAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(S2SApplyMatchGroupAck* other);
  friend void swap(S2SApplyMatchGroupAck& a, S2SApplyMatchGroupAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SApplyMatchGroupAck* New() const final {
    return CreateMaybeMessage<S2SApplyMatchGroupAck>(NULL);
  }

  S2SApplyMatchGroupAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SApplyMatchGroupAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SApplyMatchGroupAck& from);
  void MergeFrom(const S2SApplyMatchGroupAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SApplyMatchGroupAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbmember = 2;
  bool has_pbmember() const;
  void clear_pbmember();
  static const int kPbmemberFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbmember() const;
  public:
  const ::KFMsg::PBObject& pbmember() const;
  ::KFMsg::PBObject* release_pbmember();
  ::KFMsg::PBObject* mutable_pbmember();
  void set_allocated_pbmember(::KFMsg::PBObject* pbmember);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SApplyMatchGroupAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbmember_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SConsentApplyMatchGroupAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SConsentApplyMatchGroupAck) */ {
 public:
  S2SConsentApplyMatchGroupAck();
  virtual ~S2SConsentApplyMatchGroupAck();

  S2SConsentApplyMatchGroupAck(const S2SConsentApplyMatchGroupAck& from);

  inline S2SConsentApplyMatchGroupAck& operator=(const S2SConsentApplyMatchGroupAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SConsentApplyMatchGroupAck(S2SConsentApplyMatchGroupAck&& from) noexcept
    : S2SConsentApplyMatchGroupAck() {
    *this = ::std::move(from);
  }

  inline S2SConsentApplyMatchGroupAck& operator=(S2SConsentApplyMatchGroupAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SConsentApplyMatchGroupAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SConsentApplyMatchGroupAck* internal_default_instance() {
    return reinterpret_cast<const S2SConsentApplyMatchGroupAck*>(
               &_S2SConsentApplyMatchGroupAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(S2SConsentApplyMatchGroupAck* other);
  friend void swap(S2SConsentApplyMatchGroupAck& a, S2SConsentApplyMatchGroupAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SConsentApplyMatchGroupAck* New() const final {
    return CreateMaybeMessage<S2SConsentApplyMatchGroupAck>(NULL);
  }

  S2SConsentApplyMatchGroupAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SConsentApplyMatchGroupAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SConsentApplyMatchGroupAck& from);
  void MergeFrom(const S2SConsentApplyMatchGroupAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SConsentApplyMatchGroupAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes playername = 5;
  void clear_playername();
  static const int kPlayernameFieldNumber = 5;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 captainid = 3;
  void clear_captainid();
  static const int kCaptainidFieldNumber = 3;
  ::google::protobuf::uint64 captainid() const;
  void set_captainid(::google::protobuf::uint64 value);

  // uint64 serverid = 4;
  void clear_serverid();
  static const int kServeridFieldNumber = 4;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SConsentApplyMatchGroupAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 captainid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOnLineQueryMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOnLineQueryMatchGroupReq) */ {
 public:
  S2SOnLineQueryMatchGroupReq();
  virtual ~S2SOnLineQueryMatchGroupReq();

  S2SOnLineQueryMatchGroupReq(const S2SOnLineQueryMatchGroupReq& from);

  inline S2SOnLineQueryMatchGroupReq& operator=(const S2SOnLineQueryMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOnLineQueryMatchGroupReq(S2SOnLineQueryMatchGroupReq&& from) noexcept
    : S2SOnLineQueryMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SOnLineQueryMatchGroupReq& operator=(S2SOnLineQueryMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOnLineQueryMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOnLineQueryMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SOnLineQueryMatchGroupReq*>(
               &_S2SOnLineQueryMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(S2SOnLineQueryMatchGroupReq* other);
  friend void swap(S2SOnLineQueryMatchGroupReq& a, S2SOnLineQueryMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOnLineQueryMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SOnLineQueryMatchGroupReq>(NULL);
  }

  S2SOnLineQueryMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOnLineQueryMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOnLineQueryMatchGroupReq& from);
  void MergeFrom(const S2SOnLineQueryMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOnLineQueryMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOnLineQueryMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOffLineUpdateMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOffLineUpdateMatchGroupReq) */ {
 public:
  S2SOffLineUpdateMatchGroupReq();
  virtual ~S2SOffLineUpdateMatchGroupReq();

  S2SOffLineUpdateMatchGroupReq(const S2SOffLineUpdateMatchGroupReq& from);

  inline S2SOffLineUpdateMatchGroupReq& operator=(const S2SOffLineUpdateMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOffLineUpdateMatchGroupReq(S2SOffLineUpdateMatchGroupReq&& from) noexcept
    : S2SOffLineUpdateMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline S2SOffLineUpdateMatchGroupReq& operator=(S2SOffLineUpdateMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOffLineUpdateMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOffLineUpdateMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const S2SOffLineUpdateMatchGroupReq*>(
               &_S2SOffLineUpdateMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(S2SOffLineUpdateMatchGroupReq* other);
  friend void swap(S2SOffLineUpdateMatchGroupReq& a, S2SOffLineUpdateMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOffLineUpdateMatchGroupReq* New() const final {
    return CreateMaybeMessage<S2SOffLineUpdateMatchGroupReq>(NULL);
  }

  S2SOffLineUpdateMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOffLineUpdateMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOffLineUpdateMatchGroupReq& from);
  void MergeFrom(const S2SOffLineUpdateMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOffLineUpdateMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOffLineUpdateMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse();
  S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse& other);
  static const S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse*>(&_S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateGroupMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateGroupMemberReq) */ {
 public:
  S2SUpdateGroupMemberReq();
  virtual ~S2SUpdateGroupMemberReq();

  S2SUpdateGroupMemberReq(const S2SUpdateGroupMemberReq& from);

  inline S2SUpdateGroupMemberReq& operator=(const S2SUpdateGroupMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateGroupMemberReq(S2SUpdateGroupMemberReq&& from) noexcept
    : S2SUpdateGroupMemberReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateGroupMemberReq& operator=(S2SUpdateGroupMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateGroupMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateGroupMemberReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateGroupMemberReq*>(
               &_S2SUpdateGroupMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(S2SUpdateGroupMemberReq* other);
  friend void swap(S2SUpdateGroupMemberReq& a, S2SUpdateGroupMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateGroupMemberReq* New() const final {
    return CreateMaybeMessage<S2SUpdateGroupMemberReq>(NULL);
  }

  S2SUpdateGroupMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateGroupMemberReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateGroupMemberReq& from);
  void MergeFrom(const S2SUpdateGroupMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateGroupMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbstrings = 4;
  int pbstrings_size() const;
  void clear_pbstrings();
  static const int kPbstringsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbstrings() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbstrings();

  // bytes dataname = 3;
  void clear_dataname();
  static const int kDatanameFieldNumber = 3;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 memberid = 2;
  void clear_memberid();
  static const int kMemberidFieldNumber = 2;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateGroupMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateGroupMemberReq_PbstringsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbstrings_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse();
  S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse& other);
  static const S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse*>(&_S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateGroupMemberAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateGroupMemberAck) */ {
 public:
  S2SUpdateGroupMemberAck();
  virtual ~S2SUpdateGroupMemberAck();

  S2SUpdateGroupMemberAck(const S2SUpdateGroupMemberAck& from);

  inline S2SUpdateGroupMemberAck& operator=(const S2SUpdateGroupMemberAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateGroupMemberAck(S2SUpdateGroupMemberAck&& from) noexcept
    : S2SUpdateGroupMemberAck() {
    *this = ::std::move(from);
  }

  inline S2SUpdateGroupMemberAck& operator=(S2SUpdateGroupMemberAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateGroupMemberAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateGroupMemberAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateGroupMemberAck*>(
               &_S2SUpdateGroupMemberAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(S2SUpdateGroupMemberAck* other);
  friend void swap(S2SUpdateGroupMemberAck& a, S2SUpdateGroupMemberAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateGroupMemberAck* New() const final {
    return CreateMaybeMessage<S2SUpdateGroupMemberAck>(NULL);
  }

  S2SUpdateGroupMemberAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateGroupMemberAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateGroupMemberAck& from);
  void MergeFrom(const S2SUpdateGroupMemberAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateGroupMemberAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbstrings = 3;
  int pbstrings_size() const;
  void clear_pbstrings();
  static const int kPbstringsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbstrings() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbstrings();

  // bytes dataname = 2;
  void clear_dataname();
  static const int kDatanameFieldNumber = 2;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint64 memberid = 1;
  void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateGroupMemberAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateGroupMemberAck_PbstringsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbstrings_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateGroupDataAck_PbstringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateGroupDataAck_PbstringEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateGroupDataAck_PbstringEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateGroupDataAck_PbstringEntry_DoNotUse();
  S2SUpdateGroupDataAck_PbstringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateGroupDataAck_PbstringEntry_DoNotUse& other);
  static const S2SUpdateGroupDataAck_PbstringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateGroupDataAck_PbstringEntry_DoNotUse*>(&_S2SUpdateGroupDataAck_PbstringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateGroupDataAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateGroupDataAck) */ {
 public:
  S2SUpdateGroupDataAck();
  virtual ~S2SUpdateGroupDataAck();

  S2SUpdateGroupDataAck(const S2SUpdateGroupDataAck& from);

  inline S2SUpdateGroupDataAck& operator=(const S2SUpdateGroupDataAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateGroupDataAck(S2SUpdateGroupDataAck&& from) noexcept
    : S2SUpdateGroupDataAck() {
    *this = ::std::move(from);
  }

  inline S2SUpdateGroupDataAck& operator=(S2SUpdateGroupDataAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateGroupDataAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateGroupDataAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateGroupDataAck*>(
               &_S2SUpdateGroupDataAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(S2SUpdateGroupDataAck* other);
  friend void swap(S2SUpdateGroupDataAck& a, S2SUpdateGroupDataAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateGroupDataAck* New() const final {
    return CreateMaybeMessage<S2SUpdateGroupDataAck>(NULL);
  }

  S2SUpdateGroupDataAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateGroupDataAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateGroupDataAck& from);
  void MergeFrom(const S2SUpdateGroupDataAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateGroupDataAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbstring = 1;
  int pbstring_size() const;
  void clear_pbstring();
  static const int kPbstringFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbstring() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbstring();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateGroupDataAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateGroupDataAck_PbstringEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbstring_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateGuestListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateGuestListReq) */ {
 public:
  S2SUpdateGuestListReq();
  virtual ~S2SUpdateGuestListReq();

  S2SUpdateGuestListReq(const S2SUpdateGuestListReq& from);

  inline S2SUpdateGuestListReq& operator=(const S2SUpdateGuestListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateGuestListReq(S2SUpdateGuestListReq&& from) noexcept
    : S2SUpdateGuestListReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateGuestListReq& operator=(S2SUpdateGuestListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateGuestListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateGuestListReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateGuestListReq*>(
               &_S2SUpdateGuestListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(S2SUpdateGuestListReq* other);
  friend void swap(S2SUpdateGuestListReq& a, S2SUpdateGuestListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateGuestListReq* New() const final {
    return CreateMaybeMessage<S2SUpdateGuestListReq>(NULL);
  }

  S2SUpdateGuestListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateGuestListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateGuestListReq& from);
  void MergeFrom(const S2SUpdateGuestListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateGuestListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guestid = 2;
  void clear_guestid();
  static const int kGuestidFieldNumber = 2;
  ::google::protobuf::uint64 guestid() const;
  void set_guestid(::google::protobuf::uint64 value);

  // uint64 guesttime = 3;
  void clear_guesttime();
  static const int kGuesttimeFieldNumber = 3;
  ::google::protobuf::uint64 guesttime() const;
  void set_guesttime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateGuestListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guestid_;
  ::google::protobuf::uint64 guesttime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryGuestReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryGuestReq) */ {
 public:
  S2SQueryGuestReq();
  virtual ~S2SQueryGuestReq();

  S2SQueryGuestReq(const S2SQueryGuestReq& from);

  inline S2SQueryGuestReq& operator=(const S2SQueryGuestReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryGuestReq(S2SQueryGuestReq&& from) noexcept
    : S2SQueryGuestReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryGuestReq& operator=(S2SQueryGuestReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryGuestReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryGuestReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryGuestReq*>(
               &_S2SQueryGuestReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(S2SQueryGuestReq* other);
  friend void swap(S2SQueryGuestReq& a, S2SQueryGuestReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryGuestReq* New() const final {
    return CreateMaybeMessage<S2SQueryGuestReq>(NULL);
  }

  S2SQueryGuestReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryGuestReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryGuestReq& from);
  void MergeFrom(const S2SQueryGuestReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryGuestReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 queryid = 2;
  void clear_queryid();
  static const int kQueryidFieldNumber = 2;
  ::google::protobuf::uint64 queryid() const;
  void set_queryid(::google::protobuf::uint64 value);

  // uint64 querytime = 3;
  void clear_querytime();
  static const int kQuerytimeFieldNumber = 3;
  ::google::protobuf::uint64 querytime() const;
  void set_querytime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryGuestReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 queryid_;
  ::google::protobuf::uint64 querytime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryGuestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryGuestAck) */ {
 public:
  S2SQueryGuestAck();
  virtual ~S2SQueryGuestAck();

  S2SQueryGuestAck(const S2SQueryGuestAck& from);

  inline S2SQueryGuestAck& operator=(const S2SQueryGuestAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryGuestAck(S2SQueryGuestAck&& from) noexcept
    : S2SQueryGuestAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryGuestAck& operator=(S2SQueryGuestAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryGuestAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryGuestAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryGuestAck*>(
               &_S2SQueryGuestAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(S2SQueryGuestAck* other);
  friend void swap(S2SQueryGuestAck& a, S2SQueryGuestAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryGuestAck* New() const final {
    return CreateMaybeMessage<S2SQueryGuestAck>(NULL);
  }

  S2SQueryGuestAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryGuestAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryGuestAck& from);
  void MergeFrom(const S2SQueryGuestAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryGuestAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBGuestData guestdata = 4;
  int guestdata_size() const;
  void clear_guestdata();
  static const int kGuestdataFieldNumber = 4;
  ::KFMsg::PBGuestData* mutable_guestdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >*
      mutable_guestdata();
  const ::KFMsg::PBGuestData& guestdata(int index) const;
  ::KFMsg::PBGuestData* add_guestdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >&
      guestdata() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 queryid = 2;
  void clear_queryid();
  static const int kQueryidFieldNumber = 2;
  ::google::protobuf::uint64 queryid() const;
  void set_queryid(::google::protobuf::uint64 value);

  // uint32 guestcount = 3;
  void clear_guestcount();
  static const int kGuestcountFieldNumber = 3;
  ::google::protobuf::uint32 guestcount() const;
  void set_guestcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryGuestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData > guestdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 queryid_;
  ::google::protobuf::uint32 guestcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateRankDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateRankDataReq) */ {
 public:
  S2SUpdateRankDataReq();
  virtual ~S2SUpdateRankDataReq();

  S2SUpdateRankDataReq(const S2SUpdateRankDataReq& from);

  inline S2SUpdateRankDataReq& operator=(const S2SUpdateRankDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateRankDataReq(S2SUpdateRankDataReq&& from) noexcept
    : S2SUpdateRankDataReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateRankDataReq& operator=(S2SUpdateRankDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateRankDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateRankDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateRankDataReq*>(
               &_S2SUpdateRankDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(S2SUpdateRankDataReq* other);
  friend void swap(S2SUpdateRankDataReq& a, S2SUpdateRankDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateRankDataReq* New() const final {
    return CreateMaybeMessage<S2SUpdateRankDataReq>(NULL);
  }

  S2SUpdateRankDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateRankDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateRankDataReq& from);
  void MergeFrom(const S2SUpdateRankDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateRankDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankData pbrankdata = 4;
  bool has_pbrankdata() const;
  void clear_pbrankdata();
  static const int kPbrankdataFieldNumber = 4;
  private:
  const ::KFMsg::PBRankData& _internal_pbrankdata() const;
  public:
  const ::KFMsg::PBRankData& pbrankdata() const;
  ::KFMsg::PBRankData* release_pbrankdata();
  ::KFMsg::PBRankData* mutable_pbrankdata();
  void set_allocated_pbrankdata(::KFMsg::PBRankData* pbrankdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 rankid = 2;
  void clear_rankid();
  static const int kRankidFieldNumber = 2;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // uint32 zoneid = 3;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateRankDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankData* pbrankdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRankListReq) */ {
 public:
  S2SQueryRankListReq();
  virtual ~S2SQueryRankListReq();

  S2SQueryRankListReq(const S2SQueryRankListReq& from);

  inline S2SQueryRankListReq& operator=(const S2SQueryRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRankListReq(S2SQueryRankListReq&& from) noexcept
    : S2SQueryRankListReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRankListReq& operator=(S2SQueryRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRankListReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRankListReq*>(
               &_S2SQueryRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(S2SQueryRankListReq* other);
  friend void swap(S2SQueryRankListReq& a, S2SQueryRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRankListReq* New() const final {
    return CreateMaybeMessage<S2SQueryRankListReq>(NULL);
  }

  S2SQueryRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRankListReq& from);
  void MergeFrom(const S2SQueryRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 rankid = 3;
  void clear_rankid();
  static const int kRankidFieldNumber = 3;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // uint32 zoneid = 4;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryFriendRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryFriendRankListReq) */ {
 public:
  S2SQueryFriendRankListReq();
  virtual ~S2SQueryFriendRankListReq();

  S2SQueryFriendRankListReq(const S2SQueryFriendRankListReq& from);

  inline S2SQueryFriendRankListReq& operator=(const S2SQueryFriendRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryFriendRankListReq(S2SQueryFriendRankListReq&& from) noexcept
    : S2SQueryFriendRankListReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryFriendRankListReq& operator=(S2SQueryFriendRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryFriendRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryFriendRankListReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryFriendRankListReq*>(
               &_S2SQueryFriendRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(S2SQueryFriendRankListReq* other);
  friend void swap(S2SQueryFriendRankListReq& a, S2SQueryFriendRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryFriendRankListReq* New() const final {
    return CreateMaybeMessage<S2SQueryFriendRankListReq>(NULL);
  }

  S2SQueryFriendRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryFriendRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryFriendRankListReq& from);
  void MergeFrom(const S2SQueryFriendRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryFriendRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 friendid = 4;
  int friendid_size() const;
  void clear_friendid();
  static const int kFriendidFieldNumber = 4;
  ::google::protobuf::uint64 friendid(int index) const;
  void set_friendid(int index, ::google::protobuf::uint64 value);
  void add_friendid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friendid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friendid();

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 rankid = 3;
  void clear_rankid();
  static const int kRankidFieldNumber = 3;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryFriendRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friendid_;
  mutable int _friendid_cached_byte_size_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse();
  S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse& other);
  static const S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse*>(&_S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddRecentPlayerDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddRecentPlayerDataReq) */ {
 public:
  S2SAddRecentPlayerDataReq();
  virtual ~S2SAddRecentPlayerDataReq();

  S2SAddRecentPlayerDataReq(const S2SAddRecentPlayerDataReq& from);

  inline S2SAddRecentPlayerDataReq& operator=(const S2SAddRecentPlayerDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddRecentPlayerDataReq(S2SAddRecentPlayerDataReq&& from) noexcept
    : S2SAddRecentPlayerDataReq() {
    *this = ::std::move(from);
  }

  inline S2SAddRecentPlayerDataReq& operator=(S2SAddRecentPlayerDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddRecentPlayerDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddRecentPlayerDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddRecentPlayerDataReq*>(
               &_S2SAddRecentPlayerDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(S2SAddRecentPlayerDataReq* other);
  friend void swap(S2SAddRecentPlayerDataReq& a, S2SAddRecentPlayerDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddRecentPlayerDataReq* New() const final {
    return CreateMaybeMessage<S2SAddRecentPlayerDataReq>(NULL);
  }

  S2SAddRecentPlayerDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddRecentPlayerDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddRecentPlayerDataReq& from);
  void MergeFrom(const S2SAddRecentPlayerDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddRecentPlayerDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint64 members = 3;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 3;
  ::google::protobuf::uint64 members(int index) const;
  void set_members(int index, ::google::protobuf::uint64 value);
  void add_members(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_members();

  // map<string, bytes> pbdata = 4;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddRecentPlayerDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > members_;
  mutable int _members_cached_byte_size_;
  ::google::protobuf::internal::MapField<
      S2SAddRecentPlayerDataReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRecentListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRecentListReq) */ {
 public:
  S2SQueryRecentListReq();
  virtual ~S2SQueryRecentListReq();

  S2SQueryRecentListReq(const S2SQueryRecentListReq& from);

  inline S2SQueryRecentListReq& operator=(const S2SQueryRecentListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRecentListReq(S2SQueryRecentListReq&& from) noexcept
    : S2SQueryRecentListReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRecentListReq& operator=(S2SQueryRecentListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRecentListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRecentListReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRecentListReq*>(
               &_S2SQueryRecentListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(S2SQueryRecentListReq* other);
  friend void swap(S2SQueryRecentListReq& a, S2SQueryRecentListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRecentListReq* New() const final {
    return CreateMaybeMessage<S2SQueryRecentListReq>(NULL);
  }

  S2SQueryRecentListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRecentListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRecentListReq& from);
  void MergeFrom(const S2SQueryRecentListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRecentListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRecentListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRecentListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRecentListAck) */ {
 public:
  S2SQueryRecentListAck();
  virtual ~S2SQueryRecentListAck();

  S2SQueryRecentListAck(const S2SQueryRecentListAck& from);

  inline S2SQueryRecentListAck& operator=(const S2SQueryRecentListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRecentListAck(S2SQueryRecentListAck&& from) noexcept
    : S2SQueryRecentListAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryRecentListAck& operator=(S2SQueryRecentListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRecentListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRecentListAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRecentListAck*>(
               &_S2SQueryRecentListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(S2SQueryRecentListAck* other);
  friend void swap(S2SQueryRecentListAck& a, S2SQueryRecentListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRecentListAck* New() const final {
    return CreateMaybeMessage<S2SQueryRecentListAck>(NULL);
  }

  S2SQueryRecentListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRecentListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRecentListAck& from);
  void MergeFrom(const S2SQueryRecentListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRecentListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRelation pbrelation = 2;
  int pbrelation_size() const;
  void clear_pbrelation();
  static const int kPbrelationFieldNumber = 2;
  ::KFMsg::PBRelation* mutable_pbrelation(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
      mutable_pbrelation();
  const ::KFMsg::PBRelation& pbrelation(int index) const;
  ::KFMsg::PBRelation* add_pbrelation();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
      pbrelation() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRecentListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation > pbrelation_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateGuidReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateGuidReq) */ {
 public:
  S2SCreateGuidReq();
  virtual ~S2SCreateGuidReq();

  S2SCreateGuidReq(const S2SCreateGuidReq& from);

  inline S2SCreateGuidReq& operator=(const S2SCreateGuidReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateGuidReq(S2SCreateGuidReq&& from) noexcept
    : S2SCreateGuidReq() {
    *this = ::std::move(from);
  }

  inline S2SCreateGuidReq& operator=(S2SCreateGuidReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateGuidReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateGuidReq* internal_default_instance() {
    return reinterpret_cast<const S2SCreateGuidReq*>(
               &_S2SCreateGuidReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(S2SCreateGuidReq* other);
  friend void swap(S2SCreateGuidReq& a, S2SCreateGuidReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateGuidReq* New() const final {
    return CreateMaybeMessage<S2SCreateGuidReq>(NULL);
  }

  S2SCreateGuidReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateGuidReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateGuidReq& from);
  void MergeFrom(const S2SCreateGuidReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateGuidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes guildname = 4;
  void clear_guildname();
  static const int kGuildnameFieldNumber = 4;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const void* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // bytes manifesto = 6;
  void clear_manifesto();
  static const int kManifestoFieldNumber = 6;
  const ::std::string& manifesto() const;
  void set_manifesto(const ::std::string& value);
  #if LANG_CXX11
  void set_manifesto(::std::string&& value);
  #endif
  void set_manifesto(const char* value);
  void set_manifesto(const void* value, size_t size);
  ::std::string* mutable_manifesto();
  ::std::string* release_manifesto();
  void set_allocated_manifesto(::std::string* manifesto);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 medal = 5;
  void clear_medal();
  static const int kMedalFieldNumber = 5;
  ::google::protobuf::uint32 medal() const;
  void set_medal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateGuidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr manifesto_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 medal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateGuildToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateGuildToShardReq) */ {
 public:
  S2SCreateGuildToShardReq();
  virtual ~S2SCreateGuildToShardReq();

  S2SCreateGuildToShardReq(const S2SCreateGuildToShardReq& from);

  inline S2SCreateGuildToShardReq& operator=(const S2SCreateGuildToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateGuildToShardReq(S2SCreateGuildToShardReq&& from) noexcept
    : S2SCreateGuildToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SCreateGuildToShardReq& operator=(S2SCreateGuildToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateGuildToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateGuildToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SCreateGuildToShardReq*>(
               &_S2SCreateGuildToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(S2SCreateGuildToShardReq* other);
  friend void swap(S2SCreateGuildToShardReq& a, S2SCreateGuildToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateGuildToShardReq* New() const final {
    return CreateMaybeMessage<S2SCreateGuildToShardReq>(NULL);
  }

  S2SCreateGuildToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateGuildToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateGuildToShardReq& from);
  void MergeFrom(const S2SCreateGuildToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateGuildToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes guildname = 4;
  void clear_guildname();
  static const int kGuildnameFieldNumber = 4;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const void* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // bytes manifesto = 6;
  void clear_manifesto();
  static const int kManifestoFieldNumber = 6;
  const ::std::string& manifesto() const;
  void set_manifesto(const ::std::string& value);
  #if LANG_CXX11
  void set_manifesto(::std::string&& value);
  #endif
  void set_manifesto(const char* value);
  void set_manifesto(const void* value, size_t size);
  ::std::string* mutable_manifesto();
  ::std::string* release_manifesto();
  void set_allocated_manifesto(::std::string* manifesto);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 guildid = 7;
  void clear_guildid();
  static const int kGuildidFieldNumber = 7;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint32 medal = 5;
  void clear_medal();
  static const int kMedalFieldNumber = 5;
  ::google::protobuf::uint32 medal() const;
  void set_medal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateGuildToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr manifesto_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 medal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateGuildAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateGuildAck) */ {
 public:
  S2SCreateGuildAck();
  virtual ~S2SCreateGuildAck();

  S2SCreateGuildAck(const S2SCreateGuildAck& from);

  inline S2SCreateGuildAck& operator=(const S2SCreateGuildAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateGuildAck(S2SCreateGuildAck&& from) noexcept
    : S2SCreateGuildAck() {
    *this = ::std::move(from);
  }

  inline S2SCreateGuildAck& operator=(S2SCreateGuildAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateGuildAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateGuildAck* internal_default_instance() {
    return reinterpret_cast<const S2SCreateGuildAck*>(
               &_S2SCreateGuildAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(S2SCreateGuildAck* other);
  friend void swap(S2SCreateGuildAck& a, S2SCreateGuildAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateGuildAck* New() const final {
    return CreateMaybeMessage<S2SCreateGuildAck>(NULL);
  }

  S2SCreateGuildAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateGuildAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateGuildAck& from);
  void MergeFrom(const S2SCreateGuildAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateGuildAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes manifesto = 5;
  void clear_manifesto();
  static const int kManifestoFieldNumber = 5;
  const ::std::string& manifesto() const;
  void set_manifesto(const ::std::string& value);
  #if LANG_CXX11
  void set_manifesto(::std::string&& value);
  #endif
  void set_manifesto(const char* value);
  void set_manifesto(const void* value, size_t size);
  ::std::string* mutable_manifesto();
  ::std::string* release_manifesto();
  void set_allocated_manifesto(::std::string* manifesto);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // uint32 medal = 4;
  void clear_medal();
  static const int kMedalFieldNumber = 4;
  ::google::protobuf::uint32 medal() const;
  void set_medal(::google::protobuf::uint32 value);

  // uint64 guildid = 3;
  void clear_guildid();
  static const int kGuildidFieldNumber = 3;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateGuildAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr manifesto_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 medal_;
  ::google::protobuf::uint64 guildid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse();
  S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse*>(&_S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateMemberBasicDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateMemberBasicDataReq) */ {
 public:
  S2SUpdateMemberBasicDataReq();
  virtual ~S2SUpdateMemberBasicDataReq();

  S2SUpdateMemberBasicDataReq(const S2SUpdateMemberBasicDataReq& from);

  inline S2SUpdateMemberBasicDataReq& operator=(const S2SUpdateMemberBasicDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateMemberBasicDataReq(S2SUpdateMemberBasicDataReq&& from) noexcept
    : S2SUpdateMemberBasicDataReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateMemberBasicDataReq& operator=(S2SUpdateMemberBasicDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateMemberBasicDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateMemberBasicDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateMemberBasicDataReq*>(
               &_S2SUpdateMemberBasicDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(S2SUpdateMemberBasicDataReq* other);
  friend void swap(S2SUpdateMemberBasicDataReq& a, S2SUpdateMemberBasicDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateMemberBasicDataReq* New() const final {
    return CreateMaybeMessage<S2SUpdateMemberBasicDataReq>(NULL);
  }

  S2SUpdateMemberBasicDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateMemberBasicDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateMemberBasicDataReq& from);
  void MergeFrom(const S2SUpdateMemberBasicDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateMemberBasicDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateMemberBasicDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateMemberBasicDataReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SInviteGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SInviteGuildReq) */ {
 public:
  S2SInviteGuildReq();
  virtual ~S2SInviteGuildReq();

  S2SInviteGuildReq(const S2SInviteGuildReq& from);

  inline S2SInviteGuildReq& operator=(const S2SInviteGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SInviteGuildReq(S2SInviteGuildReq&& from) noexcept
    : S2SInviteGuildReq() {
    *this = ::std::move(from);
  }

  inline S2SInviteGuildReq& operator=(S2SInviteGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SInviteGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SInviteGuildReq* internal_default_instance() {
    return reinterpret_cast<const S2SInviteGuildReq*>(
               &_S2SInviteGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(S2SInviteGuildReq* other);
  friend void swap(S2SInviteGuildReq& a, S2SInviteGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SInviteGuildReq* New() const final {
    return CreateMaybeMessage<S2SInviteGuildReq>(NULL);
  }

  S2SInviteGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SInviteGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SInviteGuildReq& from);
  void MergeFrom(const S2SInviteGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SInviteGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 invitor = 2;
  void clear_invitor();
  static const int kInvitorFieldNumber = 2;
  ::google::protobuf::uint64 invitor() const;
  void set_invitor(::google::protobuf::uint64 value);

  // uint64 invitedid = 3;
  void clear_invitedid();
  static const int kInvitedidFieldNumber = 3;
  ::google::protobuf::uint64 invitedid() const;
  void set_invitedid(::google::protobuf::uint64 value);

  // uint64 serverid = 4;
  void clear_serverid();
  static const int kServeridFieldNumber = 4;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SInviteGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 invitor_;
  ::google::protobuf::uint64 invitedid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SInviteGuildAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SInviteGuildAck) */ {
 public:
  S2SInviteGuildAck();
  virtual ~S2SInviteGuildAck();

  S2SInviteGuildAck(const S2SInviteGuildAck& from);

  inline S2SInviteGuildAck& operator=(const S2SInviteGuildAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SInviteGuildAck(S2SInviteGuildAck&& from) noexcept
    : S2SInviteGuildAck() {
    *this = ::std::move(from);
  }

  inline S2SInviteGuildAck& operator=(S2SInviteGuildAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SInviteGuildAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SInviteGuildAck* internal_default_instance() {
    return reinterpret_cast<const S2SInviteGuildAck*>(
               &_S2SInviteGuildAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(S2SInviteGuildAck* other);
  friend void swap(S2SInviteGuildAck& a, S2SInviteGuildAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SInviteGuildAck* New() const final {
    return CreateMaybeMessage<S2SInviteGuildAck>(NULL);
  }

  S2SInviteGuildAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SInviteGuildAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SInviteGuildAck& from);
  void MergeFrom(const S2SInviteGuildAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SInviteGuildAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 invitedid = 3;
  void clear_invitedid();
  static const int kInvitedidFieldNumber = 3;
  ::google::protobuf::uint64 invitedid() const;
  void set_invitedid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SInviteGuildAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 invitedid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SApplyGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SApplyGuildReq) */ {
 public:
  S2SApplyGuildReq();
  virtual ~S2SApplyGuildReq();

  S2SApplyGuildReq(const S2SApplyGuildReq& from);

  inline S2SApplyGuildReq& operator=(const S2SApplyGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SApplyGuildReq(S2SApplyGuildReq&& from) noexcept
    : S2SApplyGuildReq() {
    *this = ::std::move(from);
  }

  inline S2SApplyGuildReq& operator=(S2SApplyGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SApplyGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SApplyGuildReq* internal_default_instance() {
    return reinterpret_cast<const S2SApplyGuildReq*>(
               &_S2SApplyGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(S2SApplyGuildReq* other);
  friend void swap(S2SApplyGuildReq& a, S2SApplyGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SApplyGuildReq* New() const final {
    return CreateMaybeMessage<S2SApplyGuildReq>(NULL);
  }

  S2SApplyGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SApplyGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SApplyGuildReq& from);
  void MergeFrom(const S2SApplyGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SApplyGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 invitor = 2;
  void clear_invitor();
  static const int kInvitorFieldNumber = 2;
  ::google::protobuf::uint64 invitor() const;
  void set_invitor(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SApplyGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 invitor_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SApplyGuildAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SApplyGuildAck) */ {
 public:
  S2SApplyGuildAck();
  virtual ~S2SApplyGuildAck();

  S2SApplyGuildAck(const S2SApplyGuildAck& from);

  inline S2SApplyGuildAck& operator=(const S2SApplyGuildAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SApplyGuildAck(S2SApplyGuildAck&& from) noexcept
    : S2SApplyGuildAck() {
    *this = ::std::move(from);
  }

  inline S2SApplyGuildAck& operator=(S2SApplyGuildAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SApplyGuildAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SApplyGuildAck* internal_default_instance() {
    return reinterpret_cast<const S2SApplyGuildAck*>(
               &_S2SApplyGuildAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(S2SApplyGuildAck* other);
  friend void swap(S2SApplyGuildAck& a, S2SApplyGuildAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SApplyGuildAck* New() const final {
    return CreateMaybeMessage<S2SApplyGuildAck>(NULL);
  }

  S2SApplyGuildAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SApplyGuildAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SApplyGuildAck& from);
  void MergeFrom(const S2SApplyGuildAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SApplyGuildAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint32 code = 3;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SApplyGuildAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerGuildChangeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerGuildChangeReq) */ {
 public:
  S2SPlayerGuildChangeReq();
  virtual ~S2SPlayerGuildChangeReq();

  S2SPlayerGuildChangeReq(const S2SPlayerGuildChangeReq& from);

  inline S2SPlayerGuildChangeReq& operator=(const S2SPlayerGuildChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerGuildChangeReq(S2SPlayerGuildChangeReq&& from) noexcept
    : S2SPlayerGuildChangeReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerGuildChangeReq& operator=(S2SPlayerGuildChangeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerGuildChangeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerGuildChangeReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerGuildChangeReq*>(
               &_S2SPlayerGuildChangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(S2SPlayerGuildChangeReq* other);
  friend void swap(S2SPlayerGuildChangeReq& a, S2SPlayerGuildChangeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerGuildChangeReq* New() const final {
    return CreateMaybeMessage<S2SPlayerGuildChangeReq>(NULL);
  }

  S2SPlayerGuildChangeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerGuildChangeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerGuildChangeReq& from);
  void MergeFrom(const S2SPlayerGuildChangeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerGuildChangeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint32 code = 3;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerGuildChangeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SExitGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SExitGuildReq) */ {
 public:
  S2SExitGuildReq();
  virtual ~S2SExitGuildReq();

  S2SExitGuildReq(const S2SExitGuildReq& from);

  inline S2SExitGuildReq& operator=(const S2SExitGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SExitGuildReq(S2SExitGuildReq&& from) noexcept
    : S2SExitGuildReq() {
    *this = ::std::move(from);
  }

  inline S2SExitGuildReq& operator=(S2SExitGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SExitGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SExitGuildReq* internal_default_instance() {
    return reinterpret_cast<const S2SExitGuildReq*>(
               &_S2SExitGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(S2SExitGuildReq* other);
  friend void swap(S2SExitGuildReq& a, S2SExitGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SExitGuildReq* New() const final {
    return CreateMaybeMessage<S2SExitGuildReq>(NULL);
  }

  S2SExitGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SExitGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SExitGuildReq& from);
  void MergeFrom(const S2SExitGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SExitGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SExitGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransferMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransferMasterReq) */ {
 public:
  S2STransferMasterReq();
  virtual ~S2STransferMasterReq();

  S2STransferMasterReq(const S2STransferMasterReq& from);

  inline S2STransferMasterReq& operator=(const S2STransferMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransferMasterReq(S2STransferMasterReq&& from) noexcept
    : S2STransferMasterReq() {
    *this = ::std::move(from);
  }

  inline S2STransferMasterReq& operator=(S2STransferMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransferMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransferMasterReq* internal_default_instance() {
    return reinterpret_cast<const S2STransferMasterReq*>(
               &_S2STransferMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(S2STransferMasterReq* other);
  friend void swap(S2STransferMasterReq& a, S2STransferMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransferMasterReq* New() const final {
    return CreateMaybeMessage<S2STransferMasterReq>(NULL);
  }

  S2STransferMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransferMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransferMasterReq& from);
  void MergeFrom(const S2STransferMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransferMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 newmasterid = 3;
  void clear_newmasterid();
  static const int kNewmasteridFieldNumber = 3;
  ::google::protobuf::uint64 newmasterid() const;
  void set_newmasterid(::google::protobuf::uint64 value);

  // uint64 serverid = 4;
  void clear_serverid();
  static const int kServeridFieldNumber = 4;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransferMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 newmasterid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SReviewApplyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SReviewApplyReq) */ {
 public:
  S2SReviewApplyReq();
  virtual ~S2SReviewApplyReq();

  S2SReviewApplyReq(const S2SReviewApplyReq& from);

  inline S2SReviewApplyReq& operator=(const S2SReviewApplyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SReviewApplyReq(S2SReviewApplyReq&& from) noexcept
    : S2SReviewApplyReq() {
    *this = ::std::move(from);
  }

  inline S2SReviewApplyReq& operator=(S2SReviewApplyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SReviewApplyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SReviewApplyReq* internal_default_instance() {
    return reinterpret_cast<const S2SReviewApplyReq*>(
               &_S2SReviewApplyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(S2SReviewApplyReq* other);
  friend void swap(S2SReviewApplyReq& a, S2SReviewApplyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SReviewApplyReq* New() const final {
    return CreateMaybeMessage<S2SReviewApplyReq>(NULL);
  }

  S2SReviewApplyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SReviewApplyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SReviewApplyReq& from);
  void MergeFrom(const S2SReviewApplyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SReviewApplyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 dealplayerid = 2;
  void clear_dealplayerid();
  static const int kDealplayeridFieldNumber = 2;
  ::google::protobuf::uint64 dealplayerid() const;
  void set_dealplayerid(::google::protobuf::uint64 value);

  // uint32 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // uint32 operatortype = 3;
  void clear_operatortype();
  static const int kOperatortypeFieldNumber = 3;
  ::google::protobuf::uint32 operatortype() const;
  void set_operatortype(::google::protobuf::uint32 value);

  // uint64 guildid = 4;
  void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SReviewApplyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 dealplayerid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 operatortype_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDissolveGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDissolveGuildReq) */ {
 public:
  S2SDissolveGuildReq();
  virtual ~S2SDissolveGuildReq();

  S2SDissolveGuildReq(const S2SDissolveGuildReq& from);

  inline S2SDissolveGuildReq& operator=(const S2SDissolveGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDissolveGuildReq(S2SDissolveGuildReq&& from) noexcept
    : S2SDissolveGuildReq() {
    *this = ::std::move(from);
  }

  inline S2SDissolveGuildReq& operator=(S2SDissolveGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDissolveGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDissolveGuildReq* internal_default_instance() {
    return reinterpret_cast<const S2SDissolveGuildReq*>(
               &_S2SDissolveGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(S2SDissolveGuildReq* other);
  friend void swap(S2SDissolveGuildReq& a, S2SDissolveGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDissolveGuildReq* New() const final {
    return CreateMaybeMessage<S2SDissolveGuildReq>(NULL);
  }

  S2SDissolveGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDissolveGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDissolveGuildReq& from);
  void MergeFrom(const S2SDissolveGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDissolveGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDissolveGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SModifyMedalReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SModifyMedalReq) */ {
 public:
  S2SModifyMedalReq();
  virtual ~S2SModifyMedalReq();

  S2SModifyMedalReq(const S2SModifyMedalReq& from);

  inline S2SModifyMedalReq& operator=(const S2SModifyMedalReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SModifyMedalReq(S2SModifyMedalReq&& from) noexcept
    : S2SModifyMedalReq() {
    *this = ::std::move(from);
  }

  inline S2SModifyMedalReq& operator=(S2SModifyMedalReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SModifyMedalReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SModifyMedalReq* internal_default_instance() {
    return reinterpret_cast<const S2SModifyMedalReq*>(
               &_S2SModifyMedalReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(S2SModifyMedalReq* other);
  friend void swap(S2SModifyMedalReq& a, S2SModifyMedalReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SModifyMedalReq* New() const final {
    return CreateMaybeMessage<S2SModifyMedalReq>(NULL);
  }

  S2SModifyMedalReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SModifyMedalReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SModifyMedalReq& from);
  void MergeFrom(const S2SModifyMedalReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SModifyMedalReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 newmedal = 4;
  void clear_newmedal();
  static const int kNewmedalFieldNumber = 4;
  ::google::protobuf::uint32 newmedal() const;
  void set_newmedal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SModifyMedalReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 newmedal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryGuildListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryGuildListReq) */ {
 public:
  S2SQueryGuildListReq();
  virtual ~S2SQueryGuildListReq();

  S2SQueryGuildListReq(const S2SQueryGuildListReq& from);

  inline S2SQueryGuildListReq& operator=(const S2SQueryGuildListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryGuildListReq(S2SQueryGuildListReq&& from) noexcept
    : S2SQueryGuildListReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryGuildListReq& operator=(S2SQueryGuildListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryGuildListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryGuildListReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryGuildListReq*>(
               &_S2SQueryGuildListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(S2SQueryGuildListReq* other);
  friend void swap(S2SQueryGuildListReq& a, S2SQueryGuildListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryGuildListReq* New() const final {
    return CreateMaybeMessage<S2SQueryGuildListReq>(NULL);
  }

  S2SQueryGuildListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryGuildListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryGuildListReq& from);
  void MergeFrom(const S2SQueryGuildListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryGuildListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guilds = 3;
  int guilds_size() const;
  void clear_guilds();
  static const int kGuildsFieldNumber = 3;
  ::google::protobuf::uint64 guilds(int index) const;
  void set_guilds(int index, ::google::protobuf::uint64 value);
  void add_guilds(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guilds() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guilds();

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 cursor = 4;
  void clear_cursor();
  static const int kCursorFieldNumber = 4;
  ::google::protobuf::uint32 cursor() const;
  void set_cursor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryGuildListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guilds_;
  mutable int _guilds_cached_byte_size_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 cursor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickMemberReq) */ {
 public:
  S2SKickMemberReq();
  virtual ~S2SKickMemberReq();

  S2SKickMemberReq(const S2SKickMemberReq& from);

  inline S2SKickMemberReq& operator=(const S2SKickMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickMemberReq(S2SKickMemberReq&& from) noexcept
    : S2SKickMemberReq() {
    *this = ::std::move(from);
  }

  inline S2SKickMemberReq& operator=(S2SKickMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickMemberReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickMemberReq*>(
               &_S2SKickMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(S2SKickMemberReq* other);
  friend void swap(S2SKickMemberReq& a, S2SKickMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickMemberReq* New() const final {
    return CreateMaybeMessage<S2SKickMemberReq>(NULL);
  }

  S2SKickMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickMemberReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickMemberReq& from);
  void MergeFrom(const S2SKickMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 toplayerid = 3;
  void clear_toplayerid();
  static const int kToplayeridFieldNumber = 3;
  ::google::protobuf::uint64 toplayerid() const;
  void set_toplayerid(::google::protobuf::uint64 value);

  // uint64 serverid = 4;
  void clear_serverid();
  static const int kServeridFieldNumber = 4;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 toplayerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginQueryGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginQueryGuildReq) */ {
 public:
  S2SLoginQueryGuildReq();
  virtual ~S2SLoginQueryGuildReq();

  S2SLoginQueryGuildReq(const S2SLoginQueryGuildReq& from);

  inline S2SLoginQueryGuildReq& operator=(const S2SLoginQueryGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginQueryGuildReq(S2SLoginQueryGuildReq&& from) noexcept
    : S2SLoginQueryGuildReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginQueryGuildReq& operator=(S2SLoginQueryGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginQueryGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginQueryGuildReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginQueryGuildReq*>(
               &_S2SLoginQueryGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(S2SLoginQueryGuildReq* other);
  friend void swap(S2SLoginQueryGuildReq& a, S2SLoginQueryGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginQueryGuildReq* New() const final {
    return CreateMaybeMessage<S2SLoginQueryGuildReq>(NULL);
  }

  S2SLoginQueryGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginQueryGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginQueryGuildReq& from);
  void MergeFrom(const S2SLoginQueryGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginQueryGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint32 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // uint32 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginQueryGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginQueryGuildAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginQueryGuildAck) */ {
 public:
  S2SLoginQueryGuildAck();
  virtual ~S2SLoginQueryGuildAck();

  S2SLoginQueryGuildAck(const S2SLoginQueryGuildAck& from);

  inline S2SLoginQueryGuildAck& operator=(const S2SLoginQueryGuildAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginQueryGuildAck(S2SLoginQueryGuildAck&& from) noexcept
    : S2SLoginQueryGuildAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginQueryGuildAck& operator=(S2SLoginQueryGuildAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginQueryGuildAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginQueryGuildAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginQueryGuildAck*>(
               &_S2SLoginQueryGuildAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(S2SLoginQueryGuildAck* other);
  friend void swap(S2SLoginQueryGuildAck& a, S2SLoginQueryGuildAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginQueryGuildAck* New() const final {
    return CreateMaybeMessage<S2SLoginQueryGuildAck>(NULL);
  }

  S2SLoginQueryGuildAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginQueryGuildAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginQueryGuildAck& from);
  void MergeFrom(const S2SLoginQueryGuildAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginQueryGuildAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject guilddata = 2;
  bool has_guilddata() const;
  void clear_guilddata();
  static const int kGuilddataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_guilddata() const;
  public:
  const ::KFMsg::PBObject& guilddata() const;
  ::KFMsg::PBObject* release_guilddata();
  ::KFMsg::PBObject* mutable_guilddata();
  void set_allocated_guilddata(::KFMsg::PBObject* guilddata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 4;
  void clear_guildid();
  static const int kGuildidFieldNumber = 4;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // bool showapplicant = 3;
  void clear_showapplicant();
  static const int kShowapplicantFieldNumber = 3;
  bool showapplicant() const;
  void set_showapplicant(bool value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginQueryGuildAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* guilddata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  bool showapplicant_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateGuildDataReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateGuildDataReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateGuildDataReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateGuildDataReq_PbdataEntry_DoNotUse();
  S2SUpdateGuildDataReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateGuildDataReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateGuildDataReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateGuildDataReq_PbdataEntry_DoNotUse*>(&_S2SUpdateGuildDataReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateGuildDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateGuildDataReq) */ {
 public:
  S2SUpdateGuildDataReq();
  virtual ~S2SUpdateGuildDataReq();

  S2SUpdateGuildDataReq(const S2SUpdateGuildDataReq& from);

  inline S2SUpdateGuildDataReq& operator=(const S2SUpdateGuildDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateGuildDataReq(S2SUpdateGuildDataReq&& from) noexcept
    : S2SUpdateGuildDataReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateGuildDataReq& operator=(S2SUpdateGuildDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateGuildDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateGuildDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateGuildDataReq*>(
               &_S2SUpdateGuildDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(S2SUpdateGuildDataReq* other);
  friend void swap(S2SUpdateGuildDataReq& a, S2SUpdateGuildDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateGuildDataReq* New() const final {
    return CreateMaybeMessage<S2SUpdateGuildDataReq>(NULL);
  }

  S2SUpdateGuildDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateGuildDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateGuildDataReq& from);
  void MergeFrom(const S2SUpdateGuildDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateGuildDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateGuildDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateGuildDataReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpgradeGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpgradeGuildReq) */ {
 public:
  S2SUpgradeGuildReq();
  virtual ~S2SUpgradeGuildReq();

  S2SUpgradeGuildReq(const S2SUpgradeGuildReq& from);

  inline S2SUpgradeGuildReq& operator=(const S2SUpgradeGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpgradeGuildReq(S2SUpgradeGuildReq&& from) noexcept
    : S2SUpgradeGuildReq() {
    *this = ::std::move(from);
  }

  inline S2SUpgradeGuildReq& operator=(S2SUpgradeGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpgradeGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpgradeGuildReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpgradeGuildReq*>(
               &_S2SUpgradeGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(S2SUpgradeGuildReq* other);
  friend void swap(S2SUpgradeGuildReq& a, S2SUpgradeGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpgradeGuildReq* New() const final {
    return CreateMaybeMessage<S2SUpgradeGuildReq>(NULL);
  }

  S2SUpgradeGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpgradeGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpgradeGuildReq& from);
  void MergeFrom(const S2SUpgradeGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpgradeGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpgradeGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpgradeGuildAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpgradeGuildAck) */ {
 public:
  S2SUpgradeGuildAck();
  virtual ~S2SUpgradeGuildAck();

  S2SUpgradeGuildAck(const S2SUpgradeGuildAck& from);

  inline S2SUpgradeGuildAck& operator=(const S2SUpgradeGuildAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpgradeGuildAck(S2SUpgradeGuildAck&& from) noexcept
    : S2SUpgradeGuildAck() {
    *this = ::std::move(from);
  }

  inline S2SUpgradeGuildAck& operator=(S2SUpgradeGuildAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpgradeGuildAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpgradeGuildAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpgradeGuildAck*>(
               &_S2SUpgradeGuildAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(S2SUpgradeGuildAck* other);
  friend void swap(S2SUpgradeGuildAck& a, S2SUpgradeGuildAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpgradeGuildAck* New() const final {
    return CreateMaybeMessage<S2SUpgradeGuildAck>(NULL);
  }

  S2SUpgradeGuildAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpgradeGuildAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpgradeGuildAck& from);
  void MergeFrom(const S2SUpgradeGuildAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpgradeGuildAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 code = 3;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpgradeGuildAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAppointGuildMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAppointGuildMemberReq) */ {
 public:
  S2SAppointGuildMemberReq();
  virtual ~S2SAppointGuildMemberReq();

  S2SAppointGuildMemberReq(const S2SAppointGuildMemberReq& from);

  inline S2SAppointGuildMemberReq& operator=(const S2SAppointGuildMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAppointGuildMemberReq(S2SAppointGuildMemberReq&& from) noexcept
    : S2SAppointGuildMemberReq() {
    *this = ::std::move(from);
  }

  inline S2SAppointGuildMemberReq& operator=(S2SAppointGuildMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAppointGuildMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAppointGuildMemberReq* internal_default_instance() {
    return reinterpret_cast<const S2SAppointGuildMemberReq*>(
               &_S2SAppointGuildMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(S2SAppointGuildMemberReq* other);
  friend void swap(S2SAppointGuildMemberReq& a, S2SAppointGuildMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAppointGuildMemberReq* New() const final {
    return CreateMaybeMessage<S2SAppointGuildMemberReq>(NULL);
  }

  S2SAppointGuildMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAppointGuildMemberReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAppointGuildMemberReq& from);
  void MergeFrom(const S2SAppointGuildMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAppointGuildMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 toplayerid = 3;
  void clear_toplayerid();
  static const int kToplayeridFieldNumber = 3;
  ::google::protobuf::uint64 toplayerid() const;
  void set_toplayerid(::google::protobuf::uint64 value);

  // uint64 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 title = 4;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAppointGuildMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 toplayerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 title_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSearchGuildByNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSearchGuildByNameReq) */ {
 public:
  S2SSearchGuildByNameReq();
  virtual ~S2SSearchGuildByNameReq();

  S2SSearchGuildByNameReq(const S2SSearchGuildByNameReq& from);

  inline S2SSearchGuildByNameReq& operator=(const S2SSearchGuildByNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSearchGuildByNameReq(S2SSearchGuildByNameReq&& from) noexcept
    : S2SSearchGuildByNameReq() {
    *this = ::std::move(from);
  }

  inline S2SSearchGuildByNameReq& operator=(S2SSearchGuildByNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSearchGuildByNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSearchGuildByNameReq* internal_default_instance() {
    return reinterpret_cast<const S2SSearchGuildByNameReq*>(
               &_S2SSearchGuildByNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(S2SSearchGuildByNameReq* other);
  friend void swap(S2SSearchGuildByNameReq& a, S2SSearchGuildByNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSearchGuildByNameReq* New() const final {
    return CreateMaybeMessage<S2SSearchGuildByNameReq>(NULL);
  }

  S2SSearchGuildByNameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSearchGuildByNameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSearchGuildByNameReq& from);
  void MergeFrom(const S2SSearchGuildByNameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSearchGuildByNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guildname = 1;
  void clear_guildname();
  static const int kGuildnameFieldNumber = 1;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const void* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSearchGuildByNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSetGuildSwitchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSetGuildSwitchReq) */ {
 public:
  S2SSetGuildSwitchReq();
  virtual ~S2SSetGuildSwitchReq();

  S2SSetGuildSwitchReq(const S2SSetGuildSwitchReq& from);

  inline S2SSetGuildSwitchReq& operator=(const S2SSetGuildSwitchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSetGuildSwitchReq(S2SSetGuildSwitchReq&& from) noexcept
    : S2SSetGuildSwitchReq() {
    *this = ::std::move(from);
  }

  inline S2SSetGuildSwitchReq& operator=(S2SSetGuildSwitchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSetGuildSwitchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSetGuildSwitchReq* internal_default_instance() {
    return reinterpret_cast<const S2SSetGuildSwitchReq*>(
               &_S2SSetGuildSwitchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(S2SSetGuildSwitchReq* other);
  friend void swap(S2SSetGuildSwitchReq& a, S2SSetGuildSwitchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSetGuildSwitchReq* New() const final {
    return CreateMaybeMessage<S2SSetGuildSwitchReq>(NULL);
  }

  S2SSetGuildSwitchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSetGuildSwitchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSetGuildSwitchReq& from);
  void MergeFrom(const S2SSetGuildSwitchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSetGuildSwitchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 flag = 4;
  void clear_flag();
  static const int kFlagFieldNumber = 4;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSetGuildSwitchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginQueryGuildidReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginQueryGuildidReq) */ {
 public:
  S2SLoginQueryGuildidReq();
  virtual ~S2SLoginQueryGuildidReq();

  S2SLoginQueryGuildidReq(const S2SLoginQueryGuildidReq& from);

  inline S2SLoginQueryGuildidReq& operator=(const S2SLoginQueryGuildidReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginQueryGuildidReq(S2SLoginQueryGuildidReq&& from) noexcept
    : S2SLoginQueryGuildidReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginQueryGuildidReq& operator=(S2SLoginQueryGuildidReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginQueryGuildidReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginQueryGuildidReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginQueryGuildidReq*>(
               &_S2SLoginQueryGuildidReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(S2SLoginQueryGuildidReq* other);
  friend void swap(S2SLoginQueryGuildidReq& a, S2SLoginQueryGuildidReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginQueryGuildidReq* New() const final {
    return CreateMaybeMessage<S2SLoginQueryGuildidReq>(NULL);
  }

  S2SLoginQueryGuildidReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginQueryGuildidReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginQueryGuildidReq& from);
  void MergeFrom(const S2SLoginQueryGuildidReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginQueryGuildidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginQueryGuildidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginQueryGuildidAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginQueryGuildidAck) */ {
 public:
  S2SLoginQueryGuildidAck();
  virtual ~S2SLoginQueryGuildidAck();

  S2SLoginQueryGuildidAck(const S2SLoginQueryGuildidAck& from);

  inline S2SLoginQueryGuildidAck& operator=(const S2SLoginQueryGuildidAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginQueryGuildidAck(S2SLoginQueryGuildidAck&& from) noexcept
    : S2SLoginQueryGuildidAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginQueryGuildidAck& operator=(S2SLoginQueryGuildidAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginQueryGuildidAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginQueryGuildidAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginQueryGuildidAck*>(
               &_S2SLoginQueryGuildidAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(S2SLoginQueryGuildidAck* other);
  friend void swap(S2SLoginQueryGuildidAck& a, S2SLoginQueryGuildidAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginQueryGuildidAck* New() const final {
    return CreateMaybeMessage<S2SLoginQueryGuildidAck>(NULL);
  }

  S2SLoginQueryGuildidAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginQueryGuildidAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginQueryGuildidAck& from);
  void MergeFrom(const S2SLoginQueryGuildidAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginQueryGuildidAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 guildid = 2;
  void clear_guildid();
  static const int kGuildidFieldNumber = 2;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginQueryGuildidAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 guildid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryGuildLogReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryGuildLogReq) */ {
 public:
  S2SQueryGuildLogReq();
  virtual ~S2SQueryGuildLogReq();

  S2SQueryGuildLogReq(const S2SQueryGuildLogReq& from);

  inline S2SQueryGuildLogReq& operator=(const S2SQueryGuildLogReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryGuildLogReq(S2SQueryGuildLogReq&& from) noexcept
    : S2SQueryGuildLogReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryGuildLogReq& operator=(S2SQueryGuildLogReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryGuildLogReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryGuildLogReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryGuildLogReq*>(
               &_S2SQueryGuildLogReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(S2SQueryGuildLogReq* other);
  friend void swap(S2SQueryGuildLogReq& a, S2SQueryGuildLogReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryGuildLogReq* New() const final {
    return CreateMaybeMessage<S2SQueryGuildLogReq>(NULL);
  }

  S2SQueryGuildLogReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryGuildLogReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryGuildLogReq& from);
  void MergeFrom(const S2SQueryGuildLogReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryGuildLogReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 beginpos = 4;
  void clear_beginpos();
  static const int kBeginposFieldNumber = 4;
  ::google::protobuf::uint32 beginpos() const;
  void set_beginpos(::google::protobuf::uint32 value);

  // uint32 endpos = 5;
  void clear_endpos();
  static const int kEndposFieldNumber = 5;
  ::google::protobuf::uint32 endpos() const;
  void set_endpos(::google::protobuf::uint32 value);

  // uint32 page = 6;
  void clear_page();
  static const int kPageFieldNumber = 6;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryGuildLogReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 beginpos_;
  ::google::protobuf::uint32 endpos_;
  ::google::protobuf::uint32 page_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddGuildActivenessReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddGuildActivenessReq) */ {
 public:
  S2SAddGuildActivenessReq();
  virtual ~S2SAddGuildActivenessReq();

  S2SAddGuildActivenessReq(const S2SAddGuildActivenessReq& from);

  inline S2SAddGuildActivenessReq& operator=(const S2SAddGuildActivenessReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddGuildActivenessReq(S2SAddGuildActivenessReq&& from) noexcept
    : S2SAddGuildActivenessReq() {
    *this = ::std::move(from);
  }

  inline S2SAddGuildActivenessReq& operator=(S2SAddGuildActivenessReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddGuildActivenessReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddGuildActivenessReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddGuildActivenessReq*>(
               &_S2SAddGuildActivenessReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(S2SAddGuildActivenessReq* other);
  friend void swap(S2SAddGuildActivenessReq& a, S2SAddGuildActivenessReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddGuildActivenessReq* New() const final {
    return CreateMaybeMessage<S2SAddGuildActivenessReq>(NULL);
  }

  S2SAddGuildActivenessReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddGuildActivenessReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddGuildActivenessReq& from);
  void MergeFrom(const S2SAddGuildActivenessReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddGuildActivenessReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 activeness = 3;
  void clear_activeness();
  static const int kActivenessFieldNumber = 3;
  ::google::protobuf::uint32 activeness() const;
  void set_activeness(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddGuildActivenessReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 activeness_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSendChatToServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSendChatToServer) */ {
 public:
  S2SSendChatToServer();
  virtual ~S2SSendChatToServer();

  S2SSendChatToServer(const S2SSendChatToServer& from);

  inline S2SSendChatToServer& operator=(const S2SSendChatToServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSendChatToServer(S2SSendChatToServer&& from) noexcept
    : S2SSendChatToServer() {
    *this = ::std::move(from);
  }

  inline S2SSendChatToServer& operator=(S2SSendChatToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSendChatToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSendChatToServer* internal_default_instance() {
    return reinterpret_cast<const S2SSendChatToServer*>(
               &_S2SSendChatToServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(S2SSendChatToServer* other);
  friend void swap(S2SSendChatToServer& a, S2SSendChatToServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSendChatToServer* New() const final {
    return CreateMaybeMessage<S2SSendChatToServer>(NULL);
  }

  S2SSendChatToServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSendChatToServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSendChatToServer& from);
  void MergeFrom(const S2SSendChatToServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSendChatToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // bytes playername = 3;
  void clear_playername();
  static const int kPlayernameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // bytes playericon = 5;
  void clear_playericon();
  static const int kPlayericonFieldNumber = 5;
  const ::std::string& playericon() const;
  void set_playericon(const ::std::string& value);
  #if LANG_CXX11
  void set_playericon(::std::string&& value);
  #endif
  void set_playericon(const char* value);
  void set_playericon(const void* value, size_t size);
  ::std::string* mutable_playericon();
  ::std::string* release_playericon();
  void set_allocated_playericon(::std::string* playericon);

  // bytes playericonbox = 8;
  void clear_playericonbox();
  static const int kPlayericonboxFieldNumber = 8;
  const ::std::string& playericonbox() const;
  void set_playericonbox(const ::std::string& value);
  #if LANG_CXX11
  void set_playericonbox(::std::string&& value);
  #endif
  void set_playericonbox(const char* value);
  void set_playericonbox(const void* value, size_t size);
  ::std::string* mutable_playericonbox();
  ::std::string* release_playericonbox();
  void set_allocated_playericonbox(::std::string* playericonbox);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // uint32 playergrade = 6;
  void clear_playergrade();
  static const int kPlayergradeFieldNumber = 6;
  ::google::protobuf::uint32 playergrade() const;
  void set_playergrade(::google::protobuf::uint32 value);

  // uint64 playerserverid = 9;
  void clear_playerserverid();
  static const int kPlayerserveridFieldNumber = 9;
  ::google::protobuf::uint64 playerserverid() const;
  void set_playerserverid(::google::protobuf::uint64 value);

  // uint32 playersex = 7;
  void clear_playersex();
  static const int kPlayersexFieldNumber = 7;
  ::google::protobuf::uint32 playersex() const;
  void set_playersex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSendChatToServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr playericon_;
  ::google::protobuf::internal::ArenaStringPtr playericonbox_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 isvoice_;
  ::google::protobuf::uint32 playergrade_;
  ::google::protobuf::uint64 playerserverid_;
  ::google::protobuf::uint32 playersex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterMatchReq) */ {
 public:
  S2SRegisterMatchReq();
  virtual ~S2SRegisterMatchReq();

  S2SRegisterMatchReq(const S2SRegisterMatchReq& from);

  inline S2SRegisterMatchReq& operator=(const S2SRegisterMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterMatchReq(S2SRegisterMatchReq&& from) noexcept
    : S2SRegisterMatchReq() {
    *this = ::std::move(from);
  }

  inline S2SRegisterMatchReq& operator=(S2SRegisterMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterMatchReq* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterMatchReq*>(
               &_S2SRegisterMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(S2SRegisterMatchReq* other);
  friend void swap(S2SRegisterMatchReq& a, S2SRegisterMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterMatchReq* New() const final {
    return CreateMaybeMessage<S2SRegisterMatchReq>(NULL);
  }

  S2SRegisterMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterMatchReq& from);
  void MergeFrom(const S2SRegisterMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 matchid = 1;
  int matchid_size() const;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid(int index) const;
  void set_matchid(int index, ::google::protobuf::uint32 value);
  void add_matchid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      matchid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_matchid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > matchid_;
  mutable int _matchid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SMatchToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SMatchToProxyReq) */ {
 public:
  S2SMatchToProxyReq();
  virtual ~S2SMatchToProxyReq();

  S2SMatchToProxyReq(const S2SMatchToProxyReq& from);

  inline S2SMatchToProxyReq& operator=(const S2SMatchToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SMatchToProxyReq(S2SMatchToProxyReq&& from) noexcept
    : S2SMatchToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SMatchToProxyReq& operator=(S2SMatchToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SMatchToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SMatchToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SMatchToProxyReq*>(
               &_S2SMatchToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  void Swap(S2SMatchToProxyReq* other);
  friend void swap(S2SMatchToProxyReq& a, S2SMatchToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SMatchToProxyReq* New() const final {
    return CreateMaybeMessage<S2SMatchToProxyReq>(NULL);
  }

  S2SMatchToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SMatchToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SMatchToProxyReq& from);
  void MergeFrom(const S2SMatchToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SMatchToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 7;
  void clear_version();
  static const int kVersionFieldNumber = 7;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .KFMsg.PBMatchGroup pbgroup = 1;
  bool has_pbgroup() const;
  void clear_pbgroup();
  static const int kPbgroupFieldNumber = 1;
  private:
  const ::KFMsg::PBMatchGroup& _internal_pbgroup() const;
  public:
  const ::KFMsg::PBMatchGroup& pbgroup() const;
  ::KFMsg::PBMatchGroup* release_pbgroup();
  ::KFMsg::PBMatchGroup* mutable_pbgroup();
  void set_allocated_pbgroup(::KFMsg::PBMatchGroup* pbgroup);

  // uint32 matchid = 2;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // bool allowgroup = 3;
  void clear_allowgroup();
  static const int kAllowgroupFieldNumber = 3;
  bool allowgroup() const;
  void set_allowgroup(bool value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 battleserverid = 6;
  void clear_battleserverid();
  static const int kBattleserveridFieldNumber = 6;
  ::google::protobuf::uint64 battleserverid() const;
  void set_battleserverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SMatchToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::KFMsg::PBMatchGroup* pbgroup_;
  ::google::protobuf::uint32 matchid_;
  bool allowgroup_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 battleserverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SMatchToClientAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SMatchToClientAck) */ {
 public:
  S2SMatchToClientAck();
  virtual ~S2SMatchToClientAck();

  S2SMatchToClientAck(const S2SMatchToClientAck& from);

  inline S2SMatchToClientAck& operator=(const S2SMatchToClientAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SMatchToClientAck(S2SMatchToClientAck&& from) noexcept
    : S2SMatchToClientAck() {
    *this = ::std::move(from);
  }

  inline S2SMatchToClientAck& operator=(S2SMatchToClientAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SMatchToClientAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SMatchToClientAck* internal_default_instance() {
    return reinterpret_cast<const S2SMatchToClientAck*>(
               &_S2SMatchToClientAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  void Swap(S2SMatchToClientAck* other);
  friend void swap(S2SMatchToClientAck& a, S2SMatchToClientAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SMatchToClientAck* New() const final {
    return CreateMaybeMessage<S2SMatchToClientAck>(NULL);
  }

  S2SMatchToClientAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SMatchToClientAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SMatchToClientAck& from);
  void MergeFrom(const S2SMatchToClientAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SMatchToClientAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // uint32 matchid = 2;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SMatchToClientAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SMatchToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SMatchToShardReq) */ {
 public:
  S2SMatchToShardReq();
  virtual ~S2SMatchToShardReq();

  S2SMatchToShardReq(const S2SMatchToShardReq& from);

  inline S2SMatchToShardReq& operator=(const S2SMatchToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SMatchToShardReq(S2SMatchToShardReq&& from) noexcept
    : S2SMatchToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SMatchToShardReq& operator=(S2SMatchToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SMatchToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SMatchToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SMatchToShardReq*>(
               &_S2SMatchToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  void Swap(S2SMatchToShardReq* other);
  friend void swap(S2SMatchToShardReq& a, S2SMatchToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SMatchToShardReq* New() const final {
    return CreateMaybeMessage<S2SMatchToShardReq>(NULL);
  }

  S2SMatchToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SMatchToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SMatchToShardReq& from);
  void MergeFrom(const S2SMatchToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SMatchToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 7;
  void clear_version();
  static const int kVersionFieldNumber = 7;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .KFMsg.PBMatchGroup pbgroup = 1;
  bool has_pbgroup() const;
  void clear_pbgroup();
  static const int kPbgroupFieldNumber = 1;
  private:
  const ::KFMsg::PBMatchGroup& _internal_pbgroup() const;
  public:
  const ::KFMsg::PBMatchGroup& pbgroup() const;
  ::KFMsg::PBMatchGroup* release_pbgroup();
  ::KFMsg::PBMatchGroup* mutable_pbgroup();
  void set_allocated_pbgroup(::KFMsg::PBMatchGroup* pbgroup);

  // uint32 matchid = 2;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // bool allowgroup = 3;
  void clear_allowgroup();
  static const int kAllowgroupFieldNumber = 3;
  bool allowgroup() const;
  void set_allowgroup(bool value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 battleserverid = 6;
  void clear_battleserverid();
  static const int kBattleserveridFieldNumber = 6;
  ::google::protobuf::uint64 battleserverid() const;
  void set_battleserverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SMatchToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::KFMsg::PBMatchGroup* pbgroup_;
  ::google::protobuf::uint32 matchid_;
  bool allowgroup_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 battleserverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCancelMatchToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCancelMatchToProxyReq) */ {
 public:
  S2SCancelMatchToProxyReq();
  virtual ~S2SCancelMatchToProxyReq();

  S2SCancelMatchToProxyReq(const S2SCancelMatchToProxyReq& from);

  inline S2SCancelMatchToProxyReq& operator=(const S2SCancelMatchToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCancelMatchToProxyReq(S2SCancelMatchToProxyReq&& from) noexcept
    : S2SCancelMatchToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SCancelMatchToProxyReq& operator=(S2SCancelMatchToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCancelMatchToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCancelMatchToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SCancelMatchToProxyReq*>(
               &_S2SCancelMatchToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  void Swap(S2SCancelMatchToProxyReq* other);
  friend void swap(S2SCancelMatchToProxyReq& a, S2SCancelMatchToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCancelMatchToProxyReq* New() const final {
    return CreateMaybeMessage<S2SCancelMatchToProxyReq>(NULL);
  }

  S2SCancelMatchToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCancelMatchToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCancelMatchToProxyReq& from);
  void MergeFrom(const S2SCancelMatchToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCancelMatchToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCancelMatchToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCancelMatchToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCancelMatchToShardReq) */ {
 public:
  S2SCancelMatchToShardReq();
  virtual ~S2SCancelMatchToShardReq();

  S2SCancelMatchToShardReq(const S2SCancelMatchToShardReq& from);

  inline S2SCancelMatchToShardReq& operator=(const S2SCancelMatchToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCancelMatchToShardReq(S2SCancelMatchToShardReq&& from) noexcept
    : S2SCancelMatchToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SCancelMatchToShardReq& operator=(S2SCancelMatchToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCancelMatchToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCancelMatchToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SCancelMatchToShardReq*>(
               &_S2SCancelMatchToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  void Swap(S2SCancelMatchToShardReq* other);
  friend void swap(S2SCancelMatchToShardReq& a, S2SCancelMatchToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCancelMatchToShardReq* New() const final {
    return CreateMaybeMessage<S2SCancelMatchToShardReq>(NULL);
  }

  S2SCancelMatchToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCancelMatchToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCancelMatchToShardReq& from);
  void MergeFrom(const S2SCancelMatchToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCancelMatchToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCancelMatchToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCancelMatchToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCancelMatchToBattleShardReq) */ {
 public:
  S2SCancelMatchToBattleShardReq();
  virtual ~S2SCancelMatchToBattleShardReq();

  S2SCancelMatchToBattleShardReq(const S2SCancelMatchToBattleShardReq& from);

  inline S2SCancelMatchToBattleShardReq& operator=(const S2SCancelMatchToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCancelMatchToBattleShardReq(S2SCancelMatchToBattleShardReq&& from) noexcept
    : S2SCancelMatchToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SCancelMatchToBattleShardReq& operator=(S2SCancelMatchToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCancelMatchToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCancelMatchToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SCancelMatchToBattleShardReq*>(
               &_S2SCancelMatchToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  void Swap(S2SCancelMatchToBattleShardReq* other);
  friend void swap(S2SCancelMatchToBattleShardReq& a, S2SCancelMatchToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCancelMatchToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SCancelMatchToBattleShardReq>(NULL);
  }

  S2SCancelMatchToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCancelMatchToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCancelMatchToBattleShardReq& from);
  void MergeFrom(const S2SCancelMatchToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCancelMatchToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 groupid = 3;
  void clear_groupid();
  static const int kGroupidFieldNumber = 3;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCancelMatchToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNoticeMatchRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNoticeMatchRoomReq) */ {
 public:
  S2SNoticeMatchRoomReq();
  virtual ~S2SNoticeMatchRoomReq();

  S2SNoticeMatchRoomReq(const S2SNoticeMatchRoomReq& from);

  inline S2SNoticeMatchRoomReq& operator=(const S2SNoticeMatchRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNoticeMatchRoomReq(S2SNoticeMatchRoomReq&& from) noexcept
    : S2SNoticeMatchRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SNoticeMatchRoomReq& operator=(S2SNoticeMatchRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNoticeMatchRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNoticeMatchRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SNoticeMatchRoomReq*>(
               &_S2SNoticeMatchRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  void Swap(S2SNoticeMatchRoomReq* other);
  friend void swap(S2SNoticeMatchRoomReq& a, S2SNoticeMatchRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNoticeMatchRoomReq* New() const final {
    return CreateMaybeMessage<S2SNoticeMatchRoomReq>(NULL);
  }

  S2SNoticeMatchRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNoticeMatchRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNoticeMatchRoomReq& from);
  void MergeFrom(const S2SNoticeMatchRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNoticeMatchRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 7;
  void clear_ip();
  static const int kIpFieldNumber = 7;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes token = 9;
  void clear_token();
  static const int kTokenFieldNumber = 9;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 battleshardid = 2;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 2;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 roomid = 6;
  void clear_roomid();
  static const int kRoomidFieldNumber = 6;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 port = 8;
  void clear_port();
  static const int kPortFieldNumber = 8;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNoticeMatchRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNoticeMatchRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNoticeMatchRoomAck) */ {
 public:
  S2SNoticeMatchRoomAck();
  virtual ~S2SNoticeMatchRoomAck();

  S2SNoticeMatchRoomAck(const S2SNoticeMatchRoomAck& from);

  inline S2SNoticeMatchRoomAck& operator=(const S2SNoticeMatchRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNoticeMatchRoomAck(S2SNoticeMatchRoomAck&& from) noexcept
    : S2SNoticeMatchRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SNoticeMatchRoomAck& operator=(S2SNoticeMatchRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNoticeMatchRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNoticeMatchRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SNoticeMatchRoomAck*>(
               &_S2SNoticeMatchRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  void Swap(S2SNoticeMatchRoomAck* other);
  friend void swap(S2SNoticeMatchRoomAck& a, S2SNoticeMatchRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNoticeMatchRoomAck* New() const final {
    return CreateMaybeMessage<S2SNoticeMatchRoomAck>(NULL);
  }

  S2SNoticeMatchRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNoticeMatchRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNoticeMatchRoomAck& from);
  void MergeFrom(const S2SNoticeMatchRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNoticeMatchRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNoticeMatchRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryMatchRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryMatchRoomReq) */ {
 public:
  S2SQueryMatchRoomReq();
  virtual ~S2SQueryMatchRoomReq();

  S2SQueryMatchRoomReq(const S2SQueryMatchRoomReq& from);

  inline S2SQueryMatchRoomReq& operator=(const S2SQueryMatchRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryMatchRoomReq(S2SQueryMatchRoomReq&& from) noexcept
    : S2SQueryMatchRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryMatchRoomReq& operator=(S2SQueryMatchRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryMatchRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryMatchRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryMatchRoomReq*>(
               &_S2SQueryMatchRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  void Swap(S2SQueryMatchRoomReq* other);
  friend void swap(S2SQueryMatchRoomReq& a, S2SQueryMatchRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryMatchRoomReq* New() const final {
    return CreateMaybeMessage<S2SQueryMatchRoomReq>(NULL);
  }

  S2SQueryMatchRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryMatchRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryMatchRoomReq& from);
  void MergeFrom(const S2SQueryMatchRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryMatchRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryMatchRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRoomToMatchShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRoomToMatchShardReq) */ {
 public:
  S2SQueryRoomToMatchShardReq();
  virtual ~S2SQueryRoomToMatchShardReq();

  S2SQueryRoomToMatchShardReq(const S2SQueryRoomToMatchShardReq& from);

  inline S2SQueryRoomToMatchShardReq& operator=(const S2SQueryRoomToMatchShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRoomToMatchShardReq(S2SQueryRoomToMatchShardReq&& from) noexcept
    : S2SQueryRoomToMatchShardReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRoomToMatchShardReq& operator=(S2SQueryRoomToMatchShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRoomToMatchShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRoomToMatchShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRoomToMatchShardReq*>(
               &_S2SQueryRoomToMatchShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  void Swap(S2SQueryRoomToMatchShardReq* other);
  friend void swap(S2SQueryRoomToMatchShardReq& a, S2SQueryRoomToMatchShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRoomToMatchShardReq* New() const final {
    return CreateMaybeMessage<S2SQueryRoomToMatchShardReq>(NULL);
  }

  S2SQueryRoomToMatchShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRoomToMatchShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRoomToMatchShardReq& from);
  void MergeFrom(const S2SQueryRoomToMatchShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRoomToMatchShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRoomToMatchShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryMatchRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryMatchRoomAck) */ {
 public:
  S2SQueryMatchRoomAck();
  virtual ~S2SQueryMatchRoomAck();

  S2SQueryMatchRoomAck(const S2SQueryMatchRoomAck& from);

  inline S2SQueryMatchRoomAck& operator=(const S2SQueryMatchRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryMatchRoomAck(S2SQueryMatchRoomAck&& from) noexcept
    : S2SQueryMatchRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryMatchRoomAck& operator=(S2SQueryMatchRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryMatchRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryMatchRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryMatchRoomAck*>(
               &_S2SQueryMatchRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  void Swap(S2SQueryMatchRoomAck* other);
  friend void swap(S2SQueryMatchRoomAck& a, S2SQueryMatchRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryMatchRoomAck* New() const final {
    return CreateMaybeMessage<S2SQueryMatchRoomAck>(NULL);
  }

  S2SQueryMatchRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryMatchRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryMatchRoomAck& from);
  void MergeFrom(const S2SQueryMatchRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryMatchRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryMatchRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryBattleRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryBattleRoomReq) */ {
 public:
  S2SQueryBattleRoomReq();
  virtual ~S2SQueryBattleRoomReq();

  S2SQueryBattleRoomReq(const S2SQueryBattleRoomReq& from);

  inline S2SQueryBattleRoomReq& operator=(const S2SQueryBattleRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryBattleRoomReq(S2SQueryBattleRoomReq&& from) noexcept
    : S2SQueryBattleRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryBattleRoomReq& operator=(S2SQueryBattleRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryBattleRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryBattleRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryBattleRoomReq*>(
               &_S2SQueryBattleRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  void Swap(S2SQueryBattleRoomReq* other);
  friend void swap(S2SQueryBattleRoomReq& a, S2SQueryBattleRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryBattleRoomReq* New() const final {
    return CreateMaybeMessage<S2SQueryBattleRoomReq>(NULL);
  }

  S2SQueryBattleRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryBattleRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryBattleRoomReq& from);
  void MergeFrom(const S2SQueryBattleRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryBattleRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryBattleRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryBattleRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryBattleRoomAck) */ {
 public:
  S2SQueryBattleRoomAck();
  virtual ~S2SQueryBattleRoomAck();

  S2SQueryBattleRoomAck(const S2SQueryBattleRoomAck& from);

  inline S2SQueryBattleRoomAck& operator=(const S2SQueryBattleRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryBattleRoomAck(S2SQueryBattleRoomAck&& from) noexcept
    : S2SQueryBattleRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryBattleRoomAck& operator=(S2SQueryBattleRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryBattleRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryBattleRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryBattleRoomAck*>(
               &_S2SQueryBattleRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  void Swap(S2SQueryBattleRoomAck* other);
  friend void swap(S2SQueryBattleRoomAck& a, S2SQueryBattleRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryBattleRoomAck* New() const final {
    return CreateMaybeMessage<S2SQueryBattleRoomAck>(NULL);
  }

  S2SQueryBattleRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryBattleRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryBattleRoomAck& from);
  void MergeFrom(const S2SQueryBattleRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryBattleRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 3;
  void clear_matchid();
  static const int kMatchidFieldNumber = 3;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryBattleRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRoomToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRoomToBattleShardReq) */ {
 public:
  S2SQueryRoomToBattleShardReq();
  virtual ~S2SQueryRoomToBattleShardReq();

  S2SQueryRoomToBattleShardReq(const S2SQueryRoomToBattleShardReq& from);

  inline S2SQueryRoomToBattleShardReq& operator=(const S2SQueryRoomToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRoomToBattleShardReq(S2SQueryRoomToBattleShardReq&& from) noexcept
    : S2SQueryRoomToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRoomToBattleShardReq& operator=(S2SQueryRoomToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRoomToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRoomToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRoomToBattleShardReq*>(
               &_S2SQueryRoomToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  void Swap(S2SQueryRoomToBattleShardReq* other);
  friend void swap(S2SQueryRoomToBattleShardReq& a, S2SQueryRoomToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRoomToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SQueryRoomToBattleShardReq>(NULL);
  }

  S2SQueryRoomToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRoomToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRoomToBattleShardReq& from);
  void MergeFrom(const S2SQueryRoomToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRoomToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRoomToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerOnlineToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerOnlineToBattleShardReq) */ {
 public:
  S2SPlayerOnlineToBattleShardReq();
  virtual ~S2SPlayerOnlineToBattleShardReq();

  S2SPlayerOnlineToBattleShardReq(const S2SPlayerOnlineToBattleShardReq& from);

  inline S2SPlayerOnlineToBattleShardReq& operator=(const S2SPlayerOnlineToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerOnlineToBattleShardReq(S2SPlayerOnlineToBattleShardReq&& from) noexcept
    : S2SPlayerOnlineToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerOnlineToBattleShardReq& operator=(S2SPlayerOnlineToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerOnlineToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerOnlineToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerOnlineToBattleShardReq*>(
               &_S2SPlayerOnlineToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  void Swap(S2SPlayerOnlineToBattleShardReq* other);
  friend void swap(S2SPlayerOnlineToBattleShardReq& a, S2SPlayerOnlineToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerOnlineToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SPlayerOnlineToBattleShardReq>(NULL);
  }

  S2SPlayerOnlineToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerOnlineToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerOnlineToBattleShardReq& from);
  void MergeFrom(const S2SPlayerOnlineToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerOnlineToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 4;
  void clear_serverid();
  static const int kServeridFieldNumber = 4;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerOnlineToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNoticeMatchStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNoticeMatchStateReq) */ {
 public:
  S2SNoticeMatchStateReq();
  virtual ~S2SNoticeMatchStateReq();

  S2SNoticeMatchStateReq(const S2SNoticeMatchStateReq& from);

  inline S2SNoticeMatchStateReq& operator=(const S2SNoticeMatchStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNoticeMatchStateReq(S2SNoticeMatchStateReq&& from) noexcept
    : S2SNoticeMatchStateReq() {
    *this = ::std::move(from);
  }

  inline S2SNoticeMatchStateReq& operator=(S2SNoticeMatchStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNoticeMatchStateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNoticeMatchStateReq* internal_default_instance() {
    return reinterpret_cast<const S2SNoticeMatchStateReq*>(
               &_S2SNoticeMatchStateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  void Swap(S2SNoticeMatchStateReq* other);
  friend void swap(S2SNoticeMatchStateReq& a, S2SNoticeMatchStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNoticeMatchStateReq* New() const final {
    return CreateMaybeMessage<S2SNoticeMatchStateReq>(NULL);
  }

  S2SNoticeMatchStateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNoticeMatchStateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNoticeMatchStateReq& from);
  void MergeFrom(const S2SNoticeMatchStateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNoticeMatchStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 matchid = 2;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNoticeMatchStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SResetMatchRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SResetMatchRoomReq) */ {
 public:
  S2SResetMatchRoomReq();
  virtual ~S2SResetMatchRoomReq();

  S2SResetMatchRoomReq(const S2SResetMatchRoomReq& from);

  inline S2SResetMatchRoomReq& operator=(const S2SResetMatchRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SResetMatchRoomReq(S2SResetMatchRoomReq&& from) noexcept
    : S2SResetMatchRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SResetMatchRoomReq& operator=(S2SResetMatchRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SResetMatchRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SResetMatchRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SResetMatchRoomReq*>(
               &_S2SResetMatchRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  void Swap(S2SResetMatchRoomReq* other);
  friend void swap(S2SResetMatchRoomReq& a, S2SResetMatchRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SResetMatchRoomReq* New() const final {
    return CreateMaybeMessage<S2SResetMatchRoomReq>(NULL);
  }

  S2SResetMatchRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SResetMatchRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SResetMatchRoomReq& from);
  void MergeFrom(const S2SResetMatchRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SResetMatchRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SResetMatchRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAllocBattleIdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAllocBattleIdReq) */ {
 public:
  S2SAllocBattleIdReq();
  virtual ~S2SAllocBattleIdReq();

  S2SAllocBattleIdReq(const S2SAllocBattleIdReq& from);

  inline S2SAllocBattleIdReq& operator=(const S2SAllocBattleIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAllocBattleIdReq(S2SAllocBattleIdReq&& from) noexcept
    : S2SAllocBattleIdReq() {
    *this = ::std::move(from);
  }

  inline S2SAllocBattleIdReq& operator=(S2SAllocBattleIdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAllocBattleIdReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAllocBattleIdReq* internal_default_instance() {
    return reinterpret_cast<const S2SAllocBattleIdReq*>(
               &_S2SAllocBattleIdReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  void Swap(S2SAllocBattleIdReq* other);
  friend void swap(S2SAllocBattleIdReq& a, S2SAllocBattleIdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAllocBattleIdReq* New() const final {
    return CreateMaybeMessage<S2SAllocBattleIdReq>(NULL);
  }

  S2SAllocBattleIdReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAllocBattleIdReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAllocBattleIdReq& from);
  void MergeFrom(const S2SAllocBattleIdReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAllocBattleIdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAllocBattleIdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAllocBattleIdAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAllocBattleIdAck) */ {
 public:
  S2SAllocBattleIdAck();
  virtual ~S2SAllocBattleIdAck();

  S2SAllocBattleIdAck(const S2SAllocBattleIdAck& from);

  inline S2SAllocBattleIdAck& operator=(const S2SAllocBattleIdAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAllocBattleIdAck(S2SAllocBattleIdAck&& from) noexcept
    : S2SAllocBattleIdAck() {
    *this = ::std::move(from);
  }

  inline S2SAllocBattleIdAck& operator=(S2SAllocBattleIdAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAllocBattleIdAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAllocBattleIdAck* internal_default_instance() {
    return reinterpret_cast<const S2SAllocBattleIdAck*>(
               &_S2SAllocBattleIdAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  void Swap(S2SAllocBattleIdAck* other);
  friend void swap(S2SAllocBattleIdAck& a, S2SAllocBattleIdAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAllocBattleIdAck* New() const final {
    return CreateMaybeMessage<S2SAllocBattleIdAck>(NULL);
  }

  S2SAllocBattleIdAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAllocBattleIdAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAllocBattleIdAck& from);
  void MergeFrom(const S2SAllocBattleIdAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAllocBattleIdAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAllocBattleIdAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterBattleServerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterBattleServerReq) */ {
 public:
  S2SRegisterBattleServerReq();
  virtual ~S2SRegisterBattleServerReq();

  S2SRegisterBattleServerReq(const S2SRegisterBattleServerReq& from);

  inline S2SRegisterBattleServerReq& operator=(const S2SRegisterBattleServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterBattleServerReq(S2SRegisterBattleServerReq&& from) noexcept
    : S2SRegisterBattleServerReq() {
    *this = ::std::move(from);
  }

  inline S2SRegisterBattleServerReq& operator=(S2SRegisterBattleServerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterBattleServerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterBattleServerReq* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterBattleServerReq*>(
               &_S2SRegisterBattleServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  void Swap(S2SRegisterBattleServerReq* other);
  friend void swap(S2SRegisterBattleServerReq& a, S2SRegisterBattleServerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterBattleServerReq* New() const final {
    return CreateMaybeMessage<S2SRegisterBattleServerReq>(NULL);
  }

  S2SRegisterBattleServerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterBattleServerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterBattleServerReq& from);
  void MergeFrom(const S2SRegisterBattleServerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterBattleServerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 roomid = 4;
  void clear_roomid();
  static const int kRoomidFieldNumber = 4;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 battleshardid = 5;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 5;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterBattleServerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterBattleServerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterBattleServerAck) */ {
 public:
  S2SRegisterBattleServerAck();
  virtual ~S2SRegisterBattleServerAck();

  S2SRegisterBattleServerAck(const S2SRegisterBattleServerAck& from);

  inline S2SRegisterBattleServerAck& operator=(const S2SRegisterBattleServerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterBattleServerAck(S2SRegisterBattleServerAck&& from) noexcept
    : S2SRegisterBattleServerAck() {
    *this = ::std::move(from);
  }

  inline S2SRegisterBattleServerAck& operator=(S2SRegisterBattleServerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterBattleServerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterBattleServerAck* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterBattleServerAck*>(
               &_S2SRegisterBattleServerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  void Swap(S2SRegisterBattleServerAck* other);
  friend void swap(S2SRegisterBattleServerAck& a, S2SRegisterBattleServerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterBattleServerAck* New() const final {
    return CreateMaybeMessage<S2SRegisterBattleServerAck>(NULL);
  }

  S2SRegisterBattleServerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterBattleServerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterBattleServerAck& from);
  void MergeFrom(const S2SRegisterBattleServerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterBattleServerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterBattleServerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterServerToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterServerToBattleShardReq) */ {
 public:
  S2SRegisterServerToBattleShardReq();
  virtual ~S2SRegisterServerToBattleShardReq();

  S2SRegisterServerToBattleShardReq(const S2SRegisterServerToBattleShardReq& from);

  inline S2SRegisterServerToBattleShardReq& operator=(const S2SRegisterServerToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterServerToBattleShardReq(S2SRegisterServerToBattleShardReq&& from) noexcept
    : S2SRegisterServerToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SRegisterServerToBattleShardReq& operator=(S2SRegisterServerToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterServerToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterServerToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterServerToBattleShardReq*>(
               &_S2SRegisterServerToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  void Swap(S2SRegisterServerToBattleShardReq* other);
  friend void swap(S2SRegisterServerToBattleShardReq& a, S2SRegisterServerToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterServerToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SRegisterServerToBattleShardReq>(NULL);
  }

  S2SRegisterServerToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterServerToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterServerToBattleShardReq& from);
  void MergeFrom(const S2SRegisterServerToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterServerToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 roomid = 4;
  void clear_roomid();
  static const int kRoomidFieldNumber = 4;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterServerToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellBattleRegisterToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellBattleRegisterToShardReq) */ {
 public:
  S2STellBattleRegisterToShardReq();
  virtual ~S2STellBattleRegisterToShardReq();

  S2STellBattleRegisterToShardReq(const S2STellBattleRegisterToShardReq& from);

  inline S2STellBattleRegisterToShardReq& operator=(const S2STellBattleRegisterToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellBattleRegisterToShardReq(S2STellBattleRegisterToShardReq&& from) noexcept
    : S2STellBattleRegisterToShardReq() {
    *this = ::std::move(from);
  }

  inline S2STellBattleRegisterToShardReq& operator=(S2STellBattleRegisterToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellBattleRegisterToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellBattleRegisterToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2STellBattleRegisterToShardReq*>(
               &_S2STellBattleRegisterToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  void Swap(S2STellBattleRegisterToShardReq* other);
  friend void swap(S2STellBattleRegisterToShardReq& a, S2STellBattleRegisterToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellBattleRegisterToShardReq* New() const final {
    return CreateMaybeMessage<S2STellBattleRegisterToShardReq>(NULL);
  }

  S2STellBattleRegisterToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellBattleRegisterToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellBattleRegisterToShardReq& from);
  void MergeFrom(const S2STellBattleRegisterToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellBattleRegisterToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellBattleRegisterToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDisconnectServerToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDisconnectServerToBattleShardReq) */ {
 public:
  S2SDisconnectServerToBattleShardReq();
  virtual ~S2SDisconnectServerToBattleShardReq();

  S2SDisconnectServerToBattleShardReq(const S2SDisconnectServerToBattleShardReq& from);

  inline S2SDisconnectServerToBattleShardReq& operator=(const S2SDisconnectServerToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDisconnectServerToBattleShardReq(S2SDisconnectServerToBattleShardReq&& from) noexcept
    : S2SDisconnectServerToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SDisconnectServerToBattleShardReq& operator=(S2SDisconnectServerToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDisconnectServerToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDisconnectServerToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SDisconnectServerToBattleShardReq*>(
               &_S2SDisconnectServerToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  void Swap(S2SDisconnectServerToBattleShardReq* other);
  friend void swap(S2SDisconnectServerToBattleShardReq& a, S2SDisconnectServerToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDisconnectServerToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SDisconnectServerToBattleShardReq>(NULL);
  }

  S2SDisconnectServerToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDisconnectServerToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDisconnectServerToBattleShardReq& from);
  void MergeFrom(const S2SDisconnectServerToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDisconnectServerToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDisconnectServerToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateRoomToBattleProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateRoomToBattleProxyReq) */ {
 public:
  S2SCreateRoomToBattleProxyReq();
  virtual ~S2SCreateRoomToBattleProxyReq();

  S2SCreateRoomToBattleProxyReq(const S2SCreateRoomToBattleProxyReq& from);

  inline S2SCreateRoomToBattleProxyReq& operator=(const S2SCreateRoomToBattleProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateRoomToBattleProxyReq(S2SCreateRoomToBattleProxyReq&& from) noexcept
    : S2SCreateRoomToBattleProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SCreateRoomToBattleProxyReq& operator=(S2SCreateRoomToBattleProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateRoomToBattleProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateRoomToBattleProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SCreateRoomToBattleProxyReq*>(
               &_S2SCreateRoomToBattleProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  void Swap(S2SCreateRoomToBattleProxyReq* other);
  friend void swap(S2SCreateRoomToBattleProxyReq& a, S2SCreateRoomToBattleProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateRoomToBattleProxyReq* New() const final {
    return CreateMaybeMessage<S2SCreateRoomToBattleProxyReq>(NULL);
  }

  S2SCreateRoomToBattleProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateRoomToBattleProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateRoomToBattleProxyReq& from);
  void MergeFrom(const S2SCreateRoomToBattleProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateRoomToBattleProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 maxplayercount = 3;
  void clear_maxplayercount();
  static const int kMaxplayercountFieldNumber = 3;
  ::google::protobuf::uint32 maxplayercount() const;
  void set_maxplayercount(::google::protobuf::uint32 value);

  // uint64 battleserverid = 4;
  void clear_battleserverid();
  static const int kBattleserveridFieldNumber = 4;
  ::google::protobuf::uint64 battleserverid() const;
  void set_battleserverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateRoomToBattleProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 maxplayercount_;
  ::google::protobuf::uint64 battleserverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateRoomToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateRoomToBattleShardReq) */ {
 public:
  S2SCreateRoomToBattleShardReq();
  virtual ~S2SCreateRoomToBattleShardReq();

  S2SCreateRoomToBattleShardReq(const S2SCreateRoomToBattleShardReq& from);

  inline S2SCreateRoomToBattleShardReq& operator=(const S2SCreateRoomToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateRoomToBattleShardReq(S2SCreateRoomToBattleShardReq&& from) noexcept
    : S2SCreateRoomToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SCreateRoomToBattleShardReq& operator=(S2SCreateRoomToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateRoomToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateRoomToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SCreateRoomToBattleShardReq*>(
               &_S2SCreateRoomToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  void Swap(S2SCreateRoomToBattleShardReq* other);
  friend void swap(S2SCreateRoomToBattleShardReq& a, S2SCreateRoomToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateRoomToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SCreateRoomToBattleShardReq>(NULL);
  }

  S2SCreateRoomToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateRoomToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateRoomToBattleShardReq& from);
  void MergeFrom(const S2SCreateRoomToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateRoomToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 maxplayercount = 4;
  void clear_maxplayercount();
  static const int kMaxplayercountFieldNumber = 4;
  ::google::protobuf::uint32 maxplayercount() const;
  void set_maxplayercount(::google::protobuf::uint32 value);

  // uint64 matchshardid = 3;
  void clear_matchshardid();
  static const int kMatchshardidFieldNumber = 3;
  ::google::protobuf::uint64 matchshardid() const;
  void set_matchshardid(::google::protobuf::uint64 value);

  // uint64 battleserverid = 5;
  void clear_battleserverid();
  static const int kBattleserveridFieldNumber = 5;
  ::google::protobuf::uint64 battleserverid() const;
  void set_battleserverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateRoomToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 maxplayercount_;
  ::google::protobuf::uint64 matchshardid_;
  ::google::protobuf::uint64 battleserverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SCreateRoomToMatchShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SCreateRoomToMatchShardAck) */ {
 public:
  S2SCreateRoomToMatchShardAck();
  virtual ~S2SCreateRoomToMatchShardAck();

  S2SCreateRoomToMatchShardAck(const S2SCreateRoomToMatchShardAck& from);

  inline S2SCreateRoomToMatchShardAck& operator=(const S2SCreateRoomToMatchShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SCreateRoomToMatchShardAck(S2SCreateRoomToMatchShardAck&& from) noexcept
    : S2SCreateRoomToMatchShardAck() {
    *this = ::std::move(from);
  }

  inline S2SCreateRoomToMatchShardAck& operator=(S2SCreateRoomToMatchShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SCreateRoomToMatchShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SCreateRoomToMatchShardAck* internal_default_instance() {
    return reinterpret_cast<const S2SCreateRoomToMatchShardAck*>(
               &_S2SCreateRoomToMatchShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  void Swap(S2SCreateRoomToMatchShardAck* other);
  friend void swap(S2SCreateRoomToMatchShardAck& a, S2SCreateRoomToMatchShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SCreateRoomToMatchShardAck* New() const final {
    return CreateMaybeMessage<S2SCreateRoomToMatchShardAck>(NULL);
  }

  S2SCreateRoomToMatchShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SCreateRoomToMatchShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SCreateRoomToMatchShardAck& from);
  void MergeFrom(const S2SCreateRoomToMatchShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SCreateRoomToMatchShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 battleshardid = 3;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 3;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SCreateRoomToMatchShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddCampToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddCampToBattleShardReq) */ {
 public:
  S2SAddCampToBattleShardReq();
  virtual ~S2SAddCampToBattleShardReq();

  S2SAddCampToBattleShardReq(const S2SAddCampToBattleShardReq& from);

  inline S2SAddCampToBattleShardReq& operator=(const S2SAddCampToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddCampToBattleShardReq(S2SAddCampToBattleShardReq&& from) noexcept
    : S2SAddCampToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SAddCampToBattleShardReq& operator=(S2SAddCampToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddCampToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddCampToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddCampToBattleShardReq*>(
               &_S2SAddCampToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  void Swap(S2SAddCampToBattleShardReq* other);
  friend void swap(S2SAddCampToBattleShardReq& a, S2SAddCampToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddCampToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SAddCampToBattleShardReq>(NULL);
  }

  S2SAddCampToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddCampToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddCampToBattleShardReq& from);
  void MergeFrom(const S2SAddCampToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddCampToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBBattleCamp pbcamp = 2;
  bool has_pbcamp() const;
  void clear_pbcamp();
  static const int kPbcampFieldNumber = 2;
  private:
  const ::KFMsg::PBBattleCamp& _internal_pbcamp() const;
  public:
  const ::KFMsg::PBBattleCamp& pbcamp() const;
  ::KFMsg::PBBattleCamp* release_pbcamp();
  ::KFMsg::PBBattleCamp* mutable_pbcamp();
  void set_allocated_pbcamp(::KFMsg::PBBattleCamp* pbcamp);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 matchshardid = 4;
  void clear_matchshardid();
  static const int kMatchshardidFieldNumber = 4;
  ::google::protobuf::uint64 matchshardid() const;
  void set_matchshardid(::google::protobuf::uint64 value);

  // uint32 matchid = 3;
  void clear_matchid();
  static const int kMatchidFieldNumber = 3;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddCampToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBBattleCamp* pbcamp_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 matchshardid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddCampToMatchShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddCampToMatchShardAck) */ {
 public:
  S2SAddCampToMatchShardAck();
  virtual ~S2SAddCampToMatchShardAck();

  S2SAddCampToMatchShardAck(const S2SAddCampToMatchShardAck& from);

  inline S2SAddCampToMatchShardAck& operator=(const S2SAddCampToMatchShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddCampToMatchShardAck(S2SAddCampToMatchShardAck&& from) noexcept
    : S2SAddCampToMatchShardAck() {
    *this = ::std::move(from);
  }

  inline S2SAddCampToMatchShardAck& operator=(S2SAddCampToMatchShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddCampToMatchShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddCampToMatchShardAck* internal_default_instance() {
    return reinterpret_cast<const S2SAddCampToMatchShardAck*>(
               &_S2SAddCampToMatchShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  void Swap(S2SAddCampToMatchShardAck* other);
  friend void swap(S2SAddCampToMatchShardAck& a, S2SAddCampToMatchShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddCampToMatchShardAck* New() const final {
    return CreateMaybeMessage<S2SAddCampToMatchShardAck>(NULL);
  }

  S2SAddCampToMatchShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddCampToMatchShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddCampToMatchShardAck& from);
  void MergeFrom(const S2SAddCampToMatchShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddCampToMatchShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // bool addok = 4;
  void clear_addok();
  static const int kAddokFieldNumber = 4;
  bool addok() const;
  void set_addok(bool value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddCampToMatchShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 campid_;
  bool addok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOpenBattleRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOpenBattleRoomReq) */ {
 public:
  S2SOpenBattleRoomReq();
  virtual ~S2SOpenBattleRoomReq();

  S2SOpenBattleRoomReq(const S2SOpenBattleRoomReq& from);

  inline S2SOpenBattleRoomReq& operator=(const S2SOpenBattleRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOpenBattleRoomReq(S2SOpenBattleRoomReq&& from) noexcept
    : S2SOpenBattleRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SOpenBattleRoomReq& operator=(S2SOpenBattleRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOpenBattleRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOpenBattleRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SOpenBattleRoomReq*>(
               &_S2SOpenBattleRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  void Swap(S2SOpenBattleRoomReq* other);
  friend void swap(S2SOpenBattleRoomReq& a, S2SOpenBattleRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOpenBattleRoomReq* New() const final {
    return CreateMaybeMessage<S2SOpenBattleRoomReq>(NULL);
  }

  S2SOpenBattleRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOpenBattleRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOpenBattleRoomReq& from);
  void MergeFrom(const S2SOpenBattleRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOpenBattleRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 maxplayercount = 4;
  void clear_maxplayercount();
  static const int kMaxplayercountFieldNumber = 4;
  ::google::protobuf::uint32 maxplayercount() const;
  void set_maxplayercount(::google::protobuf::uint32 value);

  // uint64 battleshardid = 3;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 3;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOpenBattleRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 maxplayercount_;
  ::google::protobuf::uint64 battleshardid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOpenBattleRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOpenBattleRoomAck) */ {
 public:
  S2SOpenBattleRoomAck();
  virtual ~S2SOpenBattleRoomAck();

  S2SOpenBattleRoomAck(const S2SOpenBattleRoomAck& from);

  inline S2SOpenBattleRoomAck& operator=(const S2SOpenBattleRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOpenBattleRoomAck(S2SOpenBattleRoomAck&& from) noexcept
    : S2SOpenBattleRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SOpenBattleRoomAck& operator=(S2SOpenBattleRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOpenBattleRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOpenBattleRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SOpenBattleRoomAck*>(
               &_S2SOpenBattleRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  void Swap(S2SOpenBattleRoomAck* other);
  friend void swap(S2SOpenBattleRoomAck& a, S2SOpenBattleRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOpenBattleRoomAck* New() const final {
    return CreateMaybeMessage<S2SOpenBattleRoomAck>(NULL);
  }

  S2SOpenBattleRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOpenBattleRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOpenBattleRoomAck& from);
  void MergeFrom(const S2SOpenBattleRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOpenBattleRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 battleshardid = 1;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 1;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint64 roomid = 3;
  void clear_roomid();
  static const int kRoomidFieldNumber = 3;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 2;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 result = 4;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // uint32 waittime = 5;
  void clear_waittime();
  static const int kWaittimeFieldNumber = 5;
  ::google::protobuf::uint32 waittime() const;
  void set_waittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOpenBattleRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 waittime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOpenBattleRoomToShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOpenBattleRoomToShardAck) */ {
 public:
  S2SOpenBattleRoomToShardAck();
  virtual ~S2SOpenBattleRoomToShardAck();

  S2SOpenBattleRoomToShardAck(const S2SOpenBattleRoomToShardAck& from);

  inline S2SOpenBattleRoomToShardAck& operator=(const S2SOpenBattleRoomToShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOpenBattleRoomToShardAck(S2SOpenBattleRoomToShardAck&& from) noexcept
    : S2SOpenBattleRoomToShardAck() {
    *this = ::std::move(from);
  }

  inline S2SOpenBattleRoomToShardAck& operator=(S2SOpenBattleRoomToShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOpenBattleRoomToShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOpenBattleRoomToShardAck* internal_default_instance() {
    return reinterpret_cast<const S2SOpenBattleRoomToShardAck*>(
               &_S2SOpenBattleRoomToShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  void Swap(S2SOpenBattleRoomToShardAck* other);
  friend void swap(S2SOpenBattleRoomToShardAck& a, S2SOpenBattleRoomToShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOpenBattleRoomToShardAck* New() const final {
    return CreateMaybeMessage<S2SOpenBattleRoomToShardAck>(NULL);
  }

  S2SOpenBattleRoomToShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOpenBattleRoomToShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOpenBattleRoomToShardAck& from);
  void MergeFrom(const S2SOpenBattleRoomToShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOpenBattleRoomToShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // uint32 waittime = 4;
  void clear_waittime();
  static const int kWaittimeFieldNumber = 4;
  ::google::protobuf::uint32 waittime() const;
  void set_waittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOpenBattleRoomToShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 waittime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOpenRoomToMatchShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOpenRoomToMatchShardReq) */ {
 public:
  S2SOpenRoomToMatchShardReq();
  virtual ~S2SOpenRoomToMatchShardReq();

  S2SOpenRoomToMatchShardReq(const S2SOpenRoomToMatchShardReq& from);

  inline S2SOpenRoomToMatchShardReq& operator=(const S2SOpenRoomToMatchShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOpenRoomToMatchShardReq(S2SOpenRoomToMatchShardReq&& from) noexcept
    : S2SOpenRoomToMatchShardReq() {
    *this = ::std::move(from);
  }

  inline S2SOpenRoomToMatchShardReq& operator=(S2SOpenRoomToMatchShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOpenRoomToMatchShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOpenRoomToMatchShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SOpenRoomToMatchShardReq*>(
               &_S2SOpenRoomToMatchShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  void Swap(S2SOpenRoomToMatchShardReq* other);
  friend void swap(S2SOpenRoomToMatchShardReq& a, S2SOpenRoomToMatchShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOpenRoomToMatchShardReq* New() const final {
    return CreateMaybeMessage<S2SOpenRoomToMatchShardReq>(NULL);
  }

  S2SOpenRoomToMatchShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOpenRoomToMatchShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOpenRoomToMatchShardReq& from);
  void MergeFrom(const S2SOpenRoomToMatchShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOpenRoomToMatchShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 waittime = 3;
  void clear_waittime();
  static const int kWaittimeFieldNumber = 3;
  ::google::protobuf::uint32 waittime() const;
  void set_waittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOpenRoomToMatchShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 waittime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOpenRoomToBattleShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOpenRoomToBattleShardAck) */ {
 public:
  S2SOpenRoomToBattleShardAck();
  virtual ~S2SOpenRoomToBattleShardAck();

  S2SOpenRoomToBattleShardAck(const S2SOpenRoomToBattleShardAck& from);

  inline S2SOpenRoomToBattleShardAck& operator=(const S2SOpenRoomToBattleShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOpenRoomToBattleShardAck(S2SOpenRoomToBattleShardAck&& from) noexcept
    : S2SOpenRoomToBattleShardAck() {
    *this = ::std::move(from);
  }

  inline S2SOpenRoomToBattleShardAck& operator=(S2SOpenRoomToBattleShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOpenRoomToBattleShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOpenRoomToBattleShardAck* internal_default_instance() {
    return reinterpret_cast<const S2SOpenRoomToBattleShardAck*>(
               &_S2SOpenRoomToBattleShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  void Swap(S2SOpenRoomToBattleShardAck* other);
  friend void swap(S2SOpenRoomToBattleShardAck& a, S2SOpenRoomToBattleShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOpenRoomToBattleShardAck* New() const final {
    return CreateMaybeMessage<S2SOpenRoomToBattleShardAck>(NULL);
  }

  S2SOpenRoomToBattleShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOpenRoomToBattleShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOpenRoomToBattleShardAck& from);
  void MergeFrom(const S2SOpenRoomToBattleShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOpenRoomToBattleShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOpenRoomToBattleShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerEnterBattleRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerEnterBattleRoomReq) */ {
 public:
  S2SPlayerEnterBattleRoomReq();
  virtual ~S2SPlayerEnterBattleRoomReq();

  S2SPlayerEnterBattleRoomReq(const S2SPlayerEnterBattleRoomReq& from);

  inline S2SPlayerEnterBattleRoomReq& operator=(const S2SPlayerEnterBattleRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerEnterBattleRoomReq(S2SPlayerEnterBattleRoomReq&& from) noexcept
    : S2SPlayerEnterBattleRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerEnterBattleRoomReq& operator=(S2SPlayerEnterBattleRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerEnterBattleRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerEnterBattleRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerEnterBattleRoomReq*>(
               &_S2SPlayerEnterBattleRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  void Swap(S2SPlayerEnterBattleRoomReq* other);
  friend void swap(S2SPlayerEnterBattleRoomReq& a, S2SPlayerEnterBattleRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerEnterBattleRoomReq* New() const final {
    return CreateMaybeMessage<S2SPlayerEnterBattleRoomReq>(NULL);
  }

  S2SPlayerEnterBattleRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerEnterBattleRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerEnterBattleRoomReq& from);
  void MergeFrom(const S2SPlayerEnterBattleRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerEnterBattleRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 3;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // .KFMsg.PBBattlePlayer player = 2;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  private:
  const ::KFMsg::PBBattlePlayer& _internal_player() const;
  public:
  const ::KFMsg::PBBattlePlayer& player() const;
  ::KFMsg::PBBattlePlayer* release_player();
  ::KFMsg::PBBattlePlayer* mutable_player();
  void set_allocated_player(::KFMsg::PBBattlePlayer* player);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerEnterBattleRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::KFMsg::PBBattlePlayer* player_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerEnterBattleRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerEnterBattleRoomAck) */ {
 public:
  S2SPlayerEnterBattleRoomAck();
  virtual ~S2SPlayerEnterBattleRoomAck();

  S2SPlayerEnterBattleRoomAck(const S2SPlayerEnterBattleRoomAck& from);

  inline S2SPlayerEnterBattleRoomAck& operator=(const S2SPlayerEnterBattleRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerEnterBattleRoomAck(S2SPlayerEnterBattleRoomAck&& from) noexcept
    : S2SPlayerEnterBattleRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SPlayerEnterBattleRoomAck& operator=(S2SPlayerEnterBattleRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerEnterBattleRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerEnterBattleRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerEnterBattleRoomAck*>(
               &_S2SPlayerEnterBattleRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  void Swap(S2SPlayerEnterBattleRoomAck* other);
  friend void swap(S2SPlayerEnterBattleRoomAck& a, S2SPlayerEnterBattleRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerEnterBattleRoomAck* New() const final {
    return CreateMaybeMessage<S2SPlayerEnterBattleRoomAck>(NULL);
  }

  S2SPlayerEnterBattleRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerEnterBattleRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerEnterBattleRoomAck& from);
  void MergeFrom(const S2SPlayerEnterBattleRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerEnterBattleRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 battleshardid = 1;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 1;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerEnterBattleRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerEnterRoomToBattleShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerEnterRoomToBattleShardAck) */ {
 public:
  S2SPlayerEnterRoomToBattleShardAck();
  virtual ~S2SPlayerEnterRoomToBattleShardAck();

  S2SPlayerEnterRoomToBattleShardAck(const S2SPlayerEnterRoomToBattleShardAck& from);

  inline S2SPlayerEnterRoomToBattleShardAck& operator=(const S2SPlayerEnterRoomToBattleShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerEnterRoomToBattleShardAck(S2SPlayerEnterRoomToBattleShardAck&& from) noexcept
    : S2SPlayerEnterRoomToBattleShardAck() {
    *this = ::std::move(from);
  }

  inline S2SPlayerEnterRoomToBattleShardAck& operator=(S2SPlayerEnterRoomToBattleShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerEnterRoomToBattleShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerEnterRoomToBattleShardAck* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerEnterRoomToBattleShardAck*>(
               &_S2SPlayerEnterRoomToBattleShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  void Swap(S2SPlayerEnterRoomToBattleShardAck* other);
  friend void swap(S2SPlayerEnterRoomToBattleShardAck& a, S2SPlayerEnterRoomToBattleShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerEnterRoomToBattleShardAck* New() const final {
    return CreateMaybeMessage<S2SPlayerEnterRoomToBattleShardAck>(NULL);
  }

  S2SPlayerEnterRoomToBattleShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerEnterRoomToBattleShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerEnterRoomToBattleShardAck& from);
  void MergeFrom(const S2SPlayerEnterRoomToBattleShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerEnterRoomToBattleShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLoginBattleRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLoginBattleRoomReq) */ {
 public:
  S2SPlayerLoginBattleRoomReq();
  virtual ~S2SPlayerLoginBattleRoomReq();

  S2SPlayerLoginBattleRoomReq(const S2SPlayerLoginBattleRoomReq& from);

  inline S2SPlayerLoginBattleRoomReq& operator=(const S2SPlayerLoginBattleRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLoginBattleRoomReq(S2SPlayerLoginBattleRoomReq&& from) noexcept
    : S2SPlayerLoginBattleRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLoginBattleRoomReq& operator=(S2SPlayerLoginBattleRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLoginBattleRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLoginBattleRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLoginBattleRoomReq*>(
               &_S2SPlayerLoginBattleRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  void Swap(S2SPlayerLoginBattleRoomReq* other);
  friend void swap(S2SPlayerLoginBattleRoomReq& a, S2SPlayerLoginBattleRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLoginBattleRoomReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLoginBattleRoomReq>(NULL);
  }

  S2SPlayerLoginBattleRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLoginBattleRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLoginBattleRoomReq& from);
  void MergeFrom(const S2SPlayerLoginBattleRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLoginBattleRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 battleshardid = 1;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 1;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLoginBattleRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLoginBattleRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLoginBattleRoomAck) */ {
 public:
  S2SPlayerLoginBattleRoomAck();
  virtual ~S2SPlayerLoginBattleRoomAck();

  S2SPlayerLoginBattleRoomAck(const S2SPlayerLoginBattleRoomAck& from);

  inline S2SPlayerLoginBattleRoomAck& operator=(const S2SPlayerLoginBattleRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLoginBattleRoomAck(S2SPlayerLoginBattleRoomAck&& from) noexcept
    : S2SPlayerLoginBattleRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLoginBattleRoomAck& operator=(S2SPlayerLoginBattleRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLoginBattleRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLoginBattleRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLoginBattleRoomAck*>(
               &_S2SPlayerLoginBattleRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  void Swap(S2SPlayerLoginBattleRoomAck* other);
  friend void swap(S2SPlayerLoginBattleRoomAck& a, S2SPlayerLoginBattleRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLoginBattleRoomAck* New() const final {
    return CreateMaybeMessage<S2SPlayerLoginBattleRoomAck>(NULL);
  }

  S2SPlayerLoginBattleRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLoginBattleRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLoginBattleRoomAck& from);
  void MergeFrom(const S2SPlayerLoginBattleRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLoginBattleRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // uint32 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLoginBattleRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLoginRoomToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLoginRoomToBattleShardReq) */ {
 public:
  S2SPlayerLoginRoomToBattleShardReq();
  virtual ~S2SPlayerLoginRoomToBattleShardReq();

  S2SPlayerLoginRoomToBattleShardReq(const S2SPlayerLoginRoomToBattleShardReq& from);

  inline S2SPlayerLoginRoomToBattleShardReq& operator=(const S2SPlayerLoginRoomToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLoginRoomToBattleShardReq(S2SPlayerLoginRoomToBattleShardReq&& from) noexcept
    : S2SPlayerLoginRoomToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLoginRoomToBattleShardReq& operator=(S2SPlayerLoginRoomToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLoginRoomToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLoginRoomToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLoginRoomToBattleShardReq*>(
               &_S2SPlayerLoginRoomToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  void Swap(S2SPlayerLoginRoomToBattleShardReq* other);
  friend void swap(S2SPlayerLoginRoomToBattleShardReq& a, S2SPlayerLoginRoomToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLoginRoomToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLoginRoomToBattleShardReq>(NULL);
  }

  S2SPlayerLoginRoomToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLoginRoomToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLoginRoomToBattleShardReq& from);
  void MergeFrom(const S2SPlayerLoginRoomToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLoginRoomToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerCancelMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerCancelMatchReq) */ {
 public:
  S2SPlayerCancelMatchReq();
  virtual ~S2SPlayerCancelMatchReq();

  S2SPlayerCancelMatchReq(const S2SPlayerCancelMatchReq& from);

  inline S2SPlayerCancelMatchReq& operator=(const S2SPlayerCancelMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerCancelMatchReq(S2SPlayerCancelMatchReq&& from) noexcept
    : S2SPlayerCancelMatchReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerCancelMatchReq& operator=(S2SPlayerCancelMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerCancelMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerCancelMatchReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerCancelMatchReq*>(
               &_S2SPlayerCancelMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  void Swap(S2SPlayerCancelMatchReq* other);
  friend void swap(S2SPlayerCancelMatchReq& a, S2SPlayerCancelMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerCancelMatchReq* New() const final {
    return CreateMaybeMessage<S2SPlayerCancelMatchReq>(NULL);
  }

  S2SPlayerCancelMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerCancelMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerCancelMatchReq& from);
  void MergeFrom(const S2SPlayerCancelMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerCancelMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerCancelMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveBattleRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveBattleRoomReq) */ {
 public:
  S2SPlayerLeaveBattleRoomReq();
  virtual ~S2SPlayerLeaveBattleRoomReq();

  S2SPlayerLeaveBattleRoomReq(const S2SPlayerLeaveBattleRoomReq& from);

  inline S2SPlayerLeaveBattleRoomReq& operator=(const S2SPlayerLeaveBattleRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveBattleRoomReq(S2SPlayerLeaveBattleRoomReq&& from) noexcept
    : S2SPlayerLeaveBattleRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveBattleRoomReq& operator=(S2SPlayerLeaveBattleRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveBattleRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveBattleRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveBattleRoomReq*>(
               &_S2SPlayerLeaveBattleRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    170;

  void Swap(S2SPlayerLeaveBattleRoomReq* other);
  friend void swap(S2SPlayerLeaveBattleRoomReq& a, S2SPlayerLeaveBattleRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveBattleRoomReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveBattleRoomReq>(NULL);
  }

  S2SPlayerLeaveBattleRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveBattleRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveBattleRoomReq& from);
  void MergeFrom(const S2SPlayerLeaveBattleRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveBattleRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 battleshardid = 2;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 2;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveBattleRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveBattleRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveBattleRoomAck) */ {
 public:
  S2SPlayerLeaveBattleRoomAck();
  virtual ~S2SPlayerLeaveBattleRoomAck();

  S2SPlayerLeaveBattleRoomAck(const S2SPlayerLeaveBattleRoomAck& from);

  inline S2SPlayerLeaveBattleRoomAck& operator=(const S2SPlayerLeaveBattleRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveBattleRoomAck(S2SPlayerLeaveBattleRoomAck&& from) noexcept
    : S2SPlayerLeaveBattleRoomAck() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveBattleRoomAck& operator=(S2SPlayerLeaveBattleRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveBattleRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveBattleRoomAck* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveBattleRoomAck*>(
               &_S2SPlayerLeaveBattleRoomAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    171;

  void Swap(S2SPlayerLeaveBattleRoomAck* other);
  friend void swap(S2SPlayerLeaveBattleRoomAck& a, S2SPlayerLeaveBattleRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveBattleRoomAck* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveBattleRoomAck>(NULL);
  }

  S2SPlayerLeaveBattleRoomAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveBattleRoomAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveBattleRoomAck& from);
  void MergeFrom(const S2SPlayerLeaveBattleRoomAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveBattleRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveBattleRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveRoomToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveRoomToBattleShardReq) */ {
 public:
  S2SPlayerLeaveRoomToBattleShardReq();
  virtual ~S2SPlayerLeaveRoomToBattleShardReq();

  S2SPlayerLeaveRoomToBattleShardReq(const S2SPlayerLeaveRoomToBattleShardReq& from);

  inline S2SPlayerLeaveRoomToBattleShardReq& operator=(const S2SPlayerLeaveRoomToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveRoomToBattleShardReq(S2SPlayerLeaveRoomToBattleShardReq&& from) noexcept
    : S2SPlayerLeaveRoomToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveRoomToBattleShardReq& operator=(S2SPlayerLeaveRoomToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveRoomToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveRoomToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveRoomToBattleShardReq*>(
               &_S2SPlayerLeaveRoomToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    172;

  void Swap(S2SPlayerLeaveRoomToBattleShardReq* other);
  friend void swap(S2SPlayerLeaveRoomToBattleShardReq& a, S2SPlayerLeaveRoomToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveRoomToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveRoomToBattleShardReq>(NULL);
  }

  S2SPlayerLeaveRoomToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveRoomToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveRoomToBattleShardReq& from);
  void MergeFrom(const S2SPlayerLeaveRoomToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveRoomToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 2;
  void clear_campid();
  static const int kCampidFieldNumber = 2;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveRoomToMatchShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveRoomToMatchShardReq) */ {
 public:
  S2SPlayerLeaveRoomToMatchShardReq();
  virtual ~S2SPlayerLeaveRoomToMatchShardReq();

  S2SPlayerLeaveRoomToMatchShardReq(const S2SPlayerLeaveRoomToMatchShardReq& from);

  inline S2SPlayerLeaveRoomToMatchShardReq& operator=(const S2SPlayerLeaveRoomToMatchShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveRoomToMatchShardReq(S2SPlayerLeaveRoomToMatchShardReq&& from) noexcept
    : S2SPlayerLeaveRoomToMatchShardReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveRoomToMatchShardReq& operator=(S2SPlayerLeaveRoomToMatchShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveRoomToMatchShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveRoomToMatchShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveRoomToMatchShardReq*>(
               &_S2SPlayerLeaveRoomToMatchShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    173;

  void Swap(S2SPlayerLeaveRoomToMatchShardReq* other);
  friend void swap(S2SPlayerLeaveRoomToMatchShardReq& a, S2SPlayerLeaveRoomToMatchShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveRoomToMatchShardReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveRoomToMatchShardReq>(NULL);
  }

  S2SPlayerLeaveRoomToMatchShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveRoomToMatchShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveRoomToMatchShardReq& from);
  void MergeFrom(const S2SPlayerLeaveRoomToMatchShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveRoomToMatchShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint64 matchid() const;
  void set_matchid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 groupid = 4;
  void clear_groupid();
  static const int kGroupidFieldNumber = 4;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 playerid = 5;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 5;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 campid = 3;
  void clear_campid();
  static const int kCampidFieldNumber = 3;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 matchid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLeaveBattleRoomToClientAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLeaveBattleRoomToClientAck) */ {
 public:
  S2SLeaveBattleRoomToClientAck();
  virtual ~S2SLeaveBattleRoomToClientAck();

  S2SLeaveBattleRoomToClientAck(const S2SLeaveBattleRoomToClientAck& from);

  inline S2SLeaveBattleRoomToClientAck& operator=(const S2SLeaveBattleRoomToClientAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLeaveBattleRoomToClientAck(S2SLeaveBattleRoomToClientAck&& from) noexcept
    : S2SLeaveBattleRoomToClientAck() {
    *this = ::std::move(from);
  }

  inline S2SLeaveBattleRoomToClientAck& operator=(S2SLeaveBattleRoomToClientAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLeaveBattleRoomToClientAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLeaveBattleRoomToClientAck* internal_default_instance() {
    return reinterpret_cast<const S2SLeaveBattleRoomToClientAck*>(
               &_S2SLeaveBattleRoomToClientAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    174;

  void Swap(S2SLeaveBattleRoomToClientAck* other);
  friend void swap(S2SLeaveBattleRoomToClientAck& a, S2SLeaveBattleRoomToClientAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLeaveBattleRoomToClientAck* New() const final {
    return CreateMaybeMessage<S2SLeaveBattleRoomToClientAck>(NULL);
  }

  S2SLeaveBattleRoomToClientAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLeaveBattleRoomToClientAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLeaveBattleRoomToClientAck& from);
  void MergeFrom(const S2SLeaveBattleRoomToClientAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLeaveBattleRoomToClientAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLeaveBattleRoomToClientAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellBattleRoomStartReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellBattleRoomStartReq) */ {
 public:
  S2STellBattleRoomStartReq();
  virtual ~S2STellBattleRoomStartReq();

  S2STellBattleRoomStartReq(const S2STellBattleRoomStartReq& from);

  inline S2STellBattleRoomStartReq& operator=(const S2STellBattleRoomStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellBattleRoomStartReq(S2STellBattleRoomStartReq&& from) noexcept
    : S2STellBattleRoomStartReq() {
    *this = ::std::move(from);
  }

  inline S2STellBattleRoomStartReq& operator=(S2STellBattleRoomStartReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellBattleRoomStartReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellBattleRoomStartReq* internal_default_instance() {
    return reinterpret_cast<const S2STellBattleRoomStartReq*>(
               &_S2STellBattleRoomStartReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    175;

  void Swap(S2STellBattleRoomStartReq* other);
  friend void swap(S2STellBattleRoomStartReq& a, S2STellBattleRoomStartReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellBattleRoomStartReq* New() const final {
    return CreateMaybeMessage<S2STellBattleRoomStartReq>(NULL);
  }

  S2STellBattleRoomStartReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellBattleRoomStartReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellBattleRoomStartReq& from);
  void MergeFrom(const S2STellBattleRoomStartReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellBattleRoomStartReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 battleshardid = 1;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 1;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 maxtime = 3;
  void clear_maxtime();
  static const int kMaxtimeFieldNumber = 3;
  ::google::protobuf::uint32 maxtime() const;
  void set_maxtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellBattleRoomStartReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 maxtime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellRoomStartToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellRoomStartToBattleShardReq) */ {
 public:
  S2STellRoomStartToBattleShardReq();
  virtual ~S2STellRoomStartToBattleShardReq();

  S2STellRoomStartToBattleShardReq(const S2STellRoomStartToBattleShardReq& from);

  inline S2STellRoomStartToBattleShardReq& operator=(const S2STellRoomStartToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellRoomStartToBattleShardReq(S2STellRoomStartToBattleShardReq&& from) noexcept
    : S2STellRoomStartToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2STellRoomStartToBattleShardReq& operator=(S2STellRoomStartToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellRoomStartToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellRoomStartToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2STellRoomStartToBattleShardReq*>(
               &_S2STellRoomStartToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    176;

  void Swap(S2STellRoomStartToBattleShardReq* other);
  friend void swap(S2STellRoomStartToBattleShardReq& a, S2STellRoomStartToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellRoomStartToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2STellRoomStartToBattleShardReq>(NULL);
  }

  S2STellRoomStartToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellRoomStartToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellRoomStartToBattleShardReq& from);
  void MergeFrom(const S2STellRoomStartToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellRoomStartToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 maxtime = 2;
  void clear_maxtime();
  static const int kMaxtimeFieldNumber = 2;
  ::google::protobuf::uint32 maxtime() const;
  void set_maxtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellRoomStartToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 maxtime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellBattleRoomStartAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellBattleRoomStartAck) */ {
 public:
  S2STellBattleRoomStartAck();
  virtual ~S2STellBattleRoomStartAck();

  S2STellBattleRoomStartAck(const S2STellBattleRoomStartAck& from);

  inline S2STellBattleRoomStartAck& operator=(const S2STellBattleRoomStartAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellBattleRoomStartAck(S2STellBattleRoomStartAck&& from) noexcept
    : S2STellBattleRoomStartAck() {
    *this = ::std::move(from);
  }

  inline S2STellBattleRoomStartAck& operator=(S2STellBattleRoomStartAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellBattleRoomStartAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellBattleRoomStartAck* internal_default_instance() {
    return reinterpret_cast<const S2STellBattleRoomStartAck*>(
               &_S2STellBattleRoomStartAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    177;

  void Swap(S2STellBattleRoomStartAck* other);
  friend void swap(S2STellBattleRoomStartAck& a, S2STellBattleRoomStartAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellBattleRoomStartAck* New() const final {
    return CreateMaybeMessage<S2STellBattleRoomStartAck>(NULL);
  }

  S2STellBattleRoomStartAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellBattleRoomStartAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellBattleRoomStartAck& from);
  void MergeFrom(const S2STellBattleRoomStartAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellBattleRoomStartAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellBattleRoomStartAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellRoomStartToMatchShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellRoomStartToMatchShardReq) */ {
 public:
  S2STellRoomStartToMatchShardReq();
  virtual ~S2STellRoomStartToMatchShardReq();

  S2STellRoomStartToMatchShardReq(const S2STellRoomStartToMatchShardReq& from);

  inline S2STellRoomStartToMatchShardReq& operator=(const S2STellRoomStartToMatchShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellRoomStartToMatchShardReq(S2STellRoomStartToMatchShardReq&& from) noexcept
    : S2STellRoomStartToMatchShardReq() {
    *this = ::std::move(from);
  }

  inline S2STellRoomStartToMatchShardReq& operator=(S2STellRoomStartToMatchShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellRoomStartToMatchShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellRoomStartToMatchShardReq* internal_default_instance() {
    return reinterpret_cast<const S2STellRoomStartToMatchShardReq*>(
               &_S2STellRoomStartToMatchShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    178;

  void Swap(S2STellRoomStartToMatchShardReq* other);
  friend void swap(S2STellRoomStartToMatchShardReq& a, S2STellRoomStartToMatchShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellRoomStartToMatchShardReq* New() const final {
    return CreateMaybeMessage<S2STellRoomStartToMatchShardReq>(NULL);
  }

  S2STellRoomStartToMatchShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellRoomStartToMatchShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellRoomStartToMatchShardReq& from);
  void MergeFrom(const S2STellRoomStartToMatchShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellRoomStartToMatchShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellRoomStartToMatchShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellRoomStartToMatchShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellRoomStartToMatchShardAck) */ {
 public:
  S2STellRoomStartToMatchShardAck();
  virtual ~S2STellRoomStartToMatchShardAck();

  S2STellRoomStartToMatchShardAck(const S2STellRoomStartToMatchShardAck& from);

  inline S2STellRoomStartToMatchShardAck& operator=(const S2STellRoomStartToMatchShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellRoomStartToMatchShardAck(S2STellRoomStartToMatchShardAck&& from) noexcept
    : S2STellRoomStartToMatchShardAck() {
    *this = ::std::move(from);
  }

  inline S2STellRoomStartToMatchShardAck& operator=(S2STellRoomStartToMatchShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellRoomStartToMatchShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellRoomStartToMatchShardAck* internal_default_instance() {
    return reinterpret_cast<const S2STellRoomStartToMatchShardAck*>(
               &_S2STellRoomStartToMatchShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    179;

  void Swap(S2STellRoomStartToMatchShardAck* other);
  friend void swap(S2STellRoomStartToMatchShardAck& a, S2STellRoomStartToMatchShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellRoomStartToMatchShardAck* New() const final {
    return CreateMaybeMessage<S2STellRoomStartToMatchShardAck>(NULL);
  }

  S2STellRoomStartToMatchShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellRoomStartToMatchShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellRoomStartToMatchShardAck& from);
  void MergeFrom(const S2STellRoomStartToMatchShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellRoomStartToMatchShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellRoomStartToMatchShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellBattleRoomFinishReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellBattleRoomFinishReq) */ {
 public:
  S2STellBattleRoomFinishReq();
  virtual ~S2STellBattleRoomFinishReq();

  S2STellBattleRoomFinishReq(const S2STellBattleRoomFinishReq& from);

  inline S2STellBattleRoomFinishReq& operator=(const S2STellBattleRoomFinishReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellBattleRoomFinishReq(S2STellBattleRoomFinishReq&& from) noexcept
    : S2STellBattleRoomFinishReq() {
    *this = ::std::move(from);
  }

  inline S2STellBattleRoomFinishReq& operator=(S2STellBattleRoomFinishReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellBattleRoomFinishReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellBattleRoomFinishReq* internal_default_instance() {
    return reinterpret_cast<const S2STellBattleRoomFinishReq*>(
               &_S2STellBattleRoomFinishReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    180;

  void Swap(S2STellBattleRoomFinishReq* other);
  friend void swap(S2STellBattleRoomFinishReq& a, S2STellBattleRoomFinishReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellBattleRoomFinishReq* New() const final {
    return CreateMaybeMessage<S2STellBattleRoomFinishReq>(NULL);
  }

  S2STellBattleRoomFinishReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellBattleRoomFinishReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellBattleRoomFinishReq& from);
  void MergeFrom(const S2STellBattleRoomFinishReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellBattleRoomFinishReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 battleshardid = 1;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 1;
  ::google::protobuf::uint64 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellBattleRoomFinishReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 battleshardid_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellBattleRoomFinishAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellBattleRoomFinishAck) */ {
 public:
  S2STellBattleRoomFinishAck();
  virtual ~S2STellBattleRoomFinishAck();

  S2STellBattleRoomFinishAck(const S2STellBattleRoomFinishAck& from);

  inline S2STellBattleRoomFinishAck& operator=(const S2STellBattleRoomFinishAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellBattleRoomFinishAck(S2STellBattleRoomFinishAck&& from) noexcept
    : S2STellBattleRoomFinishAck() {
    *this = ::std::move(from);
  }

  inline S2STellBattleRoomFinishAck& operator=(S2STellBattleRoomFinishAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellBattleRoomFinishAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellBattleRoomFinishAck* internal_default_instance() {
    return reinterpret_cast<const S2STellBattleRoomFinishAck*>(
               &_S2STellBattleRoomFinishAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    181;

  void Swap(S2STellBattleRoomFinishAck* other);
  friend void swap(S2STellBattleRoomFinishAck& a, S2STellBattleRoomFinishAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellBattleRoomFinishAck* New() const final {
    return CreateMaybeMessage<S2STellBattleRoomFinishAck>(NULL);
  }

  S2STellBattleRoomFinishAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellBattleRoomFinishAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellBattleRoomFinishAck& from);
  void MergeFrom(const S2STellBattleRoomFinishAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellBattleRoomFinishAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellBattleRoomFinishAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBattleRoomScoreBalanceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBattleRoomScoreBalanceReq) */ {
 public:
  S2SBattleRoomScoreBalanceReq();
  virtual ~S2SBattleRoomScoreBalanceReq();

  S2SBattleRoomScoreBalanceReq(const S2SBattleRoomScoreBalanceReq& from);

  inline S2SBattleRoomScoreBalanceReq& operator=(const S2SBattleRoomScoreBalanceReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBattleRoomScoreBalanceReq(S2SBattleRoomScoreBalanceReq&& from) noexcept
    : S2SBattleRoomScoreBalanceReq() {
    *this = ::std::move(from);
  }

  inline S2SBattleRoomScoreBalanceReq& operator=(S2SBattleRoomScoreBalanceReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBattleRoomScoreBalanceReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBattleRoomScoreBalanceReq* internal_default_instance() {
    return reinterpret_cast<const S2SBattleRoomScoreBalanceReq*>(
               &_S2SBattleRoomScoreBalanceReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    182;

  void Swap(S2SBattleRoomScoreBalanceReq* other);
  friend void swap(S2SBattleRoomScoreBalanceReq& a, S2SBattleRoomScoreBalanceReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBattleRoomScoreBalanceReq* New() const final {
    return CreateMaybeMessage<S2SBattleRoomScoreBalanceReq>(NULL);
  }

  S2SBattleRoomScoreBalanceReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBattleRoomScoreBalanceReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBattleRoomScoreBalanceReq& from);
  void MergeFrom(const S2SBattleRoomScoreBalanceReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBattleRoomScoreBalanceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBBattleScore pbscore = 3;
  bool has_pbscore() const;
  void clear_pbscore();
  static const int kPbscoreFieldNumber = 3;
  private:
  const ::KFMsg::PBBattleScore& _internal_pbscore() const;
  public:
  const ::KFMsg::PBBattleScore& pbscore() const;
  ::KFMsg::PBBattleScore* release_pbscore();
  ::KFMsg::PBBattleScore* mutable_pbscore();
  void set_allocated_pbscore(::KFMsg::PBBattleScore* pbscore);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 battleshardid = 2;
  void clear_battleshardid();
  static const int kBattleshardidFieldNumber = 2;
  ::google::protobuf::uint32 battleshardid() const;
  void set_battleshardid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBattleRoomScoreBalanceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBBattleScore* pbscore_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 battleshardid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBattleRoomScoreBalanceAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBattleRoomScoreBalanceAck) */ {
 public:
  S2SBattleRoomScoreBalanceAck();
  virtual ~S2SBattleRoomScoreBalanceAck();

  S2SBattleRoomScoreBalanceAck(const S2SBattleRoomScoreBalanceAck& from);

  inline S2SBattleRoomScoreBalanceAck& operator=(const S2SBattleRoomScoreBalanceAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBattleRoomScoreBalanceAck(S2SBattleRoomScoreBalanceAck&& from) noexcept
    : S2SBattleRoomScoreBalanceAck() {
    *this = ::std::move(from);
  }

  inline S2SBattleRoomScoreBalanceAck& operator=(S2SBattleRoomScoreBalanceAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBattleRoomScoreBalanceAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBattleRoomScoreBalanceAck* internal_default_instance() {
    return reinterpret_cast<const S2SBattleRoomScoreBalanceAck*>(
               &_S2SBattleRoomScoreBalanceAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    183;

  void Swap(S2SBattleRoomScoreBalanceAck* other);
  friend void swap(S2SBattleRoomScoreBalanceAck& a, S2SBattleRoomScoreBalanceAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBattleRoomScoreBalanceAck* New() const final {
    return CreateMaybeMessage<S2SBattleRoomScoreBalanceAck>(NULL);
  }

  S2SBattleRoomScoreBalanceAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBattleRoomScoreBalanceAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBattleRoomScoreBalanceAck& from);
  void MergeFrom(const S2SBattleRoomScoreBalanceAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBattleRoomScoreBalanceAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes reward = 3;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBattleRoomScoreBalanceAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBattleScoreBalanceToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBattleScoreBalanceToShardReq) */ {
 public:
  S2SBattleScoreBalanceToShardReq();
  virtual ~S2SBattleScoreBalanceToShardReq();

  S2SBattleScoreBalanceToShardReq(const S2SBattleScoreBalanceToShardReq& from);

  inline S2SBattleScoreBalanceToShardReq& operator=(const S2SBattleScoreBalanceToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBattleScoreBalanceToShardReq(S2SBattleScoreBalanceToShardReq&& from) noexcept
    : S2SBattleScoreBalanceToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SBattleScoreBalanceToShardReq& operator=(S2SBattleScoreBalanceToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBattleScoreBalanceToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBattleScoreBalanceToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SBattleScoreBalanceToShardReq*>(
               &_S2SBattleScoreBalanceToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    184;

  void Swap(S2SBattleScoreBalanceToShardReq* other);
  friend void swap(S2SBattleScoreBalanceToShardReq& a, S2SBattleScoreBalanceToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBattleScoreBalanceToShardReq* New() const final {
    return CreateMaybeMessage<S2SBattleScoreBalanceToShardReq>(NULL);
  }

  S2SBattleScoreBalanceToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBattleScoreBalanceToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBattleScoreBalanceToShardReq& from);
  void MergeFrom(const S2SBattleScoreBalanceToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBattleScoreBalanceToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBBattleScore pbscore = 2;
  bool has_pbscore() const;
  void clear_pbscore();
  static const int kPbscoreFieldNumber = 2;
  private:
  const ::KFMsg::PBBattleScore& _internal_pbscore() const;
  public:
  const ::KFMsg::PBBattleScore& pbscore() const;
  ::KFMsg::PBBattleScore* release_pbscore();
  ::KFMsg::PBBattleScore* mutable_pbscore();
  void set_allocated_pbscore(::KFMsg::PBBattleScore* pbscore);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBattleScoreBalanceToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBBattleScore* pbscore_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerBattleScoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerBattleScoreReq) */ {
 public:
  S2SPlayerBattleScoreReq();
  virtual ~S2SPlayerBattleScoreReq();

  S2SPlayerBattleScoreReq(const S2SPlayerBattleScoreReq& from);

  inline S2SPlayerBattleScoreReq& operator=(const S2SPlayerBattleScoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerBattleScoreReq(S2SPlayerBattleScoreReq&& from) noexcept
    : S2SPlayerBattleScoreReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerBattleScoreReq& operator=(S2SPlayerBattleScoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerBattleScoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerBattleScoreReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerBattleScoreReq*>(
               &_S2SPlayerBattleScoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    185;

  void Swap(S2SPlayerBattleScoreReq* other);
  friend void swap(S2SPlayerBattleScoreReq& a, S2SPlayerBattleScoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerBattleScoreReq* New() const final {
    return CreateMaybeMessage<S2SPlayerBattleScoreReq>(NULL);
  }

  S2SPlayerBattleScoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerBattleScoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerBattleScoreReq& from);
  void MergeFrom(const S2SPlayerBattleScoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerBattleScoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBBattleScore pbscore = 3;
  bool has_pbscore() const;
  void clear_pbscore();
  static const int kPbscoreFieldNumber = 3;
  private:
  const ::KFMsg::PBBattleScore& _internal_pbscore() const;
  public:
  const ::KFMsg::PBBattleScore& pbscore() const;
  ::KFMsg::PBBattleScore* release_pbscore();
  ::KFMsg::PBBattleScore* mutable_pbscore();
  void set_allocated_pbscore(::KFMsg::PBBattleScore* pbscore);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerBattleScoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBBattleScore* pbscore_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerBattleScoreAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerBattleScoreAck) */ {
 public:
  S2SPlayerBattleScoreAck();
  virtual ~S2SPlayerBattleScoreAck();

  S2SPlayerBattleScoreAck(const S2SPlayerBattleScoreAck& from);

  inline S2SPlayerBattleScoreAck& operator=(const S2SPlayerBattleScoreAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerBattleScoreAck(S2SPlayerBattleScoreAck&& from) noexcept
    : S2SPlayerBattleScoreAck() {
    *this = ::std::move(from);
  }

  inline S2SPlayerBattleScoreAck& operator=(S2SPlayerBattleScoreAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerBattleScoreAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerBattleScoreAck* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerBattleScoreAck*>(
               &_S2SPlayerBattleScoreAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    186;

  void Swap(S2SPlayerBattleScoreAck* other);
  friend void swap(S2SPlayerBattleScoreAck& a, S2SPlayerBattleScoreAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerBattleScoreAck* New() const final {
    return CreateMaybeMessage<S2SPlayerBattleScoreAck>(NULL);
  }

  S2SPlayerBattleScoreAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerBattleScoreAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerBattleScoreAck& from);
  void MergeFrom(const S2SPlayerBattleScoreAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerBattleScoreAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerBattleScoreAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SOnlieQueryBattleScoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SOnlieQueryBattleScoreReq) */ {
 public:
  S2SOnlieQueryBattleScoreReq();
  virtual ~S2SOnlieQueryBattleScoreReq();

  S2SOnlieQueryBattleScoreReq(const S2SOnlieQueryBattleScoreReq& from);

  inline S2SOnlieQueryBattleScoreReq& operator=(const S2SOnlieQueryBattleScoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SOnlieQueryBattleScoreReq(S2SOnlieQueryBattleScoreReq&& from) noexcept
    : S2SOnlieQueryBattleScoreReq() {
    *this = ::std::move(from);
  }

  inline S2SOnlieQueryBattleScoreReq& operator=(S2SOnlieQueryBattleScoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SOnlieQueryBattleScoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SOnlieQueryBattleScoreReq* internal_default_instance() {
    return reinterpret_cast<const S2SOnlieQueryBattleScoreReq*>(
               &_S2SOnlieQueryBattleScoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    187;

  void Swap(S2SOnlieQueryBattleScoreReq* other);
  friend void swap(S2SOnlieQueryBattleScoreReq& a, S2SOnlieQueryBattleScoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SOnlieQueryBattleScoreReq* New() const final {
    return CreateMaybeMessage<S2SOnlieQueryBattleScoreReq>(NULL);
  }

  S2SOnlieQueryBattleScoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SOnlieQueryBattleScoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SOnlieQueryBattleScoreReq& from);
  void MergeFrom(const S2SOnlieQueryBattleScoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SOnlieQueryBattleScoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SOnlieQueryBattleScoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellRoomFinishToBattleShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellRoomFinishToBattleShardReq) */ {
 public:
  S2STellRoomFinishToBattleShardReq();
  virtual ~S2STellRoomFinishToBattleShardReq();

  S2STellRoomFinishToBattleShardReq(const S2STellRoomFinishToBattleShardReq& from);

  inline S2STellRoomFinishToBattleShardReq& operator=(const S2STellRoomFinishToBattleShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellRoomFinishToBattleShardReq(S2STellRoomFinishToBattleShardReq&& from) noexcept
    : S2STellRoomFinishToBattleShardReq() {
    *this = ::std::move(from);
  }

  inline S2STellRoomFinishToBattleShardReq& operator=(S2STellRoomFinishToBattleShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellRoomFinishToBattleShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellRoomFinishToBattleShardReq* internal_default_instance() {
    return reinterpret_cast<const S2STellRoomFinishToBattleShardReq*>(
               &_S2STellRoomFinishToBattleShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    188;

  void Swap(S2STellRoomFinishToBattleShardReq* other);
  friend void swap(S2STellRoomFinishToBattleShardReq& a, S2STellRoomFinishToBattleShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellRoomFinishToBattleShardReq* New() const final {
    return CreateMaybeMessage<S2STellRoomFinishToBattleShardReq>(NULL);
  }

  S2STellRoomFinishToBattleShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellRoomFinishToBattleShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellRoomFinishToBattleShardReq& from);
  void MergeFrom(const S2STellRoomFinishToBattleShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellRoomFinishToBattleShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellRoomFinishToBattleShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STellRoomCloseToMatchShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STellRoomCloseToMatchShardReq) */ {
 public:
  S2STellRoomCloseToMatchShardReq();
  virtual ~S2STellRoomCloseToMatchShardReq();

  S2STellRoomCloseToMatchShardReq(const S2STellRoomCloseToMatchShardReq& from);

  inline S2STellRoomCloseToMatchShardReq& operator=(const S2STellRoomCloseToMatchShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STellRoomCloseToMatchShardReq(S2STellRoomCloseToMatchShardReq&& from) noexcept
    : S2STellRoomCloseToMatchShardReq() {
    *this = ::std::move(from);
  }

  inline S2STellRoomCloseToMatchShardReq& operator=(S2STellRoomCloseToMatchShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STellRoomCloseToMatchShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STellRoomCloseToMatchShardReq* internal_default_instance() {
    return reinterpret_cast<const S2STellRoomCloseToMatchShardReq*>(
               &_S2STellRoomCloseToMatchShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    189;

  void Swap(S2STellRoomCloseToMatchShardReq* other);
  friend void swap(S2STellRoomCloseToMatchShardReq& a, S2STellRoomCloseToMatchShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STellRoomCloseToMatchShardReq* New() const final {
    return CreateMaybeMessage<S2STellRoomCloseToMatchShardReq>(NULL);
  }

  S2STellRoomCloseToMatchShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STellRoomCloseToMatchShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STellRoomCloseToMatchShardReq& from);
  void MergeFrom(const S2STellRoomCloseToMatchShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STellRoomCloseToMatchShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint64 matchid() const;
  void set_matchid(::google::protobuf::uint64 value);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STellRoomCloseToMatchShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 matchid_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SResetBattleRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SResetBattleRoomReq) */ {
 public:
  S2SResetBattleRoomReq();
  virtual ~S2SResetBattleRoomReq();

  S2SResetBattleRoomReq(const S2SResetBattleRoomReq& from);

  inline S2SResetBattleRoomReq& operator=(const S2SResetBattleRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SResetBattleRoomReq(S2SResetBattleRoomReq&& from) noexcept
    : S2SResetBattleRoomReq() {
    *this = ::std::move(from);
  }

  inline S2SResetBattleRoomReq& operator=(S2SResetBattleRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SResetBattleRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SResetBattleRoomReq* internal_default_instance() {
    return reinterpret_cast<const S2SResetBattleRoomReq*>(
               &_S2SResetBattleRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    190;

  void Swap(S2SResetBattleRoomReq* other);
  friend void swap(S2SResetBattleRoomReq& a, S2SResetBattleRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SResetBattleRoomReq* New() const final {
    return CreateMaybeMessage<S2SResetBattleRoomReq>(NULL);
  }

  S2SResetBattleRoomReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SResetBattleRoomReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SResetBattleRoomReq& from);
  void MergeFrom(const S2SResetBattleRoomReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SResetBattleRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 roomid = 1;
  void clear_roomid();
  static const int kRoomidFieldNumber = 1;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SResetBattleRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roomid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFServerMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// S2STransmitMessageReq

// uint64 playerid = 1;
inline void S2STransmitMessageReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransmitMessageReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitMessageReq.playerid)
  return playerid_;
}
inline void S2STransmitMessageReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitMessageReq.playerid)
}

// uint32 msgid = 2;
inline void S2STransmitMessageReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2STransmitMessageReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitMessageReq.msgid)
  return msgid_;
}
inline void S2STransmitMessageReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitMessageReq.msgid)
}

// bytes msgdata = 3;
inline void S2STransmitMessageReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STransmitMessageReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitMessageReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2STransmitMessageReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitMessageReq.msgdata)
}
#if LANG_CXX11
inline void S2STransmitMessageReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STransmitMessageReq.msgdata)
}
#endif
inline void S2STransmitMessageReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STransmitMessageReq.msgdata)
}
inline void S2STransmitMessageReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STransmitMessageReq.msgdata)
}
inline ::std::string* S2STransmitMessageReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitMessageReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STransmitMessageReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitMessageReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STransmitMessageReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitMessageReq.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastMessageReq

// uint32 msgid = 1;
inline void S2SBroadcastMessageReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastMessageReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastMessageReq.msgid)
  return msgid_;
}
inline void S2SBroadcastMessageReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastMessageReq.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastMessageReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastMessageReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastMessageReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastMessageReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastMessageReq.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastMessageReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastMessageReq.msgdata)
}
#endif
inline void S2SBroadcastMessageReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastMessageReq.msgdata)
}
inline void S2SBroadcastMessageReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastMessageReq.msgdata)
}
inline ::std::string* S2SBroadcastMessageReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastMessageReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastMessageReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastMessageReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastMessageReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastMessageReq.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToWord

// uint32 msgid = 1;
inline void S2SBroadcastToWord::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToWord::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWord.msgid)
  return msgid_;
}
inline void S2SBroadcastToWord::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWord.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToWord::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToWord::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWord.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToWord::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWord.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToWord::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToWord.msgdata)
}
#endif
inline void S2SBroadcastToWord::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToWord.msgdata)
}
inline void S2SBroadcastToWord::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToWord.msgdata)
}
inline ::std::string* S2SBroadcastToWord::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToWord.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToWord::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToWord.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToWord::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToWord.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToGame

// uint32 msgid = 1;
inline void S2SBroadcastToGame::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGame::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGame.msgid)
  return msgid_;
}
inline void S2SBroadcastToGame::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGame.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGame::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGame::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGame.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGame::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGame.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGame::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGame.msgdata)
}
#endif
inline void S2SBroadcastToGame::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGame.msgdata)
}
inline void S2SBroadcastToGame::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGame.msgdata)
}
inline ::std::string* S2SBroadcastToGame::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGame.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGame::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGame.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGame::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGame.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToGate

// uint32 msgid = 1;
inline void S2SBroadcastToGate::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGate::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGate.msgid)
  return msgid_;
}
inline void S2SBroadcastToGate::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGate.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGate::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGate::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGate.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGate::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGate.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGate::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGate.msgdata)
}
#endif
inline void S2SBroadcastToGate::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGate.msgdata)
}
inline void S2SBroadcastToGate::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGate.msgdata)
}
inline ::std::string* S2SBroadcastToGate::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGate.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGate::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGate.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGate::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGate.msgdata)
}

// -------------------------------------------------------------------

// S2STransmitToPlayer

// uint64 playerid = 1;
inline void S2STransmitToPlayer::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransmitToPlayer::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToPlayer.playerid)
  return playerid_;
}
inline void S2STransmitToPlayer::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToPlayer.playerid)
}

// uint32 msgid = 2;
inline void S2STransmitToPlayer::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2STransmitToPlayer::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToPlayer.msgid)
  return msgid_;
}
inline void S2STransmitToPlayer::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToPlayer.msgid)
}

// bytes msgdata = 3;
inline void S2STransmitToPlayer::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STransmitToPlayer::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToPlayer.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2STransmitToPlayer::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToPlayer.msgdata)
}
#if LANG_CXX11
inline void S2STransmitToPlayer::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STransmitToPlayer.msgdata)
}
#endif
inline void S2STransmitToPlayer::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STransmitToPlayer.msgdata)
}
inline void S2STransmitToPlayer::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STransmitToPlayer.msgdata)
}
inline ::std::string* S2STransmitToPlayer::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitToPlayer.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STransmitToPlayer::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitToPlayer.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STransmitToPlayer::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitToPlayer.msgdata)
}

// -------------------------------------------------------------------

// S2STransmitToServer

// uint32 msgid = 2;
inline void S2STransmitToServer::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2STransmitToServer::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToServer.msgid)
  return msgid_;
}
inline void S2STransmitToServer::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToServer.msgid)
}

// bytes msgdata = 3;
inline void S2STransmitToServer::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STransmitToServer::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToServer.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2STransmitToServer::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToServer.msgdata)
}
#if LANG_CXX11
inline void S2STransmitToServer::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STransmitToServer.msgdata)
}
#endif
inline void S2STransmitToServer::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STransmitToServer.msgdata)
}
inline void S2STransmitToServer::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STransmitToServer.msgdata)
}
inline ::std::string* S2STransmitToServer::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitToServer.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STransmitToServer::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitToServer.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STransmitToServer::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitToServer.msgdata)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateDataToPublicReq

// map<string, bytes> pbdata = 1;
inline int S2SUpdateDataToPublicReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateDataToPublicReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateDataToPublicReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateDataToPublicReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateDataToPublicReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateDataToPublicReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SQueryBasicToPublicReq

// bytes name = 1;
inline void S2SQueryBasicToPublicReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryBasicToPublicReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBasicToPublicReq.name)
  return name_.GetNoArena();
}
inline void S2SQueryBasicToPublicReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBasicToPublicReq.name)
}
#if LANG_CXX11
inline void S2SQueryBasicToPublicReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryBasicToPublicReq.name)
}
#endif
inline void S2SQueryBasicToPublicReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryBasicToPublicReq.name)
}
inline void S2SQueryBasicToPublicReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryBasicToPublicReq.name)
}
inline ::std::string* S2SQueryBasicToPublicReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryBasicToPublicReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryBasicToPublicReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryBasicToPublicReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryBasicToPublicReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryBasicToPublicReq.name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SQueryBasicToGameAck

// bytes name = 1;
inline void S2SQueryBasicToGameAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryBasicToGameAck::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBasicToGameAck.name)
  return name_.GetNoArena();
}
inline void S2SQueryBasicToGameAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBasicToGameAck.name)
}
#if LANG_CXX11
inline void S2SQueryBasicToGameAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryBasicToGameAck.name)
}
#endif
inline void S2SQueryBasicToGameAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryBasicToGameAck.name)
}
inline void S2SQueryBasicToGameAck::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryBasicToGameAck.name)
}
inline ::std::string* S2SQueryBasicToGameAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryBasicToGameAck.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryBasicToGameAck::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryBasicToGameAck.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryBasicToGameAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryBasicToGameAck.name)
}

// uint32 result = 2;
inline void S2SQueryBasicToGameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryBasicToGameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBasicToGameAck.result)
  return result_;
}
inline void S2SQueryBasicToGameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBasicToGameAck.result)
}

// map<string, bytes> pbdata = 3;
inline int S2SQueryBasicToGameAck::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SQueryBasicToGameAck::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SQueryBasicToGameAck::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SQueryBasicToGameAck.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SQueryBasicToGameAck::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SQueryBasicToGameAck.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SKickGamePlayerReq

// uint64 playerid = 1;
inline void S2SKickGamePlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickGamePlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickGamePlayerReq.playerid)
  return playerid_;
}
inline void S2SKickGamePlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickGamePlayerReq.playerid)
}

// uint32 type = 2;
inline void S2SKickGamePlayerReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SKickGamePlayerReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickGamePlayerReq.type)
  return type_;
}
inline void S2SKickGamePlayerReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickGamePlayerReq.type)
}

// -------------------------------------------------------------------

// S2SKickGatePlayerReq

// uint64 playerid = 1;
inline void S2SKickGatePlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickGatePlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickGatePlayerReq.playerid)
  return playerid_;
}
inline void S2SKickGatePlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickGatePlayerReq.playerid)
}

// uint32 type = 2;
inline void S2SKickGatePlayerReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SKickGatePlayerReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickGatePlayerReq.type)
  return type_;
}
inline void S2SKickGatePlayerReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickGatePlayerReq.type)
}

// -------------------------------------------------------------------

// S2SLoginLoginVerifyReq

// uint64 accountid = 1;
inline void S2SLoginLoginVerifyReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginLoginVerifyReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyReq.accountid)
  return accountid_;
}
inline void S2SLoginLoginVerifyReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyReq.accountid)
}

// bytes token = 2;
inline void S2SLoginLoginVerifyReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLoginLoginVerifyReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyReq.token)
  return token_.GetNoArena();
}
inline void S2SLoginLoginVerifyReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyReq.token)
}
#if LANG_CXX11
inline void S2SLoginLoginVerifyReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLoginLoginVerifyReq.token)
}
#endif
inline void S2SLoginLoginVerifyReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLoginLoginVerifyReq.token)
}
inline void S2SLoginLoginVerifyReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLoginLoginVerifyReq.token)
}
inline ::std::string* S2SLoginLoginVerifyReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginLoginVerifyReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLoginLoginVerifyReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginLoginVerifyReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLoginLoginVerifyReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginLoginVerifyReq.token)
}

// bytes ip = 3;
inline void S2SLoginLoginVerifyReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLoginLoginVerifyReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyReq.ip)
  return ip_.GetNoArena();
}
inline void S2SLoginLoginVerifyReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyReq.ip)
}
#if LANG_CXX11
inline void S2SLoginLoginVerifyReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLoginLoginVerifyReq.ip)
}
#endif
inline void S2SLoginLoginVerifyReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLoginLoginVerifyReq.ip)
}
inline void S2SLoginLoginVerifyReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLoginLoginVerifyReq.ip)
}
inline ::std::string* S2SLoginLoginVerifyReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginLoginVerifyReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLoginLoginVerifyReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginLoginVerifyReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLoginLoginVerifyReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginLoginVerifyReq.ip)
}

// uint64 sessionid = 4;
inline void S2SLoginLoginVerifyReq::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginLoginVerifyReq::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyReq.sessionid)
  return sessionid_;
}
inline void S2SLoginLoginVerifyReq::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyReq.sessionid)
}

// -------------------------------------------------------------------

// S2SLoginLoginVerifyAck

// uint32 result = 1;
inline void S2SLoginLoginVerifyAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginLoginVerifyAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyAck.result)
  return result_;
}
inline void S2SLoginLoginVerifyAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyAck.result)
}

// uint64 accountid = 2;
inline void S2SLoginLoginVerifyAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginLoginVerifyAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyAck.accountid)
  return accountid_;
}
inline void S2SLoginLoginVerifyAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyAck.accountid)
}

// uint64 sessionid = 3;
inline void S2SLoginLoginVerifyAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginLoginVerifyAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyAck.sessionid)
  return sessionid_;
}
inline void S2SLoginLoginVerifyAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyAck.sessionid)
}

// uint64 bantime = 4;
inline void S2SLoginLoginVerifyAck::clear_bantime() {
  bantime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginLoginVerifyAck::bantime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoginVerifyAck.bantime)
  return bantime_;
}
inline void S2SLoginLoginVerifyAck::set_bantime(::google::protobuf::uint64 value) {
  
  bantime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoginVerifyAck.bantime)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBLoginData

// bytes token = 1;
inline void PBLoginData::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBLoginData::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.token)
  return token_.GetNoArena();
}
inline void PBLoginData::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.token)
}
#if LANG_CXX11
inline void PBLoginData::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBLoginData.token)
}
#endif
inline void PBLoginData::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBLoginData.token)
}
inline void PBLoginData::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBLoginData.token)
}
inline ::std::string* PBLoginData::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBLoginData.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginData::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.PBLoginData.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginData::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBLoginData.token)
}

// uint64 gateid = 2;
inline void PBLoginData::clear_gateid() {
  gateid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::gateid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.gateid)
  return gateid_;
}
inline void PBLoginData::set_gateid(::google::protobuf::uint64 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.gateid)
}

// uint64 sessionid = 3;
inline void PBLoginData::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.sessionid)
  return sessionid_;
}
inline void PBLoginData::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.sessionid)
}

// uint32 channel = 4;
inline void PBLoginData::clear_channel() {
  channel_ = 0u;
}
inline ::google::protobuf::uint32 PBLoginData::channel() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.channel)
  return channel_;
}
inline void PBLoginData::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.channel)
}

// bytes account = 5;
inline void PBLoginData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBLoginData::account() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.account)
  return account_.GetNoArena();
}
inline void PBLoginData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.account)
}
#if LANG_CXX11
inline void PBLoginData::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBLoginData.account)
}
#endif
inline void PBLoginData::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBLoginData.account)
}
inline void PBLoginData::set_account(const void* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBLoginData.account)
}
inline ::std::string* PBLoginData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBLoginData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginData::release_account() {
  // @@protoc_insertion_point(field_release:KFMsg.PBLoginData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBLoginData.account)
}

// uint64 accountid = 6;
inline void PBLoginData::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.accountid)
  return accountid_;
}
inline void PBLoginData::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.accountid)
}

// uint64 playerid = 7;
inline void PBLoginData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.playerid)
  return playerid_;
}
inline void PBLoginData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.playerid)
}

// map<string, bytes> channeldata = 8;
inline int PBLoginData::channeldata_size() const {
  return channeldata_.size();
}
inline void PBLoginData::clear_channeldata() {
  channeldata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBLoginData::channeldata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBLoginData.channeldata)
  return channeldata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBLoginData::mutable_channeldata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBLoginData.channeldata)
  return channeldata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SLoginWorldVerifyReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginWorldVerifyReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginWorldVerifyReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginWorldVerifyReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginWorldVerifyReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginWorldVerifyReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginWorldVerifyReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginWorldVerifyReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginWorldVerifyReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginWorldVerifyReq.pblogin)
  return pblogin_;
}
inline void S2SLoginWorldVerifyReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginWorldVerifyReq.pblogin)
}

// -------------------------------------------------------------------

// S2SLoginFailedToLoginAck

// uint64 gateid = 1;
inline void S2SLoginFailedToLoginAck::clear_gateid() {
  gateid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginFailedToLoginAck::gateid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginFailedToLoginAck.gateid)
  return gateid_;
}
inline void S2SLoginFailedToLoginAck::set_gateid(::google::protobuf::uint64 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginFailedToLoginAck.gateid)
}

// uint32 result = 2;
inline void S2SLoginFailedToLoginAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginFailedToLoginAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginFailedToLoginAck.result)
  return result_;
}
inline void S2SLoginFailedToLoginAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginFailedToLoginAck.result)
}

// uint64 accountid = 3;
inline void S2SLoginFailedToLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginFailedToLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginFailedToLoginAck.accountid)
  return accountid_;
}
inline void S2SLoginFailedToLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginFailedToLoginAck.accountid)
}

// uint64 sessionid = 4;
inline void S2SLoginFailedToLoginAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginFailedToLoginAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginFailedToLoginAck.sessionid)
  return sessionid_;
}
inline void S2SLoginFailedToLoginAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginFailedToLoginAck.sessionid)
}

// -------------------------------------------------------------------

// S2SLoginTellTokenToGameReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginTellTokenToGameReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginTellTokenToGameReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginTellTokenToGameReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginTellTokenToGameReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginTellTokenToGameReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginTellTokenToGameReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginTellTokenToGameReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginTellTokenToGameReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginTellTokenToGameReq.pblogin)
  return pblogin_;
}
inline void S2SLoginTellTokenToGameReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginTellTokenToGameReq.pblogin)
}

// -------------------------------------------------------------------

// S2SLoginGameAck

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginGameAck::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginGameAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginGameAck::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginGameAck::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginGameAck.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginGameAck::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginGameAck.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginGameAck::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginGameAck.pblogin)
  return pblogin_;
}
inline void S2SLoginGameAck::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginGameAck.pblogin)
}

// uint32 result = 2;
inline void S2SLoginGameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginGameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginGameAck.result)
  return result_;
}
inline void S2SLoginGameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginGameAck.result)
}

// uint64 servertime = 3;
inline void S2SLoginGameAck::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginGameAck::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginGameAck.servertime)
  return servertime_;
}
inline void S2SLoginGameAck::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginGameAck.servertime)
}

// .KFMsg.PBObject playerdata = 4;
inline bool S2SLoginGameAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SLoginGameAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SLoginGameAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginGameAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SLoginGameAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginGameAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SLoginGameAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginGameAck.playerdata)
  return playerdata_;
}
inline void S2SLoginGameAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginGameAck.playerdata)
}

// -------------------------------------------------------------------

// S2SLoginLoadPlayerReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginLoadPlayerReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginLoadPlayerReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginLoadPlayerReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginLoadPlayerReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoadPlayerReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginLoadPlayerReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginLoadPlayerReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginLoadPlayerReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginLoadPlayerReq.pblogin)
  return pblogin_;
}
inline void S2SLoginLoadPlayerReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginLoadPlayerReq.pblogin)
}

// -------------------------------------------------------------------

// S2SLoginLoadPlayerAck

// uint32 result = 1;
inline void S2SLoginLoadPlayerAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginLoadPlayerAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoadPlayerAck.result)
  return result_;
}
inline void S2SLoginLoadPlayerAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginLoadPlayerAck.result)
}

// .KFMsg.PBLoginData pblogin = 2;
inline bool S2SLoginLoadPlayerAck::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginLoadPlayerAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginLoadPlayerAck::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginLoadPlayerAck::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoadPlayerAck.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginLoadPlayerAck::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginLoadPlayerAck.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginLoadPlayerAck::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginLoadPlayerAck.pblogin)
  return pblogin_;
}
inline void S2SLoginLoadPlayerAck::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginLoadPlayerAck.pblogin)
}

// .KFMsg.PBObject playerdata = 3;
inline bool S2SLoginLoadPlayerAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SLoginLoadPlayerAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SLoginLoadPlayerAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginLoadPlayerAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SLoginLoadPlayerAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginLoadPlayerAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SLoginLoadPlayerAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginLoadPlayerAck.playerdata)
  return playerdata_;
}
inline void S2SLoginLoadPlayerAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginLoadPlayerAck.playerdata)
}

// -------------------------------------------------------------------

// S2SSavePlayerReq

// uint64 id = 1;
inline void S2SSavePlayerReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSavePlayerReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerReq.id)
  return id_;
}
inline void S2SSavePlayerReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSavePlayerReq.id)
}

// .KFMsg.PBObject data = 3;
inline bool S2SSavePlayerReq::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::KFMsg::PBObject& S2SSavePlayerReq::_internal_data() const {
  return *data_;
}
inline const ::KFMsg::PBObject& S2SSavePlayerReq::data() const {
  const ::KFMsg::PBObject* p = data_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerReq.data)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SSavePlayerReq::release_data() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSavePlayerReq.data)
  
  ::KFMsg::PBObject* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SSavePlayerReq::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSavePlayerReq.data)
  return data_;
}
inline void S2SSavePlayerReq::set_allocated_data(::KFMsg::PBObject* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSavePlayerReq.data)
}

// -------------------------------------------------------------------

// S2SLoginOutReq

// uint64 playerid = 1;
inline void S2SLoginOutReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginOutReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginOutReq.playerid)
  return playerid_;
}
inline void S2SLoginOutReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginOutReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerDisconnectionReq

// uint64 playerid = 1;
inline void S2SPlayerDisconnectionReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerDisconnectionReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerDisconnectionReq.playerid)
  return playerid_;
}
inline void S2SPlayerDisconnectionReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerDisconnectionReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryPlayerReq

// uint64 playerid = 1;
inline void S2SQueryPlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryPlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerReq.playerid)
  return playerid_;
}
inline void S2SQueryPlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryPlayerReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryPlayerAck

// uint32 result = 1;
inline void S2SQueryPlayerAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryPlayerAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerAck.result)
  return result_;
}
inline void S2SQueryPlayerAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryPlayerAck.result)
}

// .KFMsg.PBObject playerdata = 2;
inline bool S2SQueryPlayerAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SQueryPlayerAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SQueryPlayerAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SQueryPlayerAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryPlayerAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SQueryPlayerAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryPlayerAck.playerdata)
  return playerdata_;
}
inline void S2SQueryPlayerAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryPlayerAck.playerdata)
}

// -------------------------------------------------------------------

// S2SSetPlayerNameReq

// uint64 playerid = 1;
inline void S2SSetPlayerNameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetPlayerNameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameReq.playerid)
  return playerid_;
}
inline void S2SSetPlayerNameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameReq.playerid)
}

// bytes oldname = 2;
inline void S2SSetPlayerNameReq::clear_oldname() {
  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameReq::oldname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameReq.oldname)
  return oldname_.GetNoArena();
}
inline void S2SSetPlayerNameReq::set_oldname(const ::std::string& value) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameReq.oldname)
}
#if LANG_CXX11
inline void S2SSetPlayerNameReq::set_oldname(::std::string&& value) {
  
  oldname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameReq.oldname)
}
#endif
inline void S2SSetPlayerNameReq::set_oldname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameReq.oldname)
}
inline void S2SSetPlayerNameReq::set_oldname(const void* value, size_t size) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameReq.oldname)
}
inline ::std::string* S2SSetPlayerNameReq::mutable_oldname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameReq.oldname)
  return oldname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameReq::release_oldname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameReq.oldname)
  
  return oldname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameReq::set_allocated_oldname(::std::string* oldname) {
  if (oldname != NULL) {
    
  } else {
    
  }
  oldname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oldname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameReq.oldname)
}

// bytes newname = 3;
inline void S2SSetPlayerNameReq::clear_newname() {
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameReq::newname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameReq.newname)
  return newname_.GetNoArena();
}
inline void S2SSetPlayerNameReq::set_newname(const ::std::string& value) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameReq.newname)
}
#if LANG_CXX11
inline void S2SSetPlayerNameReq::set_newname(::std::string&& value) {
  
  newname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameReq.newname)
}
#endif
inline void S2SSetPlayerNameReq::set_newname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameReq.newname)
}
inline void S2SSetPlayerNameReq::set_newname(const void* value, size_t size) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameReq.newname)
}
inline ::std::string* S2SSetPlayerNameReq::mutable_newname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameReq.newname)
  return newname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameReq::release_newname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameReq.newname)
  
  return newname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameReq::set_allocated_newname(::std::string* newname) {
  if (newname != NULL) {
    
  } else {
    
  }
  newname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameReq.newname)
}

// uint64 itemguid = 4;
inline void S2SSetPlayerNameReq::clear_itemguid() {
  itemguid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetPlayerNameReq::itemguid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameReq.itemguid)
  return itemguid_;
}
inline void S2SSetPlayerNameReq::set_itemguid(::google::protobuf::uint64 value) {
  
  itemguid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameReq.itemguid)
}

// -------------------------------------------------------------------

// S2SSetPlayerNameAck

// uint32 result = 1;
inline void S2SSetPlayerNameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SSetPlayerNameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameAck.result)
  return result_;
}
inline void S2SSetPlayerNameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameAck.result)
}

// uint64 playerid = 2;
inline void S2SSetPlayerNameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetPlayerNameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameAck.playerid)
  return playerid_;
}
inline void S2SSetPlayerNameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameAck.playerid)
}

// bytes name = 3;
inline void S2SSetPlayerNameAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameAck::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameAck.name)
  return name_.GetNoArena();
}
inline void S2SSetPlayerNameAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameAck.name)
}
#if LANG_CXX11
inline void S2SSetPlayerNameAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameAck.name)
}
#endif
inline void S2SSetPlayerNameAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameAck.name)
}
inline void S2SSetPlayerNameAck::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameAck.name)
}
inline ::std::string* S2SSetPlayerNameAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameAck.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameAck::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameAck.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameAck.name)
}

// uint64 itemguid = 4;
inline void S2SSetPlayerNameAck::clear_itemguid() {
  itemguid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetPlayerNameAck::itemguid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameAck.itemguid)
  return itemguid_;
}
inline void S2SSetPlayerNameAck::set_itemguid(::google::protobuf::uint64 value) {
  
  itemguid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameAck.itemguid)
}

// -------------------------------------------------------------------

// S2SPlayerEnterWorldReq

// uint64 playerid = 1;
inline void S2SPlayerEnterWorldReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterWorldReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterWorldReq.playerid)
  return playerid_;
}
inline void S2SPlayerEnterWorldReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterWorldReq.playerid)
}

// uint64 accountid = 2;
inline void S2SPlayerEnterWorldReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterWorldReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterWorldReq.accountid)
  return accountid_;
}
inline void S2SPlayerEnterWorldReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterWorldReq.accountid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveWorldReq

// uint64 playerid = 1;
inline void S2SPlayerLeaveWorldReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveWorldReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveWorldReq.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveWorldReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveWorldReq.playerid)
}

// uint64 accountid = 2;
inline void S2SPlayerLeaveWorldReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveWorldReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveWorldReq.accountid)
  return accountid_;
}
inline void S2SPlayerLeaveWorldReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveWorldReq.accountid)
}

// -------------------------------------------------------------------

// S2SGameSyncOnlineReq

// repeated uint64 playerid = 1;
inline int S2SGameSyncOnlineReq::playerid_size() const {
  return playerid_.size();
}
inline void S2SGameSyncOnlineReq::clear_playerid() {
  playerid_.Clear();
}
inline ::google::protobuf::uint64 S2SGameSyncOnlineReq::playerid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGameSyncOnlineReq.playerid)
  return playerid_.Get(index);
}
inline void S2SGameSyncOnlineReq::set_playerid(int index, ::google::protobuf::uint64 value) {
  playerid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SGameSyncOnlineReq.playerid)
}
inline void S2SGameSyncOnlineReq::add_playerid(::google::protobuf::uint64 value) {
  playerid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SGameSyncOnlineReq.playerid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SGameSyncOnlineReq::playerid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SGameSyncOnlineReq.playerid)
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SGameSyncOnlineReq::mutable_playerid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SGameSyncOnlineReq.playerid)
  return &playerid_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBMail

// map<string, bytes> data = 1;
inline int PBMail::data_size() const {
  return data_.size();
}
inline void PBMail::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBMail::data() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBMail.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBMail::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBMail.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// S2SQueryMailReq

// uint64 playerid = 1;
inline void S2SQueryMailReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMailReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailReq.playerid)
  return playerid_;
}
inline void S2SQueryMailReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailReq.playerid)
}

// uint32 zoneid = 2;
inline void S2SQueryMailReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryMailReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailReq.zoneid)
  return zoneid_;
}
inline void S2SQueryMailReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailReq.zoneid)
}

// uint64 maxid = 3;
inline void S2SQueryMailReq::clear_maxid() {
  maxid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMailReq::maxid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailReq.maxid)
  return maxid_;
}
inline void S2SQueryMailReq::set_maxid(::google::protobuf::uint64 value) {
  
  maxid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailReq.maxid)
}

// -------------------------------------------------------------------

// S2SQueryMailAck

// uint64 playerid = 1;
inline void S2SQueryMailAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMailAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailAck.playerid)
  return playerid_;
}
inline void S2SQueryMailAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailAck.playerid)
}

// repeated .KFMsg.PBMail mail = 2;
inline int S2SQueryMailAck::mail_size() const {
  return mail_.size();
}
inline void S2SQueryMailAck::clear_mail() {
  mail_.Clear();
}
inline ::KFMsg::PBMail* S2SQueryMailAck::mutable_mail(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryMailAck.mail)
  return mail_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >*
S2SQueryMailAck::mutable_mail() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryMailAck.mail)
  return &mail_;
}
inline const ::KFMsg::PBMail& S2SQueryMailAck::mail(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailAck.mail)
  return mail_.Get(index);
}
inline ::KFMsg::PBMail* S2SQueryMailAck::add_mail() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryMailAck.mail)
  return mail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >&
S2SQueryMailAck::mail() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryMailAck.mail)
  return mail_;
}

// -------------------------------------------------------------------

// S2SAddMailReq

// uint32 flag = 1;
inline void S2SAddMailReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 S2SAddMailReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMailReq.flag)
  return flag_;
}
inline void S2SAddMailReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMailReq.flag)
}

// uint64 objectid = 2;
inline void S2SAddMailReq::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddMailReq::objectid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMailReq.objectid)
  return objectid_;
}
inline void S2SAddMailReq::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMailReq.objectid)
}

// .KFMsg.PBMail pbmail = 3;
inline bool S2SAddMailReq::has_pbmail() const {
  return this != internal_default_instance() && pbmail_ != NULL;
}
inline void S2SAddMailReq::clear_pbmail() {
  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
}
inline const ::KFMsg::PBMail& S2SAddMailReq::_internal_pbmail() const {
  return *pbmail_;
}
inline const ::KFMsg::PBMail& S2SAddMailReq::pbmail() const {
  const ::KFMsg::PBMail* p = pbmail_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMailReq.pbmail)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBMail*>(
      &::KFMsg::_PBMail_default_instance_);
}
inline ::KFMsg::PBMail* S2SAddMailReq::release_pbmail() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddMailReq.pbmail)
  
  ::KFMsg::PBMail* temp = pbmail_;
  pbmail_ = NULL;
  return temp;
}
inline ::KFMsg::PBMail* S2SAddMailReq::mutable_pbmail() {
  
  if (pbmail_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBMail>(GetArenaNoVirtual());
    pbmail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddMailReq.pbmail)
  return pbmail_;
}
inline void S2SAddMailReq::set_allocated_pbmail(::KFMsg::PBMail* pbmail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbmail_;
  }
  if (pbmail) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmail, submessage_arena);
    }
    
  } else {
    
  }
  pbmail_ = pbmail;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddMailReq.pbmail)
}

// -------------------------------------------------------------------

// S2SNoticeNewMailReq

// uint64 playerid = 1;
inline void S2SNoticeNewMailReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeNewMailReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeNewMailReq.playerid)
  return playerid_;
}
inline void S2SNoticeNewMailReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeNewMailReq.playerid)
}

// -------------------------------------------------------------------

// S2SNewPlayerMailReq

// uint64 playerid = 1;
inline void S2SNewPlayerMailReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNewPlayerMailReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNewPlayerMailReq.playerid)
  return playerid_;
}
inline void S2SNewPlayerMailReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNewPlayerMailReq.playerid)
}

// uint32 zoneid = 2;
inline void S2SNewPlayerMailReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNewPlayerMailReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNewPlayerMailReq.zoneid)
  return zoneid_;
}
inline void S2SNewPlayerMailReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNewPlayerMailReq.zoneid)
}

// -------------------------------------------------------------------

// S2SUpdateMailStatusReq

// uint64 playerid = 1;
inline void S2SUpdateMailStatusReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.playerid)
  return playerid_;
}
inline void S2SUpdateMailStatusReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.playerid)
}

// uint64 id = 2;
inline void S2SUpdateMailStatusReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.id)
  return id_;
}
inline void S2SUpdateMailStatusReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.id)
}

// uint32 flag = 3;
inline void S2SUpdateMailStatusReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateMailStatusReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.flag)
  return flag_;
}
inline void S2SUpdateMailStatusReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.flag)
}

// uint32 status = 4;
inline void S2SUpdateMailStatusReq::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateMailStatusReq::status() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.status)
  return status_;
}
inline void S2SUpdateMailStatusReq::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.status)
}

// -------------------------------------------------------------------

// S2SUpdateMailStatusAck

// uint64 playerid = 1;
inline void S2SUpdateMailStatusAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusAck.playerid)
  return playerid_;
}
inline void S2SUpdateMailStatusAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusAck.playerid)
}

// uint64 id = 2;
inline void S2SUpdateMailStatusAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusAck::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusAck.id)
  return id_;
}
inline void S2SUpdateMailStatusAck::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusAck.id)
}

// uint32 status = 3;
inline void S2SUpdateMailStatusAck::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateMailStatusAck::status() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusAck.status)
  return status_;
}
inline void S2SUpdateMailStatusAck::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusAck.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBRelation

// uint64 playerid = 1;
inline void PBRelation::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRelation::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRelation.playerid)
  return playerid_;
}
inline void PBRelation::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRelation.playerid)
}

// map<string, bytes> playerdata = 2;
inline int PBRelation::playerdata_size() const {
  return playerdata_.size();
}
inline void PBRelation::clear_playerdata() {
  playerdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBRelation::playerdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBRelation.playerdata)
  return playerdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBRelation::mutable_playerdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBRelation.playerdata)
  return playerdata_.MutableMap();
}

// map<string, bytes> relationdata = 3;
inline int PBRelation::relationdata_size() const {
  return relationdata_.size();
}
inline void PBRelation::clear_relationdata() {
  relationdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBRelation::relationdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBRelation.relationdata)
  return relationdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBRelation::mutable_relationdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBRelation.relationdata)
  return relationdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SQueryFriendToRelationReq

// uint64 playerid = 1;
inline void S2SQueryFriendToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryFriendToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendToRelationReq.playerid)
  return playerid_;
}
inline void S2SQueryFriendToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryFriendToGameAck

// uint64 playerid = 1;
inline void S2SQueryFriendToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryFriendToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendToGameAck.playerid)
  return playerid_;
}
inline void S2SQueryFriendToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendToGameAck.playerid)
}

// repeated .KFMsg.PBRelation pbfriend = 2;
inline int S2SQueryFriendToGameAck::pbfriend_size() const {
  return pbfriend_.size();
}
inline void S2SQueryFriendToGameAck::clear_pbfriend() {
  pbfriend_.Clear();
}
inline ::KFMsg::PBRelation* S2SQueryFriendToGameAck::mutable_pbfriend(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryFriendToGameAck.pbfriend)
  return pbfriend_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
S2SQueryFriendToGameAck::mutable_pbfriend() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryFriendToGameAck.pbfriend)
  return &pbfriend_;
}
inline const ::KFMsg::PBRelation& S2SQueryFriendToGameAck::pbfriend(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendToGameAck.pbfriend)
  return pbfriend_.Get(index);
}
inline ::KFMsg::PBRelation* S2SQueryFriendToGameAck::add_pbfriend() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryFriendToGameAck.pbfriend)
  return pbfriend_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
S2SQueryFriendToGameAck::pbfriend() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryFriendToGameAck.pbfriend)
  return pbfriend_;
}

// -------------------------------------------------------------------

// S2SQueryFriendInviteToRelationReq

// uint64 playerid = 1;
inline void S2SQueryFriendInviteToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryFriendInviteToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendInviteToRelationReq.playerid)
  return playerid_;
}
inline void S2SQueryFriendInviteToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendInviteToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryFriendInviteToGameAck

// uint64 playerid = 1;
inline void S2SQueryFriendInviteToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryFriendInviteToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendInviteToGameAck.playerid)
  return playerid_;
}
inline void S2SQueryFriendInviteToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendInviteToGameAck.playerid)
}

// repeated .KFMsg.PBRelation pbinvite = 2;
inline int S2SQueryFriendInviteToGameAck::pbinvite_size() const {
  return pbinvite_.size();
}
inline void S2SQueryFriendInviteToGameAck::clear_pbinvite() {
  pbinvite_.Clear();
}
inline ::KFMsg::PBRelation* S2SQueryFriendInviteToGameAck::mutable_pbinvite(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryFriendInviteToGameAck.pbinvite)
  return pbinvite_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
S2SQueryFriendInviteToGameAck::mutable_pbinvite() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryFriendInviteToGameAck.pbinvite)
  return &pbinvite_;
}
inline const ::KFMsg::PBRelation& S2SQueryFriendInviteToGameAck::pbinvite(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendInviteToGameAck.pbinvite)
  return pbinvite_.Get(index);
}
inline ::KFMsg::PBRelation* S2SQueryFriendInviteToGameAck::add_pbinvite() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryFriendInviteToGameAck.pbinvite)
  return pbinvite_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
S2SQueryFriendInviteToGameAck::pbinvite() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryFriendInviteToGameAck.pbinvite)
  return pbinvite_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateDataToFriendReq

// uint64 playerid = 1;
inline void S2SUpdateDataToFriendReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateDataToFriendReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateDataToFriendReq.playerid)
  return playerid_;
}
inline void S2SUpdateDataToFriendReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateDataToFriendReq.playerid)
}

// map<string, bytes> pbdata = 3;
inline int S2SUpdateDataToFriendReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateDataToFriendReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateDataToFriendReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateDataToFriendReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateDataToFriendReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateDataToFriendReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SAddFriendInviteToRelationReq

// bytes name = 1;
inline void S2SAddFriendInviteToRelationReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAddFriendInviteToRelationReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendInviteToRelationReq.name)
  return name_.GetNoArena();
}
inline void S2SAddFriendInviteToRelationReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendInviteToRelationReq.name)
}
#if LANG_CXX11
inline void S2SAddFriendInviteToRelationReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAddFriendInviteToRelationReq.name)
}
#endif
inline void S2SAddFriendInviteToRelationReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAddFriendInviteToRelationReq.name)
}
inline void S2SAddFriendInviteToRelationReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAddFriendInviteToRelationReq.name)
}
inline ::std::string* S2SAddFriendInviteToRelationReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddFriendInviteToRelationReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAddFriendInviteToRelationReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddFriendInviteToRelationReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAddFriendInviteToRelationReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddFriendInviteToRelationReq.name)
}

// uint64 playerid = 2;
inline void S2SAddFriendInviteToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddFriendInviteToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendInviteToRelationReq.playerid)
  return playerid_;
}
inline void S2SAddFriendInviteToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendInviteToRelationReq.playerid)
}

// bytes message = 3;
inline void S2SAddFriendInviteToRelationReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAddFriendInviteToRelationReq::message() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendInviteToRelationReq.message)
  return message_.GetNoArena();
}
inline void S2SAddFriendInviteToRelationReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendInviteToRelationReq.message)
}
#if LANG_CXX11
inline void S2SAddFriendInviteToRelationReq::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAddFriendInviteToRelationReq.message)
}
#endif
inline void S2SAddFriendInviteToRelationReq::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAddFriendInviteToRelationReq.message)
}
inline void S2SAddFriendInviteToRelationReq::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAddFriendInviteToRelationReq.message)
}
inline ::std::string* S2SAddFriendInviteToRelationReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddFriendInviteToRelationReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAddFriendInviteToRelationReq::release_message() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddFriendInviteToRelationReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAddFriendInviteToRelationReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddFriendInviteToRelationReq.message)
}

// -------------------------------------------------------------------

// S2SAddFriendInviteToGameAck

// uint64 playerid = 1;
inline void S2SAddFriendInviteToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddFriendInviteToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendInviteToGameAck.playerid)
  return playerid_;
}
inline void S2SAddFriendInviteToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendInviteToGameAck.playerid)
}

// .KFMsg.PBRelation pbinvite = 2;
inline bool S2SAddFriendInviteToGameAck::has_pbinvite() const {
  return this != internal_default_instance() && pbinvite_ != NULL;
}
inline void S2SAddFriendInviteToGameAck::clear_pbinvite() {
  if (GetArenaNoVirtual() == NULL && pbinvite_ != NULL) {
    delete pbinvite_;
  }
  pbinvite_ = NULL;
}
inline const ::KFMsg::PBRelation& S2SAddFriendInviteToGameAck::_internal_pbinvite() const {
  return *pbinvite_;
}
inline const ::KFMsg::PBRelation& S2SAddFriendInviteToGameAck::pbinvite() const {
  const ::KFMsg::PBRelation* p = pbinvite_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendInviteToGameAck.pbinvite)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRelation*>(
      &::KFMsg::_PBRelation_default_instance_);
}
inline ::KFMsg::PBRelation* S2SAddFriendInviteToGameAck::release_pbinvite() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddFriendInviteToGameAck.pbinvite)
  
  ::KFMsg::PBRelation* temp = pbinvite_;
  pbinvite_ = NULL;
  return temp;
}
inline ::KFMsg::PBRelation* S2SAddFriendInviteToGameAck::mutable_pbinvite() {
  
  if (pbinvite_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRelation>(GetArenaNoVirtual());
    pbinvite_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddFriendInviteToGameAck.pbinvite)
  return pbinvite_;
}
inline void S2SAddFriendInviteToGameAck::set_allocated_pbinvite(::KFMsg::PBRelation* pbinvite) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbinvite_;
  }
  if (pbinvite) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbinvite = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbinvite, submessage_arena);
    }
    
  } else {
    
  }
  pbinvite_ = pbinvite;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddFriendInviteToGameAck.pbinvite)
}

// -------------------------------------------------------------------

// S2SDelFriendInviteToRelationReq

// uint64 selfplayerid = 1;
inline void S2SDelFriendInviteToRelationReq::clear_selfplayerid() {
  selfplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelFriendInviteToRelationReq::selfplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelFriendInviteToRelationReq.selfplayerid)
  return selfplayerid_;
}
inline void S2SDelFriendInviteToRelationReq::set_selfplayerid(::google::protobuf::uint64 value) {
  
  selfplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelFriendInviteToRelationReq.selfplayerid)
}

// uint64 targetplayerid = 2;
inline void S2SDelFriendInviteToRelationReq::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelFriendInviteToRelationReq::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelFriendInviteToRelationReq.targetplayerid)
  return targetplayerid_;
}
inline void S2SDelFriendInviteToRelationReq::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelFriendInviteToRelationReq.targetplayerid)
}

// -------------------------------------------------------------------

// S2SAddFriendToRelationReq

// bytes name = 1;
inline void S2SAddFriendToRelationReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAddFriendToRelationReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendToRelationReq.name)
  return name_.GetNoArena();
}
inline void S2SAddFriendToRelationReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendToRelationReq.name)
}
#if LANG_CXX11
inline void S2SAddFriendToRelationReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAddFriendToRelationReq.name)
}
#endif
inline void S2SAddFriendToRelationReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAddFriendToRelationReq.name)
}
inline void S2SAddFriendToRelationReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAddFriendToRelationReq.name)
}
inline ::std::string* S2SAddFriendToRelationReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddFriendToRelationReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAddFriendToRelationReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddFriendToRelationReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAddFriendToRelationReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddFriendToRelationReq.name)
}

// uint64 playerid = 2;
inline void S2SAddFriendToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddFriendToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendToRelationReq.playerid)
  return playerid_;
}
inline void S2SAddFriendToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SAddFriendToGameAck

// uint64 playerid = 1;
inline void S2SAddFriendToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddFriendToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendToGameAck.playerid)
  return playerid_;
}
inline void S2SAddFriendToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddFriendToGameAck.playerid)
}

// .KFMsg.PBRelation pbfriend = 2;
inline bool S2SAddFriendToGameAck::has_pbfriend() const {
  return this != internal_default_instance() && pbfriend_ != NULL;
}
inline void S2SAddFriendToGameAck::clear_pbfriend() {
  if (GetArenaNoVirtual() == NULL && pbfriend_ != NULL) {
    delete pbfriend_;
  }
  pbfriend_ = NULL;
}
inline const ::KFMsg::PBRelation& S2SAddFriendToGameAck::_internal_pbfriend() const {
  return *pbfriend_;
}
inline const ::KFMsg::PBRelation& S2SAddFriendToGameAck::pbfriend() const {
  const ::KFMsg::PBRelation* p = pbfriend_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddFriendToGameAck.pbfriend)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRelation*>(
      &::KFMsg::_PBRelation_default_instance_);
}
inline ::KFMsg::PBRelation* S2SAddFriendToGameAck::release_pbfriend() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddFriendToGameAck.pbfriend)
  
  ::KFMsg::PBRelation* temp = pbfriend_;
  pbfriend_ = NULL;
  return temp;
}
inline ::KFMsg::PBRelation* S2SAddFriendToGameAck::mutable_pbfriend() {
  
  if (pbfriend_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRelation>(GetArenaNoVirtual());
    pbfriend_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddFriendToGameAck.pbfriend)
  return pbfriend_;
}
inline void S2SAddFriendToGameAck::set_allocated_pbfriend(::KFMsg::PBRelation* pbfriend) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbfriend_;
  }
  if (pbfriend) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbfriend = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbfriend, submessage_arena);
    }
    
  } else {
    
  }
  pbfriend_ = pbfriend;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddFriendToGameAck.pbfriend)
}

// -------------------------------------------------------------------

// S2SDelFriendToRelationReq

// uint64 playerid = 1;
inline void S2SDelFriendToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelFriendToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelFriendToRelationReq.playerid)
  return playerid_;
}
inline void S2SDelFriendToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelFriendToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SDelFriendToGameAck

// uint64 playerid = 1;
inline void S2SDelFriendToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelFriendToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelFriendToGameAck.playerid)
  return playerid_;
}
inline void S2SDelFriendToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelFriendToGameAck.playerid)
}

// uint64 friendid = 2;
inline void S2SDelFriendToGameAck::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelFriendToGameAck::friendid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelFriendToGameAck.friendid)
  return friendid_;
}
inline void S2SDelFriendToGameAck::set_friendid(::google::protobuf::uint64 value) {
  
  friendid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelFriendToGameAck.friendid)
}

// -------------------------------------------------------------------

// S2SUpdateFriendLinessToRelationReq

// uint32 type = 1;
inline void S2SUpdateFriendLinessToRelationReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateFriendLinessToRelationReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.type)
  return type_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.type)
}

// uint64 selfplayerid = 2;
inline void S2SUpdateFriendLinessToRelationReq::clear_selfplayerid() {
  selfplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToRelationReq::selfplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.selfplayerid)
  return selfplayerid_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_selfplayerid(::google::protobuf::uint64 value) {
  
  selfplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.selfplayerid)
}

// uint64 targetplayerid = 3;
inline void S2SUpdateFriendLinessToRelationReq::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToRelationReq::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.targetplayerid)
  return targetplayerid_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.targetplayerid)
}

// uint32 friendliness = 4;
inline void S2SUpdateFriendLinessToRelationReq::clear_friendliness() {
  friendliness_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateFriendLinessToRelationReq::friendliness() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.friendliness)
  return friendliness_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_friendliness(::google::protobuf::uint32 value) {
  
  friendliness_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.friendliness)
}

// -------------------------------------------------------------------

// S2SUpdateFriendLinessToGameAck

// uint64 playerid = 1;
inline void S2SUpdateFriendLinessToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToGameAck.playerid)
  return playerid_;
}
inline void S2SUpdateFriendLinessToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToGameAck.playerid)
}

// uint64 targetplayerid = 2;
inline void S2SUpdateFriendLinessToGameAck::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToGameAck::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToGameAck.targetplayerid)
  return targetplayerid_;
}
inline void S2SUpdateFriendLinessToGameAck::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToGameAck.targetplayerid)
}

// uint32 friendliness = 3;
inline void S2SUpdateFriendLinessToGameAck::clear_friendliness() {
  friendliness_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateFriendLinessToGameAck::friendliness() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToGameAck.friendliness)
  return friendliness_;
}
inline void S2SUpdateFriendLinessToGameAck::set_friendliness(::google::protobuf::uint32 value) {
  
  friendliness_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToGameAck.friendliness)
}

// -------------------------------------------------------------------

// S2SPlayerToastReq

// uint64 selfplayerid = 1;
inline void S2SPlayerToastReq::clear_selfplayerid() {
  selfplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerToastReq::selfplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastReq.selfplayerid)
  return selfplayerid_;
}
inline void S2SPlayerToastReq::set_selfplayerid(::google::protobuf::uint64 value) {
  
  selfplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastReq.selfplayerid)
}

// uint64 targetplayerid = 2;
inline void S2SPlayerToastReq::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerToastReq::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastReq.targetplayerid)
  return targetplayerid_;
}
inline void S2SPlayerToastReq::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastReq.targetplayerid)
}

// uint64 serverid = 3;
inline void S2SPlayerToastReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerToastReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastReq.serverid)
  return serverid_;
}
inline void S2SPlayerToastReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastReq.serverid)
}

// -------------------------------------------------------------------

// S2SPlayerToastAck

// uint32 result = 1;
inline void S2SPlayerToastAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerToastAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastAck.result)
  return result_;
}
inline void S2SPlayerToastAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastAck.result)
}

// uint64 playerid = 2;
inline void S2SPlayerToastAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerToastAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastAck.playerid)
  return playerid_;
}
inline void S2SPlayerToastAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastAck.playerid)
}

// uint64 targetplayerid = 3;
inline void S2SPlayerToastAck::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerToastAck::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastAck.targetplayerid)
  return targetplayerid_;
}
inline void S2SPlayerToastAck::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastAck.targetplayerid)
}

// uint64 targetserverid = 4;
inline void S2SPlayerToastAck::clear_targetserverid() {
  targetserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerToastAck::targetserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerToastAck.targetserverid)
  return targetserverid_;
}
inline void S2SPlayerToastAck::set_targetserverid(::google::protobuf::uint64 value) {
  
  targetserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerToastAck.targetserverid)
}

// -------------------------------------------------------------------

// S2SQueryToastCountReq

// uint64 selfplayerid = 1;
inline void S2SQueryToastCountReq::clear_selfplayerid() {
  selfplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryToastCountReq::selfplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryToastCountReq.selfplayerid)
  return selfplayerid_;
}
inline void S2SQueryToastCountReq::set_selfplayerid(::google::protobuf::uint64 value) {
  
  selfplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryToastCountReq.selfplayerid)
}

// uint64 targetplayerid = 2;
inline void S2SQueryToastCountReq::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryToastCountReq::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryToastCountReq.targetplayerid)
  return targetplayerid_;
}
inline void S2SQueryToastCountReq::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryToastCountReq.targetplayerid)
}

// -------------------------------------------------------------------

// S2SCreateMatchGroupReq

// .KFMsg.PBObject pbmember = 1;
inline bool S2SCreateMatchGroupReq::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SCreateMatchGroupReq::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SCreateMatchGroupReq::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupReq.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SCreateMatchGroupReq::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateMatchGroupReq.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SCreateMatchGroupReq::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateMatchGroupReq.pbmember)
  return pbmember_;
}
inline void S2SCreateMatchGroupReq::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateMatchGroupReq.pbmember)
}

// uint64 groupid = 2;
inline void S2SCreateMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SCreateMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupReq.groupid)
}

// uint32 maxcount = 3;
inline void S2SCreateMatchGroupReq::clear_maxcount() {
  maxcount_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateMatchGroupReq::maxcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupReq.maxcount)
  return maxcount_;
}
inline void S2SCreateMatchGroupReq::set_maxcount(::google::protobuf::uint32 value) {
  
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupReq.maxcount)
}

// uint32 matchid = 4;
inline void S2SCreateMatchGroupReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateMatchGroupReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupReq.matchid)
  return matchid_;
}
inline void S2SCreateMatchGroupReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupReq.matchid)
}

// uint64 playerid = 5;
inline void S2SCreateMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SCreateMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupReq.playerid)
}

// -------------------------------------------------------------------

// S2SUpdateGroupMatchReq

// uint64 groupid = 1;
inline void S2SUpdateGroupMatchReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGroupMatchReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMatchReq.groupid)
  return groupid_;
}
inline void S2SUpdateGroupMatchReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMatchReq.groupid)
}

// uint32 maxcount = 2;
inline void S2SUpdateGroupMatchReq::clear_maxcount() {
  maxcount_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateGroupMatchReq::maxcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMatchReq.maxcount)
  return maxcount_;
}
inline void S2SUpdateGroupMatchReq::set_maxcount(::google::protobuf::uint32 value) {
  
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMatchReq.maxcount)
}

// uint32 matchid = 3;
inline void S2SUpdateGroupMatchReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateGroupMatchReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMatchReq.matchid)
  return matchid_;
}
inline void S2SUpdateGroupMatchReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMatchReq.matchid)
}

// uint64 playerid = 4;
inline void S2SUpdateGroupMatchReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGroupMatchReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMatchReq.playerid)
  return playerid_;
}
inline void S2SUpdateGroupMatchReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMatchReq.playerid)
}

// -------------------------------------------------------------------

// S2SCreateMatchGroupToShardReq

// .KFMsg.PBObject pbmember = 1;
inline bool S2SCreateMatchGroupToShardReq::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SCreateMatchGroupToShardReq::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SCreateMatchGroupToShardReq::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupToShardReq.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SCreateMatchGroupToShardReq::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateMatchGroupToShardReq.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SCreateMatchGroupToShardReq::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateMatchGroupToShardReq.pbmember)
  return pbmember_;
}
inline void S2SCreateMatchGroupToShardReq::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateMatchGroupToShardReq.pbmember)
}

// uint64 groupid = 2;
inline void S2SCreateMatchGroupToShardReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateMatchGroupToShardReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupToShardReq.groupid)
  return groupid_;
}
inline void S2SCreateMatchGroupToShardReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupToShardReq.groupid)
}

// uint32 maxcount = 3;
inline void S2SCreateMatchGroupToShardReq::clear_maxcount() {
  maxcount_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateMatchGroupToShardReq::maxcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupToShardReq.maxcount)
  return maxcount_;
}
inline void S2SCreateMatchGroupToShardReq::set_maxcount(::google::protobuf::uint32 value) {
  
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupToShardReq.maxcount)
}

// uint32 matchid = 4;
inline void S2SCreateMatchGroupToShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateMatchGroupToShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupToShardReq.matchid)
  return matchid_;
}
inline void S2SCreateMatchGroupToShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupToShardReq.matchid)
}

// uint64 playerid = 5;
inline void S2SCreateMatchGroupToShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateMatchGroupToShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateMatchGroupToShardReq.playerid)
  return playerid_;
}
inline void S2SCreateMatchGroupToShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateMatchGroupToShardReq.playerid)
}

// -------------------------------------------------------------------

// S2SReceiveInviteMatchGroupReq

// uint64 playerid = 1;
inline void S2SReceiveInviteMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReceiveInviteMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SReceiveInviteMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.playerid)
}

// uint64 groupid = 2;
inline void S2SReceiveInviteMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReceiveInviteMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SReceiveInviteMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.groupid)
}

// .KFMsg.PBObject inviter = 3;
inline bool S2SReceiveInviteMatchGroupReq::has_inviter() const {
  return this != internal_default_instance() && inviter_ != NULL;
}
inline const ::KFMsg::PBObject& S2SReceiveInviteMatchGroupReq::_internal_inviter() const {
  return *inviter_;
}
inline const ::KFMsg::PBObject& S2SReceiveInviteMatchGroupReq::inviter() const {
  const ::KFMsg::PBObject* p = inviter_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.inviter)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SReceiveInviteMatchGroupReq::release_inviter() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SReceiveInviteMatchGroupReq.inviter)
  
  ::KFMsg::PBObject* temp = inviter_;
  inviter_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SReceiveInviteMatchGroupReq::mutable_inviter() {
  
  if (inviter_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    inviter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SReceiveInviteMatchGroupReq.inviter)
  return inviter_;
}
inline void S2SReceiveInviteMatchGroupReq::set_allocated_inviter(::KFMsg::PBObject* inviter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(inviter_);
  }
  if (inviter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inviter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inviter, submessage_arena);
    }
    
  } else {
    
  }
  inviter_ = inviter;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SReceiveInviteMatchGroupReq.inviter)
}

// bytes source = 4;
inline void S2SReceiveInviteMatchGroupReq::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SReceiveInviteMatchGroupReq::source() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.source)
  return source_.GetNoArena();
}
inline void S2SReceiveInviteMatchGroupReq::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.source)
}
#if LANG_CXX11
inline void S2SReceiveInviteMatchGroupReq::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SReceiveInviteMatchGroupReq.source)
}
#endif
inline void S2SReceiveInviteMatchGroupReq::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SReceiveInviteMatchGroupReq.source)
}
inline void S2SReceiveInviteMatchGroupReq::set_source(const void* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SReceiveInviteMatchGroupReq.source)
}
inline ::std::string* S2SReceiveInviteMatchGroupReq::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SReceiveInviteMatchGroupReq.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SReceiveInviteMatchGroupReq::release_source() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SReceiveInviteMatchGroupReq.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SReceiveInviteMatchGroupReq::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SReceiveInviteMatchGroupReq.source)
}

// uint32 matchid = 5;
inline void S2SReceiveInviteMatchGroupReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SReceiveInviteMatchGroupReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.matchid)
  return matchid_;
}
inline void S2SReceiveInviteMatchGroupReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.matchid)
}

// uint64 inviterplayerid = 6;
inline void S2SReceiveInviteMatchGroupReq::clear_inviterplayerid() {
  inviterplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReceiveInviteMatchGroupReq::inviterplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.inviterplayerid)
  return inviterplayerid_;
}
inline void S2SReceiveInviteMatchGroupReq::set_inviterplayerid(::google::protobuf::uint64 value) {
  
  inviterplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.inviterplayerid)
}

// uint64 inviterserverid = 7;
inline void S2SReceiveInviteMatchGroupReq::clear_inviterserverid() {
  inviterserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReceiveInviteMatchGroupReq::inviterserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.inviterserverid)
  return inviterserverid_;
}
inline void S2SReceiveInviteMatchGroupReq::set_inviterserverid(::google::protobuf::uint64 value) {
  
  inviterserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.inviterserverid)
}

// bytes playername = 8;
inline void S2SReceiveInviteMatchGroupReq::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SReceiveInviteMatchGroupReq::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
  return playername_.GetNoArena();
}
inline void S2SReceiveInviteMatchGroupReq::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
}
#if LANG_CXX11
inline void S2SReceiveInviteMatchGroupReq::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
}
#endif
inline void S2SReceiveInviteMatchGroupReq::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
}
inline void S2SReceiveInviteMatchGroupReq::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
}
inline ::std::string* S2SReceiveInviteMatchGroupReq::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SReceiveInviteMatchGroupReq::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SReceiveInviteMatchGroupReq::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SReceiveInviteMatchGroupReq.playername)
}

// -------------------------------------------------------------------

// S2SConsentInviteMatchGroupReq

// uint64 groupid = 1;
inline void S2SConsentInviteMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentInviteMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentInviteMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SConsentInviteMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentInviteMatchGroupReq.groupid)
}

// uint64 playerid = 2;
inline void S2SConsentInviteMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentInviteMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentInviteMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SConsentInviteMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentInviteMatchGroupReq.playerid)
}

// uint64 serverid = 3;
inline void S2SConsentInviteMatchGroupReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentInviteMatchGroupReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentInviteMatchGroupReq.serverid)
  return serverid_;
}
inline void S2SConsentInviteMatchGroupReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentInviteMatchGroupReq.serverid)
}

// .KFMsg.PBObject pbmember = 4;
inline bool S2SConsentInviteMatchGroupReq::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SConsentInviteMatchGroupReq::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SConsentInviteMatchGroupReq::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentInviteMatchGroupReq.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SConsentInviteMatchGroupReq::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SConsentInviteMatchGroupReq.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SConsentInviteMatchGroupReq::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SConsentInviteMatchGroupReq.pbmember)
  return pbmember_;
}
inline void S2SConsentInviteMatchGroupReq::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SConsentInviteMatchGroupReq.pbmember)
}

// -------------------------------------------------------------------

// S2SAddMatchGroupMemberReq

// uint64 groupid = 1;
inline void S2SAddMatchGroupMemberReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddMatchGroupMemberReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMatchGroupMemberReq.groupid)
  return groupid_;
}
inline void S2SAddMatchGroupMemberReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMatchGroupMemberReq.groupid)
}

// uint64 playerid = 2;
inline void S2SAddMatchGroupMemberReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddMatchGroupMemberReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMatchGroupMemberReq.playerid)
  return playerid_;
}
inline void S2SAddMatchGroupMemberReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMatchGroupMemberReq.playerid)
}

// uint64 serverid = 3;
inline void S2SAddMatchGroupMemberReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddMatchGroupMemberReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMatchGroupMemberReq.serverid)
  return serverid_;
}
inline void S2SAddMatchGroupMemberReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMatchGroupMemberReq.serverid)
}

// .KFMsg.PBObject pbmember = 4;
inline bool S2SAddMatchGroupMemberReq::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SAddMatchGroupMemberReq::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SAddMatchGroupMemberReq::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMatchGroupMemberReq.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SAddMatchGroupMemberReq::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddMatchGroupMemberReq.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SAddMatchGroupMemberReq::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddMatchGroupMemberReq.pbmember)
  return pbmember_;
}
inline void S2SAddMatchGroupMemberReq::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddMatchGroupMemberReq.pbmember)
}

// -------------------------------------------------------------------

// S2SAddMatchGroupMemberAck

// .KFMsg.PBObject pbmember = 1;
inline bool S2SAddMatchGroupMemberAck::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SAddMatchGroupMemberAck::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SAddMatchGroupMemberAck::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMatchGroupMemberAck.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SAddMatchGroupMemberAck::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddMatchGroupMemberAck.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SAddMatchGroupMemberAck::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddMatchGroupMemberAck.pbmember)
  return pbmember_;
}
inline void S2SAddMatchGroupMemberAck::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddMatchGroupMemberAck.pbmember)
}

// -------------------------------------------------------------------

// S2STellMatchGroupDataAck

// repeated .KFMsg.PBObject pbmember = 1;
inline int S2STellMatchGroupDataAck::pbmember_size() const {
  return pbmember_.size();
}
inline ::KFMsg::PBObject* S2STellMatchGroupDataAck::mutable_pbmember(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STellMatchGroupDataAck.pbmember)
  return pbmember_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >*
S2STellMatchGroupDataAck::mutable_pbmember() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2STellMatchGroupDataAck.pbmember)
  return &pbmember_;
}
inline const ::KFMsg::PBObject& S2STellMatchGroupDataAck::pbmember(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellMatchGroupDataAck.pbmember)
  return pbmember_.Get(index);
}
inline ::KFMsg::PBObject* S2STellMatchGroupDataAck::add_pbmember() {
  // @@protoc_insertion_point(field_add:KFMsg.S2STellMatchGroupDataAck.pbmember)
  return pbmember_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >&
S2STellMatchGroupDataAck::pbmember() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2STellMatchGroupDataAck.pbmember)
  return pbmember_;
}

// uint64 groupid = 2;
inline void S2STellMatchGroupDataAck::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellMatchGroupDataAck::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellMatchGroupDataAck.groupid)
  return groupid_;
}
inline void S2STellMatchGroupDataAck::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellMatchGroupDataAck.groupid)
}

// uint64 captainid = 3;
inline void S2STellMatchGroupDataAck::clear_captainid() {
  captainid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellMatchGroupDataAck::captainid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellMatchGroupDataAck.captainid)
  return captainid_;
}
inline void S2STellMatchGroupDataAck::set_captainid(::google::protobuf::uint64 value) {
  
  captainid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellMatchGroupDataAck.captainid)
}

// uint32 maxcount = 4;
inline void S2STellMatchGroupDataAck::clear_maxcount() {
  maxcount_ = 0u;
}
inline ::google::protobuf::uint32 S2STellMatchGroupDataAck::maxcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellMatchGroupDataAck.maxcount)
  return maxcount_;
}
inline void S2STellMatchGroupDataAck::set_maxcount(::google::protobuf::uint32 value) {
  
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellMatchGroupDataAck.maxcount)
}

// uint32 matchid = 5;
inline void S2STellMatchGroupDataAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2STellMatchGroupDataAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellMatchGroupDataAck.matchid)
  return matchid_;
}
inline void S2STellMatchGroupDataAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellMatchGroupDataAck.matchid)
}

// bool newadd = 6;
inline void S2STellMatchGroupDataAck::clear_newadd() {
  newadd_ = false;
}
inline bool S2STellMatchGroupDataAck::newadd() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellMatchGroupDataAck.newadd)
  return newadd_;
}
inline void S2STellMatchGroupDataAck::set_newadd(bool value) {
  
  newadd_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellMatchGroupDataAck.newadd)
}

// -------------------------------------------------------------------

// S2SRemoveMatchGroupMemberAck

// uint64 memberid = 1;
inline void S2SRemoveMatchGroupMemberAck::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRemoveMatchGroupMemberAck::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRemoveMatchGroupMemberAck.memberid)
  return memberid_;
}
inline void S2SRemoveMatchGroupMemberAck::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRemoveMatchGroupMemberAck.memberid)
}

// -------------------------------------------------------------------

// S2SLeaveMatchGroupReq

// uint64 groupid = 1;
inline void S2SLeaveMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLeaveMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLeaveMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SLeaveMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLeaveMatchGroupReq.groupid)
}

// uint64 playerid = 2;
inline void S2SLeaveMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLeaveMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLeaveMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SLeaveMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLeaveMatchGroupReq.playerid)
}

// -------------------------------------------------------------------

// S2SKickMatchGroupReq

// uint64 groupid = 1;
inline void S2SKickMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SKickMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMatchGroupReq.groupid)
}

// uint64 captainid = 2;
inline void S2SKickMatchGroupReq::clear_captainid() {
  captainid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMatchGroupReq::captainid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMatchGroupReq.captainid)
  return captainid_;
}
inline void S2SKickMatchGroupReq::set_captainid(::google::protobuf::uint64 value) {
  
  captainid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMatchGroupReq.captainid)
}

// uint64 serverid = 3;
inline void S2SKickMatchGroupReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMatchGroupReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMatchGroupReq.serverid)
  return serverid_;
}
inline void S2SKickMatchGroupReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMatchGroupReq.serverid)
}

// uint64 memberid = 4;
inline void S2SKickMatchGroupReq::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMatchGroupReq::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMatchGroupReq.memberid)
  return memberid_;
}
inline void S2SKickMatchGroupReq::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMatchGroupReq.memberid)
}

// -------------------------------------------------------------------

// S2SLeaveMatchGroupAck

// uint64 playerid = 1;
inline void S2SLeaveMatchGroupAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLeaveMatchGroupAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLeaveMatchGroupAck.playerid)
  return playerid_;
}
inline void S2SLeaveMatchGroupAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLeaveMatchGroupAck.playerid)
}

// -------------------------------------------------------------------

// S2SApplyMatchGroupReq

// uint64 groupid = 1;
inline void S2SApplyMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SApplyMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyMatchGroupReq.groupid)
}

// uint64 playerid = 2;
inline void S2SApplyMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SApplyMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyMatchGroupReq.playerid)
}

// uint64 serverid = 3;
inline void S2SApplyMatchGroupReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyMatchGroupReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupReq.serverid)
  return serverid_;
}
inline void S2SApplyMatchGroupReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyMatchGroupReq.serverid)
}

// .KFMsg.PBObject pbmember = 4;
inline bool S2SApplyMatchGroupReq::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SApplyMatchGroupReq::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SApplyMatchGroupReq::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupReq.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SApplyMatchGroupReq::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyMatchGroupReq.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SApplyMatchGroupReq::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyMatchGroupReq.pbmember)
  return pbmember_;
}
inline void S2SApplyMatchGroupReq::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyMatchGroupReq.pbmember)
}

// -------------------------------------------------------------------

// S2SApplyMatchGroupAck

// uint64 playerid = 1;
inline void S2SApplyMatchGroupAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyMatchGroupAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupAck.playerid)
  return playerid_;
}
inline void S2SApplyMatchGroupAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyMatchGroupAck.playerid)
}

// .KFMsg.PBObject pbmember = 2;
inline bool S2SApplyMatchGroupAck::has_pbmember() const {
  return this != internal_default_instance() && pbmember_ != NULL;
}
inline const ::KFMsg::PBObject& S2SApplyMatchGroupAck::_internal_pbmember() const {
  return *pbmember_;
}
inline const ::KFMsg::PBObject& S2SApplyMatchGroupAck::pbmember() const {
  const ::KFMsg::PBObject* p = pbmember_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupAck.pbmember)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SApplyMatchGroupAck::release_pbmember() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyMatchGroupAck.pbmember)
  
  ::KFMsg::PBObject* temp = pbmember_;
  pbmember_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SApplyMatchGroupAck::mutable_pbmember() {
  
  if (pbmember_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbmember_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyMatchGroupAck.pbmember)
  return pbmember_;
}
inline void S2SApplyMatchGroupAck::set_allocated_pbmember(::KFMsg::PBObject* pbmember) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbmember_);
  }
  if (pbmember) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmember = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmember, submessage_arena);
    }
    
  } else {
    
  }
  pbmember_ = pbmember;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyMatchGroupAck.pbmember)
}

// uint64 serverid = 3;
inline void S2SApplyMatchGroupAck::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyMatchGroupAck::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyMatchGroupAck.serverid)
  return serverid_;
}
inline void S2SApplyMatchGroupAck::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyMatchGroupAck.serverid)
}

// -------------------------------------------------------------------

// S2SConsentApplyMatchGroupAck

// uint64 groupid = 1;
inline void S2SConsentApplyMatchGroupAck::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentApplyMatchGroupAck::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentApplyMatchGroupAck.groupid)
  return groupid_;
}
inline void S2SConsentApplyMatchGroupAck::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentApplyMatchGroupAck.groupid)
}

// uint64 playerid = 2;
inline void S2SConsentApplyMatchGroupAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentApplyMatchGroupAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentApplyMatchGroupAck.playerid)
  return playerid_;
}
inline void S2SConsentApplyMatchGroupAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentApplyMatchGroupAck.playerid)
}

// uint64 captainid = 3;
inline void S2SConsentApplyMatchGroupAck::clear_captainid() {
  captainid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentApplyMatchGroupAck::captainid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentApplyMatchGroupAck.captainid)
  return captainid_;
}
inline void S2SConsentApplyMatchGroupAck::set_captainid(::google::protobuf::uint64 value) {
  
  captainid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentApplyMatchGroupAck.captainid)
}

// uint64 serverid = 4;
inline void S2SConsentApplyMatchGroupAck::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SConsentApplyMatchGroupAck::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentApplyMatchGroupAck.serverid)
  return serverid_;
}
inline void S2SConsentApplyMatchGroupAck::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentApplyMatchGroupAck.serverid)
}

// bytes playername = 5;
inline void S2SConsentApplyMatchGroupAck::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SConsentApplyMatchGroupAck::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConsentApplyMatchGroupAck.playername)
  return playername_.GetNoArena();
}
inline void S2SConsentApplyMatchGroupAck::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SConsentApplyMatchGroupAck.playername)
}
#if LANG_CXX11
inline void S2SConsentApplyMatchGroupAck::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SConsentApplyMatchGroupAck.playername)
}
#endif
inline void S2SConsentApplyMatchGroupAck::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SConsentApplyMatchGroupAck.playername)
}
inline void S2SConsentApplyMatchGroupAck::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SConsentApplyMatchGroupAck.playername)
}
inline ::std::string* S2SConsentApplyMatchGroupAck::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SConsentApplyMatchGroupAck.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SConsentApplyMatchGroupAck::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SConsentApplyMatchGroupAck.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SConsentApplyMatchGroupAck::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SConsentApplyMatchGroupAck.playername)
}

// -------------------------------------------------------------------

// S2SOnLineQueryMatchGroupReq

// uint64 groupid = 1;
inline void S2SOnLineQueryMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOnLineQueryMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOnLineQueryMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SOnLineQueryMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOnLineQueryMatchGroupReq.groupid)
}

// uint64 playerid = 2;
inline void S2SOnLineQueryMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOnLineQueryMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOnLineQueryMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SOnLineQueryMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOnLineQueryMatchGroupReq.playerid)
}

// uint64 serverid = 3;
inline void S2SOnLineQueryMatchGroupReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOnLineQueryMatchGroupReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOnLineQueryMatchGroupReq.serverid)
  return serverid_;
}
inline void S2SOnLineQueryMatchGroupReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOnLineQueryMatchGroupReq.serverid)
}

// -------------------------------------------------------------------

// S2SOffLineUpdateMatchGroupReq

// uint64 groupid = 1;
inline void S2SOffLineUpdateMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOffLineUpdateMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOffLineUpdateMatchGroupReq.groupid)
  return groupid_;
}
inline void S2SOffLineUpdateMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOffLineUpdateMatchGroupReq.groupid)
}

// uint64 playerid = 2;
inline void S2SOffLineUpdateMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOffLineUpdateMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOffLineUpdateMatchGroupReq.playerid)
  return playerid_;
}
inline void S2SOffLineUpdateMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOffLineUpdateMatchGroupReq.playerid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateGroupMemberReq

// uint64 groupid = 1;
inline void S2SUpdateGroupMemberReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGroupMemberReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMemberReq.groupid)
  return groupid_;
}
inline void S2SUpdateGroupMemberReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMemberReq.groupid)
}

// uint64 memberid = 2;
inline void S2SUpdateGroupMemberReq::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGroupMemberReq::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMemberReq.memberid)
  return memberid_;
}
inline void S2SUpdateGroupMemberReq::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMemberReq.memberid)
}

// bytes dataname = 3;
inline void S2SUpdateGroupMemberReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SUpdateGroupMemberReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMemberReq.dataname)
  return dataname_.GetNoArena();
}
inline void S2SUpdateGroupMemberReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMemberReq.dataname)
}
#if LANG_CXX11
inline void S2SUpdateGroupMemberReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SUpdateGroupMemberReq.dataname)
}
#endif
inline void S2SUpdateGroupMemberReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SUpdateGroupMemberReq.dataname)
}
inline void S2SUpdateGroupMemberReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SUpdateGroupMemberReq.dataname)
}
inline ::std::string* S2SUpdateGroupMemberReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateGroupMemberReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SUpdateGroupMemberReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateGroupMemberReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SUpdateGroupMemberReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateGroupMemberReq.dataname)
}

// map<string, bytes> pbstrings = 4;
inline int S2SUpdateGroupMemberReq::pbstrings_size() const {
  return pbstrings_.size();
}
inline void S2SUpdateGroupMemberReq::clear_pbstrings() {
  pbstrings_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateGroupMemberReq::pbstrings() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateGroupMemberReq.pbstrings)
  return pbstrings_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateGroupMemberReq::mutable_pbstrings() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateGroupMemberReq.pbstrings)
  return pbstrings_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateGroupMemberAck

// uint64 memberid = 1;
inline void S2SUpdateGroupMemberAck::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGroupMemberAck::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMemberAck.memberid)
  return memberid_;
}
inline void S2SUpdateGroupMemberAck::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMemberAck.memberid)
}

// bytes dataname = 2;
inline void S2SUpdateGroupMemberAck::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SUpdateGroupMemberAck::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGroupMemberAck.dataname)
  return dataname_.GetNoArena();
}
inline void S2SUpdateGroupMemberAck::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGroupMemberAck.dataname)
}
#if LANG_CXX11
inline void S2SUpdateGroupMemberAck::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SUpdateGroupMemberAck.dataname)
}
#endif
inline void S2SUpdateGroupMemberAck::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SUpdateGroupMemberAck.dataname)
}
inline void S2SUpdateGroupMemberAck::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SUpdateGroupMemberAck.dataname)
}
inline ::std::string* S2SUpdateGroupMemberAck::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateGroupMemberAck.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SUpdateGroupMemberAck::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateGroupMemberAck.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SUpdateGroupMemberAck::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateGroupMemberAck.dataname)
}

// map<string, bytes> pbstrings = 3;
inline int S2SUpdateGroupMemberAck::pbstrings_size() const {
  return pbstrings_.size();
}
inline void S2SUpdateGroupMemberAck::clear_pbstrings() {
  pbstrings_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateGroupMemberAck::pbstrings() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateGroupMemberAck.pbstrings)
  return pbstrings_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateGroupMemberAck::mutable_pbstrings() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateGroupMemberAck.pbstrings)
  return pbstrings_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateGroupDataAck

// map<string, bytes> pbstring = 1;
inline int S2SUpdateGroupDataAck::pbstring_size() const {
  return pbstring_.size();
}
inline void S2SUpdateGroupDataAck::clear_pbstring() {
  pbstring_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateGroupDataAck::pbstring() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateGroupDataAck.pbstring)
  return pbstring_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateGroupDataAck::mutable_pbstring() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateGroupDataAck.pbstring)
  return pbstring_.MutableMap();
}

// -------------------------------------------------------------------

// S2SUpdateGuestListReq

// uint64 playerid = 1;
inline void S2SUpdateGuestListReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGuestListReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGuestListReq.playerid)
  return playerid_;
}
inline void S2SUpdateGuestListReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGuestListReq.playerid)
}

// uint64 guestid = 2;
inline void S2SUpdateGuestListReq::clear_guestid() {
  guestid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGuestListReq::guestid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGuestListReq.guestid)
  return guestid_;
}
inline void S2SUpdateGuestListReq::set_guestid(::google::protobuf::uint64 value) {
  
  guestid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGuestListReq.guestid)
}

// uint64 guesttime = 3;
inline void S2SUpdateGuestListReq::clear_guesttime() {
  guesttime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGuestListReq::guesttime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGuestListReq.guesttime)
  return guesttime_;
}
inline void S2SUpdateGuestListReq::set_guesttime(::google::protobuf::uint64 value) {
  
  guesttime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGuestListReq.guesttime)
}

// -------------------------------------------------------------------

// S2SQueryGuestReq

// uint64 playerid = 1;
inline void S2SQueryGuestReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuestReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestReq.playerid)
  return playerid_;
}
inline void S2SQueryGuestReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuestReq.playerid)
}

// uint64 queryid = 2;
inline void S2SQueryGuestReq::clear_queryid() {
  queryid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuestReq::queryid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestReq.queryid)
  return queryid_;
}
inline void S2SQueryGuestReq::set_queryid(::google::protobuf::uint64 value) {
  
  queryid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuestReq.queryid)
}

// uint64 querytime = 3;
inline void S2SQueryGuestReq::clear_querytime() {
  querytime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuestReq::querytime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestReq.querytime)
  return querytime_;
}
inline void S2SQueryGuestReq::set_querytime(::google::protobuf::uint64 value) {
  
  querytime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuestReq.querytime)
}

// -------------------------------------------------------------------

// S2SQueryGuestAck

// uint64 playerid = 1;
inline void S2SQueryGuestAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuestAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestAck.playerid)
  return playerid_;
}
inline void S2SQueryGuestAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuestAck.playerid)
}

// uint64 queryid = 2;
inline void S2SQueryGuestAck::clear_queryid() {
  queryid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuestAck::queryid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestAck.queryid)
  return queryid_;
}
inline void S2SQueryGuestAck::set_queryid(::google::protobuf::uint64 value) {
  
  queryid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuestAck.queryid)
}

// uint32 guestcount = 3;
inline void S2SQueryGuestAck::clear_guestcount() {
  guestcount_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryGuestAck::guestcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestAck.guestcount)
  return guestcount_;
}
inline void S2SQueryGuestAck::set_guestcount(::google::protobuf::uint32 value) {
  
  guestcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuestAck.guestcount)
}

// repeated .KFMsg.PBGuestData guestdata = 4;
inline int S2SQueryGuestAck::guestdata_size() const {
  return guestdata_.size();
}
inline ::KFMsg::PBGuestData* S2SQueryGuestAck::mutable_guestdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryGuestAck.guestdata)
  return guestdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >*
S2SQueryGuestAck::mutable_guestdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryGuestAck.guestdata)
  return &guestdata_;
}
inline const ::KFMsg::PBGuestData& S2SQueryGuestAck::guestdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuestAck.guestdata)
  return guestdata_.Get(index);
}
inline ::KFMsg::PBGuestData* S2SQueryGuestAck::add_guestdata() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryGuestAck.guestdata)
  return guestdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >&
S2SQueryGuestAck::guestdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryGuestAck.guestdata)
  return guestdata_;
}

// -------------------------------------------------------------------

// S2SUpdateRankDataReq

// uint64 playerid = 1;
inline void S2SUpdateRankDataReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateRankDataReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.playerid)
  return playerid_;
}
inline void S2SUpdateRankDataReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateRankDataReq.playerid)
}

// uint32 rankid = 2;
inline void S2SUpdateRankDataReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateRankDataReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.rankid)
  return rankid_;
}
inline void S2SUpdateRankDataReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateRankDataReq.rankid)
}

// uint32 zoneid = 3;
inline void S2SUpdateRankDataReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateRankDataReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.zoneid)
  return zoneid_;
}
inline void S2SUpdateRankDataReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateRankDataReq.zoneid)
}

// .KFMsg.PBRankData pbrankdata = 4;
inline bool S2SUpdateRankDataReq::has_pbrankdata() const {
  return this != internal_default_instance() && pbrankdata_ != NULL;
}
inline const ::KFMsg::PBRankData& S2SUpdateRankDataReq::_internal_pbrankdata() const {
  return *pbrankdata_;
}
inline const ::KFMsg::PBRankData& S2SUpdateRankDataReq::pbrankdata() const {
  const ::KFMsg::PBRankData* p = pbrankdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.pbrankdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankData*>(
      &::KFMsg::_PBRankData_default_instance_);
}
inline ::KFMsg::PBRankData* S2SUpdateRankDataReq::release_pbrankdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateRankDataReq.pbrankdata)
  
  ::KFMsg::PBRankData* temp = pbrankdata_;
  pbrankdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankData* S2SUpdateRankDataReq::mutable_pbrankdata() {
  
  if (pbrankdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankData>(GetArenaNoVirtual());
    pbrankdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateRankDataReq.pbrankdata)
  return pbrankdata_;
}
inline void S2SUpdateRankDataReq::set_allocated_pbrankdata(::KFMsg::PBRankData* pbrankdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbrankdata_);
  }
  if (pbrankdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbrankdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbrankdata, submessage_arena);
    }
    
  } else {
    
  }
  pbrankdata_ = pbrankdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateRankDataReq.pbrankdata)
}

// -------------------------------------------------------------------

// S2SQueryRankListReq

// uint64 playerid = 1;
inline void S2SQueryRankListReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRankListReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.playerid)
  return playerid_;
}
inline void S2SQueryRankListReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.playerid)
}

// uint64 serverid = 2;
inline void S2SQueryRankListReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRankListReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.serverid)
  return serverid_;
}
inline void S2SQueryRankListReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.serverid)
}

// uint32 rankid = 3;
inline void S2SQueryRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.rankid)
  return rankid_;
}
inline void S2SQueryRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.rankid)
}

// uint32 zoneid = 4;
inline void S2SQueryRankListReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRankListReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.zoneid)
  return zoneid_;
}
inline void S2SQueryRankListReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.zoneid)
}

// -------------------------------------------------------------------

// S2SQueryFriendRankListReq

// uint64 playerid = 1;
inline void S2SQueryFriendRankListReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryFriendRankListReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendRankListReq.playerid)
  return playerid_;
}
inline void S2SQueryFriendRankListReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendRankListReq.playerid)
}

// uint64 serverid = 2;
inline void S2SQueryFriendRankListReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryFriendRankListReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendRankListReq.serverid)
  return serverid_;
}
inline void S2SQueryFriendRankListReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendRankListReq.serverid)
}

// uint32 rankid = 3;
inline void S2SQueryFriendRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryFriendRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendRankListReq.rankid)
  return rankid_;
}
inline void S2SQueryFriendRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendRankListReq.rankid)
}

// repeated uint64 friendid = 4;
inline int S2SQueryFriendRankListReq::friendid_size() const {
  return friendid_.size();
}
inline void S2SQueryFriendRankListReq::clear_friendid() {
  friendid_.Clear();
}
inline ::google::protobuf::uint64 S2SQueryFriendRankListReq::friendid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendRankListReq.friendid)
  return friendid_.Get(index);
}
inline void S2SQueryFriendRankListReq::set_friendid(int index, ::google::protobuf::uint64 value) {
  friendid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendRankListReq.friendid)
}
inline void S2SQueryFriendRankListReq::add_friendid(::google::protobuf::uint64 value) {
  friendid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryFriendRankListReq.friendid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SQueryFriendRankListReq::friendid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryFriendRankListReq.friendid)
  return friendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SQueryFriendRankListReq::mutable_friendid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryFriendRankListReq.friendid)
  return &friendid_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SAddRecentPlayerDataReq

// uint64 roomid = 1;
inline void S2SAddRecentPlayerDataReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddRecentPlayerDataReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRecentPlayerDataReq.roomid)
  return roomid_;
}
inline void S2SAddRecentPlayerDataReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRecentPlayerDataReq.roomid)
}

// uint64 playerid = 2;
inline void S2SAddRecentPlayerDataReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddRecentPlayerDataReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRecentPlayerDataReq.playerid)
  return playerid_;
}
inline void S2SAddRecentPlayerDataReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRecentPlayerDataReq.playerid)
}

// repeated uint64 members = 3;
inline int S2SAddRecentPlayerDataReq::members_size() const {
  return members_.size();
}
inline void S2SAddRecentPlayerDataReq::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint64 S2SAddRecentPlayerDataReq::members(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRecentPlayerDataReq.members)
  return members_.Get(index);
}
inline void S2SAddRecentPlayerDataReq::set_members(int index, ::google::protobuf::uint64 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRecentPlayerDataReq.members)
}
inline void S2SAddRecentPlayerDataReq::add_members(::google::protobuf::uint64 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAddRecentPlayerDataReq.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAddRecentPlayerDataReq::members() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAddRecentPlayerDataReq.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAddRecentPlayerDataReq::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAddRecentPlayerDataReq.members)
  return &members_;
}

// map<string, bytes> pbdata = 4;
inline int S2SAddRecentPlayerDataReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SAddRecentPlayerDataReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SAddRecentPlayerDataReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SAddRecentPlayerDataReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SAddRecentPlayerDataReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SAddRecentPlayerDataReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SQueryRecentListReq

// uint64 playerid = 1;
inline void S2SQueryRecentListReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRecentListReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRecentListReq.playerid)
  return playerid_;
}
inline void S2SQueryRecentListReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRecentListReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryRecentListAck

// uint64 playerid = 1;
inline void S2SQueryRecentListAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRecentListAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRecentListAck.playerid)
  return playerid_;
}
inline void S2SQueryRecentListAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRecentListAck.playerid)
}

// repeated .KFMsg.PBRelation pbrelation = 2;
inline int S2SQueryRecentListAck::pbrelation_size() const {
  return pbrelation_.size();
}
inline void S2SQueryRecentListAck::clear_pbrelation() {
  pbrelation_.Clear();
}
inline ::KFMsg::PBRelation* S2SQueryRecentListAck::mutable_pbrelation(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRecentListAck.pbrelation)
  return pbrelation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
S2SQueryRecentListAck::mutable_pbrelation() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryRecentListAck.pbrelation)
  return &pbrelation_;
}
inline const ::KFMsg::PBRelation& S2SQueryRecentListAck::pbrelation(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRecentListAck.pbrelation)
  return pbrelation_.Get(index);
}
inline ::KFMsg::PBRelation* S2SQueryRecentListAck::add_pbrelation() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryRecentListAck.pbrelation)
  return pbrelation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
S2SQueryRecentListAck::pbrelation() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryRecentListAck.pbrelation)
  return pbrelation_;
}

// -------------------------------------------------------------------

// S2SCreateGuidReq

// uint64 playerid = 1;
inline void S2SCreateGuidReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuidReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuidReq.playerid)
  return playerid_;
}
inline void S2SCreateGuidReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuidReq.playerid)
}

// uint64 serverid = 2;
inline void S2SCreateGuidReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuidReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuidReq.serverid)
  return serverid_;
}
inline void S2SCreateGuidReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuidReq.serverid)
}

// bytes name = 3;
inline void S2SCreateGuidReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuidReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuidReq.name)
  return name_.GetNoArena();
}
inline void S2SCreateGuidReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuidReq.name)
}
#if LANG_CXX11
inline void S2SCreateGuidReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuidReq.name)
}
#endif
inline void S2SCreateGuidReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuidReq.name)
}
inline void S2SCreateGuidReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuidReq.name)
}
inline ::std::string* S2SCreateGuidReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuidReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuidReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuidReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuidReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuidReq.name)
}

// bytes guildname = 4;
inline void S2SCreateGuidReq::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuidReq::guildname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuidReq.guildname)
  return guildname_.GetNoArena();
}
inline void S2SCreateGuidReq::set_guildname(const ::std::string& value) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuidReq.guildname)
}
#if LANG_CXX11
inline void S2SCreateGuidReq::set_guildname(::std::string&& value) {
  
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuidReq.guildname)
}
#endif
inline void S2SCreateGuidReq::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuidReq.guildname)
}
inline void S2SCreateGuidReq::set_guildname(const void* value, size_t size) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuidReq.guildname)
}
inline ::std::string* S2SCreateGuidReq::mutable_guildname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuidReq.guildname)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuidReq::release_guildname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuidReq.guildname)
  
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuidReq::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    
  } else {
    
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuidReq.guildname)
}

// uint32 medal = 5;
inline void S2SCreateGuidReq::clear_medal() {
  medal_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateGuidReq::medal() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuidReq.medal)
  return medal_;
}
inline void S2SCreateGuidReq::set_medal(::google::protobuf::uint32 value) {
  
  medal_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuidReq.medal)
}

// bytes manifesto = 6;
inline void S2SCreateGuidReq::clear_manifesto() {
  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuidReq::manifesto() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuidReq.manifesto)
  return manifesto_.GetNoArena();
}
inline void S2SCreateGuidReq::set_manifesto(const ::std::string& value) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuidReq.manifesto)
}
#if LANG_CXX11
inline void S2SCreateGuidReq::set_manifesto(::std::string&& value) {
  
  manifesto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuidReq.manifesto)
}
#endif
inline void S2SCreateGuidReq::set_manifesto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuidReq.manifesto)
}
inline void S2SCreateGuidReq::set_manifesto(const void* value, size_t size) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuidReq.manifesto)
}
inline ::std::string* S2SCreateGuidReq::mutable_manifesto() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuidReq.manifesto)
  return manifesto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuidReq::release_manifesto() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuidReq.manifesto)
  
  return manifesto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuidReq::set_allocated_manifesto(::std::string* manifesto) {
  if (manifesto != NULL) {
    
  } else {
    
  }
  manifesto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manifesto);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuidReq.manifesto)
}

// -------------------------------------------------------------------

// S2SCreateGuildToShardReq

// uint64 playerid = 1;
inline void S2SCreateGuildToShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuildToShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.playerid)
  return playerid_;
}
inline void S2SCreateGuildToShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.playerid)
}

// uint64 serverid = 2;
inline void S2SCreateGuildToShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuildToShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.serverid)
  return serverid_;
}
inline void S2SCreateGuildToShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.serverid)
}

// bytes name = 3;
inline void S2SCreateGuildToShardReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuildToShardReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.name)
  return name_.GetNoArena();
}
inline void S2SCreateGuildToShardReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.name)
}
#if LANG_CXX11
inline void S2SCreateGuildToShardReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuildToShardReq.name)
}
#endif
inline void S2SCreateGuildToShardReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuildToShardReq.name)
}
inline void S2SCreateGuildToShardReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuildToShardReq.name)
}
inline ::std::string* S2SCreateGuildToShardReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuildToShardReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuildToShardReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuildToShardReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuildToShardReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuildToShardReq.name)
}

// bytes guildname = 4;
inline void S2SCreateGuildToShardReq::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuildToShardReq::guildname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.guildname)
  return guildname_.GetNoArena();
}
inline void S2SCreateGuildToShardReq::set_guildname(const ::std::string& value) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.guildname)
}
#if LANG_CXX11
inline void S2SCreateGuildToShardReq::set_guildname(::std::string&& value) {
  
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuildToShardReq.guildname)
}
#endif
inline void S2SCreateGuildToShardReq::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuildToShardReq.guildname)
}
inline void S2SCreateGuildToShardReq::set_guildname(const void* value, size_t size) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuildToShardReq.guildname)
}
inline ::std::string* S2SCreateGuildToShardReq::mutable_guildname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuildToShardReq.guildname)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuildToShardReq::release_guildname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuildToShardReq.guildname)
  
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuildToShardReq::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    
  } else {
    
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuildToShardReq.guildname)
}

// uint32 medal = 5;
inline void S2SCreateGuildToShardReq::clear_medal() {
  medal_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateGuildToShardReq::medal() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.medal)
  return medal_;
}
inline void S2SCreateGuildToShardReq::set_medal(::google::protobuf::uint32 value) {
  
  medal_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.medal)
}

// bytes manifesto = 6;
inline void S2SCreateGuildToShardReq::clear_manifesto() {
  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuildToShardReq::manifesto() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.manifesto)
  return manifesto_.GetNoArena();
}
inline void S2SCreateGuildToShardReq::set_manifesto(const ::std::string& value) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.manifesto)
}
#if LANG_CXX11
inline void S2SCreateGuildToShardReq::set_manifesto(::std::string&& value) {
  
  manifesto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuildToShardReq.manifesto)
}
#endif
inline void S2SCreateGuildToShardReq::set_manifesto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuildToShardReq.manifesto)
}
inline void S2SCreateGuildToShardReq::set_manifesto(const void* value, size_t size) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuildToShardReq.manifesto)
}
inline ::std::string* S2SCreateGuildToShardReq::mutable_manifesto() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuildToShardReq.manifesto)
  return manifesto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuildToShardReq::release_manifesto() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuildToShardReq.manifesto)
  
  return manifesto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuildToShardReq::set_allocated_manifesto(::std::string* manifesto) {
  if (manifesto != NULL) {
    
  } else {
    
  }
  manifesto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manifesto);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuildToShardReq.manifesto)
}

// uint64 guildid = 7;
inline void S2SCreateGuildToShardReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuildToShardReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildToShardReq.guildid)
  return guildid_;
}
inline void S2SCreateGuildToShardReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildToShardReq.guildid)
}

// -------------------------------------------------------------------

// S2SCreateGuildAck

// uint32 code = 1;
inline void S2SCreateGuildAck::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateGuildAck::code() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildAck.code)
  return code_;
}
inline void S2SCreateGuildAck::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildAck.code)
}

// uint64 playerid = 2;
inline void S2SCreateGuildAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuildAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildAck.playerid)
  return playerid_;
}
inline void S2SCreateGuildAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildAck.playerid)
}

// uint64 guildid = 3;
inline void S2SCreateGuildAck::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateGuildAck::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildAck.guildid)
  return guildid_;
}
inline void S2SCreateGuildAck::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildAck.guildid)
}

// uint32 medal = 4;
inline void S2SCreateGuildAck::clear_medal() {
  medal_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateGuildAck::medal() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildAck.medal)
  return medal_;
}
inline void S2SCreateGuildAck::set_medal(::google::protobuf::uint32 value) {
  
  medal_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildAck.medal)
}

// bytes manifesto = 5;
inline void S2SCreateGuildAck::clear_manifesto() {
  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateGuildAck::manifesto() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateGuildAck.manifesto)
  return manifesto_.GetNoArena();
}
inline void S2SCreateGuildAck::set_manifesto(const ::std::string& value) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateGuildAck.manifesto)
}
#if LANG_CXX11
inline void S2SCreateGuildAck::set_manifesto(::std::string&& value) {
  
  manifesto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateGuildAck.manifesto)
}
#endif
inline void S2SCreateGuildAck::set_manifesto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateGuildAck.manifesto)
}
inline void S2SCreateGuildAck::set_manifesto(const void* value, size_t size) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateGuildAck.manifesto)
}
inline ::std::string* S2SCreateGuildAck::mutable_manifesto() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateGuildAck.manifesto)
  return manifesto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateGuildAck::release_manifesto() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateGuildAck.manifesto)
  
  return manifesto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateGuildAck::set_allocated_manifesto(::std::string* manifesto) {
  if (manifesto != NULL) {
    
  } else {
    
  }
  manifesto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manifesto);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateGuildAck.manifesto)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateMemberBasicDataReq

// uint64 playerid = 1;
inline void S2SUpdateMemberBasicDataReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMemberBasicDataReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMemberBasicDataReq.playerid)
  return playerid_;
}
inline void S2SUpdateMemberBasicDataReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMemberBasicDataReq.playerid)
}

// uint64 guildid = 2;
inline void S2SUpdateMemberBasicDataReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMemberBasicDataReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMemberBasicDataReq.guildid)
  return guildid_;
}
inline void S2SUpdateMemberBasicDataReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMemberBasicDataReq.guildid)
}

// map<string, bytes> pbdata = 3;
inline int S2SUpdateMemberBasicDataReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateMemberBasicDataReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateMemberBasicDataReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateMemberBasicDataReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateMemberBasicDataReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateMemberBasicDataReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SInviteGuildReq

// uint64 guildid = 1;
inline void S2SInviteGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildReq.guildid)
  return guildid_;
}
inline void S2SInviteGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildReq.guildid)
}

// uint64 invitor = 2;
inline void S2SInviteGuildReq::clear_invitor() {
  invitor_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildReq::invitor() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildReq.invitor)
  return invitor_;
}
inline void S2SInviteGuildReq::set_invitor(::google::protobuf::uint64 value) {
  
  invitor_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildReq.invitor)
}

// uint64 invitedid = 3;
inline void S2SInviteGuildReq::clear_invitedid() {
  invitedid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildReq::invitedid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildReq.invitedid)
  return invitedid_;
}
inline void S2SInviteGuildReq::set_invitedid(::google::protobuf::uint64 value) {
  
  invitedid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildReq.invitedid)
}

// uint64 serverid = 4;
inline void S2SInviteGuildReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildReq.serverid)
  return serverid_;
}
inline void S2SInviteGuildReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildReq.serverid)
}

// -------------------------------------------------------------------

// S2SInviteGuildAck

// uint64 guildid = 1;
inline void S2SInviteGuildAck::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildAck::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildAck.guildid)
  return guildid_;
}
inline void S2SInviteGuildAck::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildAck.guildid)
}

// uint64 playerid = 2;
inline void S2SInviteGuildAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildAck.playerid)
  return playerid_;
}
inline void S2SInviteGuildAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildAck.playerid)
}

// uint64 invitedid = 3;
inline void S2SInviteGuildAck::clear_invitedid() {
  invitedid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SInviteGuildAck::invitedid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SInviteGuildAck.invitedid)
  return invitedid_;
}
inline void S2SInviteGuildAck::set_invitedid(::google::protobuf::uint64 value) {
  
  invitedid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SInviteGuildAck.invitedid)
}

// -------------------------------------------------------------------

// S2SApplyGuildReq

// uint64 guildid = 1;
inline void S2SApplyGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyGuildReq.guildid)
  return guildid_;
}
inline void S2SApplyGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyGuildReq.guildid)
}

// uint64 invitor = 2;
inline void S2SApplyGuildReq::clear_invitor() {
  invitor_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyGuildReq::invitor() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyGuildReq.invitor)
  return invitor_;
}
inline void S2SApplyGuildReq::set_invitor(::google::protobuf::uint64 value) {
  
  invitor_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyGuildReq.invitor)
}

// uint64 playerid = 3;
inline void S2SApplyGuildReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyGuildReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyGuildReq.playerid)
  return playerid_;
}
inline void S2SApplyGuildReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyGuildReq.playerid)
}

// -------------------------------------------------------------------

// S2SApplyGuildAck

// uint64 playerid = 1;
inline void S2SApplyGuildAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyGuildAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyGuildAck.playerid)
  return playerid_;
}
inline void S2SApplyGuildAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyGuildAck.playerid)
}

// uint64 guildid = 2;
inline void S2SApplyGuildAck::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyGuildAck::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyGuildAck.guildid)
  return guildid_;
}
inline void S2SApplyGuildAck::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyGuildAck.guildid)
}

// uint32 code = 3;
inline void S2SApplyGuildAck::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 S2SApplyGuildAck::code() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyGuildAck.code)
  return code_;
}
inline void S2SApplyGuildAck::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyGuildAck.code)
}

// -------------------------------------------------------------------

// S2SPlayerGuildChangeReq

// uint64 playerid = 1;
inline void S2SPlayerGuildChangeReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerGuildChangeReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerGuildChangeReq.playerid)
  return playerid_;
}
inline void S2SPlayerGuildChangeReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerGuildChangeReq.playerid)
}

// uint64 guildid = 2;
inline void S2SPlayerGuildChangeReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerGuildChangeReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerGuildChangeReq.guildid)
  return guildid_;
}
inline void S2SPlayerGuildChangeReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerGuildChangeReq.guildid)
}

// uint32 code = 3;
inline void S2SPlayerGuildChangeReq::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerGuildChangeReq::code() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerGuildChangeReq.code)
  return code_;
}
inline void S2SPlayerGuildChangeReq::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerGuildChangeReq.code)
}

// -------------------------------------------------------------------

// S2SExitGuildReq

// uint64 guildid = 1;
inline void S2SExitGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SExitGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SExitGuildReq.guildid)
  return guildid_;
}
inline void S2SExitGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SExitGuildReq.guildid)
}

// uint64 playerid = 2;
inline void S2SExitGuildReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SExitGuildReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SExitGuildReq.playerid)
  return playerid_;
}
inline void S2SExitGuildReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SExitGuildReq.playerid)
}

// uint64 serverid = 3;
inline void S2SExitGuildReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SExitGuildReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SExitGuildReq.serverid)
  return serverid_;
}
inline void S2SExitGuildReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SExitGuildReq.serverid)
}

// -------------------------------------------------------------------

// S2STransferMasterReq

// uint64 guildid = 1;
inline void S2STransferMasterReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransferMasterReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransferMasterReq.guildid)
  return guildid_;
}
inline void S2STransferMasterReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransferMasterReq.guildid)
}

// uint64 playerid = 2;
inline void S2STransferMasterReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransferMasterReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransferMasterReq.playerid)
  return playerid_;
}
inline void S2STransferMasterReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransferMasterReq.playerid)
}

// uint64 newmasterid = 3;
inline void S2STransferMasterReq::clear_newmasterid() {
  newmasterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransferMasterReq::newmasterid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransferMasterReq.newmasterid)
  return newmasterid_;
}
inline void S2STransferMasterReq::set_newmasterid(::google::protobuf::uint64 value) {
  
  newmasterid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransferMasterReq.newmasterid)
}

// uint64 serverid = 4;
inline void S2STransferMasterReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransferMasterReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransferMasterReq.serverid)
  return serverid_;
}
inline void S2STransferMasterReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransferMasterReq.serverid)
}

// -------------------------------------------------------------------

// S2SReviewApplyReq

// uint32 playerid = 1;
inline void S2SReviewApplyReq::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 S2SReviewApplyReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReviewApplyReq.playerid)
  return playerid_;
}
inline void S2SReviewApplyReq::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReviewApplyReq.playerid)
}

// uint64 dealplayerid = 2;
inline void S2SReviewApplyReq::clear_dealplayerid() {
  dealplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReviewApplyReq::dealplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReviewApplyReq.dealplayerid)
  return dealplayerid_;
}
inline void S2SReviewApplyReq::set_dealplayerid(::google::protobuf::uint64 value) {
  
  dealplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReviewApplyReq.dealplayerid)
}

// uint32 operatortype = 3;
inline void S2SReviewApplyReq::clear_operatortype() {
  operatortype_ = 0u;
}
inline ::google::protobuf::uint32 S2SReviewApplyReq::operatortype() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReviewApplyReq.operatortype)
  return operatortype_;
}
inline void S2SReviewApplyReq::set_operatortype(::google::protobuf::uint32 value) {
  
  operatortype_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReviewApplyReq.operatortype)
}

// uint64 guildid = 4;
inline void S2SReviewApplyReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReviewApplyReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReviewApplyReq.guildid)
  return guildid_;
}
inline void S2SReviewApplyReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReviewApplyReq.guildid)
}

// uint64 serverid = 5;
inline void S2SReviewApplyReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReviewApplyReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReviewApplyReq.serverid)
  return serverid_;
}
inline void S2SReviewApplyReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReviewApplyReq.serverid)
}

// -------------------------------------------------------------------

// S2SDissolveGuildReq

// uint64 playerid = 1;
inline void S2SDissolveGuildReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDissolveGuildReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDissolveGuildReq.playerid)
  return playerid_;
}
inline void S2SDissolveGuildReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDissolveGuildReq.playerid)
}

// uint64 guildid = 2;
inline void S2SDissolveGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDissolveGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDissolveGuildReq.guildid)
  return guildid_;
}
inline void S2SDissolveGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDissolveGuildReq.guildid)
}

// uint64 serverid = 3;
inline void S2SDissolveGuildReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDissolveGuildReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDissolveGuildReq.serverid)
  return serverid_;
}
inline void S2SDissolveGuildReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDissolveGuildReq.serverid)
}

// -------------------------------------------------------------------

// S2SModifyMedalReq

// uint64 playerid = 1;
inline void S2SModifyMedalReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SModifyMedalReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SModifyMedalReq.playerid)
  return playerid_;
}
inline void S2SModifyMedalReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SModifyMedalReq.playerid)
}

// uint64 guildid = 2;
inline void S2SModifyMedalReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SModifyMedalReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SModifyMedalReq.guildid)
  return guildid_;
}
inline void S2SModifyMedalReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SModifyMedalReq.guildid)
}

// uint64 serverid = 3;
inline void S2SModifyMedalReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SModifyMedalReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SModifyMedalReq.serverid)
  return serverid_;
}
inline void S2SModifyMedalReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SModifyMedalReq.serverid)
}

// uint32 newmedal = 4;
inline void S2SModifyMedalReq::clear_newmedal() {
  newmedal_ = 0u;
}
inline ::google::protobuf::uint32 S2SModifyMedalReq::newmedal() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SModifyMedalReq.newmedal)
  return newmedal_;
}
inline void S2SModifyMedalReq::set_newmedal(::google::protobuf::uint32 value) {
  
  newmedal_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SModifyMedalReq.newmedal)
}

// -------------------------------------------------------------------

// S2SQueryGuildListReq

// uint64 playerid = 1;
inline void S2SQueryGuildListReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuildListReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildListReq.playerid)
  return playerid_;
}
inline void S2SQueryGuildListReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildListReq.playerid)
}

// uint64 serverid = 2;
inline void S2SQueryGuildListReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuildListReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildListReq.serverid)
  return serverid_;
}
inline void S2SQueryGuildListReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildListReq.serverid)
}

// repeated uint64 guilds = 3;
inline int S2SQueryGuildListReq::guilds_size() const {
  return guilds_.size();
}
inline void S2SQueryGuildListReq::clear_guilds() {
  guilds_.Clear();
}
inline ::google::protobuf::uint64 S2SQueryGuildListReq::guilds(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildListReq.guilds)
  return guilds_.Get(index);
}
inline void S2SQueryGuildListReq::set_guilds(int index, ::google::protobuf::uint64 value) {
  guilds_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildListReq.guilds)
}
inline void S2SQueryGuildListReq::add_guilds(::google::protobuf::uint64 value) {
  guilds_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryGuildListReq.guilds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SQueryGuildListReq::guilds() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryGuildListReq.guilds)
  return guilds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SQueryGuildListReq::mutable_guilds() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryGuildListReq.guilds)
  return &guilds_;
}

// uint32 cursor = 4;
inline void S2SQueryGuildListReq::clear_cursor() {
  cursor_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryGuildListReq::cursor() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildListReq.cursor)
  return cursor_;
}
inline void S2SQueryGuildListReq::set_cursor(::google::protobuf::uint32 value) {
  
  cursor_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildListReq.cursor)
}

// -------------------------------------------------------------------

// S2SKickMemberReq

// uint64 playerid = 1;
inline void S2SKickMemberReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMemberReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMemberReq.playerid)
  return playerid_;
}
inline void S2SKickMemberReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMemberReq.playerid)
}

// uint64 guildid = 2;
inline void S2SKickMemberReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMemberReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMemberReq.guildid)
  return guildid_;
}
inline void S2SKickMemberReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMemberReq.guildid)
}

// uint64 toplayerid = 3;
inline void S2SKickMemberReq::clear_toplayerid() {
  toplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMemberReq::toplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMemberReq.toplayerid)
  return toplayerid_;
}
inline void S2SKickMemberReq::set_toplayerid(::google::protobuf::uint64 value) {
  
  toplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMemberReq.toplayerid)
}

// uint64 serverid = 4;
inline void S2SKickMemberReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickMemberReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickMemberReq.serverid)
  return serverid_;
}
inline void S2SKickMemberReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickMemberReq.serverid)
}

// -------------------------------------------------------------------

// S2SLoginQueryGuildReq

// uint64 guildid = 1;
inline void S2SLoginQueryGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildReq.guildid)
  return guildid_;
}
inline void S2SLoginQueryGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildReq.guildid)
}

// uint32 playerid = 2;
inline void S2SLoginQueryGuildReq::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginQueryGuildReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildReq.playerid)
  return playerid_;
}
inline void S2SLoginQueryGuildReq::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildReq.playerid)
}

// uint32 serverid = 3;
inline void S2SLoginQueryGuildReq::clear_serverid() {
  serverid_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginQueryGuildReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildReq.serverid)
  return serverid_;
}
inline void S2SLoginQueryGuildReq::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildReq.serverid)
}

// -------------------------------------------------------------------

// S2SLoginQueryGuildAck

// uint64 playerid = 1;
inline void S2SLoginQueryGuildAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildAck.playerid)
  return playerid_;
}
inline void S2SLoginQueryGuildAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildAck.playerid)
}

// .KFMsg.PBObject guilddata = 2;
inline bool S2SLoginQueryGuildAck::has_guilddata() const {
  return this != internal_default_instance() && guilddata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SLoginQueryGuildAck::_internal_guilddata() const {
  return *guilddata_;
}
inline const ::KFMsg::PBObject& S2SLoginQueryGuildAck::guilddata() const {
  const ::KFMsg::PBObject* p = guilddata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildAck.guilddata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SLoginQueryGuildAck::release_guilddata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginQueryGuildAck.guilddata)
  
  ::KFMsg::PBObject* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SLoginQueryGuildAck::mutable_guilddata() {
  
  if (guilddata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    guilddata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginQueryGuildAck.guilddata)
  return guilddata_;
}
inline void S2SLoginQueryGuildAck::set_allocated_guilddata(::KFMsg::PBObject* guilddata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(guilddata_);
  }
  if (guilddata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guilddata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guilddata, submessage_arena);
    }
    
  } else {
    
  }
  guilddata_ = guilddata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginQueryGuildAck.guilddata)
}

// bool showapplicant = 3;
inline void S2SLoginQueryGuildAck::clear_showapplicant() {
  showapplicant_ = false;
}
inline bool S2SLoginQueryGuildAck::showapplicant() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildAck.showapplicant)
  return showapplicant_;
}
inline void S2SLoginQueryGuildAck::set_showapplicant(bool value) {
  
  showapplicant_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildAck.showapplicant)
}

// uint64 guildid = 4;
inline void S2SLoginQueryGuildAck::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildAck::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildAck.guildid)
  return guildid_;
}
inline void S2SLoginQueryGuildAck::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildAck.guildid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateGuildDataReq

// uint64 guildid = 1;
inline void S2SUpdateGuildDataReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGuildDataReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGuildDataReq.guildid)
  return guildid_;
}
inline void S2SUpdateGuildDataReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGuildDataReq.guildid)
}

// uint64 playerid = 2;
inline void S2SUpdateGuildDataReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateGuildDataReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateGuildDataReq.playerid)
  return playerid_;
}
inline void S2SUpdateGuildDataReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateGuildDataReq.playerid)
}

// map<string, bytes> pbdata = 3;
inline int S2SUpdateGuildDataReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateGuildDataReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateGuildDataReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateGuildDataReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateGuildDataReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateGuildDataReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SUpgradeGuildReq

// uint64 guildid = 1;
inline void S2SUpgradeGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpgradeGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpgradeGuildReq.guildid)
  return guildid_;
}
inline void S2SUpgradeGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpgradeGuildReq.guildid)
}

// uint64 playerid = 2;
inline void S2SUpgradeGuildReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpgradeGuildReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpgradeGuildReq.playerid)
  return playerid_;
}
inline void S2SUpgradeGuildReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpgradeGuildReq.playerid)
}

// -------------------------------------------------------------------

// S2SUpgradeGuildAck

// uint64 playerid = 1;
inline void S2SUpgradeGuildAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpgradeGuildAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpgradeGuildAck.playerid)
  return playerid_;
}
inline void S2SUpgradeGuildAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpgradeGuildAck.playerid)
}

// uint32 level = 2;
inline void S2SUpgradeGuildAck::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpgradeGuildAck::level() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpgradeGuildAck.level)
  return level_;
}
inline void S2SUpgradeGuildAck::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpgradeGuildAck.level)
}

// uint32 code = 3;
inline void S2SUpgradeGuildAck::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpgradeGuildAck::code() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpgradeGuildAck.code)
  return code_;
}
inline void S2SUpgradeGuildAck::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpgradeGuildAck.code)
}

// -------------------------------------------------------------------

// S2SAppointGuildMemberReq

// uint64 playerid = 1;
inline void S2SAppointGuildMemberReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAppointGuildMemberReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAppointGuildMemberReq.playerid)
  return playerid_;
}
inline void S2SAppointGuildMemberReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAppointGuildMemberReq.playerid)
}

// uint64 guildid = 2;
inline void S2SAppointGuildMemberReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAppointGuildMemberReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAppointGuildMemberReq.guildid)
  return guildid_;
}
inline void S2SAppointGuildMemberReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAppointGuildMemberReq.guildid)
}

// uint64 toplayerid = 3;
inline void S2SAppointGuildMemberReq::clear_toplayerid() {
  toplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAppointGuildMemberReq::toplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAppointGuildMemberReq.toplayerid)
  return toplayerid_;
}
inline void S2SAppointGuildMemberReq::set_toplayerid(::google::protobuf::uint64 value) {
  
  toplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAppointGuildMemberReq.toplayerid)
}

// uint32 title = 4;
inline void S2SAppointGuildMemberReq::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 S2SAppointGuildMemberReq::title() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAppointGuildMemberReq.title)
  return title_;
}
inline void S2SAppointGuildMemberReq::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAppointGuildMemberReq.title)
}

// uint64 serverid = 5;
inline void S2SAppointGuildMemberReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAppointGuildMemberReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAppointGuildMemberReq.serverid)
  return serverid_;
}
inline void S2SAppointGuildMemberReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAppointGuildMemberReq.serverid)
}

// -------------------------------------------------------------------

// S2SSearchGuildByNameReq

// bytes guildname = 1;
inline void S2SSearchGuildByNameReq::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSearchGuildByNameReq::guildname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSearchGuildByNameReq.guildname)
  return guildname_.GetNoArena();
}
inline void S2SSearchGuildByNameReq::set_guildname(const ::std::string& value) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSearchGuildByNameReq.guildname)
}
#if LANG_CXX11
inline void S2SSearchGuildByNameReq::set_guildname(::std::string&& value) {
  
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSearchGuildByNameReq.guildname)
}
#endif
inline void S2SSearchGuildByNameReq::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSearchGuildByNameReq.guildname)
}
inline void S2SSearchGuildByNameReq::set_guildname(const void* value, size_t size) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSearchGuildByNameReq.guildname)
}
inline ::std::string* S2SSearchGuildByNameReq::mutable_guildname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSearchGuildByNameReq.guildname)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSearchGuildByNameReq::release_guildname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSearchGuildByNameReq.guildname)
  
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSearchGuildByNameReq::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    
  } else {
    
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSearchGuildByNameReq.guildname)
}

// uint64 serverid = 2;
inline void S2SSearchGuildByNameReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSearchGuildByNameReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSearchGuildByNameReq.serverid)
  return serverid_;
}
inline void S2SSearchGuildByNameReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSearchGuildByNameReq.serverid)
}

// uint64 playerid = 3;
inline void S2SSearchGuildByNameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSearchGuildByNameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSearchGuildByNameReq.playerid)
  return playerid_;
}
inline void S2SSearchGuildByNameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSearchGuildByNameReq.playerid)
}

// -------------------------------------------------------------------

// S2SSetGuildSwitchReq

// uint64 playerid = 1;
inline void S2SSetGuildSwitchReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetGuildSwitchReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetGuildSwitchReq.playerid)
  return playerid_;
}
inline void S2SSetGuildSwitchReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetGuildSwitchReq.playerid)
}

// uint64 guildid = 2;
inline void S2SSetGuildSwitchReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetGuildSwitchReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetGuildSwitchReq.guildid)
  return guildid_;
}
inline void S2SSetGuildSwitchReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetGuildSwitchReq.guildid)
}

// bytes type = 3;
inline void S2SSetGuildSwitchReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetGuildSwitchReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetGuildSwitchReq.type)
  return type_.GetNoArena();
}
inline void S2SSetGuildSwitchReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetGuildSwitchReq.type)
}
#if LANG_CXX11
inline void S2SSetGuildSwitchReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetGuildSwitchReq.type)
}
#endif
inline void S2SSetGuildSwitchReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetGuildSwitchReq.type)
}
inline void S2SSetGuildSwitchReq::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetGuildSwitchReq.type)
}
inline ::std::string* S2SSetGuildSwitchReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetGuildSwitchReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetGuildSwitchReq::release_type() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetGuildSwitchReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetGuildSwitchReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetGuildSwitchReq.type)
}

// uint32 flag = 4;
inline void S2SSetGuildSwitchReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 S2SSetGuildSwitchReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetGuildSwitchReq.flag)
  return flag_;
}
inline void S2SSetGuildSwitchReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetGuildSwitchReq.flag)
}

// uint64 serverid = 5;
inline void S2SSetGuildSwitchReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetGuildSwitchReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetGuildSwitchReq.serverid)
  return serverid_;
}
inline void S2SSetGuildSwitchReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetGuildSwitchReq.serverid)
}

// -------------------------------------------------------------------

// S2SLoginQueryGuildidReq

// uint64 playerid = 1;
inline void S2SLoginQueryGuildidReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildidReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildidReq.playerid)
  return playerid_;
}
inline void S2SLoginQueryGuildidReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildidReq.playerid)
}

// uint64 serverid = 2;
inline void S2SLoginQueryGuildidReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildidReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildidReq.serverid)
  return serverid_;
}
inline void S2SLoginQueryGuildidReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildidReq.serverid)
}

// -------------------------------------------------------------------

// S2SLoginQueryGuildidAck

// uint64 playerid = 1;
inline void S2SLoginQueryGuildidAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildidAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildidAck.playerid)
  return playerid_;
}
inline void S2SLoginQueryGuildidAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildidAck.playerid)
}

// uint64 guildid = 2;
inline void S2SLoginQueryGuildidAck::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginQueryGuildidAck::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginQueryGuildidAck.guildid)
  return guildid_;
}
inline void S2SLoginQueryGuildidAck::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginQueryGuildidAck.guildid)
}

// -------------------------------------------------------------------

// S2SQueryGuildLogReq

// uint64 guildid = 1;
inline void S2SQueryGuildLogReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuildLogReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildLogReq.guildid)
  return guildid_;
}
inline void S2SQueryGuildLogReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildLogReq.guildid)
}

// uint64 playerid = 2;
inline void S2SQueryGuildLogReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuildLogReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildLogReq.playerid)
  return playerid_;
}
inline void S2SQueryGuildLogReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildLogReq.playerid)
}

// uint64 serverid = 3;
inline void S2SQueryGuildLogReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryGuildLogReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildLogReq.serverid)
  return serverid_;
}
inline void S2SQueryGuildLogReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildLogReq.serverid)
}

// uint32 beginpos = 4;
inline void S2SQueryGuildLogReq::clear_beginpos() {
  beginpos_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryGuildLogReq::beginpos() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildLogReq.beginpos)
  return beginpos_;
}
inline void S2SQueryGuildLogReq::set_beginpos(::google::protobuf::uint32 value) {
  
  beginpos_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildLogReq.beginpos)
}

// uint32 endpos = 5;
inline void S2SQueryGuildLogReq::clear_endpos() {
  endpos_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryGuildLogReq::endpos() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildLogReq.endpos)
  return endpos_;
}
inline void S2SQueryGuildLogReq::set_endpos(::google::protobuf::uint32 value) {
  
  endpos_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildLogReq.endpos)
}

// uint32 page = 6;
inline void S2SQueryGuildLogReq::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryGuildLogReq::page() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryGuildLogReq.page)
  return page_;
}
inline void S2SQueryGuildLogReq::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryGuildLogReq.page)
}

// -------------------------------------------------------------------

// S2SAddGuildActivenessReq

// uint64 guildid = 1;
inline void S2SAddGuildActivenessReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddGuildActivenessReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddGuildActivenessReq.guildid)
  return guildid_;
}
inline void S2SAddGuildActivenessReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddGuildActivenessReq.guildid)
}

// uint64 playerid = 2;
inline void S2SAddGuildActivenessReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddGuildActivenessReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddGuildActivenessReq.playerid)
  return playerid_;
}
inline void S2SAddGuildActivenessReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddGuildActivenessReq.playerid)
}

// uint32 activeness = 3;
inline void S2SAddGuildActivenessReq::clear_activeness() {
  activeness_ = 0u;
}
inline ::google::protobuf::uint32 S2SAddGuildActivenessReq::activeness() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddGuildActivenessReq.activeness)
  return activeness_;
}
inline void S2SAddGuildActivenessReq::set_activeness(::google::protobuf::uint32 value) {
  
  activeness_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddGuildActivenessReq.activeness)
}

// -------------------------------------------------------------------

// S2SSendChatToServer

// bytes chatinfo = 1;
inline void S2SSendChatToServer::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSendChatToServer::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void S2SSendChatToServer::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.chatinfo)
}
#if LANG_CXX11
inline void S2SSendChatToServer::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSendChatToServer.chatinfo)
}
#endif
inline void S2SSendChatToServer::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSendChatToServer.chatinfo)
}
inline void S2SSendChatToServer::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSendChatToServer.chatinfo)
}
inline ::std::string* S2SSendChatToServer::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSendChatToServer.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSendChatToServer::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSendChatToServer.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSendChatToServer::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSendChatToServer.chatinfo)
}

// uint32 isvoice = 2;
inline void S2SSendChatToServer::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 S2SSendChatToServer::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.isvoice)
  return isvoice_;
}
inline void S2SSendChatToServer::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.isvoice)
}

// bytes playername = 3;
inline void S2SSendChatToServer::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSendChatToServer::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playername)
  return playername_.GetNoArena();
}
inline void S2SSendChatToServer::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playername)
}
#if LANG_CXX11
inline void S2SSendChatToServer::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSendChatToServer.playername)
}
#endif
inline void S2SSendChatToServer::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSendChatToServer.playername)
}
inline void S2SSendChatToServer::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSendChatToServer.playername)
}
inline ::std::string* S2SSendChatToServer::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSendChatToServer.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSendChatToServer::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSendChatToServer.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSendChatToServer::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSendChatToServer.playername)
}

// uint64 playerid = 4;
inline void S2SSendChatToServer::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSendChatToServer::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playerid)
  return playerid_;
}
inline void S2SSendChatToServer::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playerid)
}

// bytes playericon = 5;
inline void S2SSendChatToServer::clear_playericon() {
  playericon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSendChatToServer::playericon() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playericon)
  return playericon_.GetNoArena();
}
inline void S2SSendChatToServer::set_playericon(const ::std::string& value) {
  
  playericon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playericon)
}
#if LANG_CXX11
inline void S2SSendChatToServer::set_playericon(::std::string&& value) {
  
  playericon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSendChatToServer.playericon)
}
#endif
inline void S2SSendChatToServer::set_playericon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playericon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSendChatToServer.playericon)
}
inline void S2SSendChatToServer::set_playericon(const void* value, size_t size) {
  
  playericon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSendChatToServer.playericon)
}
inline ::std::string* S2SSendChatToServer::mutable_playericon() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSendChatToServer.playericon)
  return playericon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSendChatToServer::release_playericon() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSendChatToServer.playericon)
  
  return playericon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSendChatToServer::set_allocated_playericon(::std::string* playericon) {
  if (playericon != NULL) {
    
  } else {
    
  }
  playericon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playericon);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSendChatToServer.playericon)
}

// uint32 playergrade = 6;
inline void S2SSendChatToServer::clear_playergrade() {
  playergrade_ = 0u;
}
inline ::google::protobuf::uint32 S2SSendChatToServer::playergrade() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playergrade)
  return playergrade_;
}
inline void S2SSendChatToServer::set_playergrade(::google::protobuf::uint32 value) {
  
  playergrade_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playergrade)
}

// uint32 playersex = 7;
inline void S2SSendChatToServer::clear_playersex() {
  playersex_ = 0u;
}
inline ::google::protobuf::uint32 S2SSendChatToServer::playersex() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playersex)
  return playersex_;
}
inline void S2SSendChatToServer::set_playersex(::google::protobuf::uint32 value) {
  
  playersex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playersex)
}

// bytes playericonbox = 8;
inline void S2SSendChatToServer::clear_playericonbox() {
  playericonbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSendChatToServer::playericonbox() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playericonbox)
  return playericonbox_.GetNoArena();
}
inline void S2SSendChatToServer::set_playericonbox(const ::std::string& value) {
  
  playericonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playericonbox)
}
#if LANG_CXX11
inline void S2SSendChatToServer::set_playericonbox(::std::string&& value) {
  
  playericonbox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSendChatToServer.playericonbox)
}
#endif
inline void S2SSendChatToServer::set_playericonbox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playericonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSendChatToServer.playericonbox)
}
inline void S2SSendChatToServer::set_playericonbox(const void* value, size_t size) {
  
  playericonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSendChatToServer.playericonbox)
}
inline ::std::string* S2SSendChatToServer::mutable_playericonbox() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSendChatToServer.playericonbox)
  return playericonbox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSendChatToServer::release_playericonbox() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSendChatToServer.playericonbox)
  
  return playericonbox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSendChatToServer::set_allocated_playericonbox(::std::string* playericonbox) {
  if (playericonbox != NULL) {
    
  } else {
    
  }
  playericonbox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playericonbox);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSendChatToServer.playericonbox)
}

// uint64 playerserverid = 9;
inline void S2SSendChatToServer::clear_playerserverid() {
  playerserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSendChatToServer::playerserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendChatToServer.playerserverid)
  return playerserverid_;
}
inline void S2SSendChatToServer::set_playerserverid(::google::protobuf::uint64 value) {
  
  playerserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendChatToServer.playerserverid)
}

// -------------------------------------------------------------------

// S2SRegisterMatchReq

// repeated uint32 matchid = 1;
inline int S2SRegisterMatchReq::matchid_size() const {
  return matchid_.size();
}
inline void S2SRegisterMatchReq::clear_matchid() {
  matchid_.Clear();
}
inline ::google::protobuf::uint32 S2SRegisterMatchReq::matchid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterMatchReq.matchid)
  return matchid_.Get(index);
}
inline void S2SRegisterMatchReq::set_matchid(int index, ::google::protobuf::uint32 value) {
  matchid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterMatchReq.matchid)
}
inline void S2SRegisterMatchReq::add_matchid(::google::protobuf::uint32 value) {
  matchid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SRegisterMatchReq.matchid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
S2SRegisterMatchReq::matchid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SRegisterMatchReq.matchid)
  return matchid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
S2SRegisterMatchReq::mutable_matchid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SRegisterMatchReq.matchid)
  return &matchid_;
}

// -------------------------------------------------------------------

// S2SMatchToProxyReq

// .KFMsg.PBMatchGroup pbgroup = 1;
inline bool S2SMatchToProxyReq::has_pbgroup() const {
  return this != internal_default_instance() && pbgroup_ != NULL;
}
inline const ::KFMsg::PBMatchGroup& S2SMatchToProxyReq::_internal_pbgroup() const {
  return *pbgroup_;
}
inline const ::KFMsg::PBMatchGroup& S2SMatchToProxyReq::pbgroup() const {
  const ::KFMsg::PBMatchGroup* p = pbgroup_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.pbgroup)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBMatchGroup*>(
      &::KFMsg::_PBMatchGroup_default_instance_);
}
inline ::KFMsg::PBMatchGroup* S2SMatchToProxyReq::release_pbgroup() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SMatchToProxyReq.pbgroup)
  
  ::KFMsg::PBMatchGroup* temp = pbgroup_;
  pbgroup_ = NULL;
  return temp;
}
inline ::KFMsg::PBMatchGroup* S2SMatchToProxyReq::mutable_pbgroup() {
  
  if (pbgroup_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBMatchGroup>(GetArenaNoVirtual());
    pbgroup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SMatchToProxyReq.pbgroup)
  return pbgroup_;
}
inline void S2SMatchToProxyReq::set_allocated_pbgroup(::KFMsg::PBMatchGroup* pbgroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbgroup_);
  }
  if (pbgroup) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbgroup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbgroup, submessage_arena);
    }
    
  } else {
    
  }
  pbgroup_ = pbgroup;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SMatchToProxyReq.pbgroup)
}

// uint32 matchid = 2;
inline void S2SMatchToProxyReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SMatchToProxyReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.matchid)
  return matchid_;
}
inline void S2SMatchToProxyReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToProxyReq.matchid)
}

// bool allowgroup = 3;
inline void S2SMatchToProxyReq::clear_allowgroup() {
  allowgroup_ = false;
}
inline bool S2SMatchToProxyReq::allowgroup() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.allowgroup)
  return allowgroup_;
}
inline void S2SMatchToProxyReq::set_allowgroup(bool value) {
  
  allowgroup_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToProxyReq.allowgroup)
}

// uint64 playerid = 4;
inline void S2SMatchToProxyReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToProxyReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.playerid)
  return playerid_;
}
inline void S2SMatchToProxyReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToProxyReq.playerid)
}

// uint64 serverid = 5;
inline void S2SMatchToProxyReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToProxyReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.serverid)
  return serverid_;
}
inline void S2SMatchToProxyReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToProxyReq.serverid)
}

// uint64 battleserverid = 6;
inline void S2SMatchToProxyReq::clear_battleserverid() {
  battleserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToProxyReq::battleserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.battleserverid)
  return battleserverid_;
}
inline void S2SMatchToProxyReq::set_battleserverid(::google::protobuf::uint64 value) {
  
  battleserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToProxyReq.battleserverid)
}

// bytes version = 7;
inline void S2SMatchToProxyReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SMatchToProxyReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToProxyReq.version)
  return version_.GetNoArena();
}
inline void S2SMatchToProxyReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToProxyReq.version)
}
#if LANG_CXX11
inline void S2SMatchToProxyReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SMatchToProxyReq.version)
}
#endif
inline void S2SMatchToProxyReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SMatchToProxyReq.version)
}
inline void S2SMatchToProxyReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SMatchToProxyReq.version)
}
inline ::std::string* S2SMatchToProxyReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SMatchToProxyReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SMatchToProxyReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SMatchToProxyReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SMatchToProxyReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SMatchToProxyReq.version)
}

// -------------------------------------------------------------------

// S2SMatchToClientAck

// uint32 result = 1;
inline void S2SMatchToClientAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SMatchToClientAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToClientAck.result)
  return result_;
}
inline void S2SMatchToClientAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToClientAck.result)
}

// uint32 matchid = 2;
inline void S2SMatchToClientAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SMatchToClientAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToClientAck.matchid)
  return matchid_;
}
inline void S2SMatchToClientAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToClientAck.matchid)
}

// uint64 playerid = 3;
inline void S2SMatchToClientAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToClientAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToClientAck.playerid)
  return playerid_;
}
inline void S2SMatchToClientAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToClientAck.playerid)
}

// -------------------------------------------------------------------

// S2SMatchToShardReq

// .KFMsg.PBMatchGroup pbgroup = 1;
inline bool S2SMatchToShardReq::has_pbgroup() const {
  return this != internal_default_instance() && pbgroup_ != NULL;
}
inline const ::KFMsg::PBMatchGroup& S2SMatchToShardReq::_internal_pbgroup() const {
  return *pbgroup_;
}
inline const ::KFMsg::PBMatchGroup& S2SMatchToShardReq::pbgroup() const {
  const ::KFMsg::PBMatchGroup* p = pbgroup_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.pbgroup)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBMatchGroup*>(
      &::KFMsg::_PBMatchGroup_default_instance_);
}
inline ::KFMsg::PBMatchGroup* S2SMatchToShardReq::release_pbgroup() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SMatchToShardReq.pbgroup)
  
  ::KFMsg::PBMatchGroup* temp = pbgroup_;
  pbgroup_ = NULL;
  return temp;
}
inline ::KFMsg::PBMatchGroup* S2SMatchToShardReq::mutable_pbgroup() {
  
  if (pbgroup_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBMatchGroup>(GetArenaNoVirtual());
    pbgroup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SMatchToShardReq.pbgroup)
  return pbgroup_;
}
inline void S2SMatchToShardReq::set_allocated_pbgroup(::KFMsg::PBMatchGroup* pbgroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbgroup_);
  }
  if (pbgroup) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbgroup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbgroup, submessage_arena);
    }
    
  } else {
    
  }
  pbgroup_ = pbgroup;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SMatchToShardReq.pbgroup)
}

// uint32 matchid = 2;
inline void S2SMatchToShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SMatchToShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.matchid)
  return matchid_;
}
inline void S2SMatchToShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToShardReq.matchid)
}

// bool allowgroup = 3;
inline void S2SMatchToShardReq::clear_allowgroup() {
  allowgroup_ = false;
}
inline bool S2SMatchToShardReq::allowgroup() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.allowgroup)
  return allowgroup_;
}
inline void S2SMatchToShardReq::set_allowgroup(bool value) {
  
  allowgroup_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToShardReq.allowgroup)
}

// uint64 playerid = 4;
inline void S2SMatchToShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.playerid)
  return playerid_;
}
inline void S2SMatchToShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToShardReq.playerid)
}

// uint64 serverid = 5;
inline void S2SMatchToShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.serverid)
  return serverid_;
}
inline void S2SMatchToShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToShardReq.serverid)
}

// uint64 battleserverid = 6;
inline void S2SMatchToShardReq::clear_battleserverid() {
  battleserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SMatchToShardReq::battleserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.battleserverid)
  return battleserverid_;
}
inline void S2SMatchToShardReq::set_battleserverid(::google::protobuf::uint64 value) {
  
  battleserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToShardReq.battleserverid)
}

// bytes version = 7;
inline void S2SMatchToShardReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SMatchToShardReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SMatchToShardReq.version)
  return version_.GetNoArena();
}
inline void S2SMatchToShardReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SMatchToShardReq.version)
}
#if LANG_CXX11
inline void S2SMatchToShardReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SMatchToShardReq.version)
}
#endif
inline void S2SMatchToShardReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SMatchToShardReq.version)
}
inline void S2SMatchToShardReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SMatchToShardReq.version)
}
inline ::std::string* S2SMatchToShardReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SMatchToShardReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SMatchToShardReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SMatchToShardReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SMatchToShardReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SMatchToShardReq.version)
}

// -------------------------------------------------------------------

// S2SCancelMatchToProxyReq

// uint32 matchid = 1;
inline void S2SCancelMatchToProxyReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCancelMatchToProxyReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToProxyReq.matchid)
  return matchid_;
}
inline void S2SCancelMatchToProxyReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToProxyReq.matchid)
}

// uint64 playerid = 2;
inline void S2SCancelMatchToProxyReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCancelMatchToProxyReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToProxyReq.playerid)
  return playerid_;
}
inline void S2SCancelMatchToProxyReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToProxyReq.playerid)
}

// -------------------------------------------------------------------

// S2SCancelMatchToShardReq

// uint32 matchid = 1;
inline void S2SCancelMatchToShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCancelMatchToShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToShardReq.matchid)
  return matchid_;
}
inline void S2SCancelMatchToShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToShardReq.matchid)
}

// uint64 playerid = 2;
inline void S2SCancelMatchToShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCancelMatchToShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToShardReq.playerid)
  return playerid_;
}
inline void S2SCancelMatchToShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToShardReq.playerid)
}

// -------------------------------------------------------------------

// S2SCancelMatchToBattleShardReq

// uint64 roomid = 1;
inline void S2SCancelMatchToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCancelMatchToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SCancelMatchToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToBattleShardReq.roomid)
}

// uint32 campid = 2;
inline void S2SCancelMatchToBattleShardReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCancelMatchToBattleShardReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToBattleShardReq.campid)
  return campid_;
}
inline void S2SCancelMatchToBattleShardReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToBattleShardReq.campid)
}

// uint64 groupid = 3;
inline void S2SCancelMatchToBattleShardReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCancelMatchToBattleShardReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCancelMatchToBattleShardReq.groupid)
  return groupid_;
}
inline void S2SCancelMatchToBattleShardReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCancelMatchToBattleShardReq.groupid)
}

// -------------------------------------------------------------------

// S2SNoticeMatchRoomReq

// uint32 matchid = 1;
inline void S2SNoticeMatchRoomReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNoticeMatchRoomReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.matchid)
  return matchid_;
}
inline void S2SNoticeMatchRoomReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.matchid)
}

// uint64 battleshardid = 2;
inline void S2SNoticeMatchRoomReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchRoomReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.battleshardid)
  return battleshardid_;
}
inline void S2SNoticeMatchRoomReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.battleshardid)
}

// uint32 campid = 3;
inline void S2SNoticeMatchRoomReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNoticeMatchRoomReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.campid)
  return campid_;
}
inline void S2SNoticeMatchRoomReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.campid)
}

// uint64 playerid = 4;
inline void S2SNoticeMatchRoomReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchRoomReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.playerid)
  return playerid_;
}
inline void S2SNoticeMatchRoomReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.playerid)
}

// uint64 serverid = 5;
inline void S2SNoticeMatchRoomReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchRoomReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.serverid)
  return serverid_;
}
inline void S2SNoticeMatchRoomReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.serverid)
}

// uint64 roomid = 6;
inline void S2SNoticeMatchRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.roomid)
  return roomid_;
}
inline void S2SNoticeMatchRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.roomid)
}

// bytes ip = 7;
inline void S2SNoticeMatchRoomReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SNoticeMatchRoomReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.ip)
  return ip_.GetNoArena();
}
inline void S2SNoticeMatchRoomReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.ip)
}
#if LANG_CXX11
inline void S2SNoticeMatchRoomReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SNoticeMatchRoomReq.ip)
}
#endif
inline void S2SNoticeMatchRoomReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SNoticeMatchRoomReq.ip)
}
inline void S2SNoticeMatchRoomReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SNoticeMatchRoomReq.ip)
}
inline ::std::string* S2SNoticeMatchRoomReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SNoticeMatchRoomReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SNoticeMatchRoomReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SNoticeMatchRoomReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SNoticeMatchRoomReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SNoticeMatchRoomReq.ip)
}

// uint32 port = 8;
inline void S2SNoticeMatchRoomReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SNoticeMatchRoomReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.port)
  return port_;
}
inline void S2SNoticeMatchRoomReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.port)
}

// bytes token = 9;
inline void S2SNoticeMatchRoomReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SNoticeMatchRoomReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomReq.token)
  return token_.GetNoArena();
}
inline void S2SNoticeMatchRoomReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomReq.token)
}
#if LANG_CXX11
inline void S2SNoticeMatchRoomReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SNoticeMatchRoomReq.token)
}
#endif
inline void S2SNoticeMatchRoomReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SNoticeMatchRoomReq.token)
}
inline void S2SNoticeMatchRoomReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SNoticeMatchRoomReq.token)
}
inline ::std::string* S2SNoticeMatchRoomReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SNoticeMatchRoomReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SNoticeMatchRoomReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SNoticeMatchRoomReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SNoticeMatchRoomReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SNoticeMatchRoomReq.token)
}

// -------------------------------------------------------------------

// S2SNoticeMatchRoomAck

// uint64 roomid = 1;
inline void S2SNoticeMatchRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomAck.roomid)
  return roomid_;
}
inline void S2SNoticeMatchRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomAck.roomid)
}

// uint32 campid = 2;
inline void S2SNoticeMatchRoomAck::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNoticeMatchRoomAck::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomAck.campid)
  return campid_;
}
inline void S2SNoticeMatchRoomAck::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomAck.campid)
}

// uint64 playerid = 3;
inline void S2SNoticeMatchRoomAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchRoomAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchRoomAck.playerid)
  return playerid_;
}
inline void S2SNoticeMatchRoomAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchRoomAck.playerid)
}

// -------------------------------------------------------------------

// S2SQueryMatchRoomReq

// uint32 matchid = 1;
inline void S2SQueryMatchRoomReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryMatchRoomReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMatchRoomReq.matchid)
  return matchid_;
}
inline void S2SQueryMatchRoomReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMatchRoomReq.matchid)
}

// uint64 playerid = 2;
inline void S2SQueryMatchRoomReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMatchRoomReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMatchRoomReq.playerid)
  return playerid_;
}
inline void S2SQueryMatchRoomReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMatchRoomReq.playerid)
}

// uint64 serverid = 3;
inline void S2SQueryMatchRoomReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMatchRoomReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMatchRoomReq.serverid)
  return serverid_;
}
inline void S2SQueryMatchRoomReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMatchRoomReq.serverid)
}

// -------------------------------------------------------------------

// S2SQueryRoomToMatchShardReq

// uint32 matchid = 1;
inline void S2SQueryRoomToMatchShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRoomToMatchShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRoomToMatchShardReq.matchid)
  return matchid_;
}
inline void S2SQueryRoomToMatchShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRoomToMatchShardReq.matchid)
}

// uint64 playerid = 2;
inline void S2SQueryRoomToMatchShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRoomToMatchShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRoomToMatchShardReq.playerid)
  return playerid_;
}
inline void S2SQueryRoomToMatchShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRoomToMatchShardReq.playerid)
}

// uint64 serverid = 3;
inline void S2SQueryRoomToMatchShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRoomToMatchShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRoomToMatchShardReq.serverid)
  return serverid_;
}
inline void S2SQueryRoomToMatchShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRoomToMatchShardReq.serverid)
}

// -------------------------------------------------------------------

// S2SQueryMatchRoomAck

// uint32 matchid = 1;
inline void S2SQueryMatchRoomAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryMatchRoomAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMatchRoomAck.matchid)
  return matchid_;
}
inline void S2SQueryMatchRoomAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMatchRoomAck.matchid)
}

// uint64 playerid = 2;
inline void S2SQueryMatchRoomAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMatchRoomAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMatchRoomAck.playerid)
  return playerid_;
}
inline void S2SQueryMatchRoomAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMatchRoomAck.playerid)
}

// -------------------------------------------------------------------

// S2SQueryBattleRoomReq

// uint64 roomid = 1;
inline void S2SQueryBattleRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryBattleRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBattleRoomReq.roomid)
  return roomid_;
}
inline void S2SQueryBattleRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBattleRoomReq.roomid)
}

// uint64 playerid = 2;
inline void S2SQueryBattleRoomReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryBattleRoomReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBattleRoomReq.playerid)
  return playerid_;
}
inline void S2SQueryBattleRoomReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBattleRoomReq.playerid)
}

// uint64 serverid = 3;
inline void S2SQueryBattleRoomReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryBattleRoomReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBattleRoomReq.serverid)
  return serverid_;
}
inline void S2SQueryBattleRoomReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBattleRoomReq.serverid)
}

// -------------------------------------------------------------------

// S2SQueryBattleRoomAck

// uint64 playerid = 1;
inline void S2SQueryBattleRoomAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryBattleRoomAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBattleRoomAck.playerid)
  return playerid_;
}
inline void S2SQueryBattleRoomAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBattleRoomAck.playerid)
}

// uint64 roomid = 2;
inline void S2SQueryBattleRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryBattleRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBattleRoomAck.roomid)
  return roomid_;
}
inline void S2SQueryBattleRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBattleRoomAck.roomid)
}

// uint32 matchid = 3;
inline void S2SQueryBattleRoomAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryBattleRoomAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryBattleRoomAck.matchid)
  return matchid_;
}
inline void S2SQueryBattleRoomAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryBattleRoomAck.matchid)
}

// -------------------------------------------------------------------

// S2SQueryRoomToBattleShardReq

// uint64 roomid = 1;
inline void S2SQueryRoomToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRoomToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRoomToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SQueryRoomToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRoomToBattleShardReq.roomid)
}

// uint64 playerid = 2;
inline void S2SQueryRoomToBattleShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRoomToBattleShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRoomToBattleShardReq.playerid)
  return playerid_;
}
inline void S2SQueryRoomToBattleShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRoomToBattleShardReq.playerid)
}

// uint64 serverid = 3;
inline void S2SQueryRoomToBattleShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRoomToBattleShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRoomToBattleShardReq.serverid)
  return serverid_;
}
inline void S2SQueryRoomToBattleShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRoomToBattleShardReq.serverid)
}

// -------------------------------------------------------------------

// S2SPlayerOnlineToBattleShardReq

// uint64 roomid = 1;
inline void S2SPlayerOnlineToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerOnlineToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerOnlineToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SPlayerOnlineToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerOnlineToBattleShardReq.roomid)
}

// uint32 campid = 2;
inline void S2SPlayerOnlineToBattleShardReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerOnlineToBattleShardReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerOnlineToBattleShardReq.campid)
  return campid_;
}
inline void S2SPlayerOnlineToBattleShardReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerOnlineToBattleShardReq.campid)
}

// uint64 playerid = 3;
inline void S2SPlayerOnlineToBattleShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerOnlineToBattleShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerOnlineToBattleShardReq.playerid)
  return playerid_;
}
inline void S2SPlayerOnlineToBattleShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerOnlineToBattleShardReq.playerid)
}

// uint64 serverid = 4;
inline void S2SPlayerOnlineToBattleShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerOnlineToBattleShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerOnlineToBattleShardReq.serverid)
  return serverid_;
}
inline void S2SPlayerOnlineToBattleShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerOnlineToBattleShardReq.serverid)
}

// -------------------------------------------------------------------

// S2SNoticeMatchStateReq

// uint64 playerid = 1;
inline void S2SNoticeMatchStateReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeMatchStateReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchStateReq.playerid)
  return playerid_;
}
inline void S2SNoticeMatchStateReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchStateReq.playerid)
}

// uint32 matchid = 2;
inline void S2SNoticeMatchStateReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNoticeMatchStateReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeMatchStateReq.matchid)
  return matchid_;
}
inline void S2SNoticeMatchStateReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeMatchStateReq.matchid)
}

// -------------------------------------------------------------------

// S2SResetMatchRoomReq

// uint32 matchid = 1;
inline void S2SResetMatchRoomReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SResetMatchRoomReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SResetMatchRoomReq.matchid)
  return matchid_;
}
inline void S2SResetMatchRoomReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SResetMatchRoomReq.matchid)
}

// uint64 roomid = 2;
inline void S2SResetMatchRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SResetMatchRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SResetMatchRoomReq.roomid)
  return roomid_;
}
inline void S2SResetMatchRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SResetMatchRoomReq.roomid)
}

// -------------------------------------------------------------------

// S2SAllocBattleIdReq

// bytes ip = 1;
inline void S2SAllocBattleIdReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAllocBattleIdReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocBattleIdReq.ip)
  return ip_.GetNoArena();
}
inline void S2SAllocBattleIdReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocBattleIdReq.ip)
}
#if LANG_CXX11
inline void S2SAllocBattleIdReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAllocBattleIdReq.ip)
}
#endif
inline void S2SAllocBattleIdReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAllocBattleIdReq.ip)
}
inline void S2SAllocBattleIdReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAllocBattleIdReq.ip)
}
inline ::std::string* S2SAllocBattleIdReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAllocBattleIdReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAllocBattleIdReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAllocBattleIdReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAllocBattleIdReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAllocBattleIdReq.ip)
}

// uint32 port = 2;
inline void S2SAllocBattleIdReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SAllocBattleIdReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocBattleIdReq.port)
  return port_;
}
inline void S2SAllocBattleIdReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocBattleIdReq.port)
}

// -------------------------------------------------------------------

// S2SAllocBattleIdAck

// uint64 id = 1;
inline void S2SAllocBattleIdAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAllocBattleIdAck::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocBattleIdAck.id)
  return id_;
}
inline void S2SAllocBattleIdAck::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocBattleIdAck.id)
}

// -------------------------------------------------------------------

// S2SRegisterBattleServerReq

// uint64 serverid = 1;
inline void S2SRegisterBattleServerReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterBattleServerReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerReq.serverid)
  return serverid_;
}
inline void S2SRegisterBattleServerReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerReq.serverid)
}

// bytes ip = 2;
inline void S2SRegisterBattleServerReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterBattleServerReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerReq.ip)
  return ip_.GetNoArena();
}
inline void S2SRegisterBattleServerReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerReq.ip)
}
#if LANG_CXX11
inline void S2SRegisterBattleServerReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterBattleServerReq.ip)
}
#endif
inline void S2SRegisterBattleServerReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterBattleServerReq.ip)
}
inline void S2SRegisterBattleServerReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterBattleServerReq.ip)
}
inline ::std::string* S2SRegisterBattleServerReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterBattleServerReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterBattleServerReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterBattleServerReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterBattleServerReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterBattleServerReq.ip)
}

// uint32 port = 3;
inline void S2SRegisterBattleServerReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SRegisterBattleServerReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerReq.port)
  return port_;
}
inline void S2SRegisterBattleServerReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerReq.port)
}

// uint64 roomid = 4;
inline void S2SRegisterBattleServerReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterBattleServerReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerReq.roomid)
  return roomid_;
}
inline void S2SRegisterBattleServerReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerReq.roomid)
}

// uint64 battleshardid = 5;
inline void S2SRegisterBattleServerReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterBattleServerReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerReq.battleshardid)
  return battleshardid_;
}
inline void S2SRegisterBattleServerReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerReq.battleshardid)
}

// bytes version = 6;
inline void S2SRegisterBattleServerReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterBattleServerReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerReq.version)
  return version_.GetNoArena();
}
inline void S2SRegisterBattleServerReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerReq.version)
}
#if LANG_CXX11
inline void S2SRegisterBattleServerReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterBattleServerReq.version)
}
#endif
inline void S2SRegisterBattleServerReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterBattleServerReq.version)
}
inline void S2SRegisterBattleServerReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterBattleServerReq.version)
}
inline ::std::string* S2SRegisterBattleServerReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterBattleServerReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterBattleServerReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterBattleServerReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterBattleServerReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterBattleServerReq.version)
}

// -------------------------------------------------------------------

// S2SRegisterBattleServerAck

// uint64 serverid = 1;
inline void S2SRegisterBattleServerAck::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterBattleServerAck::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerAck.serverid)
  return serverid_;
}
inline void S2SRegisterBattleServerAck::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerAck.serverid)
}

// uint32 result = 2;
inline void S2SRegisterBattleServerAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SRegisterBattleServerAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterBattleServerAck.result)
  return result_;
}
inline void S2SRegisterBattleServerAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterBattleServerAck.result)
}

// -------------------------------------------------------------------

// S2SRegisterServerToBattleShardReq

// uint64 serverid = 1;
inline void S2SRegisterServerToBattleShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterServerToBattleShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterServerToBattleShardReq.serverid)
  return serverid_;
}
inline void S2SRegisterServerToBattleShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterServerToBattleShardReq.serverid)
}

// bytes ip = 2;
inline void S2SRegisterServerToBattleShardReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterServerToBattleShardReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterServerToBattleShardReq.ip)
  return ip_.GetNoArena();
}
inline void S2SRegisterServerToBattleShardReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterServerToBattleShardReq.ip)
}
#if LANG_CXX11
inline void S2SRegisterServerToBattleShardReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterServerToBattleShardReq.ip)
}
#endif
inline void S2SRegisterServerToBattleShardReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterServerToBattleShardReq.ip)
}
inline void S2SRegisterServerToBattleShardReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterServerToBattleShardReq.ip)
}
inline ::std::string* S2SRegisterServerToBattleShardReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterServerToBattleShardReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterServerToBattleShardReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterServerToBattleShardReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterServerToBattleShardReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterServerToBattleShardReq.ip)
}

// uint32 port = 3;
inline void S2SRegisterServerToBattleShardReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SRegisterServerToBattleShardReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterServerToBattleShardReq.port)
  return port_;
}
inline void S2SRegisterServerToBattleShardReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterServerToBattleShardReq.port)
}

// uint64 roomid = 4;
inline void S2SRegisterServerToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterServerToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterServerToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SRegisterServerToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterServerToBattleShardReq.roomid)
}

// bytes version = 5;
inline void S2SRegisterServerToBattleShardReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterServerToBattleShardReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterServerToBattleShardReq.version)
  return version_.GetNoArena();
}
inline void S2SRegisterServerToBattleShardReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterServerToBattleShardReq.version)
}
#if LANG_CXX11
inline void S2SRegisterServerToBattleShardReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterServerToBattleShardReq.version)
}
#endif
inline void S2SRegisterServerToBattleShardReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterServerToBattleShardReq.version)
}
inline void S2SRegisterServerToBattleShardReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterServerToBattleShardReq.version)
}
inline ::std::string* S2SRegisterServerToBattleShardReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterServerToBattleShardReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterServerToBattleShardReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterServerToBattleShardReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterServerToBattleShardReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterServerToBattleShardReq.version)
}

// -------------------------------------------------------------------

// S2STellBattleRegisterToShardReq

// uint64 serverid = 1;
inline void S2STellBattleRegisterToShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRegisterToShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRegisterToShardReq.serverid)
  return serverid_;
}
inline void S2STellBattleRegisterToShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRegisterToShardReq.serverid)
}

// uint64 roomid = 2;
inline void S2STellBattleRegisterToShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRegisterToShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRegisterToShardReq.roomid)
  return roomid_;
}
inline void S2STellBattleRegisterToShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRegisterToShardReq.roomid)
}

// bytes ip = 3;
inline void S2STellBattleRegisterToShardReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STellBattleRegisterToShardReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRegisterToShardReq.ip)
  return ip_.GetNoArena();
}
inline void S2STellBattleRegisterToShardReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRegisterToShardReq.ip)
}
#if LANG_CXX11
inline void S2STellBattleRegisterToShardReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STellBattleRegisterToShardReq.ip)
}
#endif
inline void S2STellBattleRegisterToShardReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STellBattleRegisterToShardReq.ip)
}
inline void S2STellBattleRegisterToShardReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STellBattleRegisterToShardReq.ip)
}
inline ::std::string* S2STellBattleRegisterToShardReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STellBattleRegisterToShardReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STellBattleRegisterToShardReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STellBattleRegisterToShardReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STellBattleRegisterToShardReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STellBattleRegisterToShardReq.ip)
}

// uint32 port = 4;
inline void S2STellBattleRegisterToShardReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2STellBattleRegisterToShardReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRegisterToShardReq.port)
  return port_;
}
inline void S2STellBattleRegisterToShardReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRegisterToShardReq.port)
}

// bytes version = 5;
inline void S2STellBattleRegisterToShardReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STellBattleRegisterToShardReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRegisterToShardReq.version)
  return version_.GetNoArena();
}
inline void S2STellBattleRegisterToShardReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRegisterToShardReq.version)
}
#if LANG_CXX11
inline void S2STellBattleRegisterToShardReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STellBattleRegisterToShardReq.version)
}
#endif
inline void S2STellBattleRegisterToShardReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STellBattleRegisterToShardReq.version)
}
inline void S2STellBattleRegisterToShardReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STellBattleRegisterToShardReq.version)
}
inline ::std::string* S2STellBattleRegisterToShardReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STellBattleRegisterToShardReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STellBattleRegisterToShardReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STellBattleRegisterToShardReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STellBattleRegisterToShardReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STellBattleRegisterToShardReq.version)
}

// -------------------------------------------------------------------

// S2SDisconnectServerToBattleShardReq

// uint64 serverid = 1;
inline void S2SDisconnectServerToBattleShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDisconnectServerToBattleShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDisconnectServerToBattleShardReq.serverid)
  return serverid_;
}
inline void S2SDisconnectServerToBattleShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDisconnectServerToBattleShardReq.serverid)
}

// -------------------------------------------------------------------

// S2SCreateRoomToBattleProxyReq

// uint32 matchid = 1;
inline void S2SCreateRoomToBattleProxyReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateRoomToBattleProxyReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleProxyReq.matchid)
  return matchid_;
}
inline void S2SCreateRoomToBattleProxyReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleProxyReq.matchid)
}

// uint64 roomid = 2;
inline void S2SCreateRoomToBattleProxyReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToBattleProxyReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleProxyReq.roomid)
  return roomid_;
}
inline void S2SCreateRoomToBattleProxyReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleProxyReq.roomid)
}

// uint32 maxplayercount = 3;
inline void S2SCreateRoomToBattleProxyReq::clear_maxplayercount() {
  maxplayercount_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateRoomToBattleProxyReq::maxplayercount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleProxyReq.maxplayercount)
  return maxplayercount_;
}
inline void S2SCreateRoomToBattleProxyReq::set_maxplayercount(::google::protobuf::uint32 value) {
  
  maxplayercount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleProxyReq.maxplayercount)
}

// uint64 battleserverid = 4;
inline void S2SCreateRoomToBattleProxyReq::clear_battleserverid() {
  battleserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToBattleProxyReq::battleserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleProxyReq.battleserverid)
  return battleserverid_;
}
inline void S2SCreateRoomToBattleProxyReq::set_battleserverid(::google::protobuf::uint64 value) {
  
  battleserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleProxyReq.battleserverid)
}

// bytes version = 5;
inline void S2SCreateRoomToBattleProxyReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateRoomToBattleProxyReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleProxyReq.version)
  return version_.GetNoArena();
}
inline void S2SCreateRoomToBattleProxyReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleProxyReq.version)
}
#if LANG_CXX11
inline void S2SCreateRoomToBattleProxyReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateRoomToBattleProxyReq.version)
}
#endif
inline void S2SCreateRoomToBattleProxyReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateRoomToBattleProxyReq.version)
}
inline void S2SCreateRoomToBattleProxyReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateRoomToBattleProxyReq.version)
}
inline ::std::string* S2SCreateRoomToBattleProxyReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateRoomToBattleProxyReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateRoomToBattleProxyReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateRoomToBattleProxyReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateRoomToBattleProxyReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateRoomToBattleProxyReq.version)
}

// -------------------------------------------------------------------

// S2SCreateRoomToBattleShardReq

// uint32 matchid = 1;
inline void S2SCreateRoomToBattleShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateRoomToBattleShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleShardReq.matchid)
  return matchid_;
}
inline void S2SCreateRoomToBattleShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleShardReq.matchid)
}

// uint64 roomid = 2;
inline void S2SCreateRoomToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SCreateRoomToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleShardReq.roomid)
}

// uint64 matchshardid = 3;
inline void S2SCreateRoomToBattleShardReq::clear_matchshardid() {
  matchshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToBattleShardReq::matchshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleShardReq.matchshardid)
  return matchshardid_;
}
inline void S2SCreateRoomToBattleShardReq::set_matchshardid(::google::protobuf::uint64 value) {
  
  matchshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleShardReq.matchshardid)
}

// uint32 maxplayercount = 4;
inline void S2SCreateRoomToBattleShardReq::clear_maxplayercount() {
  maxplayercount_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateRoomToBattleShardReq::maxplayercount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleShardReq.maxplayercount)
  return maxplayercount_;
}
inline void S2SCreateRoomToBattleShardReq::set_maxplayercount(::google::protobuf::uint32 value) {
  
  maxplayercount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleShardReq.maxplayercount)
}

// uint64 battleserverid = 5;
inline void S2SCreateRoomToBattleShardReq::clear_battleserverid() {
  battleserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToBattleShardReq::battleserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleShardReq.battleserverid)
  return battleserverid_;
}
inline void S2SCreateRoomToBattleShardReq::set_battleserverid(::google::protobuf::uint64 value) {
  
  battleserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleShardReq.battleserverid)
}

// bytes version = 6;
inline void S2SCreateRoomToBattleShardReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SCreateRoomToBattleShardReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToBattleShardReq.version)
  return version_.GetNoArena();
}
inline void S2SCreateRoomToBattleShardReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToBattleShardReq.version)
}
#if LANG_CXX11
inline void S2SCreateRoomToBattleShardReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SCreateRoomToBattleShardReq.version)
}
#endif
inline void S2SCreateRoomToBattleShardReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SCreateRoomToBattleShardReq.version)
}
inline void S2SCreateRoomToBattleShardReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SCreateRoomToBattleShardReq.version)
}
inline ::std::string* S2SCreateRoomToBattleShardReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SCreateRoomToBattleShardReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SCreateRoomToBattleShardReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SCreateRoomToBattleShardReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SCreateRoomToBattleShardReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SCreateRoomToBattleShardReq.version)
}

// -------------------------------------------------------------------

// S2SCreateRoomToMatchShardAck

// uint32 matchid = 1;
inline void S2SCreateRoomToMatchShardAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SCreateRoomToMatchShardAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToMatchShardAck.matchid)
  return matchid_;
}
inline void S2SCreateRoomToMatchShardAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToMatchShardAck.matchid)
}

// uint64 roomid = 2;
inline void S2SCreateRoomToMatchShardAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToMatchShardAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToMatchShardAck.roomid)
  return roomid_;
}
inline void S2SCreateRoomToMatchShardAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToMatchShardAck.roomid)
}

// uint64 battleshardid = 3;
inline void S2SCreateRoomToMatchShardAck::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SCreateRoomToMatchShardAck::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SCreateRoomToMatchShardAck.battleshardid)
  return battleshardid_;
}
inline void S2SCreateRoomToMatchShardAck::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SCreateRoomToMatchShardAck.battleshardid)
}

// -------------------------------------------------------------------

// S2SAddCampToBattleShardReq

// uint64 roomid = 1;
inline void S2SAddCampToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddCampToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SAddCampToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToBattleShardReq.roomid)
}

// .KFMsg.PBBattleCamp pbcamp = 2;
inline bool S2SAddCampToBattleShardReq::has_pbcamp() const {
  return this != internal_default_instance() && pbcamp_ != NULL;
}
inline const ::KFMsg::PBBattleCamp& S2SAddCampToBattleShardReq::_internal_pbcamp() const {
  return *pbcamp_;
}
inline const ::KFMsg::PBBattleCamp& S2SAddCampToBattleShardReq::pbcamp() const {
  const ::KFMsg::PBBattleCamp* p = pbcamp_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToBattleShardReq.pbcamp)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBBattleCamp*>(
      &::KFMsg::_PBBattleCamp_default_instance_);
}
inline ::KFMsg::PBBattleCamp* S2SAddCampToBattleShardReq::release_pbcamp() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddCampToBattleShardReq.pbcamp)
  
  ::KFMsg::PBBattleCamp* temp = pbcamp_;
  pbcamp_ = NULL;
  return temp;
}
inline ::KFMsg::PBBattleCamp* S2SAddCampToBattleShardReq::mutable_pbcamp() {
  
  if (pbcamp_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBBattleCamp>(GetArenaNoVirtual());
    pbcamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddCampToBattleShardReq.pbcamp)
  return pbcamp_;
}
inline void S2SAddCampToBattleShardReq::set_allocated_pbcamp(::KFMsg::PBBattleCamp* pbcamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbcamp_);
  }
  if (pbcamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbcamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbcamp, submessage_arena);
    }
    
  } else {
    
  }
  pbcamp_ = pbcamp;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddCampToBattleShardReq.pbcamp)
}

// uint32 matchid = 3;
inline void S2SAddCampToBattleShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SAddCampToBattleShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToBattleShardReq.matchid)
  return matchid_;
}
inline void S2SAddCampToBattleShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToBattleShardReq.matchid)
}

// uint64 matchshardid = 4;
inline void S2SAddCampToBattleShardReq::clear_matchshardid() {
  matchshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddCampToBattleShardReq::matchshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToBattleShardReq.matchshardid)
  return matchshardid_;
}
inline void S2SAddCampToBattleShardReq::set_matchshardid(::google::protobuf::uint64 value) {
  
  matchshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToBattleShardReq.matchshardid)
}

// -------------------------------------------------------------------

// S2SAddCampToMatchShardAck

// uint32 matchid = 1;
inline void S2SAddCampToMatchShardAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SAddCampToMatchShardAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToMatchShardAck.matchid)
  return matchid_;
}
inline void S2SAddCampToMatchShardAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToMatchShardAck.matchid)
}

// uint64 roomid = 2;
inline void S2SAddCampToMatchShardAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddCampToMatchShardAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToMatchShardAck.roomid)
  return roomid_;
}
inline void S2SAddCampToMatchShardAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToMatchShardAck.roomid)
}

// uint32 campid = 3;
inline void S2SAddCampToMatchShardAck::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SAddCampToMatchShardAck::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToMatchShardAck.campid)
  return campid_;
}
inline void S2SAddCampToMatchShardAck::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToMatchShardAck.campid)
}

// bool addok = 4;
inline void S2SAddCampToMatchShardAck::clear_addok() {
  addok_ = false;
}
inline bool S2SAddCampToMatchShardAck::addok() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddCampToMatchShardAck.addok)
  return addok_;
}
inline void S2SAddCampToMatchShardAck::set_addok(bool value) {
  
  addok_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddCampToMatchShardAck.addok)
}

// -------------------------------------------------------------------

// S2SOpenBattleRoomReq

// uint32 matchid = 1;
inline void S2SOpenBattleRoomReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomReq.matchid)
  return matchid_;
}
inline void S2SOpenBattleRoomReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomReq.matchid)
}

// uint64 roomid = 2;
inline void S2SOpenBattleRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenBattleRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomReq.roomid)
  return roomid_;
}
inline void S2SOpenBattleRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomReq.roomid)
}

// uint64 battleshardid = 3;
inline void S2SOpenBattleRoomReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenBattleRoomReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomReq.battleshardid)
  return battleshardid_;
}
inline void S2SOpenBattleRoomReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomReq.battleshardid)
}

// uint32 maxplayercount = 4;
inline void S2SOpenBattleRoomReq::clear_maxplayercount() {
  maxplayercount_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomReq::maxplayercount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomReq.maxplayercount)
  return maxplayercount_;
}
inline void S2SOpenBattleRoomReq::set_maxplayercount(::google::protobuf::uint32 value) {
  
  maxplayercount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomReq.maxplayercount)
}

// -------------------------------------------------------------------

// S2SOpenBattleRoomAck

// uint64 battleshardid = 1;
inline void S2SOpenBattleRoomAck::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenBattleRoomAck::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomAck.battleshardid)
  return battleshardid_;
}
inline void S2SOpenBattleRoomAck::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomAck.battleshardid)
}

// uint32 matchid = 2;
inline void S2SOpenBattleRoomAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomAck.matchid)
  return matchid_;
}
inline void S2SOpenBattleRoomAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomAck.matchid)
}

// uint64 roomid = 3;
inline void S2SOpenBattleRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenBattleRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomAck.roomid)
  return roomid_;
}
inline void S2SOpenBattleRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomAck.roomid)
}

// uint32 result = 4;
inline void S2SOpenBattleRoomAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomAck.result)
  return result_;
}
inline void S2SOpenBattleRoomAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomAck.result)
}

// uint32 waittime = 5;
inline void S2SOpenBattleRoomAck::clear_waittime() {
  waittime_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomAck::waittime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomAck.waittime)
  return waittime_;
}
inline void S2SOpenBattleRoomAck::set_waittime(::google::protobuf::uint32 value) {
  
  waittime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomAck.waittime)
}

// -------------------------------------------------------------------

// S2SOpenBattleRoomToShardAck

// uint32 matchid = 1;
inline void S2SOpenBattleRoomToShardAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomToShardAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomToShardAck.matchid)
  return matchid_;
}
inline void S2SOpenBattleRoomToShardAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomToShardAck.matchid)
}

// uint64 roomid = 2;
inline void S2SOpenBattleRoomToShardAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenBattleRoomToShardAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomToShardAck.roomid)
  return roomid_;
}
inline void S2SOpenBattleRoomToShardAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomToShardAck.roomid)
}

// uint32 result = 3;
inline void S2SOpenBattleRoomToShardAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomToShardAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomToShardAck.result)
  return result_;
}
inline void S2SOpenBattleRoomToShardAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomToShardAck.result)
}

// uint32 waittime = 4;
inline void S2SOpenBattleRoomToShardAck::clear_waittime() {
  waittime_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenBattleRoomToShardAck::waittime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenBattleRoomToShardAck.waittime)
  return waittime_;
}
inline void S2SOpenBattleRoomToShardAck::set_waittime(::google::protobuf::uint32 value) {
  
  waittime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenBattleRoomToShardAck.waittime)
}

// -------------------------------------------------------------------

// S2SOpenRoomToMatchShardReq

// uint32 matchid = 1;
inline void S2SOpenRoomToMatchShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenRoomToMatchShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenRoomToMatchShardReq.matchid)
  return matchid_;
}
inline void S2SOpenRoomToMatchShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenRoomToMatchShardReq.matchid)
}

// uint64 roomid = 2;
inline void S2SOpenRoomToMatchShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenRoomToMatchShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenRoomToMatchShardReq.roomid)
  return roomid_;
}
inline void S2SOpenRoomToMatchShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenRoomToMatchShardReq.roomid)
}

// uint32 waittime = 3;
inline void S2SOpenRoomToMatchShardReq::clear_waittime() {
  waittime_ = 0u;
}
inline ::google::protobuf::uint32 S2SOpenRoomToMatchShardReq::waittime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenRoomToMatchShardReq.waittime)
  return waittime_;
}
inline void S2SOpenRoomToMatchShardReq::set_waittime(::google::protobuf::uint32 value) {
  
  waittime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenRoomToMatchShardReq.waittime)
}

// -------------------------------------------------------------------

// S2SOpenRoomToBattleShardAck

// uint64 roomid = 1;
inline void S2SOpenRoomToBattleShardAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOpenRoomToBattleShardAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOpenRoomToBattleShardAck.roomid)
  return roomid_;
}
inline void S2SOpenRoomToBattleShardAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOpenRoomToBattleShardAck.roomid)
}

// -------------------------------------------------------------------

// S2SPlayerEnterBattleRoomReq

// uint64 roomid = 1;
inline void S2SPlayerEnterBattleRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterBattleRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomReq.roomid)
  return roomid_;
}
inline void S2SPlayerEnterBattleRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterBattleRoomReq.roomid)
}

// .KFMsg.PBBattlePlayer player = 2;
inline bool S2SPlayerEnterBattleRoomReq::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBBattlePlayer& S2SPlayerEnterBattleRoomReq::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBBattlePlayer& S2SPlayerEnterBattleRoomReq::player() const {
  const ::KFMsg::PBBattlePlayer* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomReq.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBBattlePlayer*>(
      &::KFMsg::_PBBattlePlayer_default_instance_);
}
inline ::KFMsg::PBBattlePlayer* S2SPlayerEnterBattleRoomReq::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SPlayerEnterBattleRoomReq.player)
  
  ::KFMsg::PBBattlePlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBBattlePlayer* S2SPlayerEnterBattleRoomReq::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBBattlePlayer>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SPlayerEnterBattleRoomReq.player)
  return player_;
}
inline void S2SPlayerEnterBattleRoomReq::set_allocated_player(::KFMsg::PBBattlePlayer* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SPlayerEnterBattleRoomReq.player)
}

// bytes token = 3;
inline void S2SPlayerEnterBattleRoomReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SPlayerEnterBattleRoomReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomReq.token)
  return token_.GetNoArena();
}
inline void S2SPlayerEnterBattleRoomReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterBattleRoomReq.token)
}
#if LANG_CXX11
inline void S2SPlayerEnterBattleRoomReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SPlayerEnterBattleRoomReq.token)
}
#endif
inline void S2SPlayerEnterBattleRoomReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SPlayerEnterBattleRoomReq.token)
}
inline void S2SPlayerEnterBattleRoomReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SPlayerEnterBattleRoomReq.token)
}
inline ::std::string* S2SPlayerEnterBattleRoomReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SPlayerEnterBattleRoomReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SPlayerEnterBattleRoomReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SPlayerEnterBattleRoomReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SPlayerEnterBattleRoomReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SPlayerEnterBattleRoomReq.token)
}

// -------------------------------------------------------------------

// S2SPlayerEnterBattleRoomAck

// uint64 battleshardid = 1;
inline void S2SPlayerEnterBattleRoomAck::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterBattleRoomAck::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomAck.battleshardid)
  return battleshardid_;
}
inline void S2SPlayerEnterBattleRoomAck::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterBattleRoomAck.battleshardid)
}

// uint64 roomid = 2;
inline void S2SPlayerEnterBattleRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterBattleRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomAck.roomid)
  return roomid_;
}
inline void S2SPlayerEnterBattleRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterBattleRoomAck.roomid)
}

// uint32 campid = 3;
inline void S2SPlayerEnterBattleRoomAck::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerEnterBattleRoomAck::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomAck.campid)
  return campid_;
}
inline void S2SPlayerEnterBattleRoomAck::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterBattleRoomAck.campid)
}

// uint64 playerid = 4;
inline void S2SPlayerEnterBattleRoomAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterBattleRoomAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterBattleRoomAck.playerid)
  return playerid_;
}
inline void S2SPlayerEnterBattleRoomAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterBattleRoomAck.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerEnterRoomToBattleShardAck

// uint64 roomid = 1;
inline void S2SPlayerEnterRoomToBattleShardAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterRoomToBattleShardAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterRoomToBattleShardAck.roomid)
  return roomid_;
}
inline void S2SPlayerEnterRoomToBattleShardAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterRoomToBattleShardAck.roomid)
}

// uint32 campid = 2;
inline void S2SPlayerEnterRoomToBattleShardAck::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerEnterRoomToBattleShardAck::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterRoomToBattleShardAck.campid)
  return campid_;
}
inline void S2SPlayerEnterRoomToBattleShardAck::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterRoomToBattleShardAck.campid)
}

// uint64 playerid = 3;
inline void S2SPlayerEnterRoomToBattleShardAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterRoomToBattleShardAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterRoomToBattleShardAck.playerid)
  return playerid_;
}
inline void S2SPlayerEnterRoomToBattleShardAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterRoomToBattleShardAck.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLoginBattleRoomReq

// uint64 battleshardid = 1;
inline void S2SPlayerLoginBattleRoomReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLoginBattleRoomReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomReq.battleshardid)
  return battleshardid_;
}
inline void S2SPlayerLoginBattleRoomReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomReq.battleshardid)
}

// uint64 roomid = 2;
inline void S2SPlayerLoginBattleRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLoginBattleRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomReq.roomid)
  return roomid_;
}
inline void S2SPlayerLoginBattleRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomReq.roomid)
}

// uint32 campid = 3;
inline void S2SPlayerLoginBattleRoomReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLoginBattleRoomReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomReq.campid)
  return campid_;
}
inline void S2SPlayerLoginBattleRoomReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomReq.campid)
}

// uint64 playerid = 4;
inline void S2SPlayerLoginBattleRoomReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLoginBattleRoomReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomReq.playerid)
  return playerid_;
}
inline void S2SPlayerLoginBattleRoomReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLoginBattleRoomAck

// uint64 roomid = 1;
inline void S2SPlayerLoginBattleRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLoginBattleRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomAck.roomid)
  return roomid_;
}
inline void S2SPlayerLoginBattleRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomAck.roomid)
}

// uint32 campid = 2;
inline void S2SPlayerLoginBattleRoomAck::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLoginBattleRoomAck::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomAck.campid)
  return campid_;
}
inline void S2SPlayerLoginBattleRoomAck::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomAck.campid)
}

// uint32 playerid = 3;
inline void S2SPlayerLoginBattleRoomAck::clear_playerid() {
  playerid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLoginBattleRoomAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginBattleRoomAck.playerid)
  return playerid_;
}
inline void S2SPlayerLoginBattleRoomAck::set_playerid(::google::protobuf::uint32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginBattleRoomAck.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLoginRoomToBattleShardReq

// uint64 roomid = 2;
inline void S2SPlayerLoginRoomToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLoginRoomToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginRoomToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SPlayerLoginRoomToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginRoomToBattleShardReq.roomid)
}

// uint32 campid = 3;
inline void S2SPlayerLoginRoomToBattleShardReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLoginRoomToBattleShardReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginRoomToBattleShardReq.campid)
  return campid_;
}
inline void S2SPlayerLoginRoomToBattleShardReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginRoomToBattleShardReq.campid)
}

// uint64 playerid = 4;
inline void S2SPlayerLoginRoomToBattleShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLoginRoomToBattleShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLoginRoomToBattleShardReq.playerid)
  return playerid_;
}
inline void S2SPlayerLoginRoomToBattleShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLoginRoomToBattleShardReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerCancelMatchReq

// uint64 roomid = 1;
inline void S2SPlayerCancelMatchReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerCancelMatchReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerCancelMatchReq.roomid)
  return roomid_;
}
inline void S2SPlayerCancelMatchReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerCancelMatchReq.roomid)
}

// uint32 campid = 2;
inline void S2SPlayerCancelMatchReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerCancelMatchReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerCancelMatchReq.campid)
  return campid_;
}
inline void S2SPlayerCancelMatchReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerCancelMatchReq.campid)
}

// uint64 playerid = 3;
inline void S2SPlayerCancelMatchReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerCancelMatchReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerCancelMatchReq.playerid)
  return playerid_;
}
inline void S2SPlayerCancelMatchReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerCancelMatchReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveBattleRoomReq

// uint64 roomid = 1;
inline void S2SPlayerLeaveBattleRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveBattleRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomReq.roomid)
  return roomid_;
}
inline void S2SPlayerLeaveBattleRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomReq.roomid)
}

// uint64 battleshardid = 2;
inline void S2SPlayerLeaveBattleRoomReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveBattleRoomReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomReq.battleshardid)
  return battleshardid_;
}
inline void S2SPlayerLeaveBattleRoomReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomReq.battleshardid)
}

// uint32 campid = 3;
inline void S2SPlayerLeaveBattleRoomReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLeaveBattleRoomReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomReq.campid)
  return campid_;
}
inline void S2SPlayerLeaveBattleRoomReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomReq.campid)
}

// uint64 playerid = 4;
inline void S2SPlayerLeaveBattleRoomReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveBattleRoomReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomReq.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveBattleRoomReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveBattleRoomAck

// uint64 roomid = 1;
inline void S2SPlayerLeaveBattleRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveBattleRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomAck.roomid)
  return roomid_;
}
inline void S2SPlayerLeaveBattleRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomAck.roomid)
}

// uint32 campid = 2;
inline void S2SPlayerLeaveBattleRoomAck::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLeaveBattleRoomAck::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomAck.campid)
  return campid_;
}
inline void S2SPlayerLeaveBattleRoomAck::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomAck.campid)
}

// uint64 playerid = 3;
inline void S2SPlayerLeaveBattleRoomAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveBattleRoomAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveBattleRoomAck.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveBattleRoomAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveBattleRoomAck.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveRoomToBattleShardReq

// uint64 roomid = 1;
inline void S2SPlayerLeaveRoomToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveRoomToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToBattleShardReq.roomid)
  return roomid_;
}
inline void S2SPlayerLeaveRoomToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToBattleShardReq.roomid)
}

// uint32 campid = 2;
inline void S2SPlayerLeaveRoomToBattleShardReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLeaveRoomToBattleShardReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToBattleShardReq.campid)
  return campid_;
}
inline void S2SPlayerLeaveRoomToBattleShardReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToBattleShardReq.campid)
}

// uint64 playerid = 3;
inline void S2SPlayerLeaveRoomToBattleShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveRoomToBattleShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToBattleShardReq.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveRoomToBattleShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToBattleShardReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveRoomToMatchShardReq

// uint64 matchid = 1;
inline void S2SPlayerLeaveRoomToMatchShardReq::clear_matchid() {
  matchid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveRoomToMatchShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.matchid)
  return matchid_;
}
inline void S2SPlayerLeaveRoomToMatchShardReq::set_matchid(::google::protobuf::uint64 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.matchid)
}

// uint64 roomid = 2;
inline void S2SPlayerLeaveRoomToMatchShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveRoomToMatchShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.roomid)
  return roomid_;
}
inline void S2SPlayerLeaveRoomToMatchShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.roomid)
}

// uint32 campid = 3;
inline void S2SPlayerLeaveRoomToMatchShardReq::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 S2SPlayerLeaveRoomToMatchShardReq::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.campid)
  return campid_;
}
inline void S2SPlayerLeaveRoomToMatchShardReq::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.campid)
}

// uint64 groupid = 4;
inline void S2SPlayerLeaveRoomToMatchShardReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveRoomToMatchShardReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.groupid)
  return groupid_;
}
inline void S2SPlayerLeaveRoomToMatchShardReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.groupid)
}

// uint64 playerid = 5;
inline void S2SPlayerLeaveRoomToMatchShardReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveRoomToMatchShardReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveRoomToMatchShardReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveRoomToMatchShardReq.playerid)
}

// -------------------------------------------------------------------

// S2SLeaveBattleRoomToClientAck

// uint64 playerid = 1;
inline void S2SLeaveBattleRoomToClientAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLeaveBattleRoomToClientAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLeaveBattleRoomToClientAck.playerid)
  return playerid_;
}
inline void S2SLeaveBattleRoomToClientAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLeaveBattleRoomToClientAck.playerid)
}

// uint64 roomid = 2;
inline void S2SLeaveBattleRoomToClientAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLeaveBattleRoomToClientAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLeaveBattleRoomToClientAck.roomid)
  return roomid_;
}
inline void S2SLeaveBattleRoomToClientAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLeaveBattleRoomToClientAck.roomid)
}

// -------------------------------------------------------------------

// S2STellBattleRoomStartReq

// uint64 battleshardid = 1;
inline void S2STellBattleRoomStartReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomStartReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomStartReq.battleshardid)
  return battleshardid_;
}
inline void S2STellBattleRoomStartReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomStartReq.battleshardid)
}

// uint64 roomid = 2;
inline void S2STellBattleRoomStartReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomStartReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomStartReq.roomid)
  return roomid_;
}
inline void S2STellBattleRoomStartReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomStartReq.roomid)
}

// uint32 maxtime = 3;
inline void S2STellBattleRoomStartReq::clear_maxtime() {
  maxtime_ = 0u;
}
inline ::google::protobuf::uint32 S2STellBattleRoomStartReq::maxtime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomStartReq.maxtime)
  return maxtime_;
}
inline void S2STellBattleRoomStartReq::set_maxtime(::google::protobuf::uint32 value) {
  
  maxtime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomStartReq.maxtime)
}

// -------------------------------------------------------------------

// S2STellRoomStartToBattleShardReq

// uint64 roomid = 1;
inline void S2STellRoomStartToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomStartToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomStartToBattleShardReq.roomid)
  return roomid_;
}
inline void S2STellRoomStartToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomStartToBattleShardReq.roomid)
}

// uint32 maxtime = 2;
inline void S2STellRoomStartToBattleShardReq::clear_maxtime() {
  maxtime_ = 0u;
}
inline ::google::protobuf::uint32 S2STellRoomStartToBattleShardReq::maxtime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomStartToBattleShardReq.maxtime)
  return maxtime_;
}
inline void S2STellRoomStartToBattleShardReq::set_maxtime(::google::protobuf::uint32 value) {
  
  maxtime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomStartToBattleShardReq.maxtime)
}

// -------------------------------------------------------------------

// S2STellBattleRoomStartAck

// uint64 roomid = 1;
inline void S2STellBattleRoomStartAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomStartAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomStartAck.roomid)
  return roomid_;
}
inline void S2STellBattleRoomStartAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomStartAck.roomid)
}

// -------------------------------------------------------------------

// S2STellRoomStartToMatchShardReq

// uint32 matchid = 1;
inline void S2STellRoomStartToMatchShardReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 S2STellRoomStartToMatchShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomStartToMatchShardReq.matchid)
  return matchid_;
}
inline void S2STellRoomStartToMatchShardReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomStartToMatchShardReq.matchid)
}

// uint64 roomid = 2;
inline void S2STellRoomStartToMatchShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomStartToMatchShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomStartToMatchShardReq.roomid)
  return roomid_;
}
inline void S2STellRoomStartToMatchShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomStartToMatchShardReq.roomid)
}

// -------------------------------------------------------------------

// S2STellRoomStartToMatchShardAck

// uint64 roomid = 1;
inline void S2STellRoomStartToMatchShardAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomStartToMatchShardAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomStartToMatchShardAck.roomid)
  return roomid_;
}
inline void S2STellRoomStartToMatchShardAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomStartToMatchShardAck.roomid)
}

// -------------------------------------------------------------------

// S2STellBattleRoomFinishReq

// uint64 battleshardid = 1;
inline void S2STellBattleRoomFinishReq::clear_battleshardid() {
  battleshardid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomFinishReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomFinishReq.battleshardid)
  return battleshardid_;
}
inline void S2STellBattleRoomFinishReq::set_battleshardid(::google::protobuf::uint64 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomFinishReq.battleshardid)
}

// uint64 roomid = 2;
inline void S2STellBattleRoomFinishReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomFinishReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomFinishReq.roomid)
  return roomid_;
}
inline void S2STellBattleRoomFinishReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomFinishReq.roomid)
}

// uint64 serverid = 3;
inline void S2STellBattleRoomFinishReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomFinishReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomFinishReq.serverid)
  return serverid_;
}
inline void S2STellBattleRoomFinishReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomFinishReq.serverid)
}

// bytes ip = 4;
inline void S2STellBattleRoomFinishReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STellBattleRoomFinishReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomFinishReq.ip)
  return ip_.GetNoArena();
}
inline void S2STellBattleRoomFinishReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomFinishReq.ip)
}
#if LANG_CXX11
inline void S2STellBattleRoomFinishReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STellBattleRoomFinishReq.ip)
}
#endif
inline void S2STellBattleRoomFinishReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STellBattleRoomFinishReq.ip)
}
inline void S2STellBattleRoomFinishReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STellBattleRoomFinishReq.ip)
}
inline ::std::string* S2STellBattleRoomFinishReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STellBattleRoomFinishReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STellBattleRoomFinishReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STellBattleRoomFinishReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STellBattleRoomFinishReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STellBattleRoomFinishReq.ip)
}

// -------------------------------------------------------------------

// S2STellBattleRoomFinishAck

// uint64 roomid = 1;
inline void S2STellBattleRoomFinishAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellBattleRoomFinishAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellBattleRoomFinishAck.roomid)
  return roomid_;
}
inline void S2STellBattleRoomFinishAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellBattleRoomFinishAck.roomid)
}

// -------------------------------------------------------------------

// S2SBattleRoomScoreBalanceReq

// uint64 roomid = 1;
inline void S2SBattleRoomScoreBalanceReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBattleRoomScoreBalanceReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleRoomScoreBalanceReq.roomid)
  return roomid_;
}
inline void S2SBattleRoomScoreBalanceReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBattleRoomScoreBalanceReq.roomid)
}

// uint32 battleshardid = 2;
inline void S2SBattleRoomScoreBalanceReq::clear_battleshardid() {
  battleshardid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBattleRoomScoreBalanceReq::battleshardid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleRoomScoreBalanceReq.battleshardid)
  return battleshardid_;
}
inline void S2SBattleRoomScoreBalanceReq::set_battleshardid(::google::protobuf::uint32 value) {
  
  battleshardid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBattleRoomScoreBalanceReq.battleshardid)
}

// .KFMsg.PBBattleScore pbscore = 3;
inline bool S2SBattleRoomScoreBalanceReq::has_pbscore() const {
  return this != internal_default_instance() && pbscore_ != NULL;
}
inline const ::KFMsg::PBBattleScore& S2SBattleRoomScoreBalanceReq::_internal_pbscore() const {
  return *pbscore_;
}
inline const ::KFMsg::PBBattleScore& S2SBattleRoomScoreBalanceReq::pbscore() const {
  const ::KFMsg::PBBattleScore* p = pbscore_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleRoomScoreBalanceReq.pbscore)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBBattleScore*>(
      &::KFMsg::_PBBattleScore_default_instance_);
}
inline ::KFMsg::PBBattleScore* S2SBattleRoomScoreBalanceReq::release_pbscore() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBattleRoomScoreBalanceReq.pbscore)
  
  ::KFMsg::PBBattleScore* temp = pbscore_;
  pbscore_ = NULL;
  return temp;
}
inline ::KFMsg::PBBattleScore* S2SBattleRoomScoreBalanceReq::mutable_pbscore() {
  
  if (pbscore_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBBattleScore>(GetArenaNoVirtual());
    pbscore_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBattleRoomScoreBalanceReq.pbscore)
  return pbscore_;
}
inline void S2SBattleRoomScoreBalanceReq::set_allocated_pbscore(::KFMsg::PBBattleScore* pbscore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbscore_);
  }
  if (pbscore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbscore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbscore, submessage_arena);
    }
    
  } else {
    
  }
  pbscore_ = pbscore;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBattleRoomScoreBalanceReq.pbscore)
}

// -------------------------------------------------------------------

// S2SBattleRoomScoreBalanceAck

// uint64 roomid = 1;
inline void S2SBattleRoomScoreBalanceAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBattleRoomScoreBalanceAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleRoomScoreBalanceAck.roomid)
  return roomid_;
}
inline void S2SBattleRoomScoreBalanceAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBattleRoomScoreBalanceAck.roomid)
}

// uint64 playerid = 2;
inline void S2SBattleRoomScoreBalanceAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBattleRoomScoreBalanceAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleRoomScoreBalanceAck.playerid)
  return playerid_;
}
inline void S2SBattleRoomScoreBalanceAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBattleRoomScoreBalanceAck.playerid)
}

// bytes reward = 3;
inline void S2SBattleRoomScoreBalanceAck::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBattleRoomScoreBalanceAck::reward() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
  return reward_.GetNoArena();
}
inline void S2SBattleRoomScoreBalanceAck::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
}
#if LANG_CXX11
inline void S2SBattleRoomScoreBalanceAck::set_reward(::std::string&& value) {
  
  reward_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
}
#endif
inline void S2SBattleRoomScoreBalanceAck::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
}
inline void S2SBattleRoomScoreBalanceAck::set_reward(const void* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
}
inline ::std::string* S2SBattleRoomScoreBalanceAck::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBattleRoomScoreBalanceAck::release_reward() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBattleRoomScoreBalanceAck::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBattleRoomScoreBalanceAck.reward)
}

// -------------------------------------------------------------------

// S2SBattleScoreBalanceToShardReq

// uint64 roomid = 1;
inline void S2SBattleScoreBalanceToShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBattleScoreBalanceToShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleScoreBalanceToShardReq.roomid)
  return roomid_;
}
inline void S2SBattleScoreBalanceToShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBattleScoreBalanceToShardReq.roomid)
}

// .KFMsg.PBBattleScore pbscore = 2;
inline bool S2SBattleScoreBalanceToShardReq::has_pbscore() const {
  return this != internal_default_instance() && pbscore_ != NULL;
}
inline const ::KFMsg::PBBattleScore& S2SBattleScoreBalanceToShardReq::_internal_pbscore() const {
  return *pbscore_;
}
inline const ::KFMsg::PBBattleScore& S2SBattleScoreBalanceToShardReq::pbscore() const {
  const ::KFMsg::PBBattleScore* p = pbscore_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SBattleScoreBalanceToShardReq.pbscore)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBBattleScore*>(
      &::KFMsg::_PBBattleScore_default_instance_);
}
inline ::KFMsg::PBBattleScore* S2SBattleScoreBalanceToShardReq::release_pbscore() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBattleScoreBalanceToShardReq.pbscore)
  
  ::KFMsg::PBBattleScore* temp = pbscore_;
  pbscore_ = NULL;
  return temp;
}
inline ::KFMsg::PBBattleScore* S2SBattleScoreBalanceToShardReq::mutable_pbscore() {
  
  if (pbscore_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBBattleScore>(GetArenaNoVirtual());
    pbscore_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBattleScoreBalanceToShardReq.pbscore)
  return pbscore_;
}
inline void S2SBattleScoreBalanceToShardReq::set_allocated_pbscore(::KFMsg::PBBattleScore* pbscore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbscore_);
  }
  if (pbscore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbscore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbscore, submessage_arena);
    }
    
  } else {
    
  }
  pbscore_ = pbscore;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBattleScoreBalanceToShardReq.pbscore)
}

// -------------------------------------------------------------------

// S2SPlayerBattleScoreReq

// uint64 playerid = 1;
inline void S2SPlayerBattleScoreReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerBattleScoreReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerBattleScoreReq.playerid)
  return playerid_;
}
inline void S2SPlayerBattleScoreReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerBattleScoreReq.playerid)
}

// uint64 roomid = 2;
inline void S2SPlayerBattleScoreReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerBattleScoreReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerBattleScoreReq.roomid)
  return roomid_;
}
inline void S2SPlayerBattleScoreReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerBattleScoreReq.roomid)
}

// .KFMsg.PBBattleScore pbscore = 3;
inline bool S2SPlayerBattleScoreReq::has_pbscore() const {
  return this != internal_default_instance() && pbscore_ != NULL;
}
inline const ::KFMsg::PBBattleScore& S2SPlayerBattleScoreReq::_internal_pbscore() const {
  return *pbscore_;
}
inline const ::KFMsg::PBBattleScore& S2SPlayerBattleScoreReq::pbscore() const {
  const ::KFMsg::PBBattleScore* p = pbscore_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerBattleScoreReq.pbscore)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBBattleScore*>(
      &::KFMsg::_PBBattleScore_default_instance_);
}
inline ::KFMsg::PBBattleScore* S2SPlayerBattleScoreReq::release_pbscore() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SPlayerBattleScoreReq.pbscore)
  
  ::KFMsg::PBBattleScore* temp = pbscore_;
  pbscore_ = NULL;
  return temp;
}
inline ::KFMsg::PBBattleScore* S2SPlayerBattleScoreReq::mutable_pbscore() {
  
  if (pbscore_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBBattleScore>(GetArenaNoVirtual());
    pbscore_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SPlayerBattleScoreReq.pbscore)
  return pbscore_;
}
inline void S2SPlayerBattleScoreReq::set_allocated_pbscore(::KFMsg::PBBattleScore* pbscore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbscore_);
  }
  if (pbscore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbscore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbscore, submessage_arena);
    }
    
  } else {
    
  }
  pbscore_ = pbscore;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SPlayerBattleScoreReq.pbscore)
}

// -------------------------------------------------------------------

// S2SPlayerBattleScoreAck

// uint64 playerid = 1;
inline void S2SPlayerBattleScoreAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerBattleScoreAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerBattleScoreAck.playerid)
  return playerid_;
}
inline void S2SPlayerBattleScoreAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerBattleScoreAck.playerid)
}

// uint64 roomid = 2;
inline void S2SPlayerBattleScoreAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerBattleScoreAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerBattleScoreAck.roomid)
  return roomid_;
}
inline void S2SPlayerBattleScoreAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerBattleScoreAck.roomid)
}

// -------------------------------------------------------------------

// S2SOnlieQueryBattleScoreReq

// uint64 playerid = 1;
inline void S2SOnlieQueryBattleScoreReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SOnlieQueryBattleScoreReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SOnlieQueryBattleScoreReq.playerid)
  return playerid_;
}
inline void S2SOnlieQueryBattleScoreReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SOnlieQueryBattleScoreReq.playerid)
}

// -------------------------------------------------------------------

// S2STellRoomFinishToBattleShardReq

// uint64 roomid = 1;
inline void S2STellRoomFinishToBattleShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomFinishToBattleShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomFinishToBattleShardReq.roomid)
  return roomid_;
}
inline void S2STellRoomFinishToBattleShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomFinishToBattleShardReq.roomid)
}

// uint64 serverid = 2;
inline void S2STellRoomFinishToBattleShardReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomFinishToBattleShardReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomFinishToBattleShardReq.serverid)
  return serverid_;
}
inline void S2STellRoomFinishToBattleShardReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomFinishToBattleShardReq.serverid)
}

// bytes ip = 3;
inline void S2STellRoomFinishToBattleShardReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STellRoomFinishToBattleShardReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
  return ip_.GetNoArena();
}
inline void S2STellRoomFinishToBattleShardReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
}
#if LANG_CXX11
inline void S2STellRoomFinishToBattleShardReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
}
#endif
inline void S2STellRoomFinishToBattleShardReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
}
inline void S2STellRoomFinishToBattleShardReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
}
inline ::std::string* S2STellRoomFinishToBattleShardReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STellRoomFinishToBattleShardReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STellRoomFinishToBattleShardReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STellRoomFinishToBattleShardReq.ip)
}

// -------------------------------------------------------------------

// S2STellRoomCloseToMatchShardReq

// uint64 matchid = 1;
inline void S2STellRoomCloseToMatchShardReq::clear_matchid() {
  matchid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomCloseToMatchShardReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomCloseToMatchShardReq.matchid)
  return matchid_;
}
inline void S2STellRoomCloseToMatchShardReq::set_matchid(::google::protobuf::uint64 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomCloseToMatchShardReq.matchid)
}

// uint64 roomid = 2;
inline void S2STellRoomCloseToMatchShardReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STellRoomCloseToMatchShardReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STellRoomCloseToMatchShardReq.roomid)
  return roomid_;
}
inline void S2STellRoomCloseToMatchShardReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STellRoomCloseToMatchShardReq.roomid)
}

// -------------------------------------------------------------------

// S2SResetBattleRoomReq

// uint64 roomid = 1;
inline void S2SResetBattleRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SResetBattleRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SResetBattleRoomReq.roomid)
  return roomid_;
}
inline void S2SResetBattleRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SResetBattleRoomReq.roomid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::ServerProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::ServerProtocol>() {
  return ::KFMsg::ServerProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFServerMessage_2eproto
