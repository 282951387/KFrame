// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFMidwareClientMessage.proto

#ifndef PROTOBUF_INCLUDED_KFMidwareClientMessage_2eproto
#define PROTOBUF_INCLUDED_KFMidwareClientMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "KFDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareClientMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFMidwareClientMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFMidwareClientMessage_2eproto
namespace KFMsg {
class MsgLoginAck;
class MsgLoginAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginAckDefaultTypeInternal _MsgLoginAck_default_instance_;
class MsgLoginReq;
class MsgLoginReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginReqDefaultTypeInternal _MsgLoginReq_default_instance_;
class MsgLogoutReq;
class MsgLogoutReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLogoutReqDefaultTypeInternal _MsgLogoutReq_default_instance_;
class MsgQueryBasicAck;
class MsgQueryBasicAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicAckDefaultTypeInternal _MsgQueryBasicAck_default_instance_;
class MsgQueryBasicReq;
class MsgQueryBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicReqDefaultTypeInternal _MsgQueryBasicReq_default_instance_;
class MsgQueryPlayerAck;
class MsgQueryPlayerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerAckDefaultTypeInternal _MsgQueryPlayerAck_default_instance_;
class MsgQueryPlayerReq;
class MsgQueryPlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerReqDefaultTypeInternal _MsgQueryPlayerReq_default_instance_;
class MsgResultDisplay;
class MsgResultDisplayDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgResultDisplayDefaultTypeInternal _MsgResultDisplay_default_instance_;
class MsgSyncAddData;
class MsgSyncAddDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncAddDataDefaultTypeInternal _MsgSyncAddData_default_instance_;
class MsgSyncRemoveData;
class MsgSyncRemoveDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncRemoveDataDefaultTypeInternal _MsgSyncRemoveData_default_instance_;
class MsgSyncUpdateData;
class MsgSyncUpdateDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncUpdateDataDefaultTypeInternal _MsgSyncUpdateData_default_instance_;
class MsgTellBeKick;
class MsgTellBeKickDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellBeKickDefaultTypeInternal _MsgTellBeKick_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginAck* Arena::CreateMaybeMessage<::KFMsg::MsgLoginAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginReq* Arena::CreateMaybeMessage<::KFMsg::MsgLoginReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLogoutReq* Arena::CreateMaybeMessage<::KFMsg::MsgLogoutReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgResultDisplay* Arena::CreateMaybeMessage<::KFMsg::MsgResultDisplay>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncAddData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncAddData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncRemoveData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncRemoveData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncUpdateData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncUpdateData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellBeKick* Arena::CreateMaybeMessage<::KFMsg::MsgTellBeKick>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum MidwareClientProtocol {
  MSG_MIDWARE_CLIENT_BEGIN = 0,
  MSG_RESULT_DISPLAY = 1,
  MSG_LOGIN_REQ = 100,
  MSG_LOGIN_ACK = 101,
  MSG_LOGOUT_REQ = 102,
  MSG_TELL_BE_KICK = 103,
  MSG_LOGIN_ENTER_GAME = 20,
  MSG_SYNC_UPDATE_DATA = 21,
  MSG_SYNC_ADD_DATA = 22,
  MSG_SYNC_REMOVE_DATA = 23,
  MSG_REMOVE_DATA_REQ = 24,
  MSG_QUERY_PLAYER_REQ = 25,
  MSG_QUERY_PLAYER_ACK = 26,
  MSG_QUERY_BASIC_REQ = 27,
  MSG_QUERY_BASIC_ACK = 28,
  MSG_SHOW_REWARD_ELEMENT = 29,
  MidwareClientProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MidwareClientProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool MidwareClientProtocol_IsValid(int value);
const MidwareClientProtocol MidwareClientProtocol_MIN = MSG_MIDWARE_CLIENT_BEGIN;
const MidwareClientProtocol MidwareClientProtocol_MAX = MSG_TELL_BE_KICK;
const int MidwareClientProtocol_ARRAYSIZE = MidwareClientProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* MidwareClientProtocol_descriptor();
inline const ::std::string& MidwareClientProtocol_Name(MidwareClientProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    MidwareClientProtocol_descriptor(), value);
}
inline bool MidwareClientProtocol_Parse(
    const ::std::string& name, MidwareClientProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MidwareClientProtocol>(
    MidwareClientProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgResultDisplay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgResultDisplay) */ {
 public:
  MsgResultDisplay();
  virtual ~MsgResultDisplay();

  MsgResultDisplay(const MsgResultDisplay& from);

  inline MsgResultDisplay& operator=(const MsgResultDisplay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgResultDisplay(MsgResultDisplay&& from) noexcept
    : MsgResultDisplay() {
    *this = ::std::move(from);
  }

  inline MsgResultDisplay& operator=(MsgResultDisplay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResultDisplay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgResultDisplay* internal_default_instance() {
    return reinterpret_cast<const MsgResultDisplay*>(
               &_MsgResultDisplay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgResultDisplay* other);
  friend void swap(MsgResultDisplay& a, MsgResultDisplay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgResultDisplay* New() const final {
    return CreateMaybeMessage<MsgResultDisplay>(NULL);
  }

  MsgResultDisplay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgResultDisplay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgResultDisplay& from);
  void MergeFrom(const MsgResultDisplay& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResultDisplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param(int index) const;
  ::std::string* mutable_param(int index);
  void set_param(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param(int index, ::std::string&& value);
  #endif
  void set_param(int index, const char* value);
  void set_param(int index, const void* value, size_t size);
  ::std::string* add_param();
  void add_param(const ::std::string& value);
  #if LANG_CXX11
  void add_param(::std::string&& value);
  #endif
  void add_param(const char* value);
  void add_param(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgResultDisplay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginReq) */ {
 public:
  MsgLoginReq();
  virtual ~MsgLoginReq();

  MsgLoginReq(const MsgLoginReq& from);

  inline MsgLoginReq& operator=(const MsgLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginReq(MsgLoginReq&& from) noexcept
    : MsgLoginReq() {
    *this = ::std::move(from);
  }

  inline MsgLoginReq& operator=(MsgLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginReq* internal_default_instance() {
    return reinterpret_cast<const MsgLoginReq*>(
               &_MsgLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgLoginReq* other);
  friend void swap(MsgLoginReq& a, MsgLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginReq* New() const final {
    return CreateMaybeMessage<MsgLoginReq>(NULL);
  }

  MsgLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginReq& from);
  void MergeFrom(const MsgLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginAck) */ {
 public:
  MsgLoginAck();
  virtual ~MsgLoginAck();

  MsgLoginAck(const MsgLoginAck& from);

  inline MsgLoginAck& operator=(const MsgLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginAck(MsgLoginAck&& from) noexcept
    : MsgLoginAck() {
    *this = ::std::move(from);
  }

  inline MsgLoginAck& operator=(MsgLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginAck* internal_default_instance() {
    return reinterpret_cast<const MsgLoginAck*>(
               &_MsgLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgLoginAck* other);
  friend void swap(MsgLoginAck& a, MsgLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginAck* New() const final {
    return CreateMaybeMessage<MsgLoginAck>(NULL);
  }

  MsgLoginAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginAck& from);
  void MergeFrom(const MsgLoginAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 1;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 servertime = 2;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLogoutReq) */ {
 public:
  MsgLogoutReq();
  virtual ~MsgLogoutReq();

  MsgLogoutReq(const MsgLogoutReq& from);

  inline MsgLogoutReq& operator=(const MsgLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLogoutReq(MsgLogoutReq&& from) noexcept
    : MsgLogoutReq() {
    *this = ::std::move(from);
  }

  inline MsgLogoutReq& operator=(MsgLogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogoutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLogoutReq* internal_default_instance() {
    return reinterpret_cast<const MsgLogoutReq*>(
               &_MsgLogoutReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgLogoutReq* other);
  friend void swap(MsgLogoutReq& a, MsgLogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLogoutReq* New() const final {
    return CreateMaybeMessage<MsgLogoutReq>(NULL);
  }

  MsgLogoutReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLogoutReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLogoutReq& from);
  void MergeFrom(const MsgLogoutReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellBeKick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellBeKick) */ {
 public:
  MsgTellBeKick();
  virtual ~MsgTellBeKick();

  MsgTellBeKick(const MsgTellBeKick& from);

  inline MsgTellBeKick& operator=(const MsgTellBeKick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellBeKick(MsgTellBeKick&& from) noexcept
    : MsgTellBeKick() {
    *this = ::std::move(from);
  }

  inline MsgTellBeKick& operator=(MsgTellBeKick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellBeKick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellBeKick* internal_default_instance() {
    return reinterpret_cast<const MsgTellBeKick*>(
               &_MsgTellBeKick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgTellBeKick* other);
  friend void swap(MsgTellBeKick& a, MsgTellBeKick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellBeKick* New() const final {
    return CreateMaybeMessage<MsgTellBeKick>(NULL);
  }

  MsgTellBeKick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellBeKick>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellBeKick& from);
  void MergeFrom(const MsgTellBeKick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellBeKick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellBeKick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncUpdateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncUpdateData) */ {
 public:
  MsgSyncUpdateData();
  virtual ~MsgSyncUpdateData();

  MsgSyncUpdateData(const MsgSyncUpdateData& from);

  inline MsgSyncUpdateData& operator=(const MsgSyncUpdateData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncUpdateData(MsgSyncUpdateData&& from) noexcept
    : MsgSyncUpdateData() {
    *this = ::std::move(from);
  }

  inline MsgSyncUpdateData& operator=(MsgSyncUpdateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncUpdateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncUpdateData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncUpdateData*>(
               &_MsgSyncUpdateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgSyncUpdateData* other);
  friend void swap(MsgSyncUpdateData& a, MsgSyncUpdateData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncUpdateData* New() const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(NULL);
  }

  MsgSyncUpdateData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncUpdateData& from);
  void MergeFrom(const MsgSyncUpdateData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncUpdateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncUpdateData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncAddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncAddData) */ {
 public:
  MsgSyncAddData();
  virtual ~MsgSyncAddData();

  MsgSyncAddData(const MsgSyncAddData& from);

  inline MsgSyncAddData& operator=(const MsgSyncAddData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncAddData(MsgSyncAddData&& from) noexcept
    : MsgSyncAddData() {
    *this = ::std::move(from);
  }

  inline MsgSyncAddData& operator=(MsgSyncAddData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncAddData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncAddData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncAddData*>(
               &_MsgSyncAddData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgSyncAddData* other);
  friend void swap(MsgSyncAddData& a, MsgSyncAddData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncAddData* New() const final {
    return CreateMaybeMessage<MsgSyncAddData>(NULL);
  }

  MsgSyncAddData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncAddData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncAddData& from);
  void MergeFrom(const MsgSyncAddData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncAddData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncAddData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncRemoveData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncRemoveData) */ {
 public:
  MsgSyncRemoveData();
  virtual ~MsgSyncRemoveData();

  MsgSyncRemoveData(const MsgSyncRemoveData& from);

  inline MsgSyncRemoveData& operator=(const MsgSyncRemoveData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncRemoveData(MsgSyncRemoveData&& from) noexcept
    : MsgSyncRemoveData() {
    *this = ::std::move(from);
  }

  inline MsgSyncRemoveData& operator=(MsgSyncRemoveData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncRemoveData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncRemoveData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncRemoveData*>(
               &_MsgSyncRemoveData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgSyncRemoveData* other);
  friend void swap(MsgSyncRemoveData& a, MsgSyncRemoveData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncRemoveData* New() const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(NULL);
  }

  MsgSyncRemoveData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncRemoveData& from);
  void MergeFrom(const MsgSyncRemoveData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncRemoveData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncRemoveData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicReq) */ {
 public:
  MsgQueryBasicReq();
  virtual ~MsgQueryBasicReq();

  MsgQueryBasicReq(const MsgQueryBasicReq& from);

  inline MsgQueryBasicReq& operator=(const MsgQueryBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicReq(MsgQueryBasicReq&& from) noexcept
    : MsgQueryBasicReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicReq& operator=(MsgQueryBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicReq*>(
               &_MsgQueryBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgQueryBasicReq* other);
  friend void swap(MsgQueryBasicReq& a, MsgQueryBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicReq* New() const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(NULL);
  }

  MsgQueryBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicReq& from);
  void MergeFrom(const MsgQueryBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicAck) */ {
 public:
  MsgQueryBasicAck();
  virtual ~MsgQueryBasicAck();

  MsgQueryBasicAck(const MsgQueryBasicAck& from);

  inline MsgQueryBasicAck& operator=(const MsgQueryBasicAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicAck(MsgQueryBasicAck&& from) noexcept
    : MsgQueryBasicAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicAck& operator=(MsgQueryBasicAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicAck*>(
               &_MsgQueryBasicAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MsgQueryBasicAck* other);
  friend void swap(MsgQueryBasicAck& a, MsgQueryBasicAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicAck* New() const final {
    return CreateMaybeMessage<MsgQueryBasicAck>(NULL);
  }

  MsgQueryBasicAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicAck& from);
  void MergeFrom(const MsgQueryBasicAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerReq) */ {
 public:
  MsgQueryPlayerReq();
  virtual ~MsgQueryPlayerReq();

  MsgQueryPlayerReq(const MsgQueryPlayerReq& from);

  inline MsgQueryPlayerReq& operator=(const MsgQueryPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerReq(MsgQueryPlayerReq&& from) noexcept
    : MsgQueryPlayerReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerReq& operator=(MsgQueryPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerReq*>(
               &_MsgQueryPlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(MsgQueryPlayerReq* other);
  friend void swap(MsgQueryPlayerReq& a, MsgQueryPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerReq* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(NULL);
  }

  MsgQueryPlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerReq& from);
  void MergeFrom(const MsgQueryPlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerAck) */ {
 public:
  MsgQueryPlayerAck();
  virtual ~MsgQueryPlayerAck();

  MsgQueryPlayerAck(const MsgQueryPlayerAck& from);

  inline MsgQueryPlayerAck& operator=(const MsgQueryPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerAck(MsgQueryPlayerAck&& from) noexcept
    : MsgQueryPlayerAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerAck& operator=(MsgQueryPlayerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerAck*>(
               &_MsgQueryPlayerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(MsgQueryPlayerAck* other);
  friend void swap(MsgQueryPlayerAck& a, MsgQueryPlayerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerAck* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(NULL);
  }

  MsgQueryPlayerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerAck& from);
  void MergeFrom(const MsgQueryPlayerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareClientMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgResultDisplay

// uint32 result = 1;
inline void MsgResultDisplay::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 MsgResultDisplay::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.result)
  return result_;
}
inline void MsgResultDisplay::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.result)
}

// repeated bytes param = 2;
inline int MsgResultDisplay::param_size() const {
  return param_.size();
}
inline void MsgResultDisplay::clear_param() {
  param_.Clear();
}
inline const ::std::string& MsgResultDisplay::param(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.param)
  return param_.Get(index);
}
inline ::std::string* MsgResultDisplay::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Mutable(index);
}
inline void MsgResultDisplay::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgResultDisplay::set_param(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgResultDisplay::set_param(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::set_param(int index, const void* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgResultDisplay.param)
}
inline ::std::string* MsgResultDisplay::add_param() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Add();
}
inline void MsgResultDisplay::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#if LANG_CXX11
inline void MsgResultDisplay::add_param(::std::string&& value) {
  param_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#endif
inline void MsgResultDisplay::add_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::add_param(const void* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgResultDisplay.param)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgResultDisplay::param() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgResultDisplay.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgResultDisplay::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgResultDisplay.param)
  return &param_;
}

// -------------------------------------------------------------------

// MsgLoginReq

// bytes token = 1;
inline void MsgLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.token)
  return token_.GetNoArena();
}
inline void MsgLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.token)
}
#if LANG_CXX11
inline void MsgLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginReq.token)
}
#endif
inline void MsgLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginReq.token)
}
inline void MsgLoginReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginReq.token)
}
inline ::std::string* MsgLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginReq.token)
}

// uint64 accountid = 2;
inline void MsgLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.accountid)
  return accountid_;
}
inline void MsgLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.accountid)
}

// bytes version = 3;
inline void MsgLoginReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.version)
  return version_.GetNoArena();
}
inline void MsgLoginReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.version)
}
#if LANG_CXX11
inline void MsgLoginReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginReq.version)
}
#endif
inline void MsgLoginReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginReq.version)
}
inline void MsgLoginReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginReq.version)
}
inline ::std::string* MsgLoginReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginReq.version)
}

// -------------------------------------------------------------------

// MsgLoginAck

// .KFMsg.PBObject playerdata = 1;
inline bool MsgLoginAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgLoginAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& MsgLoginAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgLoginAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgLoginAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginAck.playerdata)
  return playerdata_;
}
inline void MsgLoginAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginAck.playerdata)
}

// uint64 servertime = 2;
inline void MsgLoginAck::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginAck::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.servertime)
  return servertime_;
}
inline void MsgLoginAck::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginAck.servertime)
}

// -------------------------------------------------------------------

// MsgLogoutReq

// -------------------------------------------------------------------

// MsgTellBeKick

// uint32 type = 1;
inline void MsgTellBeKick::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgTellBeKick::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellBeKick.type)
  return type_;
}
inline void MsgTellBeKick::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellBeKick.type)
}

// -------------------------------------------------------------------

// MsgSyncUpdateData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncUpdateData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncUpdateData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncUpdateData.pbdata)
  return pbdata_;
}
inline void MsgSyncUpdateData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncUpdateData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncAddData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncAddData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncAddData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncAddData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncAddData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncAddData.pbdata)
  return pbdata_;
}
inline void MsgSyncAddData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncAddData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncRemoveData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncRemoveData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncRemoveData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncRemoveData.pbdata)
  return pbdata_;
}
inline void MsgSyncRemoveData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncRemoveData.pbdata)
}

// -------------------------------------------------------------------

// MsgQueryBasicReq

// bytes name = 1;
inline void MsgQueryBasicReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryBasicReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicReq.name)
  return name_.GetNoArena();
}
inline void MsgQueryBasicReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryBasicReq.name)
}
#if LANG_CXX11
inline void MsgQueryBasicReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryBasicReq.name)
}
#endif
inline void MsgQueryBasicReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryBasicReq.name)
}
inline void MsgQueryBasicReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryBasicReq.name)
}
inline ::std::string* MsgQueryBasicReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryBasicReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryBasicReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicReq.name)
}

// -------------------------------------------------------------------

// MsgQueryBasicAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryBasicAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryBasicAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryBasicAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryBasicAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryBasicAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicAck.player)
  return player_;
}
inline void MsgQueryBasicAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicAck.player)
}

// -------------------------------------------------------------------

// MsgQueryPlayerReq

// uint64 playerid = 1;
inline void MsgQueryPlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryPlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerReq.playerid)
  return playerid_;
}
inline void MsgQueryPlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryPlayerReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryPlayerAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryPlayerAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryPlayerAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryPlayerAck.player)
  return player_;
}
inline void MsgQueryPlayerAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryPlayerAck.player)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::MidwareClientProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::MidwareClientProtocol>() {
  return ::KFMsg::MidwareClientProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFMidwareClientMessage_2eproto
