// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFMidwareServerMessage.proto

#ifndef PROTOBUF_INCLUDED_KFMidwareServerMessage_2eproto
#define PROTOBUF_INCLUDED_KFMidwareServerMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "KFDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareServerMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFMidwareServerMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[22];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFMidwareServerMessage_2eproto
namespace KFMsg {
class PBLoginData;
class PBLoginDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBLoginDataDefaultTypeInternal _PBLoginData_default_instance_;
class PBLoginData_ChanneldataEntry_DoNotUse;
class PBLoginData_ChanneldataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBLoginData_ChanneldataEntry_DoNotUseDefaultTypeInternal _PBLoginData_ChanneldataEntry_DoNotUse_default_instance_;
class PBZoneData;
class PBZoneDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBZoneDataDefaultTypeInternal _PBZoneData_default_instance_;
class S2SBroadcastToGame;
class S2SBroadcastToGameDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGameDefaultTypeInternal _S2SBroadcastToGame_default_instance_;
class S2SBroadcastToGate;
class S2SBroadcastToGateDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGateDefaultTypeInternal _S2SBroadcastToGate_default_instance_;
class S2SDisconnectToGameReq;
class S2SDisconnectToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDisconnectToGameReqDefaultTypeInternal _S2SDisconnectToGameReq_default_instance_;
class S2SDisconnectZoneToWorldReq;
class S2SDisconnectZoneToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDisconnectZoneToWorldReqDefaultTypeInternal _S2SDisconnectZoneToWorldReq_default_instance_;
class S2SEnterToGateAck;
class S2SEnterToGateAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SEnterToGateAckDefaultTypeInternal _S2SEnterToGateAck_default_instance_;
class S2SKickPlayerToGameReq;
class S2SKickPlayerToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickPlayerToGameReqDefaultTypeInternal _S2SKickPlayerToGameReq_default_instance_;
class S2SKickPlayerToGateReq;
class S2SKickPlayerToGateReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickPlayerToGateReqDefaultTypeInternal _S2SKickPlayerToGateReq_default_instance_;
class S2SLoginToGameReq;
class S2SLoginToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToGameReqDefaultTypeInternal _S2SLoginToGameReq_default_instance_;
class S2SLoginToGateAck;
class S2SLoginToGateAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToGateAckDefaultTypeInternal _S2SLoginToGateAck_default_instance_;
class S2SLoginToLoginAck;
class S2SLoginToLoginAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToLoginAckDefaultTypeInternal _S2SLoginToLoginAck_default_instance_;
class S2SLoginToLoginReq;
class S2SLoginToLoginReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToLoginReqDefaultTypeInternal _S2SLoginToLoginReq_default_instance_;
class S2SLoginToWorldReq;
class S2SLoginToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToWorldReqDefaultTypeInternal _S2SLoginToWorldReq_default_instance_;
class S2SLogoutToGameReq;
class S2SLogoutToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLogoutToGameReqDefaultTypeInternal _S2SLogoutToGameReq_default_instance_;
class S2SPlayerEnterToWorldReq;
class S2SPlayerEnterToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerEnterToWorldReqDefaultTypeInternal _S2SPlayerEnterToWorldReq_default_instance_;
class S2SPlayerLeaveToWorldReq;
class S2SPlayerLeaveToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveToWorldReqDefaultTypeInternal _S2SPlayerLeaveToWorldReq_default_instance_;
class S2SPlayerSyncToWorldReq;
class S2SPlayerSyncToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerSyncToWorldReqDefaultTypeInternal _S2SPlayerSyncToWorldReq_default_instance_;
class S2STransmitToPlayer;
class S2STransmitToPlayerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitToPlayerDefaultTypeInternal _S2STransmitToPlayer_default_instance_;
class S2SUpdateZoneToLoginReq;
class S2SUpdateZoneToLoginReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateZoneToLoginReqDefaultTypeInternal _S2SUpdateZoneToLoginReq_default_instance_;
class S2SUpdateZoneToWorldReq;
class S2SUpdateZoneToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateZoneToWorldReqDefaultTypeInternal _S2SUpdateZoneToWorldReq_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::PBLoginData* Arena::CreateMaybeMessage<::KFMsg::PBLoginData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBLoginData_ChanneldataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBZoneData* Arena::CreateMaybeMessage<::KFMsg::PBZoneData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGame* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGame>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGate* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGate>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDisconnectToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SDisconnectToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDisconnectZoneToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SDisconnectZoneToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SEnterToGateAck* Arena::CreateMaybeMessage<::KFMsg::S2SEnterToGateAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickPlayerToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickPlayerToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickPlayerToGateReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickPlayerToGateReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToGateAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToGateAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToLoginAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToLoginAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToLoginReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToLoginReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLogoutToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SLogoutToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerEnterToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerEnterToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerSyncToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerSyncToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitToPlayer* Arena::CreateMaybeMessage<::KFMsg::S2STransmitToPlayer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateZoneToLoginReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateZoneToLoginReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateZoneToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateZoneToWorldReq>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum MidwareServerProtocol {
  S2S_MIDWARE_SERVER_PROTOCOL_BEGIN = 0,
  S2S_UPDATE_ZONE_TO_LOGIN_REQ = 20001,
  S2S_UPDATE_ZONE_TO_WORLD_REQ = 20002,
  S2S_DISCONNECT_ZONE_TO_WORLD_REQ = 20003,
  S2S_LOGIN_TO_LOGIN_REQ = 20101,
  S2S_LOGIN_TO_GATE_ACK = 20102,
  S2S_LOGIN_TO_WORLD_REQ = 20103,
  S2S_LOGIN_TO_LOGIN_ACK = 20104,
  S2S_LOGIN_TO_GAME_REQ = 20105,
  S2S_LOGOUT_TO_GAME_REQ = 20106,
  S2S_DISCONNEC_TO_GAME_REQ = 20107,
  S2S_ENTER_TO_GATE_ACK = 20108,
  S2S_PLAYER_SYNC_TO_WORLD_REQ = 20201,
  S2S_PLAYER_ENTER_TO_WORLD_REQ = 20202,
  S2S_PLAYER_LEAVE_TO_WORLD_REQ = 20203,
  S2S_KICK_PLAYER_TO_GAME_REQ = 20204,
  S2S_KICK_PLAYER_TO_GATE_REQ = 20205,
  S2S_BROADCAST_TO_GAME = 20301,
  S2S_BROADCAST_TO_GATE = 20302,
  S2S_TRANSMIT_TO_PLAYER = 20303,
  MidwareServerProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MidwareServerProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool MidwareServerProtocol_IsValid(int value);
const MidwareServerProtocol MidwareServerProtocol_MIN = S2S_MIDWARE_SERVER_PROTOCOL_BEGIN;
const MidwareServerProtocol MidwareServerProtocol_MAX = S2S_TRANSMIT_TO_PLAYER;
const int MidwareServerProtocol_ARRAYSIZE = MidwareServerProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* MidwareServerProtocol_descriptor();
inline const ::std::string& MidwareServerProtocol_Name(MidwareServerProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    MidwareServerProtocol_descriptor(), value);
}
inline bool MidwareServerProtocol_Parse(
    const ::std::string& name, MidwareServerProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MidwareServerProtocol>(
    MidwareServerProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT PBZoneData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBZoneData) */ {
 public:
  PBZoneData();
  virtual ~PBZoneData();

  PBZoneData(const PBZoneData& from);

  inline PBZoneData& operator=(const PBZoneData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBZoneData(PBZoneData&& from) noexcept
    : PBZoneData() {
    *this = ::std::move(from);
  }

  inline PBZoneData& operator=(PBZoneData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBZoneData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBZoneData* internal_default_instance() {
    return reinterpret_cast<const PBZoneData*>(
               &_PBZoneData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PBZoneData* other);
  friend void swap(PBZoneData& a, PBZoneData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBZoneData* New() const final {
    return CreateMaybeMessage<PBZoneData>(NULL);
  }

  PBZoneData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBZoneData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBZoneData& from);
  void MergeFrom(const PBZoneData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBZoneData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBZoneData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateZoneToLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateZoneToLoginReq) */ {
 public:
  S2SUpdateZoneToLoginReq();
  virtual ~S2SUpdateZoneToLoginReq();

  S2SUpdateZoneToLoginReq(const S2SUpdateZoneToLoginReq& from);

  inline S2SUpdateZoneToLoginReq& operator=(const S2SUpdateZoneToLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateZoneToLoginReq(S2SUpdateZoneToLoginReq&& from) noexcept
    : S2SUpdateZoneToLoginReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateZoneToLoginReq& operator=(S2SUpdateZoneToLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateZoneToLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateZoneToLoginReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateZoneToLoginReq*>(
               &_S2SUpdateZoneToLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(S2SUpdateZoneToLoginReq* other);
  friend void swap(S2SUpdateZoneToLoginReq& a, S2SUpdateZoneToLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateZoneToLoginReq* New() const final {
    return CreateMaybeMessage<S2SUpdateZoneToLoginReq>(NULL);
  }

  S2SUpdateZoneToLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateZoneToLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateZoneToLoginReq& from);
  void MergeFrom(const S2SUpdateZoneToLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateZoneToLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBZoneData zonedata = 1;
  bool has_zonedata() const;
  void clear_zonedata();
  static const int kZonedataFieldNumber = 1;
  private:
  const ::KFMsg::PBZoneData& _internal_zonedata() const;
  public:
  const ::KFMsg::PBZoneData& zonedata() const;
  ::KFMsg::PBZoneData* release_zonedata();
  ::KFMsg::PBZoneData* mutable_zonedata();
  void set_allocated_zonedata(::KFMsg::PBZoneData* zonedata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateZoneToLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBZoneData* zonedata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateZoneToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateZoneToWorldReq) */ {
 public:
  S2SUpdateZoneToWorldReq();
  virtual ~S2SUpdateZoneToWorldReq();

  S2SUpdateZoneToWorldReq(const S2SUpdateZoneToWorldReq& from);

  inline S2SUpdateZoneToWorldReq& operator=(const S2SUpdateZoneToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateZoneToWorldReq(S2SUpdateZoneToWorldReq&& from) noexcept
    : S2SUpdateZoneToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateZoneToWorldReq& operator=(S2SUpdateZoneToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateZoneToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateZoneToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateZoneToWorldReq*>(
               &_S2SUpdateZoneToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(S2SUpdateZoneToWorldReq* other);
  friend void swap(S2SUpdateZoneToWorldReq& a, S2SUpdateZoneToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateZoneToWorldReq* New() const final {
    return CreateMaybeMessage<S2SUpdateZoneToWorldReq>(NULL);
  }

  S2SUpdateZoneToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateZoneToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateZoneToWorldReq& from);
  void MergeFrom(const S2SUpdateZoneToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateZoneToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBZoneData zonedata = 1;
  bool has_zonedata() const;
  void clear_zonedata();
  static const int kZonedataFieldNumber = 1;
  private:
  const ::KFMsg::PBZoneData& _internal_zonedata() const;
  public:
  const ::KFMsg::PBZoneData& zonedata() const;
  ::KFMsg::PBZoneData* release_zonedata();
  ::KFMsg::PBZoneData* mutable_zonedata();
  void set_allocated_zonedata(::KFMsg::PBZoneData* zonedata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateZoneToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBZoneData* zonedata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDisconnectZoneToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDisconnectZoneToWorldReq) */ {
 public:
  S2SDisconnectZoneToWorldReq();
  virtual ~S2SDisconnectZoneToWorldReq();

  S2SDisconnectZoneToWorldReq(const S2SDisconnectZoneToWorldReq& from);

  inline S2SDisconnectZoneToWorldReq& operator=(const S2SDisconnectZoneToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDisconnectZoneToWorldReq(S2SDisconnectZoneToWorldReq&& from) noexcept
    : S2SDisconnectZoneToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SDisconnectZoneToWorldReq& operator=(S2SDisconnectZoneToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDisconnectZoneToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDisconnectZoneToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SDisconnectZoneToWorldReq*>(
               &_S2SDisconnectZoneToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(S2SDisconnectZoneToWorldReq* other);
  friend void swap(S2SDisconnectZoneToWorldReq& a, S2SDisconnectZoneToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDisconnectZoneToWorldReq* New() const final {
    return CreateMaybeMessage<S2SDisconnectZoneToWorldReq>(NULL);
  }

  S2SDisconnectZoneToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDisconnectZoneToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDisconnectZoneToWorldReq& from);
  void MergeFrom(const S2SDisconnectZoneToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDisconnectZoneToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDisconnectZoneToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 appid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToLoginReq) */ {
 public:
  S2SLoginToLoginReq();
  virtual ~S2SLoginToLoginReq();

  S2SLoginToLoginReq(const S2SLoginToLoginReq& from);

  inline S2SLoginToLoginReq& operator=(const S2SLoginToLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToLoginReq(S2SLoginToLoginReq&& from) noexcept
    : S2SLoginToLoginReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginToLoginReq& operator=(S2SLoginToLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToLoginReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToLoginReq*>(
               &_S2SLoginToLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(S2SLoginToLoginReq* other);
  friend void swap(S2SLoginToLoginReq& a, S2SLoginToLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToLoginReq* New() const final {
    return CreateMaybeMessage<S2SLoginToLoginReq>(NULL);
  }

  S2SLoginToLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToLoginReq& from);
  void MergeFrom(const S2SLoginToLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 accountid = 3;
  void clear_accountid();
  static const int kAccountidFieldNumber = 3;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 4;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToGateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToGateAck) */ {
 public:
  S2SLoginToGateAck();
  virtual ~S2SLoginToGateAck();

  S2SLoginToGateAck(const S2SLoginToGateAck& from);

  inline S2SLoginToGateAck& operator=(const S2SLoginToGateAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToGateAck(S2SLoginToGateAck&& from) noexcept
    : S2SLoginToGateAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginToGateAck& operator=(S2SLoginToGateAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToGateAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToGateAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToGateAck*>(
               &_S2SLoginToGateAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(S2SLoginToGateAck* other);
  friend void swap(S2SLoginToGateAck& a, S2SLoginToGateAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToGateAck* New() const final {
    return CreateMaybeMessage<S2SLoginToGateAck>(NULL);
  }

  S2SLoginToGateAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToGateAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToGateAck& from);
  void MergeFrom(const S2SLoginToGateAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToGateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 bantime = 4;
  void clear_bantime();
  static const int kBantimeFieldNumber = 4;
  ::google::protobuf::uint64 bantime() const;
  void set_bantime(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToGateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 bantime_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBLoginData_ChanneldataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBLoginData_ChanneldataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBLoginData_ChanneldataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBLoginData_ChanneldataEntry_DoNotUse();
  PBLoginData_ChanneldataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBLoginData_ChanneldataEntry_DoNotUse& other);
  static const PBLoginData_ChanneldataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBLoginData_ChanneldataEntry_DoNotUse*>(&_PBLoginData_ChanneldataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBLoginData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBLoginData) */ {
 public:
  PBLoginData();
  virtual ~PBLoginData();

  PBLoginData(const PBLoginData& from);

  inline PBLoginData& operator=(const PBLoginData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBLoginData(PBLoginData&& from) noexcept
    : PBLoginData() {
    *this = ::std::move(from);
  }

  inline PBLoginData& operator=(PBLoginData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLoginData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBLoginData* internal_default_instance() {
    return reinterpret_cast<const PBLoginData*>(
               &_PBLoginData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PBLoginData* other);
  friend void swap(PBLoginData& a, PBLoginData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBLoginData* New() const final {
    return CreateMaybeMessage<PBLoginData>(NULL);
  }

  PBLoginData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBLoginData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBLoginData& from);
  void MergeFrom(const PBLoginData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBLoginData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> channeldata = 8;
  int channeldata_size() const;
  void clear_channeldata();
  static const int kChanneldataFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      channeldata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_channeldata();

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes account = 5;
  void clear_account();
  static const int kAccountFieldNumber = 5;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // uint64 gateid = 2;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::uint64 gateid() const;
  void set_gateid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 accountid = 6;
  void clear_accountid();
  static const int kAccountidFieldNumber = 6;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 playerid = 7;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 7;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 channel = 4;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBLoginData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBLoginData_ChanneldataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > channeldata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::uint64 gateid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToWorldReq) */ {
 public:
  S2SLoginToWorldReq();
  virtual ~S2SLoginToWorldReq();

  S2SLoginToWorldReq(const S2SLoginToWorldReq& from);

  inline S2SLoginToWorldReq& operator=(const S2SLoginToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToWorldReq(S2SLoginToWorldReq&& from) noexcept
    : S2SLoginToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginToWorldReq& operator=(S2SLoginToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToWorldReq*>(
               &_S2SLoginToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(S2SLoginToWorldReq* other);
  friend void swap(S2SLoginToWorldReq& a, S2SLoginToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToWorldReq* New() const final {
    return CreateMaybeMessage<S2SLoginToWorldReq>(NULL);
  }

  S2SLoginToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToWorldReq& from);
  void MergeFrom(const S2SLoginToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToLoginAck) */ {
 public:
  S2SLoginToLoginAck();
  virtual ~S2SLoginToLoginAck();

  S2SLoginToLoginAck(const S2SLoginToLoginAck& from);

  inline S2SLoginToLoginAck& operator=(const S2SLoginToLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToLoginAck(S2SLoginToLoginAck&& from) noexcept
    : S2SLoginToLoginAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginToLoginAck& operator=(S2SLoginToLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToLoginAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToLoginAck*>(
               &_S2SLoginToLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(S2SLoginToLoginAck* other);
  friend void swap(S2SLoginToLoginAck& a, S2SLoginToLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToLoginAck* New() const final {
    return CreateMaybeMessage<S2SLoginToLoginAck>(NULL);
  }

  S2SLoginToLoginAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToLoginAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToLoginAck& from);
  void MergeFrom(const S2SLoginToLoginAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gateid = 2;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::uint64 gateid() const;
  void set_gateid(::google::protobuf::uint64 value);

  // uint64 accountid = 3;
  void clear_accountid();
  static const int kAccountidFieldNumber = 3;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 4;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gateid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToGameReq) */ {
 public:
  S2SLoginToGameReq();
  virtual ~S2SLoginToGameReq();

  S2SLoginToGameReq(const S2SLoginToGameReq& from);

  inline S2SLoginToGameReq& operator=(const S2SLoginToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToGameReq(S2SLoginToGameReq&& from) noexcept
    : S2SLoginToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginToGameReq& operator=(S2SLoginToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToGameReq*>(
               &_S2SLoginToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(S2SLoginToGameReq* other);
  friend void swap(S2SLoginToGameReq& a, S2SLoginToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToGameReq* New() const final {
    return CreateMaybeMessage<S2SLoginToGameReq>(NULL);
  }

  S2SLoginToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToGameReq& from);
  void MergeFrom(const S2SLoginToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SEnterToGateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SEnterToGateAck) */ {
 public:
  S2SEnterToGateAck();
  virtual ~S2SEnterToGateAck();

  S2SEnterToGateAck(const S2SEnterToGateAck& from);

  inline S2SEnterToGateAck& operator=(const S2SEnterToGateAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SEnterToGateAck(S2SEnterToGateAck&& from) noexcept
    : S2SEnterToGateAck() {
    *this = ::std::move(from);
  }

  inline S2SEnterToGateAck& operator=(S2SEnterToGateAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SEnterToGateAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SEnterToGateAck* internal_default_instance() {
    return reinterpret_cast<const S2SEnterToGateAck*>(
               &_S2SEnterToGateAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(S2SEnterToGateAck* other);
  friend void swap(S2SEnterToGateAck& a, S2SEnterToGateAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SEnterToGateAck* New() const final {
    return CreateMaybeMessage<S2SEnterToGateAck>(NULL);
  }

  S2SEnterToGateAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SEnterToGateAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SEnterToGateAck& from);
  void MergeFrom(const S2SEnterToGateAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SEnterToGateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // .KFMsg.PBObject playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 servertime = 3;
  void clear_servertime();
  static const int kServertimeFieldNumber = 3;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SEnterToGateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLogoutToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLogoutToGameReq) */ {
 public:
  S2SLogoutToGameReq();
  virtual ~S2SLogoutToGameReq();

  S2SLogoutToGameReq(const S2SLogoutToGameReq& from);

  inline S2SLogoutToGameReq& operator=(const S2SLogoutToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLogoutToGameReq(S2SLogoutToGameReq&& from) noexcept
    : S2SLogoutToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SLogoutToGameReq& operator=(S2SLogoutToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLogoutToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLogoutToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SLogoutToGameReq*>(
               &_S2SLogoutToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(S2SLogoutToGameReq* other);
  friend void swap(S2SLogoutToGameReq& a, S2SLogoutToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLogoutToGameReq* New() const final {
    return CreateMaybeMessage<S2SLogoutToGameReq>(NULL);
  }

  S2SLogoutToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLogoutToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLogoutToGameReq& from);
  void MergeFrom(const S2SLogoutToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLogoutToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLogoutToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDisconnectToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDisconnectToGameReq) */ {
 public:
  S2SDisconnectToGameReq();
  virtual ~S2SDisconnectToGameReq();

  S2SDisconnectToGameReq(const S2SDisconnectToGameReq& from);

  inline S2SDisconnectToGameReq& operator=(const S2SDisconnectToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDisconnectToGameReq(S2SDisconnectToGameReq&& from) noexcept
    : S2SDisconnectToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SDisconnectToGameReq& operator=(S2SDisconnectToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDisconnectToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDisconnectToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SDisconnectToGameReq*>(
               &_S2SDisconnectToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(S2SDisconnectToGameReq* other);
  friend void swap(S2SDisconnectToGameReq& a, S2SDisconnectToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDisconnectToGameReq* New() const final {
    return CreateMaybeMessage<S2SDisconnectToGameReq>(NULL);
  }

  S2SDisconnectToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDisconnectToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDisconnectToGameReq& from);
  void MergeFrom(const S2SDisconnectToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDisconnectToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDisconnectToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerEnterToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerEnterToWorldReq) */ {
 public:
  S2SPlayerEnterToWorldReq();
  virtual ~S2SPlayerEnterToWorldReq();

  S2SPlayerEnterToWorldReq(const S2SPlayerEnterToWorldReq& from);

  inline S2SPlayerEnterToWorldReq& operator=(const S2SPlayerEnterToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerEnterToWorldReq(S2SPlayerEnterToWorldReq&& from) noexcept
    : S2SPlayerEnterToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerEnterToWorldReq& operator=(S2SPlayerEnterToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerEnterToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerEnterToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerEnterToWorldReq*>(
               &_S2SPlayerEnterToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(S2SPlayerEnterToWorldReq* other);
  friend void swap(S2SPlayerEnterToWorldReq& a, S2SPlayerEnterToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerEnterToWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerEnterToWorldReq>(NULL);
  }

  S2SPlayerEnterToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerEnterToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerEnterToWorldReq& from);
  void MergeFrom(const S2SPlayerEnterToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerEnterToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerEnterToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveToWorldReq) */ {
 public:
  S2SPlayerLeaveToWorldReq();
  virtual ~S2SPlayerLeaveToWorldReq();

  S2SPlayerLeaveToWorldReq(const S2SPlayerLeaveToWorldReq& from);

  inline S2SPlayerLeaveToWorldReq& operator=(const S2SPlayerLeaveToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveToWorldReq(S2SPlayerLeaveToWorldReq&& from) noexcept
    : S2SPlayerLeaveToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveToWorldReq& operator=(S2SPlayerLeaveToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveToWorldReq*>(
               &_S2SPlayerLeaveToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(S2SPlayerLeaveToWorldReq* other);
  friend void swap(S2SPlayerLeaveToWorldReq& a, S2SPlayerLeaveToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveToWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveToWorldReq>(NULL);
  }

  S2SPlayerLeaveToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveToWorldReq& from);
  void MergeFrom(const S2SPlayerLeaveToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerSyncToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerSyncToWorldReq) */ {
 public:
  S2SPlayerSyncToWorldReq();
  virtual ~S2SPlayerSyncToWorldReq();

  S2SPlayerSyncToWorldReq(const S2SPlayerSyncToWorldReq& from);

  inline S2SPlayerSyncToWorldReq& operator=(const S2SPlayerSyncToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerSyncToWorldReq(S2SPlayerSyncToWorldReq&& from) noexcept
    : S2SPlayerSyncToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerSyncToWorldReq& operator=(S2SPlayerSyncToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerSyncToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerSyncToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerSyncToWorldReq*>(
               &_S2SPlayerSyncToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(S2SPlayerSyncToWorldReq* other);
  friend void swap(S2SPlayerSyncToWorldReq& a, S2SPlayerSyncToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerSyncToWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerSyncToWorldReq>(NULL);
  }

  S2SPlayerSyncToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerSyncToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerSyncToWorldReq& from);
  void MergeFrom(const S2SPlayerSyncToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerSyncToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 playerid = 1;
  int playerid_size() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid(int index) const;
  void set_playerid(int index, ::google::protobuf::uint64 value);
  void add_playerid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      playerid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_playerid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerSyncToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > playerid_;
  mutable int _playerid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickPlayerToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickPlayerToGameReq) */ {
 public:
  S2SKickPlayerToGameReq();
  virtual ~S2SKickPlayerToGameReq();

  S2SKickPlayerToGameReq(const S2SKickPlayerToGameReq& from);

  inline S2SKickPlayerToGameReq& operator=(const S2SKickPlayerToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickPlayerToGameReq(S2SKickPlayerToGameReq&& from) noexcept
    : S2SKickPlayerToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SKickPlayerToGameReq& operator=(S2SKickPlayerToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickPlayerToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickPlayerToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickPlayerToGameReq*>(
               &_S2SKickPlayerToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(S2SKickPlayerToGameReq* other);
  friend void swap(S2SKickPlayerToGameReq& a, S2SKickPlayerToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickPlayerToGameReq* New() const final {
    return CreateMaybeMessage<S2SKickPlayerToGameReq>(NULL);
  }

  S2SKickPlayerToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickPlayerToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickPlayerToGameReq& from);
  void MergeFrom(const S2SKickPlayerToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickPlayerToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickPlayerToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickPlayerToGateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickPlayerToGateReq) */ {
 public:
  S2SKickPlayerToGateReq();
  virtual ~S2SKickPlayerToGateReq();

  S2SKickPlayerToGateReq(const S2SKickPlayerToGateReq& from);

  inline S2SKickPlayerToGateReq& operator=(const S2SKickPlayerToGateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickPlayerToGateReq(S2SKickPlayerToGateReq&& from) noexcept
    : S2SKickPlayerToGateReq() {
    *this = ::std::move(from);
  }

  inline S2SKickPlayerToGateReq& operator=(S2SKickPlayerToGateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickPlayerToGateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickPlayerToGateReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickPlayerToGateReq*>(
               &_S2SKickPlayerToGateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(S2SKickPlayerToGateReq* other);
  friend void swap(S2SKickPlayerToGateReq& a, S2SKickPlayerToGateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickPlayerToGateReq* New() const final {
    return CreateMaybeMessage<S2SKickPlayerToGateReq>(NULL);
  }

  S2SKickPlayerToGateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickPlayerToGateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickPlayerToGateReq& from);
  void MergeFrom(const S2SKickPlayerToGateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickPlayerToGateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickPlayerToGateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGame) */ {
 public:
  S2SBroadcastToGame();
  virtual ~S2SBroadcastToGame();

  S2SBroadcastToGame(const S2SBroadcastToGame& from);

  inline S2SBroadcastToGame& operator=(const S2SBroadcastToGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGame(S2SBroadcastToGame&& from) noexcept
    : S2SBroadcastToGame() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGame& operator=(S2SBroadcastToGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGame* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGame*>(
               &_S2SBroadcastToGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(S2SBroadcastToGame* other);
  friend void swap(S2SBroadcastToGame& a, S2SBroadcastToGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGame* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGame>(NULL);
  }

  S2SBroadcastToGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGame& from);
  void MergeFrom(const S2SBroadcastToGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGate) */ {
 public:
  S2SBroadcastToGate();
  virtual ~S2SBroadcastToGate();

  S2SBroadcastToGate(const S2SBroadcastToGate& from);

  inline S2SBroadcastToGate& operator=(const S2SBroadcastToGate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGate(S2SBroadcastToGate&& from) noexcept
    : S2SBroadcastToGate() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGate& operator=(S2SBroadcastToGate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGate* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGate*>(
               &_S2SBroadcastToGate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(S2SBroadcastToGate* other);
  friend void swap(S2SBroadcastToGate& a, S2SBroadcastToGate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGate* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGate>(NULL);
  }

  S2SBroadcastToGate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGate& from);
  void MergeFrom(const S2SBroadcastToGate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitToPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitToPlayer) */ {
 public:
  S2STransmitToPlayer();
  virtual ~S2STransmitToPlayer();

  S2STransmitToPlayer(const S2STransmitToPlayer& from);

  inline S2STransmitToPlayer& operator=(const S2STransmitToPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitToPlayer(S2STransmitToPlayer&& from) noexcept
    : S2STransmitToPlayer() {
    *this = ::std::move(from);
  }

  inline S2STransmitToPlayer& operator=(S2STransmitToPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitToPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitToPlayer* internal_default_instance() {
    return reinterpret_cast<const S2STransmitToPlayer*>(
               &_S2STransmitToPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(S2STransmitToPlayer* other);
  friend void swap(S2STransmitToPlayer& a, S2STransmitToPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitToPlayer* New() const final {
    return CreateMaybeMessage<S2STransmitToPlayer>(NULL);
  }

  S2STransmitToPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitToPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitToPlayer& from);
  void MergeFrom(const S2STransmitToPlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitToPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 3;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 3;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitToPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareServerMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBZoneData

// uint64 appid = 1;
inline void PBZoneData::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBZoneData::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBZoneData.appid)
  return appid_;
}
inline void PBZoneData::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBZoneData.appid)
}

// bytes ip = 2;
inline void PBZoneData::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBZoneData::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBZoneData.ip)
  return ip_.GetNoArena();
}
inline void PBZoneData::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBZoneData.ip)
}
#if LANG_CXX11
inline void PBZoneData::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBZoneData.ip)
}
#endif
inline void PBZoneData::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBZoneData.ip)
}
inline void PBZoneData::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBZoneData.ip)
}
inline ::std::string* PBZoneData::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBZoneData.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBZoneData::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.PBZoneData.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBZoneData::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBZoneData.ip)
}

// uint32 port = 3;
inline void PBZoneData::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 PBZoneData::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBZoneData.port)
  return port_;
}
inline void PBZoneData::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBZoneData.port)
}

// uint32 count = 4;
inline void PBZoneData::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 PBZoneData::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBZoneData.count)
  return count_;
}
inline void PBZoneData::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBZoneData.count)
}

// -------------------------------------------------------------------

// S2SUpdateZoneToLoginReq

// .KFMsg.PBZoneData zonedata = 1;
inline bool S2SUpdateZoneToLoginReq::has_zonedata() const {
  return this != internal_default_instance() && zonedata_ != NULL;
}
inline void S2SUpdateZoneToLoginReq::clear_zonedata() {
  if (GetArenaNoVirtual() == NULL && zonedata_ != NULL) {
    delete zonedata_;
  }
  zonedata_ = NULL;
}
inline const ::KFMsg::PBZoneData& S2SUpdateZoneToLoginReq::_internal_zonedata() const {
  return *zonedata_;
}
inline const ::KFMsg::PBZoneData& S2SUpdateZoneToLoginReq::zonedata() const {
  const ::KFMsg::PBZoneData* p = zonedata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateZoneToLoginReq.zonedata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBZoneData*>(
      &::KFMsg::_PBZoneData_default_instance_);
}
inline ::KFMsg::PBZoneData* S2SUpdateZoneToLoginReq::release_zonedata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateZoneToLoginReq.zonedata)
  
  ::KFMsg::PBZoneData* temp = zonedata_;
  zonedata_ = NULL;
  return temp;
}
inline ::KFMsg::PBZoneData* S2SUpdateZoneToLoginReq::mutable_zonedata() {
  
  if (zonedata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBZoneData>(GetArenaNoVirtual());
    zonedata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateZoneToLoginReq.zonedata)
  return zonedata_;
}
inline void S2SUpdateZoneToLoginReq::set_allocated_zonedata(::KFMsg::PBZoneData* zonedata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete zonedata_;
  }
  if (zonedata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      zonedata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, zonedata, submessage_arena);
    }
    
  } else {
    
  }
  zonedata_ = zonedata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateZoneToLoginReq.zonedata)
}

// -------------------------------------------------------------------

// S2SUpdateZoneToWorldReq

// .KFMsg.PBZoneData zonedata = 1;
inline bool S2SUpdateZoneToWorldReq::has_zonedata() const {
  return this != internal_default_instance() && zonedata_ != NULL;
}
inline void S2SUpdateZoneToWorldReq::clear_zonedata() {
  if (GetArenaNoVirtual() == NULL && zonedata_ != NULL) {
    delete zonedata_;
  }
  zonedata_ = NULL;
}
inline const ::KFMsg::PBZoneData& S2SUpdateZoneToWorldReq::_internal_zonedata() const {
  return *zonedata_;
}
inline const ::KFMsg::PBZoneData& S2SUpdateZoneToWorldReq::zonedata() const {
  const ::KFMsg::PBZoneData* p = zonedata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateZoneToWorldReq.zonedata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBZoneData*>(
      &::KFMsg::_PBZoneData_default_instance_);
}
inline ::KFMsg::PBZoneData* S2SUpdateZoneToWorldReq::release_zonedata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateZoneToWorldReq.zonedata)
  
  ::KFMsg::PBZoneData* temp = zonedata_;
  zonedata_ = NULL;
  return temp;
}
inline ::KFMsg::PBZoneData* S2SUpdateZoneToWorldReq::mutable_zonedata() {
  
  if (zonedata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBZoneData>(GetArenaNoVirtual());
    zonedata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateZoneToWorldReq.zonedata)
  return zonedata_;
}
inline void S2SUpdateZoneToWorldReq::set_allocated_zonedata(::KFMsg::PBZoneData* zonedata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete zonedata_;
  }
  if (zonedata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      zonedata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, zonedata, submessage_arena);
    }
    
  } else {
    
  }
  zonedata_ = zonedata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateZoneToWorldReq.zonedata)
}

// -------------------------------------------------------------------

// S2SDisconnectZoneToWorldReq

// uint64 appid = 1;
inline void S2SDisconnectZoneToWorldReq::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDisconnectZoneToWorldReq::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDisconnectZoneToWorldReq.appid)
  return appid_;
}
inline void S2SDisconnectZoneToWorldReq::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDisconnectZoneToWorldReq.appid)
}

// -------------------------------------------------------------------

// S2SLoginToLoginReq

// bytes ip = 1;
inline void S2SLoginToLoginReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLoginToLoginReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.ip)
  return ip_.GetNoArena();
}
inline void S2SLoginToLoginReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.ip)
}
#if LANG_CXX11
inline void S2SLoginToLoginReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLoginToLoginReq.ip)
}
#endif
inline void S2SLoginToLoginReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLoginToLoginReq.ip)
}
inline void S2SLoginToLoginReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLoginToLoginReq.ip)
}
inline ::std::string* S2SLoginToLoginReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToLoginReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLoginToLoginReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToLoginReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLoginToLoginReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToLoginReq.ip)
}

// bytes token = 2;
inline void S2SLoginToLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLoginToLoginReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.token)
  return token_.GetNoArena();
}
inline void S2SLoginToLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.token)
}
#if LANG_CXX11
inline void S2SLoginToLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLoginToLoginReq.token)
}
#endif
inline void S2SLoginToLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLoginToLoginReq.token)
}
inline void S2SLoginToLoginReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLoginToLoginReq.token)
}
inline ::std::string* S2SLoginToLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLoginToLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLoginToLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToLoginReq.token)
}

// uint64 accountid = 3;
inline void S2SLoginToLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.accountid)
  return accountid_;
}
inline void S2SLoginToLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.accountid)
}

// uint64 sessionid = 4;
inline void S2SLoginToLoginReq::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginReq::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.sessionid)
  return sessionid_;
}
inline void S2SLoginToLoginReq::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.sessionid)
}

// -------------------------------------------------------------------

// S2SLoginToGateAck

// uint32 result = 1;
inline void S2SLoginToGateAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginToGateAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.result)
  return result_;
}
inline void S2SLoginToGateAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.result)
}

// uint64 accountid = 2;
inline void S2SLoginToGateAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToGateAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.accountid)
  return accountid_;
}
inline void S2SLoginToGateAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.accountid)
}

// uint64 sessionid = 3;
inline void S2SLoginToGateAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToGateAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.sessionid)
  return sessionid_;
}
inline void S2SLoginToGateAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.sessionid)
}

// uint64 bantime = 4;
inline void S2SLoginToGateAck::clear_bantime() {
  bantime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToGateAck::bantime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.bantime)
  return bantime_;
}
inline void S2SLoginToGateAck::set_bantime(::google::protobuf::uint64 value) {
  
  bantime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.bantime)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBLoginData

// bytes token = 1;
inline void PBLoginData::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBLoginData::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.token)
  return token_.GetNoArena();
}
inline void PBLoginData::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.token)
}
#if LANG_CXX11
inline void PBLoginData::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBLoginData.token)
}
#endif
inline void PBLoginData::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBLoginData.token)
}
inline void PBLoginData::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBLoginData.token)
}
inline ::std::string* PBLoginData::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBLoginData.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginData::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.PBLoginData.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginData::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBLoginData.token)
}

// uint64 gateid = 2;
inline void PBLoginData::clear_gateid() {
  gateid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::gateid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.gateid)
  return gateid_;
}
inline void PBLoginData::set_gateid(::google::protobuf::uint64 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.gateid)
}

// uint64 sessionid = 3;
inline void PBLoginData::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.sessionid)
  return sessionid_;
}
inline void PBLoginData::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.sessionid)
}

// uint32 channel = 4;
inline void PBLoginData::clear_channel() {
  channel_ = 0u;
}
inline ::google::protobuf::uint32 PBLoginData::channel() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.channel)
  return channel_;
}
inline void PBLoginData::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.channel)
}

// bytes account = 5;
inline void PBLoginData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBLoginData::account() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.account)
  return account_.GetNoArena();
}
inline void PBLoginData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.account)
}
#if LANG_CXX11
inline void PBLoginData::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBLoginData.account)
}
#endif
inline void PBLoginData::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBLoginData.account)
}
inline void PBLoginData::set_account(const void* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBLoginData.account)
}
inline ::std::string* PBLoginData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBLoginData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginData::release_account() {
  // @@protoc_insertion_point(field_release:KFMsg.PBLoginData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBLoginData.account)
}

// uint64 accountid = 6;
inline void PBLoginData::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.accountid)
  return accountid_;
}
inline void PBLoginData::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.accountid)
}

// uint64 playerid = 7;
inline void PBLoginData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBLoginData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBLoginData.playerid)
  return playerid_;
}
inline void PBLoginData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBLoginData.playerid)
}

// map<string, bytes> channeldata = 8;
inline int PBLoginData::channeldata_size() const {
  return channeldata_.size();
}
inline void PBLoginData::clear_channeldata() {
  channeldata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBLoginData::channeldata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBLoginData.channeldata)
  return channeldata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBLoginData::mutable_channeldata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBLoginData.channeldata)
  return channeldata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SLoginToWorldReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginToWorldReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginToWorldReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginToWorldReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginToWorldReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToWorldReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginToWorldReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToWorldReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginToWorldReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToWorldReq.pblogin)
  return pblogin_;
}
inline void S2SLoginToWorldReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToWorldReq.pblogin)
}

// -------------------------------------------------------------------

// S2SLoginToLoginAck

// uint32 result = 1;
inline void S2SLoginToLoginAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginToLoginAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.result)
  return result_;
}
inline void S2SLoginToLoginAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.result)
}

// uint64 gateid = 2;
inline void S2SLoginToLoginAck::clear_gateid() {
  gateid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginAck::gateid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.gateid)
  return gateid_;
}
inline void S2SLoginToLoginAck::set_gateid(::google::protobuf::uint64 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.gateid)
}

// uint64 accountid = 3;
inline void S2SLoginToLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.accountid)
  return accountid_;
}
inline void S2SLoginToLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.accountid)
}

// uint64 sessionid = 4;
inline void S2SLoginToLoginAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.sessionid)
  return sessionid_;
}
inline void S2SLoginToLoginAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.sessionid)
}

// -------------------------------------------------------------------

// S2SLoginToGameReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginToGameReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SLoginToGameReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginToGameReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginToGameReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGameReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginToGameReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToGameReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginToGameReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToGameReq.pblogin)
  return pblogin_;
}
inline void S2SLoginToGameReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToGameReq.pblogin)
}

// -------------------------------------------------------------------

// S2SEnterToGateAck

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SEnterToGateAck::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline void S2SEnterToGateAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
inline const ::KFMsg::PBLoginData& S2SEnterToGateAck::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SEnterToGateAck::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SEnterToGateAck.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SEnterToGateAck::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SEnterToGateAck.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SEnterToGateAck::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SEnterToGateAck.pblogin)
  return pblogin_;
}
inline void S2SEnterToGateAck::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pblogin_;
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SEnterToGateAck.pblogin)
}

// .KFMsg.PBObject playerdata = 2;
inline bool S2SEnterToGateAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SEnterToGateAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SEnterToGateAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SEnterToGateAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SEnterToGateAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SEnterToGateAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SEnterToGateAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SEnterToGateAck.playerdata)
  return playerdata_;
}
inline void S2SEnterToGateAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SEnterToGateAck.playerdata)
}

// uint64 servertime = 3;
inline void S2SEnterToGateAck::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SEnterToGateAck::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SEnterToGateAck.servertime)
  return servertime_;
}
inline void S2SEnterToGateAck::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SEnterToGateAck.servertime)
}

// -------------------------------------------------------------------

// S2SLogoutToGameReq

// uint64 playerid = 1;
inline void S2SLogoutToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLogoutToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogoutToGameReq.playerid)
  return playerid_;
}
inline void S2SLogoutToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogoutToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SDisconnectToGameReq

// uint64 playerid = 1;
inline void S2SDisconnectToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDisconnectToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDisconnectToGameReq.playerid)
  return playerid_;
}
inline void S2SDisconnectToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDisconnectToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SPlayerEnterToWorldReq

// uint64 playerid = 1;
inline void S2SPlayerEnterToWorldReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterToWorldReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterToWorldReq.playerid)
  return playerid_;
}
inline void S2SPlayerEnterToWorldReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterToWorldReq.playerid)
}

// uint64 accountid = 2;
inline void S2SPlayerEnterToWorldReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterToWorldReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterToWorldReq.accountid)
  return accountid_;
}
inline void S2SPlayerEnterToWorldReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterToWorldReq.accountid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveToWorldReq

// uint64 playerid = 1;
inline void S2SPlayerLeaveToWorldReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveToWorldReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveToWorldReq.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveToWorldReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveToWorldReq.playerid)
}

// uint64 accountid = 2;
inline void S2SPlayerLeaveToWorldReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveToWorldReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveToWorldReq.accountid)
  return accountid_;
}
inline void S2SPlayerLeaveToWorldReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveToWorldReq.accountid)
}

// -------------------------------------------------------------------

// S2SPlayerSyncToWorldReq

// repeated uint64 playerid = 1;
inline int S2SPlayerSyncToWorldReq::playerid_size() const {
  return playerid_.size();
}
inline void S2SPlayerSyncToWorldReq::clear_playerid() {
  playerid_.Clear();
}
inline ::google::protobuf::uint64 S2SPlayerSyncToWorldReq::playerid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerSyncToWorldReq.playerid)
  return playerid_.Get(index);
}
inline void S2SPlayerSyncToWorldReq::set_playerid(int index, ::google::protobuf::uint64 value) {
  playerid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerSyncToWorldReq.playerid)
}
inline void S2SPlayerSyncToWorldReq::add_playerid(::google::protobuf::uint64 value) {
  playerid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SPlayerSyncToWorldReq.playerid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SPlayerSyncToWorldReq::playerid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SPlayerSyncToWorldReq.playerid)
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SPlayerSyncToWorldReq::mutable_playerid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SPlayerSyncToWorldReq.playerid)
  return &playerid_;
}

// -------------------------------------------------------------------

// S2SKickPlayerToGameReq

// uint32 type = 1;
inline void S2SKickPlayerToGameReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SKickPlayerToGameReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGameReq.type)
  return type_;
}
inline void S2SKickPlayerToGameReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGameReq.type)
}

// uint64 playerid = 2;
inline void S2SKickPlayerToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickPlayerToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGameReq.playerid)
  return playerid_;
}
inline void S2SKickPlayerToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SKickPlayerToGateReq

// uint32 type = 1;
inline void S2SKickPlayerToGateReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SKickPlayerToGateReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGateReq.type)
  return type_;
}
inline void S2SKickPlayerToGateReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGateReq.type)
}

// uint64 playerid = 2;
inline void S2SKickPlayerToGateReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickPlayerToGateReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGateReq.playerid)
  return playerid_;
}
inline void S2SKickPlayerToGateReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGateReq.playerid)
}

// -------------------------------------------------------------------

// S2SBroadcastToGame

// uint32 msgid = 1;
inline void S2SBroadcastToGame::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGame::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGame.msgid)
  return msgid_;
}
inline void S2SBroadcastToGame::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGame.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGame::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGame::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGame.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGame::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGame.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGame::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGame.msgdata)
}
#endif
inline void S2SBroadcastToGame::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGame.msgdata)
}
inline void S2SBroadcastToGame::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGame.msgdata)
}
inline ::std::string* S2SBroadcastToGame::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGame.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGame::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGame.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGame::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGame.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToGate

// uint32 msgid = 1;
inline void S2SBroadcastToGate::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGate::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGate.msgid)
  return msgid_;
}
inline void S2SBroadcastToGate::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGate.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGate::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGate::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGate.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGate::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGate.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGate::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGate.msgdata)
}
#endif
inline void S2SBroadcastToGate::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGate.msgdata)
}
inline void S2SBroadcastToGate::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGate.msgdata)
}
inline ::std::string* S2SBroadcastToGate::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGate.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGate::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGate.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGate::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGate.msgdata)
}

// -------------------------------------------------------------------

// S2STransmitToPlayer

// uint64 playerid = 1;
inline void S2STransmitToPlayer::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STransmitToPlayer::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToPlayer.playerid)
  return playerid_;
}
inline void S2STransmitToPlayer::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToPlayer.playerid)
}

// uint32 msgid = 2;
inline void S2STransmitToPlayer::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2STransmitToPlayer::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToPlayer.msgid)
  return msgid_;
}
inline void S2STransmitToPlayer::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToPlayer.msgid)
}

// bytes msgdata = 3;
inline void S2STransmitToPlayer::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STransmitToPlayer::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitToPlayer.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2STransmitToPlayer::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STransmitToPlayer.msgdata)
}
#if LANG_CXX11
inline void S2STransmitToPlayer::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STransmitToPlayer.msgdata)
}
#endif
inline void S2STransmitToPlayer::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STransmitToPlayer.msgdata)
}
inline void S2STransmitToPlayer::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STransmitToPlayer.msgdata)
}
inline ::std::string* S2STransmitToPlayer::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitToPlayer.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STransmitToPlayer::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitToPlayer.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STransmitToPlayer::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitToPlayer.msgdata)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::MidwareServerProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::MidwareServerProtocol>() {
  return ::KFMsg::MidwareServerProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFMidwareServerMessage_2eproto
