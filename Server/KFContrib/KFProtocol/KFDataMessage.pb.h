// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFDataMessage.proto

#ifndef PROTOBUF_INCLUDED_KFDataMessage_2eproto
#define PROTOBUF_INCLUDED_KFDataMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "KFDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFDataMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFDataMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFDataMessage_2eproto
namespace KFMsg {
class MsgEnterGame;
class MsgEnterGameDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgEnterGameDefaultTypeInternal _MsgEnterGame_default_instance_;
class MsgSyncAddData;
class MsgSyncAddDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncAddDataDefaultTypeInternal _MsgSyncAddData_default_instance_;
class MsgSyncAddGuildData;
class MsgSyncAddGuildDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncAddGuildDataDefaultTypeInternal _MsgSyncAddGuildData_default_instance_;
class MsgSyncRemoveData;
class MsgSyncRemoveDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncRemoveDataDefaultTypeInternal _MsgSyncRemoveData_default_instance_;
class MsgSyncRemoveGuildData;
class MsgSyncRemoveGuildDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncRemoveGuildDataDefaultTypeInternal _MsgSyncRemoveGuildData_default_instance_;
class MsgSyncUpdateData;
class MsgSyncUpdateDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncUpdateDataDefaultTypeInternal _MsgSyncUpdateData_default_instance_;
class MsgSyncUpdateGuildData;
class MsgSyncUpdateGuildDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncUpdateGuildDataDefaultTypeInternal _MsgSyncUpdateGuildData_default_instance_;
class MsgTellQueryBasic;
class MsgTellQueryBasicDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellQueryBasicDefaultTypeInternal _MsgTellQueryBasic_default_instance_;
class MsgTellQueryGuild;
class MsgTellQueryGuildDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellQueryGuildDefaultTypeInternal _MsgTellQueryGuild_default_instance_;
class MsgTellQueryPlayer;
class MsgTellQueryPlayerDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellQueryPlayerDefaultTypeInternal _MsgTellQueryPlayer_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::MsgEnterGame* Arena::CreateMaybeMessage<::KFMsg::MsgEnterGame>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncAddData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncAddData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncAddGuildData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncAddGuildData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncRemoveData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncRemoveData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncRemoveGuildData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncRemoveGuildData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncUpdateData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncUpdateData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncUpdateGuildData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncUpdateGuildData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellQueryBasic* Arena::CreateMaybeMessage<::KFMsg::MsgTellQueryBasic>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellQueryGuild* Arena::CreateMaybeMessage<::KFMsg::MsgTellQueryGuild>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellQueryPlayer* Arena::CreateMaybeMessage<::KFMsg::MsgTellQueryPlayer>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum DataProtocol {
  MSG_DATA_PROTOCOL_UNKNOW = 0,
  MSG_LOGIN_ENTER_GAME = 10,
  MSG_SYNC_UPDATE_DATA = 11,
  MSG_SYNC_ADD_DATA = 12,
  MSG_SYNC_REMOVE_DATA = 13,
  MSG_TELL_QUERY_PLAYER = 14,
  MSG_TELL_QUERY_BASIC = 15,
  MSG_SYNC_UPDATE_GUILD_DATA = 16,
  MSG_SYNC_ADD_GUILD_DATA = 17,
  MSG_SYNC_REMOVE_GUILD_DATA = 18,
  MSG_TELL_QUERY_GUILD = 19,
  DataProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool DataProtocol_IsValid(int value);
const DataProtocol DataProtocol_MIN = MSG_DATA_PROTOCOL_UNKNOW;
const DataProtocol DataProtocol_MAX = MSG_TELL_QUERY_GUILD;
const int DataProtocol_ARRAYSIZE = DataProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* DataProtocol_descriptor();
inline const ::std::string& DataProtocol_Name(DataProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataProtocol_descriptor(), value);
}
inline bool DataProtocol_Parse(
    const ::std::string& name, DataProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataProtocol>(
    DataProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgEnterGame) */ {
 public:
  MsgEnterGame();
  virtual ~MsgEnterGame();

  MsgEnterGame(const MsgEnterGame& from);

  inline MsgEnterGame& operator=(const MsgEnterGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgEnterGame(MsgEnterGame&& from) noexcept
    : MsgEnterGame() {
    *this = ::std::move(from);
  }

  inline MsgEnterGame& operator=(MsgEnterGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgEnterGame* internal_default_instance() {
    return reinterpret_cast<const MsgEnterGame*>(
               &_MsgEnterGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgEnterGame* other);
  friend void swap(MsgEnterGame& a, MsgEnterGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgEnterGame* New() const final {
    return CreateMaybeMessage<MsgEnterGame>(NULL);
  }

  MsgEnterGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgEnterGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgEnterGame& from);
  void MergeFrom(const MsgEnterGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgEnterGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 1;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 servertime = 2;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncUpdateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncUpdateData) */ {
 public:
  MsgSyncUpdateData();
  virtual ~MsgSyncUpdateData();

  MsgSyncUpdateData(const MsgSyncUpdateData& from);

  inline MsgSyncUpdateData& operator=(const MsgSyncUpdateData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncUpdateData(MsgSyncUpdateData&& from) noexcept
    : MsgSyncUpdateData() {
    *this = ::std::move(from);
  }

  inline MsgSyncUpdateData& operator=(MsgSyncUpdateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncUpdateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncUpdateData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncUpdateData*>(
               &_MsgSyncUpdateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgSyncUpdateData* other);
  friend void swap(MsgSyncUpdateData& a, MsgSyncUpdateData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncUpdateData* New() const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(NULL);
  }

  MsgSyncUpdateData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncUpdateData& from);
  void MergeFrom(const MsgSyncUpdateData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncUpdateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncUpdateData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncAddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncAddData) */ {
 public:
  MsgSyncAddData();
  virtual ~MsgSyncAddData();

  MsgSyncAddData(const MsgSyncAddData& from);

  inline MsgSyncAddData& operator=(const MsgSyncAddData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncAddData(MsgSyncAddData&& from) noexcept
    : MsgSyncAddData() {
    *this = ::std::move(from);
  }

  inline MsgSyncAddData& operator=(MsgSyncAddData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncAddData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncAddData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncAddData*>(
               &_MsgSyncAddData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgSyncAddData* other);
  friend void swap(MsgSyncAddData& a, MsgSyncAddData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncAddData* New() const final {
    return CreateMaybeMessage<MsgSyncAddData>(NULL);
  }

  MsgSyncAddData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncAddData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncAddData& from);
  void MergeFrom(const MsgSyncAddData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncAddData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncAddData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncRemoveData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncRemoveData) */ {
 public:
  MsgSyncRemoveData();
  virtual ~MsgSyncRemoveData();

  MsgSyncRemoveData(const MsgSyncRemoveData& from);

  inline MsgSyncRemoveData& operator=(const MsgSyncRemoveData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncRemoveData(MsgSyncRemoveData&& from) noexcept
    : MsgSyncRemoveData() {
    *this = ::std::move(from);
  }

  inline MsgSyncRemoveData& operator=(MsgSyncRemoveData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncRemoveData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncRemoveData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncRemoveData*>(
               &_MsgSyncRemoveData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgSyncRemoveData* other);
  friend void swap(MsgSyncRemoveData& a, MsgSyncRemoveData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncRemoveData* New() const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(NULL);
  }

  MsgSyncRemoveData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncRemoveData& from);
  void MergeFrom(const MsgSyncRemoveData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncRemoveData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncRemoveData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellQueryPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellQueryPlayer) */ {
 public:
  MsgTellQueryPlayer();
  virtual ~MsgTellQueryPlayer();

  MsgTellQueryPlayer(const MsgTellQueryPlayer& from);

  inline MsgTellQueryPlayer& operator=(const MsgTellQueryPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellQueryPlayer(MsgTellQueryPlayer&& from) noexcept
    : MsgTellQueryPlayer() {
    *this = ::std::move(from);
  }

  inline MsgTellQueryPlayer& operator=(MsgTellQueryPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellQueryPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellQueryPlayer* internal_default_instance() {
    return reinterpret_cast<const MsgTellQueryPlayer*>(
               &_MsgTellQueryPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgTellQueryPlayer* other);
  friend void swap(MsgTellQueryPlayer& a, MsgTellQueryPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellQueryPlayer* New() const final {
    return CreateMaybeMessage<MsgTellQueryPlayer>(NULL);
  }

  MsgTellQueryPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellQueryPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellQueryPlayer& from);
  void MergeFrom(const MsgTellQueryPlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellQueryPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellQueryPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellQueryBasic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellQueryBasic) */ {
 public:
  MsgTellQueryBasic();
  virtual ~MsgTellQueryBasic();

  MsgTellQueryBasic(const MsgTellQueryBasic& from);

  inline MsgTellQueryBasic& operator=(const MsgTellQueryBasic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellQueryBasic(MsgTellQueryBasic&& from) noexcept
    : MsgTellQueryBasic() {
    *this = ::std::move(from);
  }

  inline MsgTellQueryBasic& operator=(MsgTellQueryBasic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellQueryBasic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellQueryBasic* internal_default_instance() {
    return reinterpret_cast<const MsgTellQueryBasic*>(
               &_MsgTellQueryBasic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgTellQueryBasic* other);
  friend void swap(MsgTellQueryBasic& a, MsgTellQueryBasic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellQueryBasic* New() const final {
    return CreateMaybeMessage<MsgTellQueryBasic>(NULL);
  }

  MsgTellQueryBasic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellQueryBasic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellQueryBasic& from);
  void MergeFrom(const MsgTellQueryBasic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellQueryBasic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellQueryBasic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncUpdateGuildData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncUpdateGuildData) */ {
 public:
  MsgSyncUpdateGuildData();
  virtual ~MsgSyncUpdateGuildData();

  MsgSyncUpdateGuildData(const MsgSyncUpdateGuildData& from);

  inline MsgSyncUpdateGuildData& operator=(const MsgSyncUpdateGuildData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncUpdateGuildData(MsgSyncUpdateGuildData&& from) noexcept
    : MsgSyncUpdateGuildData() {
    *this = ::std::move(from);
  }

  inline MsgSyncUpdateGuildData& operator=(MsgSyncUpdateGuildData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncUpdateGuildData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncUpdateGuildData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncUpdateGuildData*>(
               &_MsgSyncUpdateGuildData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgSyncUpdateGuildData* other);
  friend void swap(MsgSyncUpdateGuildData& a, MsgSyncUpdateGuildData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncUpdateGuildData* New() const final {
    return CreateMaybeMessage<MsgSyncUpdateGuildData>(NULL);
  }

  MsgSyncUpdateGuildData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncUpdateGuildData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncUpdateGuildData& from);
  void MergeFrom(const MsgSyncUpdateGuildData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncUpdateGuildData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 2;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncUpdateGuildData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncAddGuildData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncAddGuildData) */ {
 public:
  MsgSyncAddGuildData();
  virtual ~MsgSyncAddGuildData();

  MsgSyncAddGuildData(const MsgSyncAddGuildData& from);

  inline MsgSyncAddGuildData& operator=(const MsgSyncAddGuildData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncAddGuildData(MsgSyncAddGuildData&& from) noexcept
    : MsgSyncAddGuildData() {
    *this = ::std::move(from);
  }

  inline MsgSyncAddGuildData& operator=(MsgSyncAddGuildData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncAddGuildData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncAddGuildData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncAddGuildData*>(
               &_MsgSyncAddGuildData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgSyncAddGuildData* other);
  friend void swap(MsgSyncAddGuildData& a, MsgSyncAddGuildData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncAddGuildData* New() const final {
    return CreateMaybeMessage<MsgSyncAddGuildData>(NULL);
  }

  MsgSyncAddGuildData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncAddGuildData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncAddGuildData& from);
  void MergeFrom(const MsgSyncAddGuildData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncAddGuildData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 2;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncAddGuildData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncRemoveGuildData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncRemoveGuildData) */ {
 public:
  MsgSyncRemoveGuildData();
  virtual ~MsgSyncRemoveGuildData();

  MsgSyncRemoveGuildData(const MsgSyncRemoveGuildData& from);

  inline MsgSyncRemoveGuildData& operator=(const MsgSyncRemoveGuildData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncRemoveGuildData(MsgSyncRemoveGuildData&& from) noexcept
    : MsgSyncRemoveGuildData() {
    *this = ::std::move(from);
  }

  inline MsgSyncRemoveGuildData& operator=(MsgSyncRemoveGuildData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncRemoveGuildData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncRemoveGuildData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncRemoveGuildData*>(
               &_MsgSyncRemoveGuildData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgSyncRemoveGuildData* other);
  friend void swap(MsgSyncRemoveGuildData& a, MsgSyncRemoveGuildData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncRemoveGuildData* New() const final {
    return CreateMaybeMessage<MsgSyncRemoveGuildData>(NULL);
  }

  MsgSyncRemoveGuildData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncRemoveGuildData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncRemoveGuildData& from);
  void MergeFrom(const MsgSyncRemoveGuildData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncRemoveGuildData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 2;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncRemoveGuildData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellQueryGuild : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellQueryGuild) */ {
 public:
  MsgTellQueryGuild();
  virtual ~MsgTellQueryGuild();

  MsgTellQueryGuild(const MsgTellQueryGuild& from);

  inline MsgTellQueryGuild& operator=(const MsgTellQueryGuild& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellQueryGuild(MsgTellQueryGuild&& from) noexcept
    : MsgTellQueryGuild() {
    *this = ::std::move(from);
  }

  inline MsgTellQueryGuild& operator=(MsgTellQueryGuild&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellQueryGuild& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellQueryGuild* internal_default_instance() {
    return reinterpret_cast<const MsgTellQueryGuild*>(
               &_MsgTellQueryGuild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MsgTellQueryGuild* other);
  friend void swap(MsgTellQueryGuild& a, MsgTellQueryGuild& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellQueryGuild* New() const final {
    return CreateMaybeMessage<MsgTellQueryGuild>(NULL);
  }

  MsgTellQueryGuild* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellQueryGuild>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellQueryGuild& from);
  void MergeFrom(const MsgTellQueryGuild& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellQueryGuild* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject guild = 1;
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_guild() const;
  public:
  const ::KFMsg::PBObject& guild() const;
  ::KFMsg::PBObject* release_guild();
  ::KFMsg::PBObject* mutable_guild();
  void set_allocated_guild(::KFMsg::PBObject* guild);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellQueryGuild)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* guild_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDataMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgEnterGame

// .KFMsg.PBObject playerdata = 1;
inline bool MsgEnterGame::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgEnterGame::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& MsgEnterGame::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgEnterGame.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgEnterGame::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgEnterGame.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgEnterGame::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgEnterGame.playerdata)
  return playerdata_;
}
inline void MsgEnterGame::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgEnterGame.playerdata)
}

// uint64 servertime = 2;
inline void MsgEnterGame::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgEnterGame::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgEnterGame.servertime)
  return servertime_;
}
inline void MsgEnterGame::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgEnterGame.servertime)
}

// -------------------------------------------------------------------

// MsgSyncUpdateData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncUpdateData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncUpdateData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncUpdateData.pbdata)
  return pbdata_;
}
inline void MsgSyncUpdateData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncUpdateData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncAddData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncAddData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncAddData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncAddData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncAddData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncAddData.pbdata)
  return pbdata_;
}
inline void MsgSyncAddData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncAddData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncRemoveData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncRemoveData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncRemoveData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncRemoveData.pbdata)
  return pbdata_;
}
inline void MsgSyncRemoveData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncRemoveData.pbdata)
}

// -------------------------------------------------------------------

// MsgTellQueryPlayer

// .KFMsg.PBObject player = 1;
inline bool MsgTellQueryPlayer::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTellQueryPlayer::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgTellQueryPlayer::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellQueryPlayer.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTellQueryPlayer::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellQueryPlayer.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTellQueryPlayer::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellQueryPlayer.player)
  return player_;
}
inline void MsgTellQueryPlayer::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellQueryPlayer.player)
}

// -------------------------------------------------------------------

// MsgTellQueryBasic

// .KFMsg.PBObject player = 1;
inline bool MsgTellQueryBasic::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTellQueryBasic::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgTellQueryBasic::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellQueryBasic.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTellQueryBasic::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellQueryBasic.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTellQueryBasic::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellQueryBasic.player)
  return player_;
}
inline void MsgTellQueryBasic::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellQueryBasic.player)
}

// -------------------------------------------------------------------

// MsgSyncUpdateGuildData

// uint64 playerid = 1;
inline void MsgSyncUpdateGuildData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSyncUpdateGuildData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateGuildData.playerid)
  return playerid_;
}
inline void MsgSyncUpdateGuildData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSyncUpdateGuildData.playerid)
}

// .KFMsg.PBObject pbdata = 2;
inline bool MsgSyncUpdateGuildData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateGuildData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateGuildData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateGuildData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncUpdateGuildData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncUpdateGuildData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncUpdateGuildData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncUpdateGuildData.pbdata)
  return pbdata_;
}
inline void MsgSyncUpdateGuildData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncUpdateGuildData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncAddGuildData

// uint64 playerid = 1;
inline void MsgSyncAddGuildData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSyncAddGuildData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddGuildData.playerid)
  return playerid_;
}
inline void MsgSyncAddGuildData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSyncAddGuildData.playerid)
}

// .KFMsg.PBObject pbdata = 2;
inline bool MsgSyncAddGuildData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncAddGuildData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncAddGuildData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddGuildData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncAddGuildData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncAddGuildData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncAddGuildData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncAddGuildData.pbdata)
  return pbdata_;
}
inline void MsgSyncAddGuildData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncAddGuildData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncRemoveGuildData

// uint64 playerid = 1;
inline void MsgSyncRemoveGuildData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSyncRemoveGuildData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveGuildData.playerid)
  return playerid_;
}
inline void MsgSyncRemoveGuildData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSyncRemoveGuildData.playerid)
}

// .KFMsg.PBObject pbdata = 2;
inline bool MsgSyncRemoveGuildData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveGuildData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveGuildData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveGuildData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncRemoveGuildData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncRemoveGuildData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncRemoveGuildData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncRemoveGuildData.pbdata)
  return pbdata_;
}
inline void MsgSyncRemoveGuildData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncRemoveGuildData.pbdata)
}

// -------------------------------------------------------------------

// MsgTellQueryGuild

// .KFMsg.PBObject guild = 1;
inline bool MsgTellQueryGuild::has_guild() const {
  return this != internal_default_instance() && guild_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTellQueryGuild::_internal_guild() const {
  return *guild_;
}
inline const ::KFMsg::PBObject& MsgTellQueryGuild::guild() const {
  const ::KFMsg::PBObject* p = guild_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellQueryGuild.guild)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTellQueryGuild::release_guild() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellQueryGuild.guild)
  
  ::KFMsg::PBObject* temp = guild_;
  guild_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTellQueryGuild::mutable_guild() {
  
  if (guild_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    guild_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellQueryGuild.guild)
  return guild_;
}
inline void MsgTellQueryGuild::set_allocated_guild(::KFMsg::PBObject* guild) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(guild_);
  }
  if (guild) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guild = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guild, submessage_arena);
    }
    
  } else {
    
  }
  guild_ = guild;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellQueryGuild.guild)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::DataProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::DataProtocol>() {
  return ::KFMsg::DataProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFDataMessage_2eproto
