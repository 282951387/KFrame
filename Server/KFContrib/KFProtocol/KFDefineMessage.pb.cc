// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFDefineMessage.proto

#include "KFDefineMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_KFDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBArray_Pbuint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBBattleScore_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbdoubleEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbstringEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint32Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint64Entry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRankData_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBTaskData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBBattlePlayer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBObject_PbarrayEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBTaskDatas;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject;
}  // namespace protobuf_KFDefineMessage_2eproto
namespace KFMsg {
class PBArray_Pbuint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBArray_Pbuint64Entry_DoNotUse>
      _instance;
} _PBArray_Pbuint64Entry_DoNotUse_default_instance_;
class PBArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBArray>
      _instance;
} _PBArray_default_instance_;
class PBObject_Pbint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbint32Entry_DoNotUse>
      _instance;
} _PBObject_Pbint32Entry_DoNotUse_default_instance_;
class PBObject_Pbuint32Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbuint32Entry_DoNotUse>
      _instance;
} _PBObject_Pbuint32Entry_DoNotUse_default_instance_;
class PBObject_Pbint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbint64Entry_DoNotUse>
      _instance;
} _PBObject_Pbint64Entry_DoNotUse_default_instance_;
class PBObject_Pbuint64Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_Pbuint64Entry_DoNotUse>
      _instance;
} _PBObject_Pbuint64Entry_DoNotUse_default_instance_;
class PBObject_PbdoubleEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbdoubleEntry_DoNotUse>
      _instance;
} _PBObject_PbdoubleEntry_DoNotUse_default_instance_;
class PBObject_PbstringEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbstringEntry_DoNotUse>
      _instance;
} _PBObject_PbstringEntry_DoNotUse_default_instance_;
class PBObject_PbarrayEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbarrayEntry_DoNotUse>
      _instance;
} _PBObject_PbarrayEntry_DoNotUse_default_instance_;
class PBObject_PbobjectEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbobjectEntry_DoNotUse>
      _instance;
} _PBObject_PbobjectEntry_DoNotUse_default_instance_;
class PBObject_PbrecordEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject_PbrecordEntry_DoNotUse>
      _instance;
} _PBObject_PbrecordEntry_DoNotUse_default_instance_;
class PBObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBObject>
      _instance;
} _PBObject_default_instance_;
class PBRecord_PbobjectEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRecord_PbobjectEntry_DoNotUse>
      _instance;
} _PBRecord_PbobjectEntry_DoNotUse_default_instance_;
class PBRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRecord>
      _instance;
} _PBRecord_default_instance_;
class PBRankData_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankData_PbdataEntry_DoNotUse>
      _instance;
} _PBRankData_PbdataEntry_DoNotUse_default_instance_;
class PBRankDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankData>
      _instance;
} _PBRankData_default_instance_;
class PBRankDatasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankDatas>
      _instance;
} _PBRankDatas_default_instance_;
class PBTaskDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBTaskData>
      _instance;
} _PBTaskData_default_instance_;
class PBTaskDatasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBTaskDatas>
      _instance;
} _PBTaskDatas_default_instance_;
class PBBattlePlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBBattlePlayer>
      _instance;
} _PBBattlePlayer_default_instance_;
class PBBattleCampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBBattleCamp>
      _instance;
} _PBBattleCamp_default_instance_;
class PBMatchGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMatchGroup>
      _instance;
} _PBMatchGroup_default_instance_;
class PBGuestDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBGuestData>
      _instance;
} _PBGuestData_default_instance_;
class PBBattleScore_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBBattleScore_PbdataEntry_DoNotUse>
      _instance;
} _PBBattleScore_PbdataEntry_DoNotUse_default_instance_;
class PBBattleScoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBBattleScore>
      _instance;
} _PBBattleScore_default_instance_;
class PBRecentDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRecentData>
      _instance;
} _PBRecentData_default_instance_;
}  // namespace KFMsg
namespace protobuf_KFDefineMessage_2eproto {
static void InitDefaultsPBArray_Pbuint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBArray_Pbuint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBArray_Pbuint64Entry_DoNotUse();
  }
  ::KFMsg::PBArray_Pbuint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBArray_Pbuint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBArray_Pbuint64Entry_DoNotUse}, {}};

static void InitDefaultsPBArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBArray_default_instance_;
    new (ptr) ::KFMsg::PBArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBArray::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBArray}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBArray_Pbuint64Entry_DoNotUse.base,}};

static void InitDefaultsPBObject_Pbint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbint32Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbint32Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbint32Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbint32Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_Pbuint32Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbuint32Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbuint32Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbuint32Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint32Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbuint32Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_Pbint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbint64Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbint64Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_Pbuint64Entry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_Pbuint64Entry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_Pbuint64Entry_DoNotUse();
  }
  ::KFMsg::PBObject_Pbuint64Entry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_Pbuint64Entry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_Pbuint64Entry_DoNotUse}, {}};

static void InitDefaultsPBObject_PbdoubleEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbdoubleEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbdoubleEntry_DoNotUse();
  }
  ::KFMsg::PBObject_PbdoubleEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbdoubleEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_PbdoubleEntry_DoNotUse}, {}};

static void InitDefaultsPBObject_PbstringEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbstringEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbstringEntry_DoNotUse();
  }
  ::KFMsg::PBObject_PbstringEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBObject_PbstringEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBObject_PbstringEntry_DoNotUse}, {}};

static void InitDefaultsPBObject_PbarrayEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbarrayEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbarrayEntry_DoNotUse();
  }
  ::KFMsg::PBObject_PbarrayEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBObject_PbarrayEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBObject_PbarrayEntry_DoNotUse}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBArray.base,}};

static void InitDefaultsPBObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBObject_PbobjectEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbobjectEntry_DoNotUse();
  }
  {
    void* ptr = &::KFMsg::_PBObject_PbrecordEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBObject_PbrecordEntry_DoNotUse();
  }
  {
    void* ptr = &::KFMsg::_PBObject_default_instance_;
    new (ptr) ::KFMsg::PBObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::KFMsg::_PBRecord_PbobjectEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRecord_PbobjectEntry_DoNotUse();
  }
  {
    void* ptr = &::KFMsg::_PBRecord_default_instance_;
    new (ptr) ::KFMsg::PBRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBObject_PbobjectEntry_DoNotUse::InitAsDefaultInstance();
  ::KFMsg::PBObject_PbrecordEntry_DoNotUse::InitAsDefaultInstance();
  ::KFMsg::PBObject::InitAsDefaultInstance();
  ::KFMsg::PBRecord_PbobjectEntry_DoNotUse::InitAsDefaultInstance();
  ::KFMsg::PBRecord::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsPBObject}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_Pbint32Entry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_Pbuint32Entry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_Pbint64Entry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_Pbuint64Entry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_PbdoubleEntry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_PbstringEntry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject_PbarrayEntry_DoNotUse.base,}};

static void InitDefaultsPBRankData_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankData_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRankData_PbdataEntry_DoNotUse();
  }
  ::KFMsg::PBRankData_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRankData_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRankData_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRankData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankData_default_instance_;
    new (ptr) ::KFMsg::PBRankData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRankData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRankData}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBRankData_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsPBRankDatas() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankDatas_default_instance_;
    new (ptr) ::KFMsg::PBRankDatas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRankDatas::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankDatas =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRankDatas}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBRankData.base,}};

static void InitDefaultsPBTaskData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBTaskData_default_instance_;
    new (ptr) ::KFMsg::PBTaskData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBTaskData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBTaskData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBTaskData}, {}};

static void InitDefaultsPBTaskDatas() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBTaskDatas_default_instance_;
    new (ptr) ::KFMsg::PBTaskDatas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBTaskDatas::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBTaskDatas =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBTaskDatas}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBTaskData.base,}};

static void InitDefaultsPBBattlePlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBBattlePlayer_default_instance_;
    new (ptr) ::KFMsg::PBBattlePlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBBattlePlayer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBBattlePlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBBattlePlayer}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBTaskDatas.base,}};

static void InitDefaultsPBBattleCamp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBBattleCamp_default_instance_;
    new (ptr) ::KFMsg::PBBattleCamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBBattleCamp::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBBattleCamp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBBattleCamp}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattlePlayer.base,}};

static void InitDefaultsPBMatchGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMatchGroup_default_instance_;
    new (ptr) ::KFMsg::PBMatchGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMatchGroup::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMatchGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMatchGroup}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattlePlayer.base,}};

static void InitDefaultsPBGuestData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBGuestData_default_instance_;
    new (ptr) ::KFMsg::PBGuestData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBGuestData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBGuestData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBGuestData}, {}};

static void InitDefaultsPBBattleScore_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBBattleScore_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBBattleScore_PbdataEntry_DoNotUse();
  }
  ::KFMsg::PBBattleScore_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBBattleScore_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBBattleScore_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsPBBattleScore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBBattleScore_default_instance_;
    new (ptr) ::KFMsg::PBBattleScore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBBattleScore::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_PBBattleScore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPBBattleScore}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleScore_PbdataEntry_DoNotUse.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBTaskDatas.base,}};

static void InitDefaultsPBRecentData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRecentData_default_instance_;
    new (ptr) ::KFMsg::PBRecentData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRecentData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRecentData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRecentData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBArray_Pbuint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbuint32Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_Pbuint64Entry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_PbdoubleEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_PbstringEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject_PbarrayEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankData_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankDatas.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBTaskData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBTaskDatas.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBBattlePlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBBattleCamp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMatchGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBGuestData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBBattleScore_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBBattleScore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRecentData.base);
}

::google::protobuf::Metadata file_level_metadata[26];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray_Pbuint64Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBArray, pbuint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint32Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_Pbuint64Entry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbdoubleEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbstringEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbarrayEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbobjectEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject_PbrecordEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbuint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbuint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbdouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBObject, pbrecord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord_PbobjectEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecord, pbobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, rankindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, rankscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankDatas, rankdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBTaskData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBTaskData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBTaskData, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBTaskDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBTaskDatas, taskdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, iconbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, grading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, modelid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, clothesid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattlePlayer, achieve_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleCamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleCamp, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleCamp, pbplayer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMatchGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMatchGroup, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMatchGroup, pbplayer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBGuestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBGuestData, guestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBGuestData, guesticon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBGuestData, guesticonbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, ranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, achieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBBattleScore, playercount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, ranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, totalnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, kill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, bekillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRecentData, relationtype_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::KFMsg::PBArray_Pbuint64Entry_DoNotUse)},
  { 9, -1, sizeof(::KFMsg::PBArray)},
  { 15, 22, sizeof(::KFMsg::PBObject_Pbint32Entry_DoNotUse)},
  { 24, 31, sizeof(::KFMsg::PBObject_Pbuint32Entry_DoNotUse)},
  { 33, 40, sizeof(::KFMsg::PBObject_Pbint64Entry_DoNotUse)},
  { 42, 49, sizeof(::KFMsg::PBObject_Pbuint64Entry_DoNotUse)},
  { 51, 58, sizeof(::KFMsg::PBObject_PbdoubleEntry_DoNotUse)},
  { 60, 67, sizeof(::KFMsg::PBObject_PbstringEntry_DoNotUse)},
  { 69, 76, sizeof(::KFMsg::PBObject_PbarrayEntry_DoNotUse)},
  { 78, 85, sizeof(::KFMsg::PBObject_PbobjectEntry_DoNotUse)},
  { 87, 94, sizeof(::KFMsg::PBObject_PbrecordEntry_DoNotUse)},
  { 96, -1, sizeof(::KFMsg::PBObject)},
  { 110, 117, sizeof(::KFMsg::PBRecord_PbobjectEntry_DoNotUse)},
  { 119, -1, sizeof(::KFMsg::PBRecord)},
  { 125, 132, sizeof(::KFMsg::PBRankData_PbdataEntry_DoNotUse)},
  { 134, -1, sizeof(::KFMsg::PBRankData)},
  { 143, -1, sizeof(::KFMsg::PBRankDatas)},
  { 149, -1, sizeof(::KFMsg::PBTaskData)},
  { 156, -1, sizeof(::KFMsg::PBTaskDatas)},
  { 162, -1, sizeof(::KFMsg::PBBattlePlayer)},
  { 179, -1, sizeof(::KFMsg::PBBattleCamp)},
  { 186, -1, sizeof(::KFMsg::PBMatchGroup)},
  { 193, -1, sizeof(::KFMsg::PBGuestData)},
  { 201, 208, sizeof(::KFMsg::PBBattleScore_PbdataEntry_DoNotUse)},
  { 210, -1, sizeof(::KFMsg::PBBattleScore)},
  { 224, -1, sizeof(::KFMsg::PBRecentData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBArray_Pbuint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbuint32Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_Pbuint64Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbdoubleEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbstringEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbarrayEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbobjectEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_PbrecordEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRecord_PbobjectEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankData_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankDatas_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBTaskData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBTaskDatas_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBBattlePlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBBattleCamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMatchGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBGuestData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBBattleScore_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBBattleScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRecentData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "KFDefineMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025KFDefineMessage.proto\022\005KFMsg\"j\n\007PBArra"
      "y\022.\n\010pbuint64\030\001 \003(\0132\034.KFMsg.PBArray.Pbui"
      "nt64Entry\032/\n\rPbuint64Entry\022\013\n\003key\030\001 \001(\r\022"
      "\r\n\005value\030\002 \001(\004:\0028\001\"\245\007\n\010PBObject\022-\n\007pbint"
      "32\030\001 \003(\0132\034.KFMsg.PBObject.Pbint32Entry\022/"
      "\n\010pbuint32\030\002 \003(\0132\035.KFMsg.PBObject.Pbuint"
      "32Entry\022-\n\007pbint64\030\003 \003(\0132\034.KFMsg.PBObjec"
      "t.Pbint64Entry\022/\n\010pbuint64\030\004 \003(\0132\035.KFMsg"
      ".PBObject.Pbuint64Entry\022/\n\010pbdouble\030\005 \003("
      "\0132\035.KFMsg.PBObject.PbdoubleEntry\022/\n\010pbst"
      "ring\030\006 \003(\0132\035.KFMsg.PBObject.PbstringEntr"
      "y\022-\n\007pbarray\030\007 \003(\0132\034.KFMsg.PBObject.Pbar"
      "rayEntry\022/\n\010pbobject\030\010 \003(\0132\035.KFMsg.PBObj"
      "ect.PbobjectEntry\022/\n\010pbrecord\030\t \003(\0132\035.KF"
      "Msg.PBObject.PbrecordEntry\032.\n\014Pbint32Ent"
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\021:\0028\001\032/\n\rPb"
      "uint32Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:"
      "\0028\001\032.\n\014Pbint64Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\022:\0028\001\032/\n\rPbuint64Entry\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\004:\0028\001\032/\n\rPbdoubleEntry\022\013\n"
      "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\032/\n\rPbstrin"
      "gEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\032>"
      "\n\014PbarrayEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001"
      "(\0132\016.KFMsg.PBArray:\0028\001\032@\n\rPbobjectEntry\022"
      "\013\n\003key\030\001 \001(\t\022\036\n\005value\030\002 \001(\0132\017.KFMsg.PBOb"
      "ject:\0028\001\032@\n\rPbrecordEntry\022\013\n\003key\030\001 \001(\t\022\036"
      "\n\005value\030\002 \001(\0132\017.KFMsg.PBRecord:\0028\001\"}\n\010PB"
      "Record\022/\n\010pbobject\030\001 \003(\0132\035.KFMsg.PBRecor"
      "d.PbobjectEntry\032@\n\rPbobjectEntry\022\013\n\003key\030"
      "\001 \001(\004\022\036\n\005value\030\002 \001(\0132\017.KFMsg.PBObject:\0028"
      "\001\"\242\001\n\nPBRankData\022\021\n\trankindex\030\001 \001(\r\022\020\n\010p"
      "layerid\030\002 \001(\004\022\021\n\trankscore\030\003 \001(\004\022-\n\006pbda"
      "ta\030\004 \003(\0132\035.KFMsg.PBRankData.PbdataEntry\032"
      "-\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\014:\0028\001\"2\n\013PBRankDatas\022#\n\010rankdata\030\003 \003(\0132"
      "\021.KFMsg.PBRankData\"\'\n\nPBTaskData\022\n\n\002id\030\001"
      " \001(\r\022\r\n\005value\030\002 \001(\r\"2\n\013PBTaskDatas\022#\n\010ta"
      "skdata\030\001 \003(\0132\021.KFMsg.PBTaskData\"\351\001\n\016PBBa"
      "ttlePlayer\022\020\n\010serverid\030\001 \001(\004\022\020\n\010playerid"
      "\030\002 \001(\004\022\014\n\004name\030\003 \001(\014\022\013\n\003sex\030\004 \001(\r\022\014\n\004ico"
      "n\030\005 \001(\014\022\017\n\007iconbox\030\006 \001(\014\022\017\n\007grading\030\007 \001("
      "\r\022\017\n\007modelid\030\010 \001(\r\022\021\n\tclothesid\030\t \001(\r\022\017\n"
      "\007groupid\030\n \001(\004\022\016\n\006campid\030\013 \001(\r\022#\n\007achiev"
      "e\030\014 \001(\0132\022.KFMsg.PBTaskDatas\"G\n\014PBBattleC"
      "amp\022\016\n\006campid\030\001 \001(\r\022\'\n\010pbplayer\030\002 \003(\0132\025."
      "KFMsg.PBBattlePlayer\"H\n\014PBMatchGroup\022\017\n\007"
      "groupid\030\001 \001(\004\022\'\n\010pbplayer\030\002 \003(\0132\025.KFMsg."
      "PBBattlePlayer\"G\n\013PBGuestData\022\017\n\007guestid"
      "\030\001 \001(\004\022\021\n\tguesticon\030\002 \001(\014\022\024\n\014guesticonbo"
      "x\030\003 \001(\014\"\216\002\n\rPBBattleScore\022\020\n\010playerid\030\001 "
      "\001(\004\022\017\n\007ranking\030\002 \001(\r\0220\n\006pbdata\030\003 \003(\0132 .K"
      "FMsg.PBBattleScore.PbdataEntry\022\r\n\005score\030"
      "\004 \001(\021\022\017\n\007matchid\030\005 \001(\r\022\016\n\006reward\030\006 \001(\014\022#"
      "\n\007achieve\030\007 \001(\0132\022.KFMsg.PBTaskDatas\022\017\n\007m"
      "embers\030\010 \003(\004\022\023\n\013playercount\030\t \001(\r\032-\n\013Pbd"
      "ataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001"
      "\"\210\001\n\014PBRecentData\022\020\n\010playerid\030\001 \001(\004\022\017\n\007r"
      "anking\030\002 \001(\r\022\020\n\010totalnum\030\003 \001(\r\022\014\n\004kill\030\004"
      " \001(\r\022\r\n\005score\030\005 \001(\r\022\020\n\010bekillid\030\006 \001(\r\022\024\n"
      "\014relationtype\030\007 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFDefineMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_KFDefineMessage_2eproto
namespace KFMsg {

// ===================================================================

PBArray_Pbuint64Entry_DoNotUse::PBArray_Pbuint64Entry_DoNotUse() {}
PBArray_Pbuint64Entry_DoNotUse::PBArray_Pbuint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBArray_Pbuint64Entry_DoNotUse::MergeFrom(const PBArray_Pbuint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBArray_Pbuint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[0];
}
void PBArray_Pbuint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBArray::kPbuint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBArray::PBArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBArray)
}
PBArray::PBArray(const PBArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbuint64_.MergeFrom(from.pbuint64_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBArray)
}

void PBArray::SharedCtor() {
}

PBArray::~PBArray() {
  // @@protoc_insertion_point(destructor:KFMsg.PBArray)
  SharedDtor();
}

void PBArray::SharedDtor() {
}

void PBArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBArray::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBArray& PBArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBArray.base);
  return *internal_default_instance();
}


void PBArray::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbuint64_.Clear();
  _internal_metadata_.Clear();
}

bool PBArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint64> pbuint64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBArray_Pbuint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBArray_Pbuint64Entry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 > > parser(&pbuint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBArray)
  return false;
#undef DO_
}

void PBArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint64> pbuint64 = 1;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBArray)
}

::google::protobuf::uint8* PBArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint64> pbuint64 = 1;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBArray)
  return target;
}

size_t PBArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint64> pbuint64 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint64_size());
  {
    ::std::unique_ptr<PBArray_Pbuint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint64 >::const_iterator
        it = this->pbuint64().begin();
        it != this->pbuint64().end(); ++it) {
      entry.reset(pbuint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBArray)
  GOOGLE_DCHECK_NE(&from, this);
  const PBArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBArray)
    MergeFrom(*source);
  }
}

void PBArray::MergeFrom(const PBArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbuint64_.MergeFrom(from.pbuint64_);
}

void PBArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBArray::CopyFrom(const PBArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBArray::IsInitialized() const {
  return true;
}

void PBArray::Swap(PBArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBArray::InternalSwap(PBArray* other) {
  using std::swap;
  pbuint64_.Swap(&other->pbuint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBArray::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBObject_Pbint32Entry_DoNotUse::PBObject_Pbint32Entry_DoNotUse() {}
PBObject_Pbint32Entry_DoNotUse::PBObject_Pbint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbint32Entry_DoNotUse::MergeFrom(const PBObject_Pbint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[2];
}
void PBObject_Pbint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_Pbuint32Entry_DoNotUse::PBObject_Pbuint32Entry_DoNotUse() {}
PBObject_Pbuint32Entry_DoNotUse::PBObject_Pbuint32Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbuint32Entry_DoNotUse::MergeFrom(const PBObject_Pbuint32Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbuint32Entry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[3];
}
void PBObject_Pbuint32Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_Pbint64Entry_DoNotUse::PBObject_Pbint64Entry_DoNotUse() {}
PBObject_Pbint64Entry_DoNotUse::PBObject_Pbint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbint64Entry_DoNotUse::MergeFrom(const PBObject_Pbint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[4];
}
void PBObject_Pbint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_Pbuint64Entry_DoNotUse::PBObject_Pbuint64Entry_DoNotUse() {}
PBObject_Pbuint64Entry_DoNotUse::PBObject_Pbuint64Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_Pbuint64Entry_DoNotUse::MergeFrom(const PBObject_Pbuint64Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_Pbuint64Entry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[5];
}
void PBObject_Pbuint64Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbdoubleEntry_DoNotUse::PBObject_PbdoubleEntry_DoNotUse() {}
PBObject_PbdoubleEntry_DoNotUse::PBObject_PbdoubleEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbdoubleEntry_DoNotUse::MergeFrom(const PBObject_PbdoubleEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbdoubleEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[6];
}
void PBObject_PbdoubleEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbstringEntry_DoNotUse::PBObject_PbstringEntry_DoNotUse() {}
PBObject_PbstringEntry_DoNotUse::PBObject_PbstringEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbstringEntry_DoNotUse::MergeFrom(const PBObject_PbstringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbstringEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[7];
}
void PBObject_PbstringEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbarrayEntry_DoNotUse::PBObject_PbarrayEntry_DoNotUse() {}
PBObject_PbarrayEntry_DoNotUse::PBObject_PbarrayEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbarrayEntry_DoNotUse::MergeFrom(const PBObject_PbarrayEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbarrayEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[8];
}
void PBObject_PbarrayEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbobjectEntry_DoNotUse::PBObject_PbobjectEntry_DoNotUse() {}
PBObject_PbobjectEntry_DoNotUse::PBObject_PbobjectEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbobjectEntry_DoNotUse::MergeFrom(const PBObject_PbobjectEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbobjectEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[9];
}
void PBObject_PbobjectEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBObject_PbrecordEntry_DoNotUse::PBObject_PbrecordEntry_DoNotUse() {}
PBObject_PbrecordEntry_DoNotUse::PBObject_PbrecordEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBObject_PbrecordEntry_DoNotUse::MergeFrom(const PBObject_PbrecordEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBObject_PbrecordEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[10];
}
void PBObject_PbrecordEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBObject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBObject::kPbint32FieldNumber;
const int PBObject::kPbuint32FieldNumber;
const int PBObject::kPbint64FieldNumber;
const int PBObject::kPbuint64FieldNumber;
const int PBObject::kPbdoubleFieldNumber;
const int PBObject::kPbstringFieldNumber;
const int PBObject::kPbarrayFieldNumber;
const int PBObject::kPbobjectFieldNumber;
const int PBObject::kPbrecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBObject::PBObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBObject)
}
PBObject::PBObject(const PBObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbint32_.MergeFrom(from.pbint32_);
  pbuint32_.MergeFrom(from.pbuint32_);
  pbint64_.MergeFrom(from.pbint64_);
  pbuint64_.MergeFrom(from.pbuint64_);
  pbdouble_.MergeFrom(from.pbdouble_);
  pbstring_.MergeFrom(from.pbstring_);
  pbarray_.MergeFrom(from.pbarray_);
  pbobject_.MergeFrom(from.pbobject_);
  pbrecord_.MergeFrom(from.pbrecord_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBObject)
}

void PBObject::SharedCtor() {
}

PBObject::~PBObject() {
  // @@protoc_insertion_point(destructor:KFMsg.PBObject)
  SharedDtor();
}

void PBObject::SharedDtor() {
}

void PBObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBObject::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBObject& PBObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base);
  return *internal_default_instance();
}


void PBObject::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbint32_.Clear();
  pbuint32_.Clear();
  pbint64_.Clear();
  pbuint64_.Clear();
  pbdouble_.Clear();
  pbstring_.Clear();
  pbarray_.Clear();
  pbobject_.Clear();
  pbrecord_.Clear();
  _internal_metadata_.Clear();
}

bool PBObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, sint32> pbint32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBObject_Pbint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbint32Entry_DoNotUse,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&pbint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbint32Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> pbuint32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PBObject_Pbuint32Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbuint32Entry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&pbuint32_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbuint32Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, sint64> pbint64 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PBObject_Pbint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbint64Entry_DoNotUse,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&pbint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbint64Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint64> pbuint64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PBObject_Pbuint64Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_Pbuint64Entry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbuint64_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.Pbuint64Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, double> pbdouble = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          PBObject_PbdoubleEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbdoubleEntry_DoNotUse,
              ::std::string, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::std::string, double > > parser(&pbdouble_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbdoubleEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbstring = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          PBObject_PbstringEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbstringEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbstring_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbstringEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .KFMsg.PBArray> pbarray = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          PBObject_PbarrayEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbarrayEntry_DoNotUse,
              ::std::string, ::KFMsg::PBArray,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray > > parser(&pbarray_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbarrayEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .KFMsg.PBObject> pbobject = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          PBObject_PbobjectEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbobjectEntry_DoNotUse,
              ::std::string, ::KFMsg::PBObject,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject > > parser(&pbobject_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbobjectEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .KFMsg.PBRecord> pbrecord = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          PBObject_PbrecordEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBObject_PbrecordEntry_DoNotUse,
              ::std::string, ::KFMsg::PBRecord,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord > > parser(&pbrecord_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBObject.PbrecordEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBObject)
  return false;
#undef DO_
}

void PBObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, sint32> pbint32 = 1;
  if (!this->pbint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint32Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it) {
        entry.reset(pbint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint32> pbuint32 = 2;
  if (!this->pbuint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint32Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbuint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it) {
        entry.reset(pbuint32_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, sint64> pbint64 = 3;
  if (!this->pbint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint64Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it) {
        entry.reset(pbint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint64> pbuint64 = 4;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint64Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> pbdouble = 5;
  if (!this->pbdouble().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbdoubleEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdouble().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdouble().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdouble_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it) {
        entry.reset(pbdouble_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> pbstring = 6;
  if (!this->pbstring().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbstringEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbstring().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbstring().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbstring_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it) {
        entry.reset(pbstring_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBArray> pbarray = 7;
  if (!this->pbarray().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbarrayEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbarray().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbarray().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbarray_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it) {
        entry.reset(pbarray_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBObject> pbobject = 8;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbobjectEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBRecord> pbrecord = 9;
  if (!this->pbrecord().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbrecordEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbrecord().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbrecord().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbrecord_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it) {
        entry.reset(pbrecord_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBObject)
}

::google::protobuf::uint8* PBObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, sint32> pbint32 = 1;
  if (!this->pbint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint32Entry.key");
      }
    };

    if (deterministic &&
        this->pbint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->pbint32().begin();
          it != this->pbint32().end(); ++it) {
        entry.reset(pbint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint32> pbuint32 = 2;
  if (!this->pbuint32().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint32Entry.key");
      }
    };

    if (deterministic &&
        this->pbuint32().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint32().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint32_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbuint32().begin();
          it != this->pbuint32().end(); ++it) {
        entry.reset(pbuint32_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, sint64> pbint64 = 3;
  if (!this->pbint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbint64Entry.key");
      }
    };

    if (deterministic &&
        this->pbint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->pbint64().begin();
          it != this->pbint64().end(); ++it) {
        entry.reset(pbint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, uint64> pbuint64 = 4;
  if (!this->pbuint64().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.Pbuint64Entry.key");
      }
    };

    if (deterministic &&
        this->pbuint64().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbuint64().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbuint64_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbuint64().begin();
          it != this->pbuint64().end(); ++it) {
        entry.reset(pbuint64_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, double> pbdouble = 5;
  if (!this->pbdouble().empty()) {
    typedef ::google::protobuf::Map< ::std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbdoubleEntry.key");
      }
    };

    if (deterministic &&
        this->pbdouble().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdouble().size()]);
      typedef ::google::protobuf::Map< ::std::string, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdouble_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, double >::const_iterator
          it = this->pbdouble().begin();
          it != this->pbdouble().end(); ++it) {
        entry.reset(pbdouble_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> pbstring = 6;
  if (!this->pbstring().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbstringEntry.key");
      }
    };

    if (deterministic &&
        this->pbstring().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbstring().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbstring_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbstring().begin();
          it != this->pbstring().end(); ++it) {
        entry.reset(pbstring_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBArray> pbarray = 7;
  if (!this->pbarray().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbarrayEntry.key");
      }
    };

    if (deterministic &&
        this->pbarray().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbarray().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbarray_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
          it = this->pbarray().begin();
          it != this->pbarray().end(); ++it) {
        entry.reset(pbarray_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBObject> pbobject = 8;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbobjectEntry.key");
      }
    };

    if (deterministic &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .KFMsg.PBRecord> pbrecord = 9;
  if (!this->pbrecord().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBObject.PbrecordEntry.key");
      }
    };

    if (deterministic &&
        this->pbrecord().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbrecord().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbrecord_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
          it = this->pbrecord().begin();
          it != this->pbrecord().end(); ++it) {
        entry.reset(pbrecord_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBObject)
  return target;
}

size_t PBObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, sint32> pbint32 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbint32_size());
  {
    ::std::unique_ptr<PBObject_Pbint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->pbint32().begin();
        it != this->pbint32().end(); ++it) {
      entry.reset(pbint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, uint32> pbuint32 = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint32_size());
  {
    ::std::unique_ptr<PBObject_Pbuint32Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->pbuint32().begin();
        it != this->pbuint32().end(); ++it) {
      entry.reset(pbuint32_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, sint64> pbint64 = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbint64_size());
  {
    ::std::unique_ptr<PBObject_Pbint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->pbint64().begin();
        it != this->pbint64().end(); ++it) {
      entry.reset(pbint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, uint64> pbuint64 = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbuint64_size());
  {
    ::std::unique_ptr<PBObject_Pbuint64Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbuint64().begin();
        it != this->pbuint64().end(); ++it) {
      entry.reset(pbuint64_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, double> pbdouble = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdouble_size());
  {
    ::std::unique_ptr<PBObject_PbdoubleEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, double >::const_iterator
        it = this->pbdouble().begin();
        it != this->pbdouble().end(); ++it) {
      entry.reset(pbdouble_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, bytes> pbstring = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbstring_size());
  {
    ::std::unique_ptr<PBObject_PbstringEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbstring().begin();
        it != this->pbstring().end(); ++it) {
      entry.reset(pbstring_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .KFMsg.PBArray> pbarray = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbarray_size());
  {
    ::std::unique_ptr<PBObject_PbarrayEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::KFMsg::PBArray >::const_iterator
        it = this->pbarray().begin();
        it != this->pbarray().end(); ++it) {
      entry.reset(pbarray_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .KFMsg.PBObject> pbobject = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbobject_size());
  {
    ::std::unique_ptr<PBObject_PbobjectEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::KFMsg::PBObject >::const_iterator
        it = this->pbobject().begin();
        it != this->pbobject().end(); ++it) {
      entry.reset(pbobject_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .KFMsg.PBRecord> pbrecord = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbrecord_size());
  {
    ::std::unique_ptr<PBObject_PbrecordEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::KFMsg::PBRecord >::const_iterator
        it = this->pbrecord().begin();
        it != this->pbrecord().end(); ++it) {
      entry.reset(pbrecord_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PBObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBObject)
    MergeFrom(*source);
  }
}

void PBObject::MergeFrom(const PBObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbint32_.MergeFrom(from.pbint32_);
  pbuint32_.MergeFrom(from.pbuint32_);
  pbint64_.MergeFrom(from.pbint64_);
  pbuint64_.MergeFrom(from.pbuint64_);
  pbdouble_.MergeFrom(from.pbdouble_);
  pbstring_.MergeFrom(from.pbstring_);
  pbarray_.MergeFrom(from.pbarray_);
  pbobject_.MergeFrom(from.pbobject_);
  pbrecord_.MergeFrom(from.pbrecord_);
}

void PBObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBObject::CopyFrom(const PBObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBObject::IsInitialized() const {
  return true;
}

void PBObject::Swap(PBObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBObject::InternalSwap(PBObject* other) {
  using std::swap;
  pbint32_.Swap(&other->pbint32_);
  pbuint32_.Swap(&other->pbuint32_);
  pbint64_.Swap(&other->pbint64_);
  pbuint64_.Swap(&other->pbuint64_);
  pbdouble_.Swap(&other->pbdouble_);
  pbstring_.Swap(&other->pbstring_);
  pbarray_.Swap(&other->pbarray_);
  pbobject_.Swap(&other->pbobject_);
  pbrecord_.Swap(&other->pbrecord_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBObject::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBRecord_PbobjectEntry_DoNotUse::PBRecord_PbobjectEntry_DoNotUse() {}
PBRecord_PbobjectEntry_DoNotUse::PBRecord_PbobjectEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRecord_PbobjectEntry_DoNotUse::MergeFrom(const PBRecord_PbobjectEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRecord_PbobjectEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[12];
}
void PBRecord_PbobjectEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRecord::kPbobjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRecord::PBRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRecord)
}
PBRecord::PBRecord(const PBRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbobject_.MergeFrom(from.pbobject_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRecord)
}

void PBRecord::SharedCtor() {
}

PBRecord::~PBRecord() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRecord)
  SharedDtor();
}

void PBRecord::SharedDtor() {
}

void PBRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRecord::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRecord& PBRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base);
  return *internal_default_instance();
}


void PBRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbobject_.Clear();
  _internal_metadata_.Clear();
}

bool PBRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .KFMsg.PBObject> pbobject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBRecord_PbobjectEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRecord_PbobjectEntry_DoNotUse,
              ::google::protobuf::uint64, ::KFMsg::PBObject,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject > > parser(&pbobject_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRecord)
  return false;
#undef DO_
}

void PBRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .KFMsg.PBObject> pbobject = 1;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRecord)
}

::google::protobuf::uint8* PBRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .KFMsg.PBObject> pbobject = 1;
  if (!this->pbobject().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->pbobject().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbobject().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbobject_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
          it = this->pbobject().begin();
          it != this->pbobject().end(); ++it) {
        entry.reset(pbobject_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRecord)
  return target;
}

size_t PBRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .KFMsg.PBObject> pbobject = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbobject_size());
  {
    ::std::unique_ptr<PBRecord_PbobjectEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::KFMsg::PBObject >::const_iterator
        it = this->pbobject().begin();
        it != this->pbobject().end(); ++it) {
      entry.reset(pbobject_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRecord)
    MergeFrom(*source);
  }
}

void PBRecord::MergeFrom(const PBRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbobject_.MergeFrom(from.pbobject_);
}

void PBRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRecord::CopyFrom(const PBRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRecord::IsInitialized() const {
  return true;
}

void PBRecord::Swap(PBRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRecord::InternalSwap(PBRecord* other) {
  using std::swap;
  pbobject_.Swap(&other->pbobject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRecord::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBRankData_PbdataEntry_DoNotUse::PBRankData_PbdataEntry_DoNotUse() {}
PBRankData_PbdataEntry_DoNotUse::PBRankData_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRankData_PbdataEntry_DoNotUse::MergeFrom(const PBRankData_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRankData_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[14];
}
void PBRankData_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRankData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRankData::kRankindexFieldNumber;
const int PBRankData::kPlayeridFieldNumber;
const int PBRankData::kRankscoreFieldNumber;
const int PBRankData::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRankData::PBRankData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBRankData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRankData)
}
PBRankData::PBRankData(const PBRankData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rankindex_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRankData)
}

void PBRankData::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankindex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
}

PBRankData::~PBRankData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRankData)
  SharedDtor();
}

void PBRankData::SharedDtor() {
}

void PBRankData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRankData::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRankData& PBRankData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBRankData.base);
  return *internal_default_instance();
}


void PBRankData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankindex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
  _internal_metadata_.Clear();
}

bool PBRankData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRankData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rankscore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rankscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PBRankData_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRankData_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRankData.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRankData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRankData)
  return false;
#undef DO_
}

void PBRankData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankindex(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->rankscore(), output);
  }

  // map<string, bytes> pbdata = 4;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRankData.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRankData)
}

::google::protobuf::uint8* PBRankData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankindex(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->rankscore(), target);
  }

  // map<string, bytes> pbdata = 4;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRankData.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRankData)
  return target;
}

size_t PBRankData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRankData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rankscore());
  }

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRankData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRankData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRankData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRankData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRankData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRankData)
    MergeFrom(*source);
  }
}

void PBRankData::MergeFrom(const PBRankData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRankData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankscore() != 0) {
    set_rankscore(from.rankscore());
  }
  if (from.rankindex() != 0) {
    set_rankindex(from.rankindex());
  }
}

void PBRankData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRankData::CopyFrom(const PBRankData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRankData::IsInitialized() const {
  return true;
}

void PBRankData::Swap(PBRankData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRankData::InternalSwap(PBRankData* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(playerid_, other->playerid_);
  swap(rankscore_, other->rankscore_);
  swap(rankindex_, other->rankindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRankData::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRankDatas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRankDatas::kRankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRankDatas::PBRankDatas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBRankDatas.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRankDatas)
}
PBRankDatas::PBRankDatas(const PBRankDatas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rankdata_(from.rankdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRankDatas)
}

void PBRankDatas::SharedCtor() {
}

PBRankDatas::~PBRankDatas() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRankDatas)
  SharedDtor();
}

void PBRankDatas::SharedDtor() {
}

void PBRankDatas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRankDatas::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRankDatas& PBRankDatas::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBRankDatas.base);
  return *internal_default_instance();
}


void PBRankDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankdata_.Clear();
  _internal_metadata_.Clear();
}

bool PBRankDatas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRankDatas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBRankData rankdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRankDatas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRankDatas)
  return false;
#undef DO_
}

void PBRankDatas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBRankData rankdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->rankdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRankDatas)
}

::google::protobuf::uint8* PBRankDatas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBRankData rankdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->rankdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRankDatas)
  return target;
}

size_t PBRankDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRankDatas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRankData rankdata = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rankdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rankdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRankDatas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRankDatas)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRankDatas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRankDatas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRankDatas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRankDatas)
    MergeFrom(*source);
  }
}

void PBRankDatas::MergeFrom(const PBRankDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRankDatas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankdata_.MergeFrom(from.rankdata_);
}

void PBRankDatas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRankDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRankDatas::CopyFrom(const PBRankDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRankDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRankDatas::IsInitialized() const {
  return true;
}

void PBRankDatas::Swap(PBRankDatas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRankDatas::InternalSwap(PBRankDatas* other) {
  using std::swap;
  CastToBase(&rankdata_)->InternalSwap(CastToBase(&other->rankdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRankDatas::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBTaskData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTaskData::kIdFieldNumber;
const int PBTaskData::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTaskData::PBTaskData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBTaskData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBTaskData)
}
PBTaskData::PBTaskData(const PBTaskData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&id_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBTaskData)
}

void PBTaskData::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
}

PBTaskData::~PBTaskData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBTaskData)
  SharedDtor();
}

void PBTaskData::SharedDtor() {
}

void PBTaskData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBTaskData::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBTaskData& PBTaskData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBTaskData.base);
  return *internal_default_instance();
}


void PBTaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBTaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&id_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool PBTaskData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBTaskData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBTaskData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBTaskData)
  return false;
#undef DO_
}

void PBTaskData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBTaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBTaskData)
}

::google::protobuf::uint8* PBTaskData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBTaskData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBTaskData)
  return target;
}

size_t PBTaskData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBTaskData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBTaskData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBTaskData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTaskData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBTaskData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBTaskData)
    MergeFrom(*source);
  }
}

void PBTaskData::MergeFrom(const PBTaskData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBTaskData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void PBTaskData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTaskData::CopyFrom(const PBTaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTaskData::IsInitialized() const {
  return true;
}

void PBTaskData::Swap(PBTaskData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTaskData::InternalSwap(PBTaskData* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBTaskData::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBTaskDatas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTaskDatas::kTaskdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTaskDatas::PBTaskDatas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBTaskDatas.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBTaskDatas)
}
PBTaskDatas::PBTaskDatas(const PBTaskDatas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      taskdata_(from.taskdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBTaskDatas)
}

void PBTaskDatas::SharedCtor() {
}

PBTaskDatas::~PBTaskDatas() {
  // @@protoc_insertion_point(destructor:KFMsg.PBTaskDatas)
  SharedDtor();
}

void PBTaskDatas::SharedDtor() {
}

void PBTaskDatas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBTaskDatas::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBTaskDatas& PBTaskDatas::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBTaskDatas.base);
  return *internal_default_instance();
}


void PBTaskDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBTaskDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskdata_.Clear();
  _internal_metadata_.Clear();
}

bool PBTaskDatas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBTaskDatas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBTaskData taskdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_taskdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBTaskDatas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBTaskDatas)
  return false;
#undef DO_
}

void PBTaskDatas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBTaskDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBTaskData taskdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taskdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->taskdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBTaskDatas)
}

::google::protobuf::uint8* PBTaskDatas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBTaskDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBTaskData taskdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->taskdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->taskdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBTaskDatas)
  return target;
}

size_t PBTaskDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBTaskDatas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBTaskData taskdata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->taskdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->taskdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBTaskDatas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBTaskDatas)
  GOOGLE_DCHECK_NE(&from, this);
  const PBTaskDatas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTaskDatas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBTaskDatas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBTaskDatas)
    MergeFrom(*source);
  }
}

void PBTaskDatas::MergeFrom(const PBTaskDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBTaskDatas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  taskdata_.MergeFrom(from.taskdata_);
}

void PBTaskDatas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBTaskDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTaskDatas::CopyFrom(const PBTaskDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBTaskDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTaskDatas::IsInitialized() const {
  return true;
}

void PBTaskDatas::Swap(PBTaskDatas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTaskDatas::InternalSwap(PBTaskDatas* other) {
  using std::swap;
  CastToBase(&taskdata_)->InternalSwap(CastToBase(&other->taskdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBTaskDatas::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBBattlePlayer::InitAsDefaultInstance() {
  ::KFMsg::_PBBattlePlayer_default_instance_._instance.get_mutable()->achieve_ = const_cast< ::KFMsg::PBTaskDatas*>(
      ::KFMsg::PBTaskDatas::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBattlePlayer::kServeridFieldNumber;
const int PBBattlePlayer::kPlayeridFieldNumber;
const int PBBattlePlayer::kNameFieldNumber;
const int PBBattlePlayer::kSexFieldNumber;
const int PBBattlePlayer::kIconFieldNumber;
const int PBBattlePlayer::kIconboxFieldNumber;
const int PBBattlePlayer::kGradingFieldNumber;
const int PBBattlePlayer::kModelidFieldNumber;
const int PBBattlePlayer::kClothesidFieldNumber;
const int PBBattlePlayer::kGroupidFieldNumber;
const int PBBattlePlayer::kCampidFieldNumber;
const int PBBattlePlayer::kAchieveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBattlePlayer::PBBattlePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattlePlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBBattlePlayer)
}
PBBattlePlayer::PBBattlePlayer(const PBBattlePlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  iconbox_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iconbox().size() > 0) {
    iconbox_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconbox_);
  }
  if (from.has_achieve()) {
    achieve_ = new ::KFMsg::PBTaskDatas(*from.achieve_);
  } else {
    achieve_ = NULL;
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBBattlePlayer)
}

void PBBattlePlayer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconbox_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&achieve_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&achieve_)) + sizeof(campid_));
}

PBBattlePlayer::~PBBattlePlayer() {
  // @@protoc_insertion_point(destructor:KFMsg.PBBattlePlayer)
  SharedDtor();
}

void PBBattlePlayer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconbox_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete achieve_;
}

void PBBattlePlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBBattlePlayer::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBBattlePlayer& PBBattlePlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBBattlePlayer.base);
  return *internal_default_instance();
}


void PBBattlePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBBattlePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && achieve_ != NULL) {
    delete achieve_;
  }
  achieve_ = NULL;
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool PBBattlePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBBattlePlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes icon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_icon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes iconbox = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_iconbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grading = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 modelid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 clothesid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clothesid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBTaskDatas achieve = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_achieve()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBBattlePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBBattlePlayer)
  return false;
#undef DO_
}

void PBBattlePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBBattlePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sex(), output);
  }

  // bytes icon = 5;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->icon(), output);
  }

  // bytes iconbox = 6;
  if (this->iconbox().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->iconbox(), output);
  }

  // uint32 grading = 7;
  if (this->grading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->grading(), output);
  }

  // uint32 modelid = 8;
  if (this->modelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->modelid(), output);
  }

  // uint32 clothesid = 9;
  if (this->clothesid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->clothesid(), output);
  }

  // uint64 groupid = 10;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->groupid(), output);
  }

  // uint32 campid = 11;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->campid(), output);
  }

  // .KFMsg.PBTaskDatas achieve = 12;
  if (this->has_achieve()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_achieve(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBBattlePlayer)
}

::google::protobuf::uint8* PBBattlePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBBattlePlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sex(), target);
  }

  // bytes icon = 5;
  if (this->icon().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->icon(), target);
  }

  // bytes iconbox = 6;
  if (this->iconbox().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->iconbox(), target);
  }

  // uint32 grading = 7;
  if (this->grading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->grading(), target);
  }

  // uint32 modelid = 8;
  if (this->modelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->modelid(), target);
  }

  // uint32 clothesid = 9;
  if (this->clothesid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->clothesid(), target);
  }

  // uint64 groupid = 10;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->groupid(), target);
  }

  // uint32 campid = 11;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->campid(), target);
  }

  // .KFMsg.PBTaskDatas achieve = 12;
  if (this->has_achieve()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_achieve(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBBattlePlayer)
  return target;
}

size_t PBBattlePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBBattlePlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes icon = 5;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->icon());
  }

  // bytes iconbox = 6;
  if (this->iconbox().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->iconbox());
  }

  // .KFMsg.PBTaskDatas achieve = 12;
  if (this->has_achieve()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *achieve_);
  }

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // uint32 grading = 7;
  if (this->grading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grading());
  }

  // uint32 modelid = 8;
  if (this->modelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modelid());
  }

  // uint32 clothesid = 9;
  if (this->clothesid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clothesid());
  }

  // uint64 groupid = 10;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint32 campid = 11;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBBattlePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBBattlePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const PBBattlePlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBattlePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBBattlePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBBattlePlayer)
    MergeFrom(*source);
  }
}

void PBBattlePlayer::MergeFrom(const PBBattlePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBBattlePlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.iconbox().size() > 0) {

    iconbox_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconbox_);
  }
  if (from.has_achieve()) {
    mutable_achieve()->::KFMsg::PBTaskDatas::MergeFrom(from.achieve());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.grading() != 0) {
    set_grading(from.grading());
  }
  if (from.modelid() != 0) {
    set_modelid(from.modelid());
  }
  if (from.clothesid() != 0) {
    set_clothesid(from.clothesid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void PBBattlePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBBattlePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBattlePlayer::CopyFrom(const PBBattlePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBBattlePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBattlePlayer::IsInitialized() const {
  return true;
}

void PBBattlePlayer::Swap(PBBattlePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBattlePlayer::InternalSwap(PBBattlePlayer* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_.Swap(&other->icon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  iconbox_.Swap(&other->iconbox_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(achieve_, other->achieve_);
  swap(serverid_, other->serverid_);
  swap(playerid_, other->playerid_);
  swap(sex_, other->sex_);
  swap(grading_, other->grading_);
  swap(modelid_, other->modelid_);
  swap(clothesid_, other->clothesid_);
  swap(groupid_, other->groupid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBBattlePlayer::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBBattleCamp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBattleCamp::kCampidFieldNumber;
const int PBBattleCamp::kPbplayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBattleCamp::PBBattleCamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleCamp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBBattleCamp)
}
PBBattleCamp::PBBattleCamp(const PBBattleCamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbplayer_(from.pbplayer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  campid_ = from.campid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBBattleCamp)
}

void PBBattleCamp::SharedCtor() {
  campid_ = 0u;
}

PBBattleCamp::~PBBattleCamp() {
  // @@protoc_insertion_point(destructor:KFMsg.PBBattleCamp)
  SharedDtor();
}

void PBBattleCamp::SharedDtor() {
}

void PBBattleCamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBBattleCamp::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBBattleCamp& PBBattleCamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBBattleCamp.base);
  return *internal_default_instance();
}


void PBBattleCamp::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBBattleCamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbplayer_.Clear();
  campid_ = 0u;
  _internal_metadata_.Clear();
}

bool PBBattleCamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBBattleCamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 campid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBBattleCamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBBattleCamp)
  return false;
#undef DO_
}

void PBBattleCamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBBattleCamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 campid = 1;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->campid(), output);
  }

  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbplayer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbplayer(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBBattleCamp)
}

::google::protobuf::uint8* PBBattleCamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBBattleCamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 campid = 1;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->campid(), target);
  }

  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbplayer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbplayer(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBBattleCamp)
  return target;
}

size_t PBBattleCamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBBattleCamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbplayer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbplayer(static_cast<int>(i)));
    }
  }

  // uint32 campid = 1;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBBattleCamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBBattleCamp)
  GOOGLE_DCHECK_NE(&from, this);
  const PBBattleCamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBattleCamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBBattleCamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBBattleCamp)
    MergeFrom(*source);
  }
}

void PBBattleCamp::MergeFrom(const PBBattleCamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBBattleCamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbplayer_.MergeFrom(from.pbplayer_);
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void PBBattleCamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBBattleCamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBattleCamp::CopyFrom(const PBBattleCamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBBattleCamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBattleCamp::IsInitialized() const {
  return true;
}

void PBBattleCamp::Swap(PBBattleCamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBattleCamp::InternalSwap(PBBattleCamp* other) {
  using std::swap;
  CastToBase(&pbplayer_)->InternalSwap(CastToBase(&other->pbplayer_));
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBBattleCamp::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBMatchGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMatchGroup::kGroupidFieldNumber;
const int PBMatchGroup::kPbplayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMatchGroup::PBMatchGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBMatchGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMatchGroup)
}
PBMatchGroup::PBMatchGroup(const PBMatchGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbplayer_(from.pbplayer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupid_ = from.groupid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMatchGroup)
}

void PBMatchGroup::SharedCtor() {
  groupid_ = GOOGLE_ULONGLONG(0);
}

PBMatchGroup::~PBMatchGroup() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMatchGroup)
  SharedDtor();
}

void PBMatchGroup::SharedDtor() {
}

void PBMatchGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMatchGroup::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMatchGroup& PBMatchGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBMatchGroup.base);
  return *internal_default_instance();
}


void PBMatchGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMatchGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbplayer_.Clear();
  groupid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBMatchGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMatchGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMatchGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMatchGroup)
  return false;
#undef DO_
}

void PBMatchGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMatchGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbplayer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbplayer(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMatchGroup)
}

::google::protobuf::uint8* PBMatchGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMatchGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbplayer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbplayer(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMatchGroup)
  return target;
}

size_t PBMatchGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMatchGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbplayer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbplayer(static_cast<int>(i)));
    }
  }

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMatchGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMatchGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMatchGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMatchGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMatchGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMatchGroup)
    MergeFrom(*source);
  }
}

void PBMatchGroup::MergeFrom(const PBMatchGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMatchGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbplayer_.MergeFrom(from.pbplayer_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void PBMatchGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMatchGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMatchGroup::CopyFrom(const PBMatchGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMatchGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMatchGroup::IsInitialized() const {
  return true;
}

void PBMatchGroup::Swap(PBMatchGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMatchGroup::InternalSwap(PBMatchGroup* other) {
  using std::swap;
  CastToBase(&pbplayer_)->InternalSwap(CastToBase(&other->pbplayer_));
  swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMatchGroup::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBGuestData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGuestData::kGuestidFieldNumber;
const int PBGuestData::kGuesticonFieldNumber;
const int PBGuestData::kGuesticonboxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGuestData::PBGuestData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBGuestData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBGuestData)
}
PBGuestData::PBGuestData(const PBGuestData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guesticon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guesticon().size() > 0) {
    guesticon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guesticon_);
  }
  guesticonbox_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guesticonbox().size() > 0) {
    guesticonbox_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guesticonbox_);
  }
  guestid_ = from.guestid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBGuestData)
}

void PBGuestData::SharedCtor() {
  guesticon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guesticonbox_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guestid_ = GOOGLE_ULONGLONG(0);
}

PBGuestData::~PBGuestData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBGuestData)
  SharedDtor();
}

void PBGuestData::SharedDtor() {
  guesticon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guesticonbox_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBGuestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBGuestData::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBGuestData& PBGuestData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBGuestData.base);
  return *internal_default_instance();
}


void PBGuestData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBGuestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guesticon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guesticonbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guestid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBGuestData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBGuestData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guestid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes guesticon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guesticon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes guesticonbox = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guesticonbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBGuestData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBGuestData)
  return false;
#undef DO_
}

void PBGuestData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBGuestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guestid = 1;
  if (this->guestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guestid(), output);
  }

  // bytes guesticon = 2;
  if (this->guesticon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->guesticon(), output);
  }

  // bytes guesticonbox = 3;
  if (this->guesticonbox().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->guesticonbox(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBGuestData)
}

::google::protobuf::uint8* PBGuestData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBGuestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guestid = 1;
  if (this->guestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guestid(), target);
  }

  // bytes guesticon = 2;
  if (this->guesticon().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->guesticon(), target);
  }

  // bytes guesticonbox = 3;
  if (this->guesticonbox().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->guesticonbox(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBGuestData)
  return target;
}

size_t PBGuestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBGuestData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes guesticon = 2;
  if (this->guesticon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guesticon());
  }

  // bytes guesticonbox = 3;
  if (this->guesticonbox().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guesticonbox());
  }

  // uint64 guestid = 1;
  if (this->guestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBGuestData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBGuestData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBGuestData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGuestData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBGuestData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBGuestData)
    MergeFrom(*source);
  }
}

void PBGuestData::MergeFrom(const PBGuestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBGuestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guesticon().size() > 0) {

    guesticon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guesticon_);
  }
  if (from.guesticonbox().size() > 0) {

    guesticonbox_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guesticonbox_);
  }
  if (from.guestid() != 0) {
    set_guestid(from.guestid());
  }
}

void PBGuestData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBGuestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGuestData::CopyFrom(const PBGuestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBGuestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGuestData::IsInitialized() const {
  return true;
}

void PBGuestData::Swap(PBGuestData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGuestData::InternalSwap(PBGuestData* other) {
  using std::swap;
  guesticon_.Swap(&other->guesticon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guesticonbox_.Swap(&other->guesticonbox_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guestid_, other->guestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBGuestData::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBBattleScore_PbdataEntry_DoNotUse::PBBattleScore_PbdataEntry_DoNotUse() {}
PBBattleScore_PbdataEntry_DoNotUse::PBBattleScore_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBBattleScore_PbdataEntry_DoNotUse::MergeFrom(const PBBattleScore_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBBattleScore_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[23];
}
void PBBattleScore_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBBattleScore::InitAsDefaultInstance() {
  ::KFMsg::_PBBattleScore_default_instance_._instance.get_mutable()->achieve_ = const_cast< ::KFMsg::PBTaskDatas*>(
      ::KFMsg::PBTaskDatas::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBBattleScore::kPlayeridFieldNumber;
const int PBBattleScore::kRankingFieldNumber;
const int PBBattleScore::kPbdataFieldNumber;
const int PBBattleScore::kScoreFieldNumber;
const int PBBattleScore::kMatchidFieldNumber;
const int PBBattleScore::kRewardFieldNumber;
const int PBBattleScore::kAchieveFieldNumber;
const int PBBattleScore::kMembersFieldNumber;
const int PBBattleScore::kPlayercountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBBattleScore::PBBattleScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleScore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBBattleScore)
}
PBBattleScore::PBBattleScore(const PBBattleScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reward().size() > 0) {
    reward_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_);
  }
  if (from.has_achieve()) {
    achieve_ = new ::KFMsg::PBTaskDatas(*from.achieve_);
  } else {
    achieve_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playercount_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(playercount_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBBattleScore)
}

void PBBattleScore::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&achieve_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playercount_) -
      reinterpret_cast<char*>(&achieve_)) + sizeof(playercount_));
}

PBBattleScore::~PBBattleScore() {
  // @@protoc_insertion_point(destructor:KFMsg.PBBattleScore)
  SharedDtor();
}

void PBBattleScore::SharedDtor() {
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete achieve_;
}

void PBBattleScore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBBattleScore::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBBattleScore& PBBattleScore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBBattleScore.base);
  return *internal_default_instance();
}


void PBBattleScore::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBBattleScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  members_.Clear();
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && achieve_ != NULL) {
    delete achieve_;
  }
  achieve_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playercount_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(playercount_));
  _internal_metadata_.Clear();
}

bool PBBattleScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBBattleScore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ranking = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PBBattleScore_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBBattleScore_PbdataEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBBattleScore.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes reward = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBTaskDatas achieve = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_achieve()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 members = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 66u, input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playercount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBBattleScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBBattleScore)
  return false;
#undef DO_
}

void PBBattleScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBBattleScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 ranking = 2;
  if (this->ranking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ranking(), output);
  }

  // map<string, uint32> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBBattleScore.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBBattleScore_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBBattleScore_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // sint32 score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->score(), output);
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->matchid(), output);
  }

  // bytes reward = 6;
  if (this->reward().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->reward(), output);
  }

  // .KFMsg.PBTaskDatas achieve = 7;
  if (this->has_achieve()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_achieve(), output);
  }

  // repeated uint64 members = 8;
  if (this->members_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _members_cached_byte_size_));
  }
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->members(i), output);
  }

  // uint32 playercount = 9;
  if (this->playercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->playercount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBBattleScore)
}

::google::protobuf::uint8* PBBattleScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBBattleScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 ranking = 2;
  if (this->ranking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ranking(), target);
  }

  // map<string, uint32> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBBattleScore.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBBattleScore_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBBattleScore_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // sint32 score = 4;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->score(), target);
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->matchid(), target);
  }

  // bytes reward = 6;
  if (this->reward().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->reward(), target);
  }

  // .KFMsg.PBTaskDatas achieve = 7;
  if (this->has_achieve()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_achieve(), deterministic, target);
  }

  // repeated uint64 members = 8;
  if (this->members_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _members_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->members_, target);
  }

  // uint32 playercount = 9;
  if (this->playercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->playercount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBBattleScore)
  return target;
}

size_t PBBattleScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBBattleScore)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<PBBattleScore_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint64 members = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->members_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _members_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes reward = 6;
  if (this->reward().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  // .KFMsg.PBTaskDatas achieve = 7;
  if (this->has_achieve()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *achieve_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 ranking = 2;
  if (this->ranking() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ranking());
  }

  // sint32 score = 4;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->score());
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 playercount = 9;
  if (this->playercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playercount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBBattleScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBBattleScore)
  GOOGLE_DCHECK_NE(&from, this);
  const PBBattleScore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBBattleScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBBattleScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBBattleScore)
    MergeFrom(*source);
  }
}

void PBBattleScore::MergeFrom(const PBBattleScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBBattleScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  members_.MergeFrom(from.members_);
  if (from.reward().size() > 0) {

    reward_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_);
  }
  if (from.has_achieve()) {
    mutable_achieve()->::KFMsg::PBTaskDatas::MergeFrom(from.achieve());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.ranking() != 0) {
    set_ranking(from.ranking());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.playercount() != 0) {
    set_playercount(from.playercount());
  }
}

void PBBattleScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBBattleScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBattleScore::CopyFrom(const PBBattleScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBBattleScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBattleScore::IsInitialized() const {
  return true;
}

void PBBattleScore::Swap(PBBattleScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBBattleScore::InternalSwap(PBBattleScore* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  members_.InternalSwap(&other->members_);
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(achieve_, other->achieve_);
  swap(playerid_, other->playerid_);
  swap(ranking_, other->ranking_);
  swap(score_, other->score_);
  swap(matchid_, other->matchid_);
  swap(playercount_, other->playercount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBBattleScore::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRecentData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRecentData::kPlayeridFieldNumber;
const int PBRecentData::kRankingFieldNumber;
const int PBRecentData::kTotalnumFieldNumber;
const int PBRecentData::kKillFieldNumber;
const int PBRecentData::kScoreFieldNumber;
const int PBRecentData::kBekillidFieldNumber;
const int PBRecentData::kRelationtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRecentData::PBRecentData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFDefineMessage_2eproto::scc_info_PBRecentData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRecentData)
}
PBRecentData::PBRecentData(const PBRecentData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&relationtype_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(relationtype_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRecentData)
}

void PBRecentData::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(relationtype_));
}

PBRecentData::~PBRecentData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRecentData)
  SharedDtor();
}

void PBRecentData::SharedDtor() {
}

void PBRecentData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRecentData::descriptor() {
  ::protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRecentData& PBRecentData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFDefineMessage_2eproto::scc_info_PBRecentData.base);
  return *internal_default_instance();
}


void PBRecentData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRecentData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(relationtype_));
  _internal_metadata_.Clear();
}

bool PBRecentData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRecentData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ranking = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 totalnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kill = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bekillid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bekillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 relationtype = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relationtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRecentData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRecentData)
  return false;
#undef DO_
}

void PBRecentData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRecentData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 ranking = 2;
  if (this->ranking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ranking(), output);
  }

  // uint32 totalnum = 3;
  if (this->totalnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totalnum(), output);
  }

  // uint32 kill = 4;
  if (this->kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->kill(), output);
  }

  // uint32 score = 5;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->score(), output);
  }

  // uint32 bekillid = 6;
  if (this->bekillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->bekillid(), output);
  }

  // uint32 relationtype = 7;
  if (this->relationtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->relationtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRecentData)
}

::google::protobuf::uint8* PBRecentData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRecentData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 ranking = 2;
  if (this->ranking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ranking(), target);
  }

  // uint32 totalnum = 3;
  if (this->totalnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totalnum(), target);
  }

  // uint32 kill = 4;
  if (this->kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->kill(), target);
  }

  // uint32 score = 5;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->score(), target);
  }

  // uint32 bekillid = 6;
  if (this->bekillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->bekillid(), target);
  }

  // uint32 relationtype = 7;
  if (this->relationtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->relationtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRecentData)
  return target;
}

size_t PBRecentData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRecentData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 ranking = 2;
  if (this->ranking() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ranking());
  }

  // uint32 totalnum = 3;
  if (this->totalnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalnum());
  }

  // uint32 kill = 4;
  if (this->kill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kill());
  }

  // uint32 score = 5;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  // uint32 bekillid = 6;
  if (this->bekillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bekillid());
  }

  // uint32 relationtype = 7;
  if (this->relationtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->relationtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRecentData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRecentData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRecentData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRecentData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRecentData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRecentData)
    MergeFrom(*source);
  }
}

void PBRecentData::MergeFrom(const PBRecentData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRecentData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.ranking() != 0) {
    set_ranking(from.ranking());
  }
  if (from.totalnum() != 0) {
    set_totalnum(from.totalnum());
  }
  if (from.kill() != 0) {
    set_kill(from.kill());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.bekillid() != 0) {
    set_bekillid(from.bekillid());
  }
  if (from.relationtype() != 0) {
    set_relationtype(from.relationtype());
  }
}

void PBRecentData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRecentData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRecentData::CopyFrom(const PBRecentData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRecentData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRecentData::IsInitialized() const {
  return true;
}

void PBRecentData::Swap(PBRecentData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRecentData::InternalSwap(PBRecentData* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(ranking_, other->ranking_);
  swap(totalnum_, other->totalnum_);
  swap(kill_, other->kill_);
  swap(score_, other->score_);
  swap(bekillid_, other->bekillid_);
  swap(relationtype_, other->relationtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRecentData::GetMetadata() const {
  protobuf_KFDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBArray_Pbuint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBArray_Pbuint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBArray_Pbuint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBArray* Arena::CreateMaybeMessage< ::KFMsg::PBArray >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbuint32Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbuint32Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbuint32Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_Pbuint64Entry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_Pbuint64Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_Pbuint64Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbdoubleEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbdoubleEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbdoubleEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbstringEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbstringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbstringEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbarrayEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbarrayEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbarrayEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbobjectEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbobjectEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbobjectEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject_PbrecordEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBObject_PbrecordEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject_PbrecordEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBObject* Arena::CreateMaybeMessage< ::KFMsg::PBObject >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRecord_PbobjectEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRecord_PbobjectEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRecord_PbobjectEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRecord* Arena::CreateMaybeMessage< ::KFMsg::PBRecord >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankData_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRankData_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankData_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankData* Arena::CreateMaybeMessage< ::KFMsg::PBRankData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankDatas* Arena::CreateMaybeMessage< ::KFMsg::PBRankDatas >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankDatas >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBTaskData* Arena::CreateMaybeMessage< ::KFMsg::PBTaskData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBTaskData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBTaskDatas* Arena::CreateMaybeMessage< ::KFMsg::PBTaskDatas >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBTaskDatas >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBBattlePlayer* Arena::CreateMaybeMessage< ::KFMsg::PBBattlePlayer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBBattlePlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBBattleCamp* Arena::CreateMaybeMessage< ::KFMsg::PBBattleCamp >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBBattleCamp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMatchGroup* Arena::CreateMaybeMessage< ::KFMsg::PBMatchGroup >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMatchGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBGuestData* Arena::CreateMaybeMessage< ::KFMsg::PBGuestData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBGuestData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBBattleScore_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBBattleScore_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBBattleScore_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBBattleScore* Arena::CreateMaybeMessage< ::KFMsg::PBBattleScore >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBBattleScore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRecentData* Arena::CreateMaybeMessage< ::KFMsg::PBRecentData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRecentData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
