// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFDeployMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "KFDeployMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace KFMsg {

namespace {

const ::google::protobuf::Descriptor* S2SRegisterAgentToServerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2SRegisterAgentToServerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* S2SUpdateServerStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  S2SUpdateServerStatusReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DeployProtocol_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_KFDeployMessage_2eproto() {
  protobuf_AddDesc_KFDeployMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "KFDeployMessage.proto");
  GOOGLE_CHECK(file != NULL);
  S2SRegisterAgentToServerReq_descriptor_ = file->message_type(0);
  static const int S2SRegisterAgentToServerReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SRegisterAgentToServerReq, agentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SRegisterAgentToServerReq, localip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SRegisterAgentToServerReq, interanetip_),
  };
  S2SRegisterAgentToServerReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S2SRegisterAgentToServerReq_descriptor_,
      S2SRegisterAgentToServerReq::default_instance_,
      S2SRegisterAgentToServerReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SRegisterAgentToServerReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SRegisterAgentToServerReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S2SRegisterAgentToServerReq));
  S2SUpdateServerStatusReq_descriptor_ = file->message_type(1);
  static const int S2SUpdateServerStatusReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, agentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, appname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, apptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, process_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, startuptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, isshutdown_),
  };
  S2SUpdateServerStatusReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      S2SUpdateServerStatusReq_descriptor_,
      S2SUpdateServerStatusReq::default_instance_,
      S2SUpdateServerStatusReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2SUpdateServerStatusReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(S2SUpdateServerStatusReq));
  DeployProtocol_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_KFDeployMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S2SRegisterAgentToServerReq_descriptor_, &S2SRegisterAgentToServerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    S2SUpdateServerStatusReq_descriptor_, &S2SUpdateServerStatusReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_KFDeployMessage_2eproto() {
  delete S2SRegisterAgentToServerReq::default_instance_;
  delete S2SRegisterAgentToServerReq_reflection_;
  delete S2SUpdateServerStatusReq::default_instance_;
  delete S2SUpdateServerStatusReq_reflection_;
}

void protobuf_AddDesc_KFDeployMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025KFDeployMessage.proto\022\005KFMsg\"T\n\033S2SReg"
    "isterAgentToServerReq\022\017\n\007agentid\030\001 \002(\r\022\017"
    "\n\007localip\030\002 \002(\t\022\023\n\013interanetip\030\003 \002(\t\"\226\001\n"
    "\030S2SUpdateServerStatusReq\022\017\n\007agentid\030\001 \002"
    "(\r\022\r\n\005appid\030\002 \002(\r\022\017\n\007appname\030\003 \002(\t\022\017\n\007ap"
    "ptype\030\004 \002(\t\022\017\n\007process\030\005 \002(\r\022\023\n\013startupt"
    "ime\030\006 \002(\004\022\022\n\nisshutdown\030\007 \002(\r*Z\n\016DeployP"
    "rotocol\022%\n S2S_REGISTER_AGENT_TO_SERVER_"
    "REQ\020\275P\022!\n\034S2S_UPDATE_SERVER_STATUS_REQ\020\276"
    "P", 361);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFDeployMessage.proto", &protobuf_RegisterTypes);
  S2SRegisterAgentToServerReq::default_instance_ = new S2SRegisterAgentToServerReq();
  S2SUpdateServerStatusReq::default_instance_ = new S2SUpdateServerStatusReq();
  S2SRegisterAgentToServerReq::default_instance_->InitAsDefaultInstance();
  S2SUpdateServerStatusReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_KFDeployMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_KFDeployMessage_2eproto {
  StaticDescriptorInitializer_KFDeployMessage_2eproto() {
    protobuf_AddDesc_KFDeployMessage_2eproto();
  }
} static_descriptor_initializer_KFDeployMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* DeployProtocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeployProtocol_descriptor_;
}
bool DeployProtocol_IsValid(int value) {
  switch(value) {
    case 10301:
    case 10302:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int S2SRegisterAgentToServerReq::kAgentidFieldNumber;
const int S2SRegisterAgentToServerReq::kLocalipFieldNumber;
const int S2SRegisterAgentToServerReq::kInteranetipFieldNumber;
#endif  // !_MSC_VER

S2SRegisterAgentToServerReq::S2SRegisterAgentToServerReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void S2SRegisterAgentToServerReq::InitAsDefaultInstance() {
}

S2SRegisterAgentToServerReq::S2SRegisterAgentToServerReq(const S2SRegisterAgentToServerReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void S2SRegisterAgentToServerReq::SharedCtor() {
  _cached_size_ = 0;
  agentid_ = 0u;
  localip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  interanetip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2SRegisterAgentToServerReq::~S2SRegisterAgentToServerReq() {
  SharedDtor();
}

void S2SRegisterAgentToServerReq::SharedDtor() {
  if (localip_ != &::google::protobuf::internal::kEmptyString) {
    delete localip_;
  }
  if (interanetip_ != &::google::protobuf::internal::kEmptyString) {
    delete interanetip_;
  }
  if (this != default_instance_) {
  }
}

void S2SRegisterAgentToServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2SRegisterAgentToServerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2SRegisterAgentToServerReq_descriptor_;
}

const S2SRegisterAgentToServerReq& S2SRegisterAgentToServerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDeployMessage_2eproto();
  return *default_instance_;
}

S2SRegisterAgentToServerReq* S2SRegisterAgentToServerReq::default_instance_ = NULL;

S2SRegisterAgentToServerReq* S2SRegisterAgentToServerReq::New() const {
  return new S2SRegisterAgentToServerReq;
}

void S2SRegisterAgentToServerReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    agentid_ = 0u;
    if (has_localip()) {
      if (localip_ != &::google::protobuf::internal::kEmptyString) {
        localip_->clear();
      }
    }
    if (has_interanetip()) {
      if (interanetip_ != &::google::protobuf::internal::kEmptyString) {
        interanetip_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S2SRegisterAgentToServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 agentid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agentid_)));
          set_has_agentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_localip;
        break;
      }

      // required string localip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_localip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->localip().data(), this->localip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_interanetip;
        break;
      }

      // required string interanetip = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_interanetip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interanetip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->interanetip().data(), this->interanetip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void S2SRegisterAgentToServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 agentid = 1;
  if (has_agentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->agentid(), output);
  }

  // required string localip = 2;
  if (has_localip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localip().data(), this->localip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->localip(), output);
  }

  // required string interanetip = 3;
  if (has_interanetip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->interanetip().data(), this->interanetip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->interanetip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* S2SRegisterAgentToServerReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 agentid = 1;
  if (has_agentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->agentid(), target);
  }

  // required string localip = 2;
  if (has_localip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->localip().data(), this->localip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localip(), target);
  }

  // required string interanetip = 3;
  if (has_interanetip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->interanetip().data(), this->interanetip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->interanetip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int S2SRegisterAgentToServerReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 agentid = 1;
    if (has_agentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->agentid());
    }

    // required string localip = 2;
    if (has_localip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localip());
    }

    // required string interanetip = 3;
    if (has_interanetip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interanetip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2SRegisterAgentToServerReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S2SRegisterAgentToServerReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2SRegisterAgentToServerReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2SRegisterAgentToServerReq::MergeFrom(const S2SRegisterAgentToServerReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_agentid()) {
      set_agentid(from.agentid());
    }
    if (from.has_localip()) {
      set_localip(from.localip());
    }
    if (from.has_interanetip()) {
      set_interanetip(from.interanetip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S2SRegisterAgentToServerReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRegisterAgentToServerReq::CopyFrom(const S2SRegisterAgentToServerReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRegisterAgentToServerReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void S2SRegisterAgentToServerReq::Swap(S2SRegisterAgentToServerReq* other) {
  if (other != this) {
    std::swap(agentid_, other->agentid_);
    std::swap(localip_, other->localip_);
    std::swap(interanetip_, other->interanetip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S2SRegisterAgentToServerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2SRegisterAgentToServerReq_descriptor_;
  metadata.reflection = S2SRegisterAgentToServerReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int S2SUpdateServerStatusReq::kAgentidFieldNumber;
const int S2SUpdateServerStatusReq::kAppidFieldNumber;
const int S2SUpdateServerStatusReq::kAppnameFieldNumber;
const int S2SUpdateServerStatusReq::kApptypeFieldNumber;
const int S2SUpdateServerStatusReq::kProcessFieldNumber;
const int S2SUpdateServerStatusReq::kStartuptimeFieldNumber;
const int S2SUpdateServerStatusReq::kIsshutdownFieldNumber;
#endif  // !_MSC_VER

S2SUpdateServerStatusReq::S2SUpdateServerStatusReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void S2SUpdateServerStatusReq::InitAsDefaultInstance() {
}

S2SUpdateServerStatusReq::S2SUpdateServerStatusReq(const S2SUpdateServerStatusReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void S2SUpdateServerStatusReq::SharedCtor() {
  _cached_size_ = 0;
  agentid_ = 0u;
  appid_ = 0u;
  appname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apptype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  process_ = 0u;
  startuptime_ = GOOGLE_ULONGLONG(0);
  isshutdown_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

S2SUpdateServerStatusReq::~S2SUpdateServerStatusReq() {
  SharedDtor();
}

void S2SUpdateServerStatusReq::SharedDtor() {
  if (appname_ != &::google::protobuf::internal::kEmptyString) {
    delete appname_;
  }
  if (apptype_ != &::google::protobuf::internal::kEmptyString) {
    delete apptype_;
  }
  if (this != default_instance_) {
  }
}

void S2SUpdateServerStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2SUpdateServerStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return S2SUpdateServerStatusReq_descriptor_;
}

const S2SUpdateServerStatusReq& S2SUpdateServerStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDeployMessage_2eproto();
  return *default_instance_;
}

S2SUpdateServerStatusReq* S2SUpdateServerStatusReq::default_instance_ = NULL;

S2SUpdateServerStatusReq* S2SUpdateServerStatusReq::New() const {
  return new S2SUpdateServerStatusReq;
}

void S2SUpdateServerStatusReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    agentid_ = 0u;
    appid_ = 0u;
    if (has_appname()) {
      if (appname_ != &::google::protobuf::internal::kEmptyString) {
        appname_->clear();
      }
    }
    if (has_apptype()) {
      if (apptype_ != &::google::protobuf::internal::kEmptyString) {
        apptype_->clear();
      }
    }
    process_ = 0u;
    startuptime_ = GOOGLE_ULONGLONG(0);
    isshutdown_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool S2SUpdateServerStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 agentid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agentid_)));
          set_has_agentid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_appid;
        break;
      }

      // required uint32 appid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_appname;
        break;
      }

      // required string appname = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_apptype;
        break;
      }

      // required string apptype = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apptype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_process;
        break;
      }

      // required uint32 process = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_process:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_)));
          set_has_process();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_startuptime;
        break;
      }

      // required uint64 startuptime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startuptime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &startuptime_)));
          set_has_startuptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_isshutdown;
        break;
      }

      // required uint32 isshutdown = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isshutdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isshutdown_)));
          set_has_isshutdown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void S2SUpdateServerStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 agentid = 1;
  if (has_agentid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->agentid(), output);
  }

  // required uint32 appid = 2;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // required string appname = 3;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->appname(), output);
  }

  // required string apptype = 4;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->apptype(), output);
  }

  // required uint32 process = 5;
  if (has_process()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->process(), output);
  }

  // required uint64 startuptime = 6;
  if (has_startuptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->startuptime(), output);
  }

  // required uint32 isshutdown = 7;
  if (has_isshutdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->isshutdown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* S2SUpdateServerStatusReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 agentid = 1;
  if (has_agentid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->agentid(), target);
  }

  // required uint32 appid = 2;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // required string appname = 3;
  if (has_appname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appname(), target);
  }

  // required string apptype = 4;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->apptype(), target);
  }

  // required uint32 process = 5;
  if (has_process()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->process(), target);
  }

  // required uint64 startuptime = 6;
  if (has_startuptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->startuptime(), target);
  }

  // required uint32 isshutdown = 7;
  if (has_isshutdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->isshutdown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int S2SUpdateServerStatusReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 agentid = 1;
    if (has_agentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->agentid());
    }

    // required uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // required string appname = 3;
    if (has_appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

    // required string apptype = 4;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // required uint32 process = 5;
    if (has_process()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->process());
    }

    // required uint64 startuptime = 6;
    if (has_startuptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->startuptime());
    }

    // required uint32 isshutdown = 7;
    if (has_isshutdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isshutdown());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2SUpdateServerStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const S2SUpdateServerStatusReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const S2SUpdateServerStatusReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void S2SUpdateServerStatusReq::MergeFrom(const S2SUpdateServerStatusReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_agentid()) {
      set_agentid(from.agentid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_appname()) {
      set_appname(from.appname());
    }
    if (from.has_apptype()) {
      set_apptype(from.apptype());
    }
    if (from.has_process()) {
      set_process(from.process());
    }
    if (from.has_startuptime()) {
      set_startuptime(from.startuptime());
    }
    if (from.has_isshutdown()) {
      set_isshutdown(from.isshutdown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void S2SUpdateServerStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateServerStatusReq::CopyFrom(const S2SUpdateServerStatusReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateServerStatusReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void S2SUpdateServerStatusReq::Swap(S2SUpdateServerStatusReq* other) {
  if (other != this) {
    std::swap(agentid_, other->agentid_);
    std::swap(appid_, other->appid_);
    std::swap(appname_, other->appname_);
    std::swap(apptype_, other->apptype_);
    std::swap(process_, other->process_);
    std::swap(startuptime_, other->startuptime_);
    std::swap(isshutdown_, other->isshutdown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata S2SUpdateServerStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = S2SUpdateServerStatusReq_descriptor_;
  metadata.reflection = S2SUpdateServerStatusReq_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

// @@protoc_insertion_point(global_scope)
