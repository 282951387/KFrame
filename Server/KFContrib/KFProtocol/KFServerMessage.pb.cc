// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFServerMessage.proto

#include "KFServerMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_KFDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBGuestData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBGuildIdArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBStrings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_PBObject;
}  // namespace protobuf_KFDefineMessage_2eproto
namespace protobuf_KFServerMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBLoginData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMails;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRelation;
}  // namespace protobuf_KFServerMessage_2eproto
namespace KFMsg {
class S2STransmitMessageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STransmitMessageReq>
      _instance;
} _S2STransmitMessageReq_default_instance_;
class S2SBroadcastMessageReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastMessageReq>
      _instance;
} _S2SBroadcastMessageReq_default_instance_;
class S2SBroadcastToWordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToWord>
      _instance;
} _S2SBroadcastToWord_default_instance_;
class S2SBroadcastToGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGame>
      _instance;
} _S2SBroadcastToGame_default_instance_;
class S2SBroadcastToGateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGate>
      _instance;
} _S2SBroadcastToGate_default_instance_;
class S2STransmitToPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STransmitToPlayer>
      _instance;
} _S2STransmitToPlayer_default_instance_;
class S2STransmitToServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STransmitToServer>
      _instance;
} _S2STransmitToServer_default_instance_;
class S2SUpdateZoneToProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateZoneToProxyReq>
      _instance;
} _S2SUpdateZoneToProxyReq_default_instance_;
class S2STransmitToDataShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STransmitToDataShardReq>
      _instance;
} _S2STransmitToDataShardReq_default_instance_;
class S2SSavePlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSavePlayerReq>
      _instance;
} _S2SSavePlayerReq_default_instance_;
class S2SDeletePlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeletePlayerReq>
      _instance;
} _S2SDeletePlayerReq_default_instance_;
class S2SUpdatePublicDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdatePublicDataReq>
      _instance;
} _S2SUpdatePublicDataReq_default_instance_;
class S2SKickGamePlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickGamePlayerReq>
      _instance;
} _S2SKickGamePlayerReq_default_instance_;
class S2SKickGatePlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickGatePlayerReq>
      _instance;
} _S2SKickGatePlayerReq_default_instance_;
class S2SLoginLoginVerifyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginLoginVerifyReq>
      _instance;
} _S2SLoginLoginVerifyReq_default_instance_;
class S2SLoginLoginVerifyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginLoginVerifyAck>
      _instance;
} _S2SLoginLoginVerifyAck_default_instance_;
class PBLoginDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBLoginData>
      _instance;
} _PBLoginData_default_instance_;
class S2SLoginWorldVerifyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginWorldVerifyReq>
      _instance;
} _S2SLoginWorldVerifyReq_default_instance_;
class S2SLoginFailedToLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginFailedToLoginAck>
      _instance;
} _S2SLoginFailedToLoginAck_default_instance_;
class S2SLoginTellTokenToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginTellTokenToGameReq>
      _instance;
} _S2SLoginTellTokenToGameReq_default_instance_;
class S2SLoginGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginGameAck>
      _instance;
} _S2SLoginGameAck_default_instance_;
class S2SLoginLoadPlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginLoadPlayerReq>
      _instance;
} _S2SLoginLoadPlayerReq_default_instance_;
class S2SLoginLoadPlayerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginLoadPlayerAck>
      _instance;
} _S2SLoginLoadPlayerAck_default_instance_;
class S2SLoginOutReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginOutReq>
      _instance;
} _S2SLoginOutReq_default_instance_;
class S2SPlayerDisconnectionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerDisconnectionReq>
      _instance;
} _S2SPlayerDisconnectionReq_default_instance_;
class S2SSetPlayerNameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameReq>
      _instance;
} _S2SSetPlayerNameReq_default_instance_;
class S2SSetPlayerNameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameAck>
      _instance;
} _S2SSetPlayerNameAck_default_instance_;
class S2SCreateRoleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateRoleReq>
      _instance;
} _S2SCreateRoleReq_default_instance_;
class S2SCreateRoleAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateRoleAck>
      _instance;
} _S2SCreateRoleAck_default_instance_;
class S2SPlayerEnterWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterWorldReq>
      _instance;
} _S2SPlayerEnterWorldReq_default_instance_;
class S2SPlayerLeaveWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveWorldReq>
      _instance;
} _S2SPlayerLeaveWorldReq_default_instance_;
class S2SGameSyncOnlineReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SGameSyncOnlineReq>
      _instance;
} _S2SGameSyncOnlineReq_default_instance_;
class S2SQueryMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailReq>
      _instance;
} _S2SQueryMailReq_default_instance_;
class PBMailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail>
      _instance;
} _PBMail_default_instance_;
class PBMailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMails>
      _instance;
} _PBMails_default_instance_;
class S2SQueryMailAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailAck>
      _instance;
} _S2SQueryMailAck_default_instance_;
class S2SDeleteMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDeleteMailReq>
      _instance;
} _S2SDeleteMailReq_default_instance_;
class S2SAddMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddMailReq>
      _instance;
} _S2SAddMailReq_default_instance_;
class S2SNoticeNewMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNoticeNewMailReq>
      _instance;
} _S2SNoticeNewMailReq_default_instance_;
class PBRelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation>
      _instance;
} _PBRelation_default_instance_;
class S2SQueryFriendReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendReq>
      _instance;
} _S2SQueryFriendReq_default_instance_;
class S2SQueryFriendInviteReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendInviteReq>
      _instance;
} _S2SQueryFriendInviteReq_default_instance_;
class S2SQueryFriendAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendAck>
      _instance;
} _S2SQueryFriendAck_default_instance_;
class S2SQueryFriendInviteAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendInviteAck>
      _instance;
} _S2SQueryFriendInviteAck_default_instance_;
class S2SAddFriendInviteReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendInviteReq>
      _instance;
} _S2SAddFriendInviteReq_default_instance_;
class S2SAddFriendInviteAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendInviteAck>
      _instance;
} _S2SAddFriendInviteAck_default_instance_;
class S2SDelFriendReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelFriendReq>
      _instance;
} _S2SDelFriendReq_default_instance_;
class S2SDelFriendAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelFriendAck>
      _instance;
} _S2SDelFriendAck_default_instance_;
class S2SDelFriendInviteReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelFriendInviteReq>
      _instance;
} _S2SDelFriendInviteReq_default_instance_;
class S2SAddFriendReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendReq>
      _instance;
} _S2SAddFriendReq_default_instance_;
class S2SAddFriendAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendAck>
      _instance;
} _S2SAddFriendAck_default_instance_;
class S2SUpdateFriendReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendReq>
      _instance;
} _S2SUpdateFriendReq_default_instance_;
class S2SUpdateFriendLinessReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendLinessReq>
      _instance;
} _S2SUpdateFriendLinessReq_default_instance_;
class S2SQueryBasicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryBasicReq>
      _instance;
} _S2SQueryBasicReq_default_instance_;
class S2SQueryBasicAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryBasicAck>
      _instance;
} _S2SQueryBasicAck_default_instance_;
class S2SQueryPlayerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerReq>
      _instance;
} _S2SQueryPlayerReq_default_instance_;
class S2SQueryPlayerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerAck>
      _instance;
} _S2SQueryPlayerAck_default_instance_;
class S2SUpdateMailFlagReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailFlagReq>
      _instance;
} _S2SUpdateMailFlagReq_default_instance_;
class S2SUpdateMailFlagAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailFlagAck>
      _instance;
} _S2SUpdateMailFlagAck_default_instance_;
class S2SPlayerToastReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerToastReq>
      _instance;
} _S2SPlayerToastReq_default_instance_;
class S2SPlayerToastAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerToastAck>
      _instance;
} _S2SPlayerToastAck_default_instance_;
class S2SQueryToastCountReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryToastCountReq>
      _instance;
} _S2SQueryToastCountReq_default_instance_;
class S2SUpdateFriendLinessAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendLinessAck>
      _instance;
} _S2SUpdateFriendLinessAck_default_instance_;
class S2SCreateMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateMatchGroupReq>
      _instance;
} _S2SCreateMatchGroupReq_default_instance_;
class S2SUpdateGroupMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateGroupMatchReq>
      _instance;
} _S2SUpdateGroupMatchReq_default_instance_;
class S2SCreateMatchGroupToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateMatchGroupToShardReq>
      _instance;
} _S2SCreateMatchGroupToShardReq_default_instance_;
class S2SReceiveInviteMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SReceiveInviteMatchGroupReq>
      _instance;
} _S2SReceiveInviteMatchGroupReq_default_instance_;
class S2SConsentInviteMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SConsentInviteMatchGroupReq>
      _instance;
} _S2SConsentInviteMatchGroupReq_default_instance_;
class S2SAddMatchGroupMemberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddMatchGroupMemberReq>
      _instance;
} _S2SAddMatchGroupMemberReq_default_instance_;
class S2SAddMatchGroupMemberAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddMatchGroupMemberAck>
      _instance;
} _S2SAddMatchGroupMemberAck_default_instance_;
class S2STellMatchGroupDataAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellMatchGroupDataAck>
      _instance;
} _S2STellMatchGroupDataAck_default_instance_;
class S2SRemoveMatchGroupMemberAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRemoveMatchGroupMemberAck>
      _instance;
} _S2SRemoveMatchGroupMemberAck_default_instance_;
class S2SLeaveMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLeaveMatchGroupReq>
      _instance;
} _S2SLeaveMatchGroupReq_default_instance_;
class S2SKickMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickMatchGroupReq>
      _instance;
} _S2SKickMatchGroupReq_default_instance_;
class S2SLeaveMatchGroupAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLeaveMatchGroupAck>
      _instance;
} _S2SLeaveMatchGroupAck_default_instance_;
class S2SApplyMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SApplyMatchGroupReq>
      _instance;
} _S2SApplyMatchGroupReq_default_instance_;
class S2SApplyMatchGroupAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SApplyMatchGroupAck>
      _instance;
} _S2SApplyMatchGroupAck_default_instance_;
class S2SConsentApplyMatchGroupAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SConsentApplyMatchGroupAck>
      _instance;
} _S2SConsentApplyMatchGroupAck_default_instance_;
class S2SOnLineQueryMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOnLineQueryMatchGroupReq>
      _instance;
} _S2SOnLineQueryMatchGroupReq_default_instance_;
class S2SOffLineUpdateMatchGroupReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOffLineUpdateMatchGroupReq>
      _instance;
} _S2SOffLineUpdateMatchGroupReq_default_instance_;
class S2SUpdateGroupMemberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateGroupMemberReq>
      _instance;
} _S2SUpdateGroupMemberReq_default_instance_;
class S2SUpdateGroupMemberAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateGroupMemberAck>
      _instance;
} _S2SUpdateGroupMemberAck_default_instance_;
class S2SUpdateGroupDataAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateGroupDataAck>
      _instance;
} _S2SUpdateGroupDataAck_default_instance_;
class S2SUpdateGuestListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateGuestListReq>
      _instance;
} _S2SUpdateGuestListReq_default_instance_;
class S2SQueryGuestReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryGuestReq>
      _instance;
} _S2SQueryGuestReq_default_instance_;
class S2SQueryGuestAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryGuestAck>
      _instance;
} _S2SQueryGuestAck_default_instance_;
class S2SNewPlayerLoginMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNewPlayerLoginMailReq>
      _instance;
} _S2SNewPlayerLoginMailReq_default_instance_;
class S2SUpdateRankDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateRankDataReq>
      _instance;
} _S2SUpdateRankDataReq_default_instance_;
class S2SQueryRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRankListReq>
      _instance;
} _S2SQueryRankListReq_default_instance_;
class S2SQueryFriendRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendRankListReq>
      _instance;
} _S2SQueryFriendRankListReq_default_instance_;
class S2SAddRecentPlayerDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddRecentPlayerDataReq>
      _instance;
} _S2SAddRecentPlayerDataReq_default_instance_;
class S2SQueryRecentListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRecentListReq>
      _instance;
} _S2SQueryRecentListReq_default_instance_;
class S2SQueryRecentListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRecentListAck>
      _instance;
} _S2SQueryRecentListAck_default_instance_;
class S2SCreateGuidReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateGuidReq>
      _instance;
} _S2SCreateGuidReq_default_instance_;
class S2SCreateGuildToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateGuildToShardReq>
      _instance;
} _S2SCreateGuildToShardReq_default_instance_;
class S2SCreateGuildAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateGuildAck>
      _instance;
} _S2SCreateGuildAck_default_instance_;
class S2SUpdateMemberBasicDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMemberBasicDataReq>
      _instance;
} _S2SUpdateMemberBasicDataReq_default_instance_;
class S2SInviteGuildReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SInviteGuildReq>
      _instance;
} _S2SInviteGuildReq_default_instance_;
class S2SInviteGuildAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SInviteGuildAck>
      _instance;
} _S2SInviteGuildAck_default_instance_;
class S2SApplyGuildReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SApplyGuildReq>
      _instance;
} _S2SApplyGuildReq_default_instance_;
class S2SApplyGuildAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SApplyGuildAck>
      _instance;
} _S2SApplyGuildAck_default_instance_;
class S2SPlayerGuildChangeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerGuildChangeReq>
      _instance;
} _S2SPlayerGuildChangeReq_default_instance_;
class S2SExitGuildReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SExitGuildReq>
      _instance;
} _S2SExitGuildReq_default_instance_;
class S2STransferMasterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STransferMasterReq>
      _instance;
} _S2STransferMasterReq_default_instance_;
class S2SReviewApplyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SReviewApplyReq>
      _instance;
} _S2SReviewApplyReq_default_instance_;
class S2SDissolveGuildReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDissolveGuildReq>
      _instance;
} _S2SDissolveGuildReq_default_instance_;
class S2SModifyMedalReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SModifyMedalReq>
      _instance;
} _S2SModifyMedalReq_default_instance_;
class S2SQueryGuildListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryGuildListReq>
      _instance;
} _S2SQueryGuildListReq_default_instance_;
class S2SKickMemberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickMemberReq>
      _instance;
} _S2SKickMemberReq_default_instance_;
class S2SLoginQueryGuildReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginQueryGuildReq>
      _instance;
} _S2SLoginQueryGuildReq_default_instance_;
class S2SLoginQueryGuildAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginQueryGuildAck>
      _instance;
} _S2SLoginQueryGuildAck_default_instance_;
class S2SUpdateGuildDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateGuildDataReq>
      _instance;
} _S2SUpdateGuildDataReq_default_instance_;
class S2SUpgradeGuildReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpgradeGuildReq>
      _instance;
} _S2SUpgradeGuildReq_default_instance_;
class S2SUpgradeGuildAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpgradeGuildAck>
      _instance;
} _S2SUpgradeGuildAck_default_instance_;
class S2SAppointGuildMemberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAppointGuildMemberReq>
      _instance;
} _S2SAppointGuildMemberReq_default_instance_;
class S2SSearchGuildByNameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSearchGuildByNameReq>
      _instance;
} _S2SSearchGuildByNameReq_default_instance_;
class S2SSetGuildSwitchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetGuildSwitchReq>
      _instance;
} _S2SSetGuildSwitchReq_default_instance_;
class S2SLoginQueryGuildidReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginQueryGuildidReq>
      _instance;
} _S2SLoginQueryGuildidReq_default_instance_;
class S2SLoginQueryGuildidAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginQueryGuildidAck>
      _instance;
} _S2SLoginQueryGuildidAck_default_instance_;
class S2SQueryGuildLogReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryGuildLogReq>
      _instance;
} _S2SQueryGuildLogReq_default_instance_;
class S2SAddGuildActivenessReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddGuildActivenessReq>
      _instance;
} _S2SAddGuildActivenessReq_default_instance_;
class S2SGMAddMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SGMAddMailReq>
      _instance;
} _S2SGMAddMailReq_default_instance_;
class S2SSendChatToServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSendChatToServer>
      _instance;
} _S2SSendChatToServer_default_instance_;
}  // namespace KFMsg
namespace protobuf_KFServerMessage_2eproto {
static void InitDefaultsS2STransmitMessageReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STransmitMessageReq_default_instance_;
    new (ptr) ::KFMsg::S2STransmitMessageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STransmitMessageReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STransmitMessageReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STransmitMessageReq}, {}};

static void InitDefaultsS2SBroadcastMessageReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastMessageReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastMessageReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastMessageReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastMessageReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastMessageReq}, {}};

static void InitDefaultsS2SBroadcastToWord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToWord_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToWord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToWord::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToWord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToWord}, {}};

static void InitDefaultsS2SBroadcastToGame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGame_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGame::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGame}, {}};

static void InitDefaultsS2SBroadcastToGate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGate_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGate::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGate}, {}};

static void InitDefaultsS2STransmitToPlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STransmitToPlayer_default_instance_;
    new (ptr) ::KFMsg::S2STransmitToPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STransmitToPlayer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STransmitToPlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STransmitToPlayer}, {}};

static void InitDefaultsS2STransmitToServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STransmitToServer_default_instance_;
    new (ptr) ::KFMsg::S2STransmitToServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STransmitToServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STransmitToServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STransmitToServer}, {}};

static void InitDefaultsS2SUpdateZoneToProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateZoneToProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateZoneToProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateZoneToProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateZoneToProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateZoneToProxyReq}, {}};

static void InitDefaultsS2STransmitToDataShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STransmitToDataShardReq_default_instance_;
    new (ptr) ::KFMsg::S2STransmitToDataShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STransmitToDataShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STransmitToDataShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STransmitToDataShardReq}, {}};

static void InitDefaultsS2SSavePlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSavePlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SSavePlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSavePlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSavePlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSavePlayerReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SDeletePlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeletePlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeletePlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeletePlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeletePlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeletePlayerReq}, {}};

static void InitDefaultsS2SUpdatePublicDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdatePublicDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdatePublicDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdatePublicDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdatePublicDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdatePublicDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBString.base,}};

static void InitDefaultsS2SKickGamePlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickGamePlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickGamePlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickGamePlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickGamePlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickGamePlayerReq}, {}};

static void InitDefaultsS2SKickGatePlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickGatePlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickGatePlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickGatePlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickGatePlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickGatePlayerReq}, {}};

static void InitDefaultsS2SLoginLoginVerifyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginLoginVerifyReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginLoginVerifyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginLoginVerifyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginLoginVerifyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginLoginVerifyReq}, {}};

static void InitDefaultsS2SLoginLoginVerifyAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginLoginVerifyAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginLoginVerifyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginLoginVerifyAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginLoginVerifyAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginLoginVerifyAck}, {}};

static void InitDefaultsPBLoginData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBLoginData_default_instance_;
    new (ptr) ::KFMsg::PBLoginData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBLoginData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBLoginData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBLoginData}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBStrings.base,}};

static void InitDefaultsS2SLoginWorldVerifyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginWorldVerifyReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginWorldVerifyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginWorldVerifyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginWorldVerifyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginWorldVerifyReq}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoginFailedToLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginFailedToLoginAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginFailedToLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginFailedToLoginAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginFailedToLoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginFailedToLoginAck}, {}};

static void InitDefaultsS2SLoginTellTokenToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginTellTokenToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginTellTokenToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginTellTokenToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginTellTokenToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginTellTokenToGameReq}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoginGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SLoginGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SLoginGameAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SLoginLoadPlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginLoadPlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginLoadPlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginLoadPlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginLoadPlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginLoadPlayerReq}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoginLoadPlayerAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginLoadPlayerAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginLoadPlayerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginLoadPlayerAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SLoginLoadPlayerAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SLoginLoadPlayerAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SLoginOutReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginOutReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginOutReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginOutReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginOutReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginOutReq}, {}};

static void InitDefaultsS2SPlayerDisconnectionReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerDisconnectionReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerDisconnectionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerDisconnectionReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerDisconnectionReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerDisconnectionReq}, {}};

static void InitDefaultsS2SSetPlayerNameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameReq_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameReq}, {}};

static void InitDefaultsS2SSetPlayerNameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameAck_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameAck}, {}};

static void InitDefaultsS2SCreateRoleReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateRoleReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateRoleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateRoleReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateRoleReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateRoleReq}, {}};

static void InitDefaultsS2SCreateRoleAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateRoleAck_default_instance_;
    new (ptr) ::KFMsg::S2SCreateRoleAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateRoleAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateRoleAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateRoleAck}, {}};

static void InitDefaultsS2SPlayerEnterWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerEnterWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerEnterWorldReq}, {}};

static void InitDefaultsS2SPlayerLeaveWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveWorldReq}, {}};

static void InitDefaultsS2SGameSyncOnlineReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SGameSyncOnlineReq_default_instance_;
    new (ptr) ::KFMsg::S2SGameSyncOnlineReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SGameSyncOnlineReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SGameSyncOnlineReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SGameSyncOnlineReq}, {}};

static void InitDefaultsS2SQueryMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryMailReq}, {}};

static void InitDefaultsPBMail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_default_instance_;
    new (ptr) ::KFMsg::PBMail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMail::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMail}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBString.base,}};

static void InitDefaultsPBMails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMails_default_instance_;
    new (ptr) ::KFMsg::PBMails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMails::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMails}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SQueryMailAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryMailAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryMailAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBMails.base,}};

static void InitDefaultsS2SDeleteMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDeleteMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SDeleteMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDeleteMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDeleteMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDeleteMailReq}, {}};

static void InitDefaultsS2SAddMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddMailReq}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SNoticeNewMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNoticeNewMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNoticeNewMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNoticeNewMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNoticeNewMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNoticeNewMailReq}, {}};

static void InitDefaultsPBRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_default_instance_;
    new (ptr) ::KFMsg::PBRelation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRelation::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRelation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRelation}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBStrings.base,}};

static void InitDefaultsS2SQueryFriendReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendReq}, {}};

static void InitDefaultsS2SQueryFriendInviteReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendInviteReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendInviteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendInviteReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendInviteReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendInviteReq}, {}};

static void InitDefaultsS2SQueryFriendAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryFriendAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryFriendAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SQueryFriendInviteAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendInviteAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendInviteAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendInviteAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryFriendInviteAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryFriendInviteAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SAddFriendInviteReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendInviteReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendInviteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendInviteReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddFriendInviteReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddFriendInviteReq}, {}};

static void InitDefaultsS2SAddFriendInviteAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendInviteAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendInviteAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendInviteAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddFriendInviteAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddFriendInviteAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SDelFriendReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelFriendReq_default_instance_;
    new (ptr) ::KFMsg::S2SDelFriendReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelFriendReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelFriendReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelFriendReq}, {}};

static void InitDefaultsS2SDelFriendAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelFriendAck_default_instance_;
    new (ptr) ::KFMsg::S2SDelFriendAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelFriendAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelFriendAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelFriendAck}, {}};

static void InitDefaultsS2SDelFriendInviteReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelFriendInviteReq_default_instance_;
    new (ptr) ::KFMsg::S2SDelFriendInviteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelFriendInviteReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelFriendInviteReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelFriendInviteReq}, {}};

static void InitDefaultsS2SAddFriendReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddFriendReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddFriendReq}, {}};

static void InitDefaultsS2SAddFriendAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddFriendAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddFriendAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SUpdateFriendReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateFriendReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateFriendReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBString.base,}};

static void InitDefaultsS2SUpdateFriendLinessReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendLinessReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendLinessReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendLinessReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateFriendLinessReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateFriendLinessReq}, {}};

static void InitDefaultsS2SQueryBasicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryBasicReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryBasicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryBasicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryBasicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryBasicReq}, {}};

static void InitDefaultsS2SQueryBasicAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryBasicAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryBasicAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryBasicAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryBasicAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryBasicAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SQueryPlayerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryPlayerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryPlayerReq}, {}};

static void InitDefaultsS2SQueryPlayerAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryPlayerAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryPlayerAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SUpdateMailFlagReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailFlagReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailFlagReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailFlagReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailFlagReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailFlagReq}, {}};

static void InitDefaultsS2SUpdateMailFlagAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailFlagAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailFlagAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailFlagAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailFlagAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailFlagAck}, {}};

static void InitDefaultsS2SPlayerToastReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerToastReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerToastReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerToastReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerToastReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerToastReq}, {}};

static void InitDefaultsS2SPlayerToastAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerToastAck_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerToastAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerToastAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerToastAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerToastAck}, {}};

static void InitDefaultsS2SQueryToastCountReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryToastCountReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryToastCountReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryToastCountReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryToastCountReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryToastCountReq}, {}};

static void InitDefaultsS2SUpdateFriendLinessAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendLinessAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendLinessAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendLinessAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateFriendLinessAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateFriendLinessAck}, {}};

static void InitDefaultsS2SCreateMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SCreateMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SCreateMatchGroupReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SUpdateGroupMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateGroupMatchReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateGroupMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateGroupMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateGroupMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateGroupMatchReq}, {}};

static void InitDefaultsS2SCreateMatchGroupToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateMatchGroupToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateMatchGroupToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateMatchGroupToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SCreateMatchGroupToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SCreateMatchGroupToShardReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SReceiveInviteMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SReceiveInviteMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SReceiveInviteMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SReceiveInviteMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SReceiveInviteMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SReceiveInviteMatchGroupReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SConsentInviteMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SConsentInviteMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SConsentInviteMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SConsentInviteMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SConsentInviteMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SConsentInviteMatchGroupReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SAddMatchGroupMemberReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddMatchGroupMemberReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddMatchGroupMemberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddMatchGroupMemberReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddMatchGroupMemberReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddMatchGroupMemberReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SAddMatchGroupMemberAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddMatchGroupMemberAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddMatchGroupMemberAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddMatchGroupMemberAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddMatchGroupMemberAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddMatchGroupMemberAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2STellMatchGroupDataAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellMatchGroupDataAck_default_instance_;
    new (ptr) ::KFMsg::S2STellMatchGroupDataAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellMatchGroupDataAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STellMatchGroupDataAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STellMatchGroupDataAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SRemoveMatchGroupMemberAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRemoveMatchGroupMemberAck_default_instance_;
    new (ptr) ::KFMsg::S2SRemoveMatchGroupMemberAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRemoveMatchGroupMemberAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRemoveMatchGroupMemberAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRemoveMatchGroupMemberAck}, {}};

static void InitDefaultsS2SLeaveMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLeaveMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SLeaveMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLeaveMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLeaveMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLeaveMatchGroupReq}, {}};

static void InitDefaultsS2SKickMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickMatchGroupReq}, {}};

static void InitDefaultsS2SLeaveMatchGroupAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLeaveMatchGroupAck_default_instance_;
    new (ptr) ::KFMsg::S2SLeaveMatchGroupAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLeaveMatchGroupAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLeaveMatchGroupAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLeaveMatchGroupAck}, {}};

static void InitDefaultsS2SApplyMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SApplyMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SApplyMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SApplyMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SApplyMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SApplyMatchGroupReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SApplyMatchGroupAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SApplyMatchGroupAck_default_instance_;
    new (ptr) ::KFMsg::S2SApplyMatchGroupAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SApplyMatchGroupAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SApplyMatchGroupAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SApplyMatchGroupAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SConsentApplyMatchGroupAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SConsentApplyMatchGroupAck_default_instance_;
    new (ptr) ::KFMsg::S2SConsentApplyMatchGroupAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SConsentApplyMatchGroupAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SConsentApplyMatchGroupAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SConsentApplyMatchGroupAck}, {}};

static void InitDefaultsS2SOnLineQueryMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOnLineQueryMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SOnLineQueryMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOnLineQueryMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOnLineQueryMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOnLineQueryMatchGroupReq}, {}};

static void InitDefaultsS2SOffLineUpdateMatchGroupReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOffLineUpdateMatchGroupReq_default_instance_;
    new (ptr) ::KFMsg::S2SOffLineUpdateMatchGroupReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOffLineUpdateMatchGroupReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOffLineUpdateMatchGroupReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOffLineUpdateMatchGroupReq}, {}};

static void InitDefaultsS2SUpdateGroupMemberReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateGroupMemberReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateGroupMemberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateGroupMemberReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateGroupMemberReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateGroupMemberReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBStrings.base,}};

static void InitDefaultsS2SUpdateGroupMemberAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateGroupMemberAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateGroupMemberAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateGroupMemberAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateGroupMemberAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateGroupMemberAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBStrings.base,}};

static void InitDefaultsS2SUpdateGroupDataAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateGroupDataAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateGroupDataAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateGroupDataAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateGroupDataAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateGroupDataAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBString.base,}};

static void InitDefaultsS2SUpdateGuestListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateGuestListReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateGuestListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateGuestListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateGuestListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateGuestListReq}, {}};

static void InitDefaultsS2SQueryGuestReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryGuestReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryGuestReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryGuestReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryGuestReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryGuestReq}, {}};

static void InitDefaultsS2SQueryGuestAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryGuestAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryGuestAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryGuestAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryGuestAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryGuestAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBGuestData.base,}};

static void InitDefaultsS2SNewPlayerLoginMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNewPlayerLoginMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNewPlayerLoginMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNewPlayerLoginMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNewPlayerLoginMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNewPlayerLoginMailReq}, {}};

static void InitDefaultsS2SUpdateRankDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateRankDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateRankDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateRankDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateRankDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateRankDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBRankData.base,}};

static void InitDefaultsS2SQueryRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRankListReq}, {}};

static void InitDefaultsS2SQueryFriendRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendRankListReq}, {}};

static void InitDefaultsS2SAddRecentPlayerDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddRecentPlayerDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddRecentPlayerDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddRecentPlayerDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddRecentPlayerDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddRecentPlayerDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBStrings.base,}};

static void InitDefaultsS2SQueryRecentListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRecentListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRecentListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRecentListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRecentListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRecentListReq}, {}};

static void InitDefaultsS2SQueryRecentListAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRecentListAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRecentListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRecentListAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryRecentListAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryRecentListAck}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SCreateGuidReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateGuidReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateGuidReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateGuidReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateGuidReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateGuidReq}, {}};

static void InitDefaultsS2SCreateGuildToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateGuildToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateGuildToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateGuildToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateGuildToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateGuildToShardReq}, {}};

static void InitDefaultsS2SCreateGuildAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateGuildAck_default_instance_;
    new (ptr) ::KFMsg::S2SCreateGuildAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateGuildAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateGuildAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateGuildAck}, {}};

static void InitDefaultsS2SUpdateMemberBasicDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMemberBasicDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMemberBasicDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMemberBasicDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateMemberBasicDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateMemberBasicDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBString.base,}};

static void InitDefaultsS2SInviteGuildReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SInviteGuildReq_default_instance_;
    new (ptr) ::KFMsg::S2SInviteGuildReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SInviteGuildReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SInviteGuildReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SInviteGuildReq}, {}};

static void InitDefaultsS2SInviteGuildAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SInviteGuildAck_default_instance_;
    new (ptr) ::KFMsg::S2SInviteGuildAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SInviteGuildAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SInviteGuildAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SInviteGuildAck}, {}};

static void InitDefaultsS2SApplyGuildReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SApplyGuildReq_default_instance_;
    new (ptr) ::KFMsg::S2SApplyGuildReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SApplyGuildReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SApplyGuildReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SApplyGuildReq}, {}};

static void InitDefaultsS2SApplyGuildAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SApplyGuildAck_default_instance_;
    new (ptr) ::KFMsg::S2SApplyGuildAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SApplyGuildAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SApplyGuildAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SApplyGuildAck}, {}};

static void InitDefaultsS2SPlayerGuildChangeReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerGuildChangeReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerGuildChangeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerGuildChangeReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerGuildChangeReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerGuildChangeReq}, {}};

static void InitDefaultsS2SExitGuildReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SExitGuildReq_default_instance_;
    new (ptr) ::KFMsg::S2SExitGuildReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SExitGuildReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SExitGuildReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SExitGuildReq}, {}};

static void InitDefaultsS2STransferMasterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STransferMasterReq_default_instance_;
    new (ptr) ::KFMsg::S2STransferMasterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STransferMasterReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STransferMasterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STransferMasterReq}, {}};

static void InitDefaultsS2SReviewApplyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SReviewApplyReq_default_instance_;
    new (ptr) ::KFMsg::S2SReviewApplyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SReviewApplyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SReviewApplyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SReviewApplyReq}, {}};

static void InitDefaultsS2SDissolveGuildReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDissolveGuildReq_default_instance_;
    new (ptr) ::KFMsg::S2SDissolveGuildReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDissolveGuildReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDissolveGuildReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDissolveGuildReq}, {}};

static void InitDefaultsS2SModifyMedalReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SModifyMedalReq_default_instance_;
    new (ptr) ::KFMsg::S2SModifyMedalReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SModifyMedalReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SModifyMedalReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SModifyMedalReq}, {}};

static void InitDefaultsS2SQueryGuildListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryGuildListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryGuildListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryGuildListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryGuildListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryGuildListReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBGuildIdArray.base,}};

static void InitDefaultsS2SKickMemberReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickMemberReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickMemberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickMemberReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickMemberReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickMemberReq}, {}};

static void InitDefaultsS2SLoginQueryGuildReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginQueryGuildReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginQueryGuildReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginQueryGuildReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginQueryGuildReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginQueryGuildReq}, {}};

static void InitDefaultsS2SLoginQueryGuildAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginQueryGuildAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginQueryGuildAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginQueryGuildAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginQueryGuildAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginQueryGuildAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SUpdateGuildDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateGuildDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateGuildDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateGuildDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateGuildDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateGuildDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBString.base,}};

static void InitDefaultsS2SUpgradeGuildReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpgradeGuildReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpgradeGuildReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpgradeGuildReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpgradeGuildReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpgradeGuildReq}, {}};

static void InitDefaultsS2SUpgradeGuildAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpgradeGuildAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpgradeGuildAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpgradeGuildAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpgradeGuildAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpgradeGuildAck}, {}};

static void InitDefaultsS2SAppointGuildMemberReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAppointGuildMemberReq_default_instance_;
    new (ptr) ::KFMsg::S2SAppointGuildMemberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAppointGuildMemberReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAppointGuildMemberReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAppointGuildMemberReq}, {}};

static void InitDefaultsS2SSearchGuildByNameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSearchGuildByNameReq_default_instance_;
    new (ptr) ::KFMsg::S2SSearchGuildByNameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSearchGuildByNameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSearchGuildByNameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSearchGuildByNameReq}, {}};

static void InitDefaultsS2SSetGuildSwitchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetGuildSwitchReq_default_instance_;
    new (ptr) ::KFMsg::S2SSetGuildSwitchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetGuildSwitchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetGuildSwitchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetGuildSwitchReq}, {}};

static void InitDefaultsS2SLoginQueryGuildidReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginQueryGuildidReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginQueryGuildidReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginQueryGuildidReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginQueryGuildidReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginQueryGuildidReq}, {}};

static void InitDefaultsS2SLoginQueryGuildidAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginQueryGuildidAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginQueryGuildidAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginQueryGuildidAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginQueryGuildidAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginQueryGuildidAck}, {}};

static void InitDefaultsS2SQueryGuildLogReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryGuildLogReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryGuildLogReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryGuildLogReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryGuildLogReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryGuildLogReq}, {}};

static void InitDefaultsS2SAddGuildActivenessReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddGuildActivenessReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddGuildActivenessReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddGuildActivenessReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddGuildActivenessReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddGuildActivenessReq}, {}};

static void InitDefaultsS2SGMAddMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SGMAddMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SGMAddMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SGMAddMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SGMAddMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SGMAddMailReq}, {
      &protobuf_KFServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SSendChatToServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSendChatToServer_default_instance_;
    new (ptr) ::KFMsg::S2SSendChatToServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSendChatToServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSendChatToServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSendChatToServer}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_S2STransmitMessageReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastMessageReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToWord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STransmitToPlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STransmitToServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateZoneToProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STransmitToDataShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSavePlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeletePlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdatePublicDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickGamePlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickGatePlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginLoginVerifyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginLoginVerifyAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBLoginData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginWorldVerifyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginFailedToLoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginTellTokenToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginLoadPlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginLoadPlayerAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginOutReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerDisconnectionReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateRoleReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateRoleAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SGameSyncOnlineReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDeleteMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNoticeNewMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendInviteReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendInviteAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendInviteReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendInviteAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelFriendReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelFriendAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelFriendInviteReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendLinessReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryBasicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryBasicAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailFlagReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailFlagAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerToastReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerToastAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryToastCountReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendLinessAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateGroupMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateMatchGroupToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SReceiveInviteMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SConsentInviteMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddMatchGroupMemberReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddMatchGroupMemberAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellMatchGroupDataAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRemoveMatchGroupMemberAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLeaveMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLeaveMatchGroupAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SApplyMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SApplyMatchGroupAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SConsentApplyMatchGroupAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOnLineQueryMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOffLineUpdateMatchGroupReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateGroupMemberReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateGroupMemberAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateGroupDataAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateGuestListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryGuestReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryGuestAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNewPlayerLoginMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateRankDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddRecentPlayerDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRecentListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRecentListAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateGuidReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateGuildToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateGuildAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMemberBasicDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SInviteGuildReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SInviteGuildAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SApplyGuildReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SApplyGuildAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerGuildChangeReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SExitGuildReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STransferMasterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SReviewApplyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDissolveGuildReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SModifyMedalReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryGuildListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickMemberReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginQueryGuildReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginQueryGuildAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateGuildDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpgradeGuildReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpgradeGuildAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAppointGuildMemberReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSearchGuildByNameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetGuildSwitchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginQueryGuildidReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginQueryGuildidAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryGuildLogReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddGuildActivenessReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SGMAddMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSendChatToServer.base);
}

::google::protobuf::Metadata file_level_metadata[123];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitMessageReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitMessageReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitMessageReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastMessageReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastMessageReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWord, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWord, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGame, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGame, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGate, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGate, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToServer, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToServer, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToProxyReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToDataShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToDataShardReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToDataShardReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToDataShardReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeletePlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeletePlayerReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeletePlayerReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdatePublicDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdatePublicDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdatePublicDataReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickGamePlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickGamePlayerReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickGamePlayerReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickGatePlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickGatePlayerReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickGatePlayerReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyReq, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyAck, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoginVerifyAck, bantime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBLoginData, channeldata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginWorldVerifyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginWorldVerifyReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginFailedToLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginFailedToLoginAck, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginFailedToLoginAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginFailedToLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginFailedToLoginAck, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginTellTokenToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginTellTokenToGameReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginGameAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginGameAck, servertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerReq, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginLoadPlayerAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginOutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginOutReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerDisconnectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerDisconnectionReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameReq, oldname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameReq, newname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameAck, oldname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameAck, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameAck, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleReq, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleReq, modleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleReq, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleReq, inviterid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, modleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, inviterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoleAck, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterWorldReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveWorldReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SGameSyncOnlineReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SGameSyncOnlineReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, mailtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, maxmailid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMails, mail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, mails_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, mailtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeleteMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeleteMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeleteMailReq, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDeleteMailReq, mailtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, mailtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, pbmail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, mailtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, relationdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendAck, pbfriend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteAck, pbfriend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteReq, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteReq, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteReq, targetname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteAck, pbfriend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendReq, targetplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendAck, targetplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendInviteReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendInviteReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendInviteReq, targetplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendReq, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendReq, targetname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendAck, pbfriend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendReq, friendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessReq, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessReq, friendliness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessReq, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicReq, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicAck, pbobject_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerReq, queryid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerAck, pbobject_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagReq, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagReq, mailtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagReq, flag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagAck, mailid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagAck, mailtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailFlagAck, flag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastReq, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastAck, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerToastAck, targetserverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryToastCountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryToastCountReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryToastCountReq, targetplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessAck, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessAck, friendliness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupReq, pbmember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupReq, maxcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMatchReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMatchReq, maxcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMatchReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMatchReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupToShardReq, pbmember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupToShardReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupToShardReq, maxcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupToShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateMatchGroupToShardReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, inviter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, inviterplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, inviterserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReceiveInviteMatchGroupReq, playername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentInviteMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentInviteMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentInviteMatchGroupReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentInviteMatchGroupReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentInviteMatchGroupReq, pbmember_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberReq, pbmember_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMatchGroupMemberAck, pbmember_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, pbmember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, captainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, maxcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellMatchGroupDataAck, newadd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveMatchGroupMemberAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveMatchGroupMemberAck, memberid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveMatchGroupReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMatchGroupReq, captainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMatchGroupReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMatchGroupReq, memberid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveMatchGroupAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveMatchGroupAck, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupReq, pbmember_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupAck, pbmember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyMatchGroupAck, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentApplyMatchGroupAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentApplyMatchGroupAck, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentApplyMatchGroupAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentApplyMatchGroupAck, captainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentApplyMatchGroupAck, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConsentApplyMatchGroupAck, playername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOnLineQueryMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOnLineQueryMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOnLineQueryMatchGroupReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOnLineQueryMatchGroupReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOffLineUpdateMatchGroupReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOffLineUpdateMatchGroupReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOffLineUpdateMatchGroupReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberReq, memberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberReq, dataname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberReq, pbstrings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberAck, memberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberAck, dataname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupMemberAck, pbstrings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGroupDataAck, pbstring_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuestListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuestListReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuestListReq, guestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuestListReq, guesttime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestReq, queryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestReq, querytime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestAck, queryid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestAck, guestcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuestAck, guestdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerLoginMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerLoginMailReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, pbrankdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, friendid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRecentPlayerDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRecentPlayerDataReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRecentPlayerDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRecentPlayerDataReq, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRecentPlayerDataReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRecentListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRecentListReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRecentListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRecentListAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRecentListAck, pbrelation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, medal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuidReq, manifesto_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, medal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, manifesto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildToShardReq, guildid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildAck, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildAck, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildAck, medal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateGuildAck, manifesto_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMemberBasicDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMemberBasicDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMemberBasicDataReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMemberBasicDataReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildReq, invitor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildReq, invitedid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildAck, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SInviteGuildAck, invitedid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildReq, invitor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildAck, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyGuildAck, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerGuildChangeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerGuildChangeReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerGuildChangeReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerGuildChangeReq, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SExitGuildReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SExitGuildReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SExitGuildReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SExitGuildReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransferMasterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransferMasterReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransferMasterReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransferMasterReq, newmasterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransferMasterReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReviewApplyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReviewApplyReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReviewApplyReq, dealplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReviewApplyReq, operatortype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReviewApplyReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReviewApplyReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDissolveGuildReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDissolveGuildReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDissolveGuildReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDissolveGuildReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SModifyMedalReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SModifyMedalReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SModifyMedalReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SModifyMedalReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SModifyMedalReq, newmedal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildListReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildListReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildListReq, guilds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildListReq, cursor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMemberReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMemberReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMemberReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMemberReq, toplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickMemberReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildAck, guilddata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildAck, showapplicant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildAck, guildid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuildDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuildDataReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuildDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateGuildDataReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildAck, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpgradeGuildAck, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAppointGuildMemberReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAppointGuildMemberReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAppointGuildMemberReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAppointGuildMemberReq, toplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAppointGuildMemberReq, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAppointGuildMemberReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSearchGuildByNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSearchGuildByNameReq, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSearchGuildByNameReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSearchGuildByNameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetGuildSwitchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetGuildSwitchReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetGuildSwitchReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetGuildSwitchReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetGuildSwitchReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetGuildSwitchReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildidReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildidReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildidReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildidAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildidAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginQueryGuildidAck, guildid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, beginpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, endpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryGuildLogReq, page_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGuildActivenessReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGuildActivenessReq, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGuildActivenessReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGuildActivenessReq, activeness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SGMAddMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SGMAddMailReq, playerids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SGMAddMailReq, mailtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SGMAddMailReq, pbmail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, chatinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, isvoice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playericon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playergrade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playersex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playericonbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSendChatToServer, playerserverid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::S2STransmitMessageReq)},
  { 8, -1, sizeof(::KFMsg::S2SBroadcastMessageReq)},
  { 15, -1, sizeof(::KFMsg::S2SBroadcastToWord)},
  { 22, -1, sizeof(::KFMsg::S2SBroadcastToGame)},
  { 29, -1, sizeof(::KFMsg::S2SBroadcastToGate)},
  { 36, -1, sizeof(::KFMsg::S2STransmitToPlayer)},
  { 44, -1, sizeof(::KFMsg::S2STransmitToServer)},
  { 51, -1, sizeof(::KFMsg::S2SUpdateZoneToProxyReq)},
  { 57, -1, sizeof(::KFMsg::S2STransmitToDataShardReq)},
  { 65, -1, sizeof(::KFMsg::S2SSavePlayerReq)},
  { 73, -1, sizeof(::KFMsg::S2SDeletePlayerReq)},
  { 80, -1, sizeof(::KFMsg::S2SUpdatePublicDataReq)},
  { 87, -1, sizeof(::KFMsg::S2SKickGamePlayerReq)},
  { 94, -1, sizeof(::KFMsg::S2SKickGatePlayerReq)},
  { 101, -1, sizeof(::KFMsg::S2SLoginLoginVerifyReq)},
  { 110, -1, sizeof(::KFMsg::S2SLoginLoginVerifyAck)},
  { 119, -1, sizeof(::KFMsg::PBLoginData)},
  { 132, -1, sizeof(::KFMsg::S2SLoginWorldVerifyReq)},
  { 138, -1, sizeof(::KFMsg::S2SLoginFailedToLoginAck)},
  { 147, -1, sizeof(::KFMsg::S2SLoginTellTokenToGameReq)},
  { 153, -1, sizeof(::KFMsg::S2SLoginGameAck)},
  { 162, -1, sizeof(::KFMsg::S2SLoginLoadPlayerReq)},
  { 169, -1, sizeof(::KFMsg::S2SLoginLoadPlayerAck)},
  { 177, -1, sizeof(::KFMsg::S2SLoginOutReq)},
  { 183, -1, sizeof(::KFMsg::S2SPlayerDisconnectionReq)},
  { 189, -1, sizeof(::KFMsg::S2SSetPlayerNameReq)},
  { 197, -1, sizeof(::KFMsg::S2SSetPlayerNameAck)},
  { 206, -1, sizeof(::KFMsg::S2SCreateRoleReq)},
  { 216, -1, sizeof(::KFMsg::S2SCreateRoleAck)},
  { 227, -1, sizeof(::KFMsg::S2SPlayerEnterWorldReq)},
  { 234, -1, sizeof(::KFMsg::S2SPlayerLeaveWorldReq)},
  { 241, -1, sizeof(::KFMsg::S2SGameSyncOnlineReq)},
  { 247, -1, sizeof(::KFMsg::S2SQueryMailReq)},
  { 255, -1, sizeof(::KFMsg::PBMail)},
  { 261, -1, sizeof(::KFMsg::PBMails)},
  { 267, -1, sizeof(::KFMsg::S2SQueryMailAck)},
  { 275, -1, sizeof(::KFMsg::S2SDeleteMailReq)},
  { 283, -1, sizeof(::KFMsg::S2SAddMailReq)},
  { 291, -1, sizeof(::KFMsg::S2SNoticeNewMailReq)},
  { 298, -1, sizeof(::KFMsg::PBRelation)},
  { 306, -1, sizeof(::KFMsg::S2SQueryFriendReq)},
  { 313, -1, sizeof(::KFMsg::S2SQueryFriendInviteReq)},
  { 320, -1, sizeof(::KFMsg::S2SQueryFriendAck)},
  { 327, -1, sizeof(::KFMsg::S2SQueryFriendInviteAck)},
  { 334, -1, sizeof(::KFMsg::S2SAddFriendInviteReq)},
  { 344, -1, sizeof(::KFMsg::S2SAddFriendInviteAck)},
  { 351, -1, sizeof(::KFMsg::S2SDelFriendReq)},
  { 358, -1, sizeof(::KFMsg::S2SDelFriendAck)},
  { 365, -1, sizeof(::KFMsg::S2SDelFriendInviteReq)},
  { 372, -1, sizeof(::KFMsg::S2SAddFriendReq)},
  { 381, -1, sizeof(::KFMsg::S2SAddFriendAck)},
  { 388, -1, sizeof(::KFMsg::S2SUpdateFriendReq)},
  { 396, -1, sizeof(::KFMsg::S2SUpdateFriendLinessReq)},
  { 405, -1, sizeof(::KFMsg::S2SQueryBasicReq)},
  { 412, -1, sizeof(::KFMsg::S2SQueryBasicAck)},
  { 419, -1, sizeof(::KFMsg::S2SQueryPlayerReq)},
  { 427, -1, sizeof(::KFMsg::S2SQueryPlayerAck)},
  { 434, -1, sizeof(::KFMsg::S2SUpdateMailFlagReq)},
  { 443, -1, sizeof(::KFMsg::S2SUpdateMailFlagAck)},
  { 452, -1, sizeof(::KFMsg::S2SPlayerToastReq)},
  { 460, -1, sizeof(::KFMsg::S2SPlayerToastAck)},
  { 469, -1, sizeof(::KFMsg::S2SQueryToastCountReq)},
  { 476, -1, sizeof(::KFMsg::S2SUpdateFriendLinessAck)},
  { 484, -1, sizeof(::KFMsg::S2SCreateMatchGroupReq)},
  { 494, -1, sizeof(::KFMsg::S2SUpdateGroupMatchReq)},
  { 503, -1, sizeof(::KFMsg::S2SCreateMatchGroupToShardReq)},
  { 513, -1, sizeof(::KFMsg::S2SReceiveInviteMatchGroupReq)},
  { 526, -1, sizeof(::KFMsg::S2SConsentInviteMatchGroupReq)},
  { 535, -1, sizeof(::KFMsg::S2SAddMatchGroupMemberReq)},
  { 544, -1, sizeof(::KFMsg::S2SAddMatchGroupMemberAck)},
  { 550, -1, sizeof(::KFMsg::S2STellMatchGroupDataAck)},
  { 561, -1, sizeof(::KFMsg::S2SRemoveMatchGroupMemberAck)},
  { 567, -1, sizeof(::KFMsg::S2SLeaveMatchGroupReq)},
  { 574, -1, sizeof(::KFMsg::S2SKickMatchGroupReq)},
  { 583, -1, sizeof(::KFMsg::S2SLeaveMatchGroupAck)},
  { 589, -1, sizeof(::KFMsg::S2SApplyMatchGroupReq)},
  { 598, -1, sizeof(::KFMsg::S2SApplyMatchGroupAck)},
  { 606, -1, sizeof(::KFMsg::S2SConsentApplyMatchGroupAck)},
  { 616, -1, sizeof(::KFMsg::S2SOnLineQueryMatchGroupReq)},
  { 624, -1, sizeof(::KFMsg::S2SOffLineUpdateMatchGroupReq)},
  { 631, -1, sizeof(::KFMsg::S2SUpdateGroupMemberReq)},
  { 640, -1, sizeof(::KFMsg::S2SUpdateGroupMemberAck)},
  { 648, -1, sizeof(::KFMsg::S2SUpdateGroupDataAck)},
  { 654, -1, sizeof(::KFMsg::S2SUpdateGuestListReq)},
  { 662, -1, sizeof(::KFMsg::S2SQueryGuestReq)},
  { 670, -1, sizeof(::KFMsg::S2SQueryGuestAck)},
  { 679, -1, sizeof(::KFMsg::S2SNewPlayerLoginMailReq)},
  { 685, -1, sizeof(::KFMsg::S2SUpdateRankDataReq)},
  { 694, -1, sizeof(::KFMsg::S2SQueryRankListReq)},
  { 703, -1, sizeof(::KFMsg::S2SQueryFriendRankListReq)},
  { 712, -1, sizeof(::KFMsg::S2SAddRecentPlayerDataReq)},
  { 721, -1, sizeof(::KFMsg::S2SQueryRecentListReq)},
  { 727, -1, sizeof(::KFMsg::S2SQueryRecentListAck)},
  { 734, -1, sizeof(::KFMsg::S2SCreateGuidReq)},
  { 745, -1, sizeof(::KFMsg::S2SCreateGuildToShardReq)},
  { 757, -1, sizeof(::KFMsg::S2SCreateGuildAck)},
  { 767, -1, sizeof(::KFMsg::S2SUpdateMemberBasicDataReq)},
  { 775, -1, sizeof(::KFMsg::S2SInviteGuildReq)},
  { 784, -1, sizeof(::KFMsg::S2SInviteGuildAck)},
  { 792, -1, sizeof(::KFMsg::S2SApplyGuildReq)},
  { 800, -1, sizeof(::KFMsg::S2SApplyGuildAck)},
  { 808, -1, sizeof(::KFMsg::S2SPlayerGuildChangeReq)},
  { 816, -1, sizeof(::KFMsg::S2SExitGuildReq)},
  { 824, -1, sizeof(::KFMsg::S2STransferMasterReq)},
  { 833, -1, sizeof(::KFMsg::S2SReviewApplyReq)},
  { 843, -1, sizeof(::KFMsg::S2SDissolveGuildReq)},
  { 851, -1, sizeof(::KFMsg::S2SModifyMedalReq)},
  { 860, -1, sizeof(::KFMsg::S2SQueryGuildListReq)},
  { 869, -1, sizeof(::KFMsg::S2SKickMemberReq)},
  { 878, -1, sizeof(::KFMsg::S2SLoginQueryGuildReq)},
  { 886, -1, sizeof(::KFMsg::S2SLoginQueryGuildAck)},
  { 895, -1, sizeof(::KFMsg::S2SUpdateGuildDataReq)},
  { 903, -1, sizeof(::KFMsg::S2SUpgradeGuildReq)},
  { 910, -1, sizeof(::KFMsg::S2SUpgradeGuildAck)},
  { 918, -1, sizeof(::KFMsg::S2SAppointGuildMemberReq)},
  { 928, -1, sizeof(::KFMsg::S2SSearchGuildByNameReq)},
  { 936, -1, sizeof(::KFMsg::S2SSetGuildSwitchReq)},
  { 946, -1, sizeof(::KFMsg::S2SLoginQueryGuildidReq)},
  { 953, -1, sizeof(::KFMsg::S2SLoginQueryGuildidAck)},
  { 960, -1, sizeof(::KFMsg::S2SQueryGuildLogReq)},
  { 971, -1, sizeof(::KFMsg::S2SAddGuildActivenessReq)},
  { 979, -1, sizeof(::KFMsg::S2SGMAddMailReq)},
  { 987, -1, sizeof(::KFMsg::S2SSendChatToServer)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STransmitMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastMessageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToWord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STransmitToPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STransmitToServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateZoneToProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STransmitToDataShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSavePlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeletePlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdatePublicDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickGamePlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickGatePlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginLoginVerifyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginLoginVerifyAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBLoginData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginWorldVerifyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginFailedToLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginTellTokenToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginLoadPlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginLoadPlayerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginOutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerDisconnectionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateRoleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateRoleAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SGameSyncOnlineReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDeleteMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNoticeNewMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendInviteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendInviteAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendInviteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendInviteAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelFriendAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelFriendInviteReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendLinessReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryBasicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryBasicAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailFlagReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailFlagAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerToastReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerToastAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryToastCountReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendLinessAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateGroupMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateMatchGroupToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SReceiveInviteMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SConsentInviteMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddMatchGroupMemberReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddMatchGroupMemberAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellMatchGroupDataAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRemoveMatchGroupMemberAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLeaveMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLeaveMatchGroupAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SApplyMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SApplyMatchGroupAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SConsentApplyMatchGroupAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOnLineQueryMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOffLineUpdateMatchGroupReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateGroupMemberReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateGroupMemberAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateGroupDataAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateGuestListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryGuestReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryGuestAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNewPlayerLoginMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateRankDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddRecentPlayerDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRecentListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRecentListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateGuidReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateGuildToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateGuildAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMemberBasicDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SInviteGuildReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SInviteGuildAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SApplyGuildReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SApplyGuildAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerGuildChangeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SExitGuildReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STransferMasterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SReviewApplyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDissolveGuildReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SModifyMedalReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryGuildListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickMemberReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginQueryGuildReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginQueryGuildAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateGuildDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpgradeGuildReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpgradeGuildAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAppointGuildMemberReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSearchGuildByNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetGuildSwitchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginQueryGuildidReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginQueryGuildidAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryGuildLogReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddGuildActivenessReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SGMAddMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSendChatToServer_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "KFServerMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 123);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025KFServerMessage.proto\022\005KFMsg\032\025KFDefine"
      "Message.proto\"I\n\025S2STransmitMessageReq\022\020"
      "\n\010playerid\030\001 \001(\004\022\r\n\005msgid\030\002 \001(\r\022\017\n\007msgda"
      "ta\030\003 \001(\014\"8\n\026S2SBroadcastMessageReq\022\r\n\005ms"
      "gid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\"4\n\022S2SBroadca"
      "stToWord\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014"
      "\"4\n\022S2SBroadcastToGame\022\r\n\005msgid\030\001 \001(\r\022\017\n"
      "\007msgdata\030\002 \001(\014\"4\n\022S2SBroadcastToGate\022\r\n\005"
      "msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\"G\n\023S2STrans"
      "mitToPlayer\022\020\n\010playerid\030\001 \001(\004\022\r\n\005msgid\030\002"
      " \001(\r\022\017\n\007msgdata\030\003 \001(\014\"5\n\023S2STransmitToSe"
      "rver\022\r\n\005msgid\030\002 \001(\r\022\017\n\007msgdata\030\003 \001(\014\")\n\027"
      "S2SUpdateZoneToProxyReq\022\016\n\006zoneid\030\001 \003(\r\""
      "K\n\031S2STransmitToDataShardReq\022\016\n\006zoneid\030\001"
      " \001(\r\022\r\n\005msgid\030\002 \001(\r\022\017\n\007msgdata\030\003 \001(\014\"M\n\020"
      "S2SSavePlayerReq\022\n\n\002id\030\001 \001(\004\022\016\n\006zoneid\030\002"
      " \001(\r\022\035\n\004data\030\003 \001(\0132\017.KFMsg.PBObject\"0\n\022S"
      "2SDeletePlayerReq\022\n\n\002id\030\001 \001(\004\022\016\n\006zoneid\030"
      "\002 \001(\r\"K\n\026S2SUpdatePublicDataReq\022\020\n\010playe"
      "rid\030\001 \001(\004\022\037\n\006pbdata\030\004 \003(\0132\017.KFMsg.PBStri"
      "ng\"6\n\024S2SKickGamePlayerReq\022\020\n\010playerid\030\001"
      " \001(\004\022\014\n\004type\030\002 \001(\r\"6\n\024S2SKickGatePlayerR"
      "eq\022\020\n\010playerid\030\001 \001(\004\022\014\n\004type\030\002 \001(\r\"Y\n\026S2"
      "SLoginLoginVerifyReq\022\021\n\taccountid\030\001 \001(\004\022"
      "\r\n\005token\030\002 \001(\014\022\n\n\002ip\030\003 \001(\014\022\021\n\tsessionid\030"
      "\004 \001(\004\"_\n\026S2SLoginLoginVerifyAck\022\016\n\006resul"
      "t\030\001 \001(\r\022\021\n\taccountid\030\002 \001(\004\022\021\n\tsessionid\030"
      "\003 \001(\004\022\017\n\007bantime\030\004 \001(\004\"\255\001\n\013PBLoginData\022\r"
      "\n\005token\030\001 \001(\014\022\016\n\006gateid\030\002 \001(\004\022\021\n\tsession"
      "id\030\003 \001(\004\022\017\n\007channel\030\004 \001(\r\022\017\n\007account\030\005 \001"
      "(\014\022\021\n\taccountid\030\006 \001(\004\022\020\n\010playerid\030\007 \001(\004\022"
      "%\n\013channeldata\030\010 \001(\0132\020.KFMsg.PBStrings\"="
      "\n\026S2SLoginWorldVerifyReq\022#\n\007pblogin\030\001 \001("
      "\0132\022.KFMsg.PBLoginData\"`\n\030S2SLoginFailedT"
      "oLoginAck\022\016\n\006gateid\030\001 \001(\004\022\016\n\006result\030\002 \001("
      "\r\022\021\n\taccountid\030\003 \001(\004\022\021\n\tsessionid\030\004 \001(\004\""
      "A\n\032S2SLoginTellTokenToGameReq\022#\n\007pblogin"
      "\030\001 \001(\0132\022.KFMsg.PBLoginData\"\177\n\017S2SLoginGa"
      "meAck\022#\n\007pblogin\030\001 \001(\0132\022.KFMsg.PBLoginDa"
      "ta\022\016\n\006result\030\002 \001(\r\022\022\n\nservertime\030\003 \001(\004\022#"
      "\n\nplayerdata\030\004 \001(\0132\017.KFMsg.PBObject\"L\n\025S"
      "2SLoginLoadPlayerReq\022#\n\007pblogin\030\001 \001(\0132\022."
      "KFMsg.PBLoginData\022\016\n\006zoneid\030\002 \001(\r\"q\n\025S2S"
      "LoginLoadPlayerAck\022#\n\007pblogin\030\001 \001(\0132\022.KF"
      "Msg.PBLoginData\022\016\n\006result\030\002 \001(\r\022#\n\nplaye"
      "rdata\030\003 \001(\0132\017.KFMsg.PBObject\"\"\n\016S2SLogin"
      "OutReq\022\020\n\010playerid\030\001 \001(\004\"-\n\031S2SPlayerDis"
      "connectionReq\022\020\n\010playerid\030\001 \001(\004\"I\n\023S2SSe"
      "tPlayerNameReq\022\020\n\010playerid\030\001 \001(\004\022\017\n\007oldn"
      "ame\030\002 \001(\014\022\017\n\007newname\030\003 \001(\014\"Y\n\023S2SSetPlay"
      "erNameAck\022\020\n\010playerid\030\001 \001(\004\022\017\n\007oldname\030\002"
      " \001(\014\022\017\n\007newname\030\003 \001(\014\022\016\n\006result\030\004 \001(\r\"f\n"
      "\020S2SCreateRoleReq\022\020\n\010playerid\030\001 \001(\004\022\017\n\007n"
      "ewname\030\002 \001(\014\022\017\n\007modleid\030\003 \001(\r\022\013\n\003sex\030\004 \001"
      "(\r\022\021\n\tinviterid\030\005 \001(\r\"v\n\020S2SCreateRoleAc"
      "k\022\020\n\010playerid\030\001 \001(\004\022\017\n\007newname\030\002 \001(\014\022\017\n\007"
      "modleid\030\003 \001(\r\022\013\n\003sex\030\004 \001(\r\022\021\n\tinviterid\030"
      "\005 \001(\r\022\016\n\006result\030\006 \001(\r\"=\n\026S2SPlayerEnterW"
      "orldReq\022\020\n\010playerid\030\001 \001(\004\022\021\n\taccountid\030\002"
      " \001(\004\"=\n\026S2SPlayerLeaveWorldReq\022\020\n\010player"
      "id\030\001 \001(\004\022\021\n\taccountid\030\002 \001(\004\"(\n\024S2SGameSy"
      "ncOnlineReq\022\020\n\010playerid\030\001 \003(\004\"H\n\017S2SQuer"
      "yMailReq\022\020\n\010playerid\030\001 \001(\004\022\020\n\010mailtype\030\002"
      " \001(\r\022\021\n\tmaxmailid\030\003 \001(\004\"\'\n\006PBMail\022\035\n\004dat"
      "a\030\001 \003(\0132\017.KFMsg.PBString\"&\n\007PBMails\022\033\n\004m"
      "ail\030\001 \003(\0132\r.KFMsg.PBMail\"T\n\017S2SQueryMail"
      "Ack\022\020\n\010playerid\030\001 \001(\004\022\035\n\005mails\030\002 \001(\0132\016.K"
      "FMsg.PBMails\022\020\n\010mailtype\030\003 \001(\r\"F\n\020S2SDel"
      "eteMailReq\022\020\n\010playerid\030\001 \001(\004\022\016\n\006mailid\030\002"
      " \001(\004\022\020\n\010mailtype\030\003 \001(\r\"R\n\rS2SAddMailReq\022"
      "\020\n\010playerid\030\001 \001(\004\022\020\n\010mailtype\030\003 \001(\r\022\035\n\006p"
      "bmail\030\005 \001(\0132\r.KFMsg.PBMail\"9\n\023S2SNoticeN"
      "ewMailReq\022\020\n\010playerid\030\001 \001(\004\022\020\n\010mailtype\030"
      "\002 \001(\r\"l\n\nPBRelation\022\020\n\010playerid\030\001 \001(\004\022$\n"
      "\nplayerdata\030\002 \001(\0132\020.KFMsg.PBStrings\022&\n\014r"
      "elationdata\030\003 \001(\0132\020.KFMsg.PBStrings\"7\n\021S"
      "2SQueryFriendReq\022\020\n\010playerid\030\001 \001(\004\022\020\n\010se"
      "rverid\030\002 \001(\004\"=\n\027S2SQueryFriendInviteReq\022"
      "\020\n\010playerid\030\001 \001(\004\022\020\n\010serverid\030\002 \001(\004\"J\n\021S"
      "2SQueryFriendAck\022\020\n\010playerid\030\001 \001(\004\022#\n\010pb"
      "friend\030\002 \003(\0132\021.KFMsg.PBRelation\"P\n\027S2SQu"
      "eryFriendInviteAck\022\020\n\010playerid\030\001 \001(\004\022#\n\010"
      "pbfriend\030\002 \003(\0132\021.KFMsg.PBRelation\"|\n\025S2S"
      "AddFriendInviteReq\022\024\n\014selfplayerid\030\001 \001(\004"
      "\022\026\n\016targetplayerid\030\002 \001(\004\022\017\n\007message\030\003 \001("
      "\014\022\020\n\010serverid\030\004 \001(\004\022\022\n\ntargetname\030\005 \001(\014\""
      "N\n\025S2SAddFriendInviteAck\022\020\n\010playerid\030\001 \001"
      "(\004\022#\n\010pbfriend\030\002 \001(\0132\021.KFMsg.PBRelation\""
      "\?\n\017S2SDelFriendReq\022\024\n\014selfplayerid\030\001 \001(\004"
      "\022\026\n\016targetplayerid\030\002 \001(\004\";\n\017S2SDelFriend"
      "Ack\022\020\n\010playerid\030\001 \001(\004\022\026\n\016targetplayerid\030"
      "\002 \001(\004\"E\n\025S2SDelFriendInviteReq\022\024\n\014selfpl"
      "ayerid\030\001 \001(\004\022\026\n\016targetplayerid\030\002 \001(\004\"e\n\017"
      "S2SAddFriendReq\022\024\n\014selfplayerid\030\001 \001(\004\022\026\n"
      "\016targetplayerid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\022"
      "\022\n\ntargetname\030\004 \001(\014\"H\n\017S2SAddFriendAck\022\020"
      "\n\010playerid\030\001 \001(\004\022#\n\010pbfriend\030\002 \001(\0132\021.KFM"
      "sg.PBRelation\"Y\n\022S2SUpdateFriendReq\022\020\n\010f"
      "riendid\030\001 \001(\004\022\020\n\010serverid\030\002 \001(\004\022\037\n\006pbdat"
      "a\030\003 \003(\0132\017.KFMsg.PBString\"l\n\030S2SUpdateFri"
      "endLinessReq\022\024\n\014selfplayerid\030\001 \001(\004\022\026\n\016ta"
      "rgetplayerid\030\002 \001(\004\022\024\n\014friendliness\030\003 \001(\r"
      "\022\014\n\004type\030\004 \001(\r\"2\n\020S2SQueryBasicReq\022\020\n\010pl"
      "ayerid\030\001 \001(\004\022\014\n\004name\030\002 \001(\014\"G\n\020S2SQueryBa"
      "sicAck\022\020\n\010playerid\030\001 \001(\004\022!\n\010pbobject\030\002 \001"
      "(\0132\017.KFMsg.PBObject\"F\n\021S2SQueryPlayerReq"
      "\022\016\n\006zoneid\030\001 \001(\r\022\020\n\010playerid\030\002 \001(\004\022\017\n\007qu"
      "eryid\030\003 \001(\004\"H\n\021S2SQueryPlayerAck\022\020\n\010play"
      "erid\030\001 \001(\004\022!\n\010pbobject\030\002 \001(\0132\017.KFMsg.PBO"
      "bject\"X\n\024S2SUpdateMailFlagReq\022\020\n\010playeri"
      "d\030\001 \001(\004\022\016\n\006mailid\030\002 \001(\004\022\020\n\010mailtype\030\003 \001("
      "\r\022\014\n\004flag\030\004 \001(\r\"X\n\024S2SUpdateMailFlagAck\022"
      "\020\n\010playerid\030\001 \001(\004\022\016\n\006mailid\030\002 \001(\004\022\020\n\010mai"
      "ltype\030\003 \001(\r\022\014\n\004flag\030\004 \001(\r\"S\n\021S2SPlayerTo"
      "astReq\022\024\n\014selfplayerid\030\001 \001(\004\022\026\n\016targetpl"
      "ayerid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\"e\n\021S2SPla"
      "yerToastAck\022\016\n\006result\030\001 \001(\r\022\020\n\010playerid\030"
      "\002 \001(\004\022\026\n\016targetplayerid\030\003 \001(\004\022\026\n\016targets"
      "erverid\030\004 \001(\004\"E\n\025S2SQueryToastCountReq\022\024"
      "\n\014selfplayerid\030\001 \001(\004\022\026\n\016targetplayerid\030\002"
      " \001(\004\"Z\n\030S2SUpdateFriendLinessAck\022\020\n\010play"
      "erid\030\001 \001(\004\022\026\n\016targetplayerid\030\002 \001(\004\022\024\n\014fr"
      "iendliness\030\003 \001(\004\"\201\001\n\026S2SCreateMatchGroup"
      "Req\022!\n\010pbmember\030\001 \001(\0132\017.KFMsg.PBObject\022\017"
      "\n\007groupid\030\002 \001(\004\022\020\n\010maxcount\030\003 \001(\r\022\017\n\007mat"
      "chid\030\004 \001(\r\022\020\n\010playerid\030\005 \001(\004\"^\n\026S2SUpdat"
      "eGroupMatchReq\022\017\n\007groupid\030\001 \001(\004\022\020\n\010maxco"
      "unt\030\002 \001(\r\022\017\n\007matchid\030\003 \001(\r\022\020\n\010playerid\030\004"
      " \001(\004\"\210\001\n\035S2SCreateMatchGroupToShardReq\022!"
      "\n\010pbmember\030\001 \001(\0132\017.KFMsg.PBObject\022\017\n\007gro"
      "upid\030\002 \001(\004\022\020\n\010maxcount\030\003 \001(\r\022\017\n\007matchid\030"
      "\004 \001(\r\022\020\n\010playerid\030\005 \001(\004\"\313\001\n\035S2SReceiveIn"
      "viteMatchGroupReq\022\020\n\010playerid\030\001 \001(\004\022\017\n\007g"
      "roupid\030\002 \001(\004\022 \n\007inviter\030\003 \001(\0132\017.KFMsg.PB"
      "Object\022\016\n\006source\030\004 \001(\014\022\017\n\007matchid\030\005 \001(\r\022"
      "\027\n\017inviterplayerid\030\006 \001(\004\022\027\n\017inviterserve"
      "rid\030\007 \001(\004\022\022\n\nplayername\030\010 \001(\014\"w\n\035S2SCons"
      "entInviteMatchGroupReq\022\017\n\007groupid\030\001 \001(\004\022"
      "\020\n\010playerid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\022!\n\010p"
      "bmember\030\004 \001(\0132\017.KFMsg.PBObject\"s\n\031S2SAdd"
      "MatchGroupMemberReq\022\017\n\007groupid\030\001 \001(\004\022\020\n\010"
      "playerid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\022!\n\010pbme"
      "mber\030\004 \001(\0132\017.KFMsg.PBObject\">\n\031S2SAddMat"
      "chGroupMemberAck\022!\n\010pbmember\030\001 \001(\0132\017.KFM"
      "sg.PBObject\"\224\001\n\030S2STellMatchGroupDataAck"
      "\022!\n\010pbmember\030\001 \003(\0132\017.KFMsg.PBObject\022\017\n\007g"
      "roupid\030\002 \001(\004\022\021\n\tcaptainid\030\003 \001(\004\022\020\n\010maxco"
      "unt\030\004 \001(\r\022\017\n\007matchid\030\005 \001(\r\022\016\n\006newadd\030\006 \001"
      "(\010\"0\n\034S2SRemoveMatchGroupMemberAck\022\020\n\010me"
      "mberid\030\001 \001(\004\":\n\025S2SLeaveMatchGroupReq\022\017\n"
      "\007groupid\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004\"^\n\024S2SK"
      "ickMatchGroupReq\022\017\n\007groupid\030\001 \001(\004\022\021\n\tcap"
      "tainid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\022\020\n\010member"
      "id\030\004 \001(\004\")\n\025S2SLeaveMatchGroupAck\022\020\n\010pla"
      "yerid\030\001 \001(\004\"o\n\025S2SApplyMatchGroupReq\022\017\n\007"
      "groupid\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004\022\020\n\010serve"
      "rid\030\003 \001(\004\022!\n\010pbmember\030\004 \001(\0132\017.KFMsg.PBOb"
      "ject\"^\n\025S2SApplyMatchGroupAck\022\020\n\010playeri"
      "d\030\001 \001(\004\022!\n\010pbmember\030\002 \001(\0132\017.KFMsg.PBObje"
      "ct\022\020\n\010serverid\030\003 \001(\004\"z\n\034S2SConsentApplyM"
      "atchGroupAck\022\017\n\007groupid\030\001 \001(\004\022\020\n\010playeri"
      "d\030\002 \001(\004\022\021\n\tcaptainid\030\003 \001(\004\022\020\n\010serverid\030\004"
      " \001(\004\022\022\n\nplayername\030\005 \001(\014\"R\n\033S2SOnLineQue"
      "ryMatchGroupReq\022\017\n\007groupid\030\001 \001(\004\022\020\n\010play"
      "erid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\"B\n\035S2SOffLi"
      "neUpdateMatchGroupReq\022\017\n\007groupid\030\001 \001(\004\022\020"
      "\n\010playerid\030\002 \001(\004\"s\n\027S2SUpdateGroupMember"
      "Req\022\017\n\007groupid\030\001 \001(\004\022\020\n\010memberid\030\002 \001(\004\022\020"
      "\n\010dataname\030\003 \001(\014\022#\n\tpbstrings\030\004 \001(\0132\020.KF"
      "Msg.PBStrings\"b\n\027S2SUpdateGroupMemberAck"
      "\022\020\n\010memberid\030\001 \001(\004\022\020\n\010dataname\030\002 \001(\014\022#\n\t"
      "pbstrings\030\003 \001(\0132\020.KFMsg.PBStrings\":\n\025S2S"
      "UpdateGroupDataAck\022!\n\010pbstring\030\001 \003(\0132\017.K"
      "FMsg.PBString\"M\n\025S2SUpdateGuestListReq\022\020"
      "\n\010playerid\030\001 \001(\004\022\017\n\007guestid\030\002 \001(\004\022\021\n\tgue"
      "sttime\030\003 \001(\004\"H\n\020S2SQueryGuestReq\022\020\n\010play"
      "erid\030\001 \001(\004\022\017\n\007queryid\030\002 \001(\004\022\021\n\tquerytime"
      "\030\003 \001(\004\"p\n\020S2SQueryGuestAck\022\020\n\010playerid\030\001"
      " \001(\004\022\017\n\007queryid\030\002 \001(\004\022\022\n\nguestcount\030\003 \001("
      "\r\022%\n\tguestdata\030\004 \003(\0132\022.KFMsg.PBGuestData"
      "\",\n\030S2SNewPlayerLoginMailReq\022\020\n\010playerid"
      "\030\001 \001(\004\"o\n\024S2SUpdateRankDataReq\022\020\n\010player"
      "id\030\001 \001(\004\022\016\n\006rankid\030\002 \001(\r\022\016\n\006zoneid\030\003 \001(\r"
      "\022%\n\npbrankdata\030\004 \001(\0132\021.KFMsg.PBRankData\""
      "Y\n\023S2SQueryRankListReq\022\020\n\010playerid\030\001 \001(\004"
      "\022\020\n\010serverid\030\002 \001(\004\022\016\n\006rankid\030\003 \001(\r\022\016\n\006zo"
      "neid\030\004 \001(\r\"a\n\031S2SQueryFriendRankListReq\022"
      "\020\n\010playerid\030\001 \001(\004\022\020\n\010serverid\030\002 \001(\004\022\016\n\006r"
      "ankid\030\003 \001(\r\022\020\n\010friendid\030\004 \003(\004\"p\n\031S2SAddR"
      "ecentPlayerDataReq\022\016\n\006roomid\030\001 \001(\004\022\020\n\010pl"
      "ayerid\030\002 \001(\004\022\017\n\007members\030\003 \003(\004\022 \n\006pbdata\030"
      "\004 \001(\0132\020.KFMsg.PBStrings\")\n\025S2SQueryRecen"
      "tListReq\022\020\n\010playerid\030\001 \001(\004\"P\n\025S2SQueryRe"
      "centListAck\022\020\n\010playerid\030\001 \001(\004\022%\n\npbrelat"
      "ion\030\002 \003(\0132\021.KFMsg.PBRelation\"y\n\020S2SCreat"
      "eGuidReq\022\020\n\010playerid\030\001 \001(\004\022\020\n\010serverid\030\002"
      " \001(\004\022\014\n\004name\030\003 \001(\014\022\021\n\tguildname\030\004 \001(\014\022\r\n"
      "\005medal\030\005 \001(\r\022\021\n\tmanifesto\030\006 \001(\014\"\222\001\n\030S2SC"
      "reateGuildToShardReq\022\020\n\010playerid\030\001 \001(\004\022\020"
      "\n\010serverid\030\002 \001(\004\022\014\n\004name\030\003 \001(\014\022\021\n\tguildn"
      "ame\030\004 \001(\014\022\r\n\005medal\030\005 \001(\r\022\021\n\tmanifesto\030\006 "
      "\001(\014\022\017\n\007guildid\030\007 \001(\004\"f\n\021S2SCreateGuildAc"
      "k\022\014\n\004code\030\001 \001(\r\022\020\n\010playerid\030\002 \001(\004\022\017\n\007gui"
      "ldid\030\003 \001(\004\022\r\n\005medal\030\004 \001(\r\022\021\n\tmanifesto\030\005"
      " \001(\014\"a\n\033S2SUpdateMemberBasicDataReq\022\020\n\010p"
      "layerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\037\n\006pbdata"
      "\030\003 \003(\0132\017.KFMsg.PBString\"Z\n\021S2SInviteGuil"
      "dReq\022\017\n\007guildid\030\001 \001(\004\022\017\n\007invitor\030\002 \001(\004\022\021"
      "\n\tinvitedid\030\003 \001(\004\022\020\n\010serverid\030\004 \001(\004\"I\n\021S"
      "2SInviteGuildAck\022\017\n\007guildid\030\001 \001(\004\022\020\n\010pla"
      "yerid\030\002 \001(\004\022\021\n\tinvitedid\030\003 \001(\004\"F\n\020S2SApp"
      "lyGuildReq\022\017\n\007guildid\030\001 \001(\004\022\017\n\007invitor\030\002"
      " \001(\004\022\020\n\010playerid\030\003 \001(\004\"C\n\020S2SApplyGuildA"
      "ck\022\020\n\010playerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\014\n"
      "\004code\030\003 \001(\r\"J\n\027S2SPlayerGuildChangeReq\022\020"
      "\n\010playerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\014\n\004cod"
      "e\030\003 \001(\r\"F\n\017S2SExitGuildReq\022\017\n\007guildid\030\001 "
      "\001(\004\022\020\n\010playerid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\""
      "`\n\024S2STransferMasterReq\022\017\n\007guildid\030\001 \001(\004"
      "\022\020\n\010playerid\030\002 \001(\004\022\023\n\013newmasterid\030\003 \001(\004\022"
      "\020\n\010serverid\030\004 \001(\004\"t\n\021S2SReviewApplyReq\022\020"
      "\n\010playerid\030\001 \001(\r\022\024\n\014dealplayerid\030\002 \001(\004\022\024"
      "\n\014operatortype\030\003 \001(\r\022\017\n\007guildid\030\004 \001(\004\022\020\n"
      "\010serverid\030\005 \001(\004\"J\n\023S2SDissolveGuildReq\022\020"
      "\n\010playerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\020\n\010ser"
      "verid\030\003 \001(\004\"Z\n\021S2SModifyMedalReq\022\020\n\010play"
      "erid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\020\n\010serverid\030"
      "\003 \001(\004\022\020\n\010newmedal\030\004 \001(\r\"q\n\024S2SQueryGuild"
      "ListReq\022\020\n\010playerid\030\001 \001(\004\022\020\n\010serverid\030\002 "
      "\001(\004\022%\n\006guilds\030\003 \001(\0132\025.KFMsg.PBGuildIdArr"
      "ay\022\016\n\006cursor\030\004 \001(\r\"[\n\020S2SKickMemberReq\022\020"
      "\n\010playerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\022\n\ntop"
      "layerid\030\003 \001(\004\022\020\n\010serverid\030\004 \001(\004\"L\n\025S2SLo"
      "ginQueryGuildReq\022\017\n\007guildid\030\001 \001(\004\022\020\n\010pla"
      "yerid\030\002 \001(\r\022\020\n\010serverid\030\003 \001(\r\"u\n\025S2SLogi"
      "nQueryGuildAck\022\020\n\010playerid\030\001 \001(\004\022\"\n\tguil"
      "ddata\030\002 \001(\0132\017.KFMsg.PBObject\022\025\n\rshowappl"
      "icant\030\003 \001(\010\022\017\n\007guildid\030\004 \001(\004\"[\n\025S2SUpdat"
      "eGuildDataReq\022\017\n\007guildid\030\001 \001(\004\022\020\n\010player"
      "id\030\002 \001(\004\022\037\n\006pbdata\030\003 \003(\0132\017.KFMsg.PBStrin"
      "g\"7\n\022S2SUpgradeGuildReq\022\017\n\007guildid\030\001 \001(\004"
      "\022\020\n\010playerid\030\002 \001(\004\"C\n\022S2SUpgradeGuildAck"
      "\022\020\n\010playerid\030\001 \001(\004\022\r\n\005level\030\002 \001(\r\022\014\n\004cod"
      "e\030\003 \001(\r\"r\n\030S2SAppointGuildMemberReq\022\020\n\010p"
      "layerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\022\n\ntoplay"
      "erid\030\003 \001(\004\022\r\n\005title\030\004 \001(\r\022\020\n\010serverid\030\005 "
      "\001(\004\"P\n\027S2SSearchGuildByNameReq\022\021\n\tguildn"
      "ame\030\001 \001(\014\022\020\n\010serverid\030\002 \001(\004\022\020\n\010playerid\030"
      "\003 \001(\004\"g\n\024S2SSetGuildSwitchReq\022\020\n\010playeri"
      "d\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\022\014\n\004type\030\003 \001(\014\022\014"
      "\n\004flag\030\004 \001(\r\022\020\n\010serverid\030\005 \001(\004\"=\n\027S2SLog"
      "inQueryGuildidReq\022\020\n\010playerid\030\001 \001(\004\022\020\n\010s"
      "erverid\030\002 \001(\004\"<\n\027S2SLoginQueryGuildidAck"
      "\022\020\n\010playerid\030\001 \001(\004\022\017\n\007guildid\030\002 \001(\004\"z\n\023S"
      "2SQueryGuildLogReq\022\017\n\007guildid\030\001 \001(\004\022\020\n\010p"
      "layerid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\022\020\n\010begin"
      "pos\030\004 \001(\r\022\016\n\006endpos\030\005 \001(\r\022\014\n\004page\030\006 \001(\r\""
      "Q\n\030S2SAddGuildActivenessReq\022\017\n\007guildid\030\001"
      " \001(\004\022\020\n\010playerid\030\002 \001(\004\022\022\n\nactiveness\030\003 \001"
      "(\r\"U\n\017S2SGMAddMailReq\022\021\n\tplayerids\030\001 \003(\004"
      "\022\020\n\010mailtype\030\002 \001(\r\022\035\n\006pbmail\030\003 \001(\0132\r.KFM"
      "sg.PBMail\"\311\001\n\023S2SSendChatToServer\022\020\n\010cha"
      "tinfo\030\001 \001(\014\022\017\n\007isvoice\030\002 \001(\r\022\022\n\nplayerna"
      "me\030\003 \001(\014\022\020\n\010playerid\030\004 \001(\004\022\022\n\nplayericon"
      "\030\005 \001(\014\022\023\n\013playergrade\030\006 \001(\r\022\021\n\tplayersex"
      "\030\007 \001(\r\022\025\n\rplayericonbox\030\010 \001(\014\022\026\n\016players"
      "erverid\030\t \001(\004*\274\036\n\016ServerProtocol\022\036\n\032S2S_"
      "SERVER_PROTOCOL_UNKNOW\020\000\022\036\n\030S2S_TRANSMIT"
      "_MESSAGE_REQ\020\211\244\001\022\037\n\031S2S_BROADCAST_MESSAG"
      "E_REQ\020\212\244\001\022\031\n\023S2S_SAVE_PLAYER_REQ\020\213\244\001\022\033\n\025"
      "S2S_DELETE_PLAYER_REQ\020\214\244\001\022 \n\032S2S_UPDATE_"
      "PUBLIC_DATA_REQ\020\215\244\001\022\"\n\034S2S_UPDATE_ZONE_T"
      "O_PROXY_REQ\020\216\244\001\022$\n\036S2S_TRANSMIT_TO_DATA_"
      "SHARD_REQ\020\217\244\001\022\034\n\026S2S_BROADCAST_TO_WORLD\020"
      "\220\244\001\022\033\n\025S2S_BROADCAST_TO_GAME\020\221\244\001\022\033\n\025S2S_"
      "BROADCAST_TO_GATE\020\222\244\001\022\034\n\026S2S_TRANSMIT_TO"
      "_PLAYER\020\223\244\001\022\034\n\026S2S_TRANSMIT_TO_SERVER\020\224\244"
      "\001\022\036\n\030S2S_KICK_GAME_PLAYER_REQ\020\355\244\001\022\036\n\030S2S"
      "_KICK_GATE_PLAYER_REQ\020\356\244\001\022 \n\032S2S_LOGIN_L"
      "OGIN_VERIFY_REQ\020\360\244\001\022 \n\032S2S_LOGIN_LOGIN_V"
      "ERIFY_ACK\020\361\244\001\022&\n S2S_LOGIN_TELL_TOKEN_TO"
      "_GAME_REQ\020\362\244\001\022 \n\032S2S_LOGIN_WORLD_VERIFY_"
      "REQ\020\364\244\001\022#\n\035S2S_LOGIN_FAILED_TO_LOGIN_ACK"
      "\020\365\244\001\022\036\n\030S2S_GAME_SYNC_ONLINE_REQ\020\371\244\001\022\030\n\022"
      "S2S_LOGIN_GAME_ACK\020\373\244\001\022\037\n\031S2S_LOGIN_LOAD"
      "_PLAYER_REQ\020\374\244\001\022\037\n\031S2S_LOGIN_LOAD_PLAYER"
      "_ACK\020\375\244\001\022\027\n\021S2S_LOGIN_OUT_REQ\020\377\244\001\022 \n\032S2S"
      "_PLAYER_ENTER_WORLD_REQ\020\200\245\001\022 \n\032S2S_PLAYE"
      "R_LEAVE_WORLD_REQ\020\201\245\001\022\035\n\027S2S_SET_PLAYER_"
      "NAME_REQ\020\204\245\001\022\035\n\027S2S_SET_PLAYER_NAME_ACK\020"
      "\205\245\001\022\"\n\034S2S_PLAYER_DISCONNECTION_REQ\020\206\245\001\022"
      "\030\n\022S2S_QUERY_MAIL_REQ\020\207\245\001\022\030\n\022S2S_QUERY_M"
      "AIL_ACK\020\210\245\001\022\031\n\023S2S_DELETE_MAIL_REQ\020\211\245\001\022\032"
      "\n\024S2S_QUERY_FRIEND_REQ\020\212\245\001\022\037\n\031S2S_ADD_FR"
      "IEND_INVITE_REQ\020\213\245\001\022\030\n\022S2S_DEL_FRIEND_RE"
      "Q\020\214\245\001\022\032\n\024S2S_QUERY_FRIEND_ACK\020\215\245\001\022!\n\033S2S"
      "_QUERY_FRIEND_INVITE_ACK\020\216\245\001\022\037\n\031S2S_ADD_"
      "FRIEND_INVITE_ACK\020\217\245\001\022\037\n\031S2S_DEL_FRIEND_"
      "INVITE_REQ\020\220\245\001\022\030\n\022S2S_ADD_FRIEND_REQ\020\221\245\001"
      "\022\030\n\022S2S_DEL_FRIEND_ACK\020\222\245\001\022\030\n\022S2S_ADD_FR"
      "IEND_ACK\020\223\245\001\022\033\n\025S2S_UPDATE_FRIEND_REQ\020\224\245"
      "\001\022\026\n\020S2S_ADD_MAIL_REQ\020\225\245\001\022\035\n\027S2S_NOTICE_"
      "NEW_MAIL_REQ\020\226\245\001\022\"\n\034S2S_UPDATE_FRIEND_LI"
      "NESS_REQ\020\227\245\001\022\031\n\023S2S_QUERY_BASIC_REQ\020\230\245\001\022"
      "\032\n\024S2S_QUERY_PLAYER_REQ\020\231\245\001\022\031\n\023S2S_QUERY"
      "_BASIC_ACK\020\232\245\001\022\032\n\024S2S_QUERY_PLAYER_ACK\020\233"
      "\245\001\022!\n\033S2S_QUERY_FRIEND_INVITE_REQ\020\234\245\001\022\031\n"
      "\023S2S_CREATE_ROLE_REQ\020\236\245\001\022\031\n\023S2S_CREATE_R"
      "OLE_ACK\020\237\245\001\022\036\n\030S2S_UPDATE_MAIL_FLAG_REQ\020"
      "\240\245\001\022\036\n\030S2S_UPDATE_MAIL_FLAG_ACK\020\241\245\001\022\032\n\024S"
      "2S_PLAYER_TOAST_REQ\020\244\245\001\022\032\n\024S2S_PLAYER_TO"
      "AST_ACK\020\245\245\001\022!\n\033S2S_UPDATE_FRIENDLINESS_A"
      "CK\020\246\245\001\022 \n\032S2S_CREATE_MATCH_GROUP_REQ\020\247\245\001"
      "\022(\n\"S2S_RECEIVE_INVITE_MATCH_GROUP_REQ\020\250"
      "\245\001\022(\n\"S2S_CONSENT_INVITE_MATCH_GROUP_REQ"
      "\020\251\245\001\022$\n\036S2S_ADD_MATCH_GROUP_MEMBER_REQ\020\252"
      "\245\001\022\'\n!S2S_REMOVE_MATCH_GROUP_MEMBER_ACK\020"
      "\253\245\001\022\037\n\031S2S_LEAVE_MATCH_GROUP_REQ\020\254\245\001\022\036\n\030"
      "S2S_KICK_MATCH_GROUP_REQ\020\255\245\001\022\037\n\031S2S_APPL"
      "Y_MATCH_GROUP_REQ\020\256\245\001\022\037\n\031S2S_LEAVE_MATCH"
      "_GROUP_ACK\020\257\245\001\022\'\n!S2S_CONSENT_APPLY_MATC"
      "H_GROUP_ACK\020\260\245\001\022&\n S2S_ONLINE_QUERY_MATC"
      "H_GROUP_REQ\020\261\245\001\022$\n\036S2S_ADD_MATCH_GROUP_M"
      "EMBER_ACK\020\262\245\001\022!\n\033S2S_UPDATE_GROUP_MEMBER"
      "_ACK\020\263\245\001\022!\n\033S2S_UPDATE_GROUP_MEMBER_REQ\020"
      "\264\245\001\022(\n\"S2S_OFFLINE_UPDATE_MATCH_GROUP_RE"
      "Q\020\265\245\001\022)\n#S2S_CREATE_MATCH_GROUP_TO_SHARD"
      "_REQ\020\266\245\001\022\037\n\031S2S_UPDATE_GUEST_LIST_REQ\020\267\245"
      "\001\022\031\n\023S2S_QUERY_GUEST_REQ\020\270\245\001\022\031\n\023S2S_QUER"
      "Y_GUEST_ACK\020\271\245\001\022\037\n\031S2S_UPDATE_GROUP_DATA"
      "_ACK\020\272\245\001\022\037\n\031S2S_APPLY_MATCH_GROUP_ACK\020\273\245"
      "\001\022\037\n\031S2S_QUERY_TOAST_COUNT_REQ\020\274\245\001\022\037\n\031S2"
      "S_QUERY_TOAST_COUNT_ACK\020\275\245\001\022 \n\032S2S_UPDAT"
      "E_GROUP_MATCH_REQ\020\276\245\001\022#\n\035S2S_NEW_PLAYER_"
      "LOGIN_MAIL_REQ\020\300\245\001\022\035\n\027S2S_QUERY_RANK_LIS"
      "T_REQ\020\303\245\001\022$\n\036S2S_QUERY_FRIEND_RANK_LIST_"
      "REQ\020\304\245\001\022#\n\035S2S_TELL_MATCH_GROUP_DATA_ACK"
      "\020\310\245\001\022\036\n\030S2S_UPDATE_RANK_DATA_REQ\020\311\245\001\022$\n\036"
      "S2S_ADD_RECENT_PLAYER_DATA_REQ\020\312\245\001\022\037\n\031S2"
      "S_QUERY_RECENT_LIST_REQ\020\313\245\001\022\037\n\031S2S_QUERY"
      "_RECENT_LIST_ACK\020\314\245\001\022\032\n\024S2S_CREATE_GUILD"
      "_REQ\020\315\245\001\022#\n\035S2S_CREATE_GUILD_TO_SHARD_RE"
      "Q\020\316\245\001\022\032\n\024S2S_CREATE_GUILD_ACK\020\317\245\001\022&\n S2S"
      "_UPDATE_MEMBER_BASIC_DATA_REQ\020\320\245\001\022\032\n\024S2S"
      "_INVITE_GUILD_REQ\020\321\245\001\022\032\n\024S2S_INVITE_GUIL"
      "D_ACK\020\322\245\001\022\031\n\023S2S_APPLY_GUILD_REQ\020\323\245\001\022\031\n\023"
      "S2S_APPLY_GUILD_ACK\020\324\245\001\022!\n\033S2S_PLAYER_GU"
      "ILD_CHANGE_REQ\020\325\245\001\022\030\n\022S2S_EXIT_GUILD_REQ"
      "\020\326\245\001\022\035\n\027S2S_TRANSFER_MASTER_REQ\020\327\245\001\022\032\n\024S"
      "2S_REVIEW_APPLY_REQ\020\330\245\001\022\034\n\026S2S_DISSOLVE_"
      "GUILD_REQ\020\331\245\001\022\032\n\024S2S_MODIFY_MEDAL_REQ\020\332\245"
      "\001\022\036\n\030S2S_QUERY_GUILD_LIST_REQ\020\333\245\001\022\031\n\023S2S"
      "_KICK_MEMBER_REQ\020\334\245\001\022\037\n\031S2S_LOGIN_QUERY_"
      "GUILD_REQ\020\335\245\001\022\037\n\031S2S_LOGIN_QUERY_GUILD_A"
      "CK\020\336\245\001\022\037\n\031S2S_UPDATE_GUILD_DATA_REQ\020\337\245\001\022"
      "\033\n\025S2S_UPGRADE_GUILD_REQ\020\340\245\001\022\033\n\025S2S_UPGR"
      "ADE_GUILD_ACK\020\341\245\001\022\"\n\034S2S_APPOINT_GUILD_M"
      "EMBER_REQ\020\342\245\001\022\"\n\034S2S_SEARCH_GUILD_BY_NAM"
      "E_REQ\020\343\245\001\022\036\n\030S2S_SET_GUILD_SWITCH_REQ\020\344\245"
      "\001\022!\n\033S2S_LOGIN_QUERY_GUILDID_REQ\020\345\245\001\022!\n\033"
      "S2S_LOGIN_QUERY_GUILDID_ACK\020\346\245\001\022\035\n\027S2S_Q"
      "UERY_GUILD_LOG_REQ\020\347\245\001\022\"\n\034S2S_ADD_GUILD_"
      "ACTIVENESS_REQ\020\350\245\001\022\031\n\023S2S_GM_ADD_MAIL_RE"
      "Q\020\264\246\001\022\035\n\027S2S_SEND_CHAT_TO_SERVER\020\265\246\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 14564);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFServerMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_KFDefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_KFServerMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* ServerProtocol_descriptor() {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KFServerMessage_2eproto::file_level_enum_descriptors[0];
}
bool ServerProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 21001:
    case 21002:
    case 21003:
    case 21004:
    case 21005:
    case 21006:
    case 21007:
    case 21008:
    case 21009:
    case 21010:
    case 21011:
    case 21012:
    case 21101:
    case 21102:
    case 21104:
    case 21105:
    case 21106:
    case 21108:
    case 21109:
    case 21113:
    case 21115:
    case 21116:
    case 21117:
    case 21119:
    case 21120:
    case 21121:
    case 21124:
    case 21125:
    case 21126:
    case 21127:
    case 21128:
    case 21129:
    case 21130:
    case 21131:
    case 21132:
    case 21133:
    case 21134:
    case 21135:
    case 21136:
    case 21137:
    case 21138:
    case 21139:
    case 21140:
    case 21141:
    case 21142:
    case 21143:
    case 21144:
    case 21145:
    case 21146:
    case 21147:
    case 21148:
    case 21150:
    case 21151:
    case 21152:
    case 21153:
    case 21156:
    case 21157:
    case 21158:
    case 21159:
    case 21160:
    case 21161:
    case 21162:
    case 21163:
    case 21164:
    case 21165:
    case 21166:
    case 21167:
    case 21168:
    case 21169:
    case 21170:
    case 21171:
    case 21172:
    case 21173:
    case 21174:
    case 21175:
    case 21176:
    case 21177:
    case 21178:
    case 21179:
    case 21180:
    case 21181:
    case 21182:
    case 21184:
    case 21187:
    case 21188:
    case 21192:
    case 21193:
    case 21194:
    case 21195:
    case 21196:
    case 21197:
    case 21198:
    case 21199:
    case 21200:
    case 21201:
    case 21202:
    case 21203:
    case 21204:
    case 21205:
    case 21206:
    case 21207:
    case 21208:
    case 21209:
    case 21210:
    case 21211:
    case 21212:
    case 21213:
    case 21214:
    case 21215:
    case 21216:
    case 21217:
    case 21218:
    case 21219:
    case 21220:
    case 21221:
    case 21222:
    case 21223:
    case 21224:
    case 21300:
    case 21301:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void S2STransmitMessageReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STransmitMessageReq::kPlayeridFieldNumber;
const int S2STransmitMessageReq::kMsgidFieldNumber;
const int S2STransmitMessageReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STransmitMessageReq::S2STransmitMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2STransmitMessageReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STransmitMessageReq)
}
S2STransmitMessageReq::S2STransmitMessageReq(const S2STransmitMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STransmitMessageReq)
}

void S2STransmitMessageReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
}

S2STransmitMessageReq::~S2STransmitMessageReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STransmitMessageReq)
  SharedDtor();
}

void S2STransmitMessageReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STransmitMessageReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STransmitMessageReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STransmitMessageReq& S2STransmitMessageReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2STransmitMessageReq.base);
  return *internal_default_instance();
}


void S2STransmitMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STransmitMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool S2STransmitMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STransmitMessageReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STransmitMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STransmitMessageReq)
  return false;
#undef DO_
}

void S2STransmitMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STransmitMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STransmitMessageReq)
}

::google::protobuf::uint8* S2STransmitMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STransmitMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STransmitMessageReq)
  return target;
}

size_t S2STransmitMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STransmitMessageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STransmitMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STransmitMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STransmitMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STransmitMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STransmitMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STransmitMessageReq)
    MergeFrom(*source);
  }
}

void S2STransmitMessageReq::MergeFrom(const S2STransmitMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STransmitMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2STransmitMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STransmitMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STransmitMessageReq::CopyFrom(const S2STransmitMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STransmitMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STransmitMessageReq::IsInitialized() const {
  return true;
}

void S2STransmitMessageReq::Swap(S2STransmitMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STransmitMessageReq::InternalSwap(S2STransmitMessageReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STransmitMessageReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastMessageReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastMessageReq::kMsgidFieldNumber;
const int S2SBroadcastMessageReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastMessageReq::S2SBroadcastMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastMessageReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastMessageReq)
}
S2SBroadcastMessageReq::S2SBroadcastMessageReq(const S2SBroadcastMessageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastMessageReq)
}

void S2SBroadcastMessageReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastMessageReq::~S2SBroadcastMessageReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastMessageReq)
  SharedDtor();
}

void S2SBroadcastMessageReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastMessageReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastMessageReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastMessageReq& S2SBroadcastMessageReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastMessageReq.base);
  return *internal_default_instance();
}


void S2SBroadcastMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastMessageReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastMessageReq)
  return false;
#undef DO_
}

void S2SBroadcastMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastMessageReq)
}

::google::protobuf::uint8* S2SBroadcastMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastMessageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastMessageReq)
  return target;
}

size_t S2SBroadcastMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastMessageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastMessageReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastMessageReq::MergeFrom(const S2SBroadcastMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastMessageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastMessageReq::CopyFrom(const S2SBroadcastMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastMessageReq::IsInitialized() const {
  return true;
}

void S2SBroadcastMessageReq::Swap(S2SBroadcastMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastMessageReq::InternalSwap(S2SBroadcastMessageReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastMessageReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToWord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToWord::kMsgidFieldNumber;
const int S2SBroadcastToWord::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToWord::S2SBroadcastToWord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastToWord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToWord)
}
S2SBroadcastToWord::S2SBroadcastToWord(const S2SBroadcastToWord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToWord)
}

void S2SBroadcastToWord::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToWord::~S2SBroadcastToWord() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToWord)
  SharedDtor();
}

void S2SBroadcastToWord::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToWord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToWord::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToWord& S2SBroadcastToWord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastToWord.base);
  return *internal_default_instance();
}


void S2SBroadcastToWord::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToWord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToWord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToWord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToWord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToWord)
  return false;
#undef DO_
}

void S2SBroadcastToWord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToWord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToWord)
}

::google::protobuf::uint8* S2SBroadcastToWord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToWord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToWord)
  return target;
}

size_t S2SBroadcastToWord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToWord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToWord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToWord)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToWord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToWord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToWord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToWord)
    MergeFrom(*source);
  }
}

void S2SBroadcastToWord::MergeFrom(const S2SBroadcastToWord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToWord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToWord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToWord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToWord::CopyFrom(const S2SBroadcastToWord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToWord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToWord::IsInitialized() const {
  return true;
}

void S2SBroadcastToWord::Swap(S2SBroadcastToWord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToWord::InternalSwap(S2SBroadcastToWord* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToWord::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGame::kMsgidFieldNumber;
const int S2SBroadcastToGame::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGame::S2SBroadcastToGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastToGame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGame)
}
S2SBroadcastToGame::S2SBroadcastToGame(const S2SBroadcastToGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGame)
}

void S2SBroadcastToGame::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToGame::~S2SBroadcastToGame() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGame)
  SharedDtor();
}

void S2SBroadcastToGame::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGame::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGame& S2SBroadcastToGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastToGame.base);
  return *internal_default_instance();
}


void S2SBroadcastToGame::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGame)
  return false;
#undef DO_
}

void S2SBroadcastToGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGame)
}

::google::protobuf::uint8* S2SBroadcastToGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGame)
  return target;
}

size_t S2SBroadcastToGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGame)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGame)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGame::MergeFrom(const S2SBroadcastToGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGame::CopyFrom(const S2SBroadcastToGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGame::IsInitialized() const {
  return true;
}

void S2SBroadcastToGame::Swap(S2SBroadcastToGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGame::InternalSwap(S2SBroadcastToGame* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGame::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGate::kMsgidFieldNumber;
const int S2SBroadcastToGate::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGate::S2SBroadcastToGate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastToGate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGate)
}
S2SBroadcastToGate::S2SBroadcastToGate(const S2SBroadcastToGate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGate)
}

void S2SBroadcastToGate::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToGate::~S2SBroadcastToGate() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGate)
  SharedDtor();
}

void S2SBroadcastToGate::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGate::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGate& S2SBroadcastToGate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SBroadcastToGate.base);
  return *internal_default_instance();
}


void S2SBroadcastToGate::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGate)
  return false;
#undef DO_
}

void S2SBroadcastToGate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGate)
}

::google::protobuf::uint8* S2SBroadcastToGate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGate)
  return target;
}

size_t S2SBroadcastToGate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGate)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGate)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGate::MergeFrom(const S2SBroadcastToGate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToGate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGate::CopyFrom(const S2SBroadcastToGate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGate::IsInitialized() const {
  return true;
}

void S2SBroadcastToGate::Swap(S2SBroadcastToGate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGate::InternalSwap(S2SBroadcastToGate* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGate::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STransmitToPlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STransmitToPlayer::kPlayeridFieldNumber;
const int S2STransmitToPlayer::kMsgidFieldNumber;
const int S2STransmitToPlayer::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STransmitToPlayer::S2STransmitToPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2STransmitToPlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STransmitToPlayer)
}
S2STransmitToPlayer::S2STransmitToPlayer(const S2STransmitToPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STransmitToPlayer)
}

void S2STransmitToPlayer::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
}

S2STransmitToPlayer::~S2STransmitToPlayer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STransmitToPlayer)
  SharedDtor();
}

void S2STransmitToPlayer::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STransmitToPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STransmitToPlayer::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STransmitToPlayer& S2STransmitToPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2STransmitToPlayer.base);
  return *internal_default_instance();
}


void S2STransmitToPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STransmitToPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool S2STransmitToPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STransmitToPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STransmitToPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STransmitToPlayer)
  return false;
#undef DO_
}

void S2STransmitToPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STransmitToPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STransmitToPlayer)
}

::google::protobuf::uint8* S2STransmitToPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STransmitToPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STransmitToPlayer)
  return target;
}

size_t S2STransmitToPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STransmitToPlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STransmitToPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STransmitToPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STransmitToPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STransmitToPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STransmitToPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STransmitToPlayer)
    MergeFrom(*source);
  }
}

void S2STransmitToPlayer::MergeFrom(const S2STransmitToPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STransmitToPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2STransmitToPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STransmitToPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STransmitToPlayer::CopyFrom(const S2STransmitToPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STransmitToPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STransmitToPlayer::IsInitialized() const {
  return true;
}

void S2STransmitToPlayer::Swap(S2STransmitToPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STransmitToPlayer::InternalSwap(S2STransmitToPlayer* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STransmitToPlayer::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STransmitToServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STransmitToServer::kMsgidFieldNumber;
const int S2STransmitToServer::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STransmitToServer::S2STransmitToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2STransmitToServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STransmitToServer)
}
S2STransmitToServer::S2STransmitToServer(const S2STransmitToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STransmitToServer)
}

void S2STransmitToServer::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2STransmitToServer::~S2STransmitToServer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STransmitToServer)
  SharedDtor();
}

void S2STransmitToServer::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STransmitToServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STransmitToServer::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STransmitToServer& S2STransmitToServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2STransmitToServer.base);
  return *internal_default_instance();
}


void S2STransmitToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STransmitToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2STransmitToServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STransmitToServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STransmitToServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STransmitToServer)
  return false;
#undef DO_
}

void S2STransmitToServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STransmitToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STransmitToServer)
}

::google::protobuf::uint8* S2STransmitToServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STransmitToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STransmitToServer)
  return target;
}

size_t S2STransmitToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STransmitToServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STransmitToServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STransmitToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STransmitToServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STransmitToServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STransmitToServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STransmitToServer)
    MergeFrom(*source);
  }
}

void S2STransmitToServer::MergeFrom(const S2STransmitToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STransmitToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2STransmitToServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STransmitToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STransmitToServer::CopyFrom(const S2STransmitToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STransmitToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STransmitToServer::IsInitialized() const {
  return true;
}

void S2STransmitToServer::Swap(S2STransmitToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STransmitToServer::InternalSwap(S2STransmitToServer* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STransmitToServer::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateZoneToProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateZoneToProxyReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateZoneToProxyReq::S2SUpdateZoneToProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateZoneToProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateZoneToProxyReq)
}
S2SUpdateZoneToProxyReq::S2SUpdateZoneToProxyReq(const S2SUpdateZoneToProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      zoneid_(from.zoneid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateZoneToProxyReq)
}

void S2SUpdateZoneToProxyReq::SharedCtor() {
}

S2SUpdateZoneToProxyReq::~S2SUpdateZoneToProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateZoneToProxyReq)
  SharedDtor();
}

void S2SUpdateZoneToProxyReq::SharedDtor() {
}

void S2SUpdateZoneToProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateZoneToProxyReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateZoneToProxyReq& S2SUpdateZoneToProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateZoneToProxyReq.base);
  return *internal_default_instance();
}


void S2SUpdateZoneToProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateZoneToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  zoneid_.Clear();
  _internal_metadata_.Clear();
}

bool S2SUpdateZoneToProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateZoneToProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 zoneid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_zoneid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_zoneid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateZoneToProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateZoneToProxyReq)
  return false;
#undef DO_
}

void S2SUpdateZoneToProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateZoneToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 zoneid = 1;
  if (this->zoneid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _zoneid_cached_byte_size_));
  }
  for (int i = 0, n = this->zoneid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->zoneid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateZoneToProxyReq)
}

::google::protobuf::uint8* S2SUpdateZoneToProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateZoneToProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 zoneid = 1;
  if (this->zoneid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _zoneid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->zoneid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateZoneToProxyReq)
  return target;
}

size_t S2SUpdateZoneToProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateZoneToProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 zoneid = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->zoneid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _zoneid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateZoneToProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateZoneToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateZoneToProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateZoneToProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateZoneToProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateZoneToProxyReq)
    MergeFrom(*source);
  }
}

void S2SUpdateZoneToProxyReq::MergeFrom(const S2SUpdateZoneToProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateZoneToProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  zoneid_.MergeFrom(from.zoneid_);
}

void S2SUpdateZoneToProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateZoneToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateZoneToProxyReq::CopyFrom(const S2SUpdateZoneToProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateZoneToProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateZoneToProxyReq::IsInitialized() const {
  return true;
}

void S2SUpdateZoneToProxyReq::Swap(S2SUpdateZoneToProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateZoneToProxyReq::InternalSwap(S2SUpdateZoneToProxyReq* other) {
  using std::swap;
  zoneid_.InternalSwap(&other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateZoneToProxyReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STransmitToDataShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STransmitToDataShardReq::kZoneidFieldNumber;
const int S2STransmitToDataShardReq::kMsgidFieldNumber;
const int S2STransmitToDataShardReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STransmitToDataShardReq::S2STransmitToDataShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2STransmitToDataShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STransmitToDataShardReq)
}
S2STransmitToDataShardReq::S2STransmitToDataShardReq(const S2STransmitToDataShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&zoneid_, &from.zoneid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&zoneid_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STransmitToDataShardReq)
}

void S2STransmitToDataShardReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&zoneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&zoneid_)) + sizeof(msgid_));
}

S2STransmitToDataShardReq::~S2STransmitToDataShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STransmitToDataShardReq)
  SharedDtor();
}

void S2STransmitToDataShardReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STransmitToDataShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STransmitToDataShardReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STransmitToDataShardReq& S2STransmitToDataShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2STransmitToDataShardReq.base);
  return *internal_default_instance();
}


void S2STransmitToDataShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STransmitToDataShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&zoneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&zoneid_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool S2STransmitToDataShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STransmitToDataShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 zoneid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STransmitToDataShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STransmitToDataShardReq)
  return false;
#undef DO_
}

void S2STransmitToDataShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STransmitToDataShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->zoneid(), output);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STransmitToDataShardReq)
}

::google::protobuf::uint8* S2STransmitToDataShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STransmitToDataShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->zoneid(), target);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STransmitToDataShardReq)
  return target;
}

size_t S2STransmitToDataShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STransmitToDataShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STransmitToDataShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STransmitToDataShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STransmitToDataShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STransmitToDataShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STransmitToDataShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STransmitToDataShardReq)
    MergeFrom(*source);
  }
}

void S2STransmitToDataShardReq::MergeFrom(const S2STransmitToDataShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STransmitToDataShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2STransmitToDataShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STransmitToDataShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STransmitToDataShardReq::CopyFrom(const S2STransmitToDataShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STransmitToDataShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STransmitToDataShardReq::IsInitialized() const {
  return true;
}

void S2STransmitToDataShardReq::Swap(S2STransmitToDataShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STransmitToDataShardReq::InternalSwap(S2STransmitToDataShardReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zoneid_, other->zoneid_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STransmitToDataShardReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSavePlayerReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SSavePlayerReq_default_instance_._instance.get_mutable()->data_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSavePlayerReq::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSavePlayerReq::kIdFieldNumber;
const int S2SSavePlayerReq::kZoneidFieldNumber;
const int S2SSavePlayerReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSavePlayerReq::S2SSavePlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SSavePlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSavePlayerReq)
}
S2SSavePlayerReq::S2SSavePlayerReq(const S2SSavePlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::KFMsg::PBObject(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSavePlayerReq)
}

void S2SSavePlayerReq::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&data_)) + sizeof(zoneid_));
}

S2SSavePlayerReq::~S2SSavePlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSavePlayerReq)
  SharedDtor();
}

void S2SSavePlayerReq::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void S2SSavePlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSavePlayerReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSavePlayerReq& S2SSavePlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SSavePlayerReq.base);
  return *internal_default_instance();
}


void S2SSavePlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSavePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SSavePlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSavePlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSavePlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSavePlayerReq)
  return false;
#undef DO_
}

void S2SSavePlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSavePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSavePlayerReq)
}

::google::protobuf::uint8* S2SSavePlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSavePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSavePlayerReq)
  return target;
}

size_t S2SSavePlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSavePlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSavePlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSavePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSavePlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSavePlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSavePlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSavePlayerReq)
    MergeFrom(*source);
  }
}

void S2SSavePlayerReq::MergeFrom(const S2SSavePlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSavePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::KFMsg::PBObject::MergeFrom(from.data());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SSavePlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSavePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSavePlayerReq::CopyFrom(const S2SSavePlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSavePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSavePlayerReq::IsInitialized() const {
  return true;
}

void S2SSavePlayerReq::Swap(S2SSavePlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSavePlayerReq::InternalSwap(S2SSavePlayerReq* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(id_, other->id_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSavePlayerReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeletePlayerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeletePlayerReq::kIdFieldNumber;
const int S2SDeletePlayerReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeletePlayerReq::S2SDeletePlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SDeletePlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeletePlayerReq)
}
S2SDeletePlayerReq::S2SDeletePlayerReq(const S2SDeletePlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeletePlayerReq)
}

void S2SDeletePlayerReq::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(zoneid_));
}

S2SDeletePlayerReq::~S2SDeletePlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeletePlayerReq)
  SharedDtor();
}

void S2SDeletePlayerReq::SharedDtor() {
}

void S2SDeletePlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeletePlayerReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeletePlayerReq& S2SDeletePlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SDeletePlayerReq.base);
  return *internal_default_instance();
}


void S2SDeletePlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeletePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SDeletePlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeletePlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeletePlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeletePlayerReq)
  return false;
#undef DO_
}

void S2SDeletePlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeletePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeletePlayerReq)
}

::google::protobuf::uint8* S2SDeletePlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeletePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeletePlayerReq)
  return target;
}

size_t S2SDeletePlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeletePlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeletePlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeletePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeletePlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeletePlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeletePlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeletePlayerReq)
    MergeFrom(*source);
  }
}

void S2SDeletePlayerReq::MergeFrom(const S2SDeletePlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeletePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SDeletePlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeletePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeletePlayerReq::CopyFrom(const S2SDeletePlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeletePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeletePlayerReq::IsInitialized() const {
  return true;
}

void S2SDeletePlayerReq::Swap(S2SDeletePlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeletePlayerReq::InternalSwap(S2SDeletePlayerReq* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeletePlayerReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdatePublicDataReq::InitAsDefaultInstance() {
}
void S2SUpdatePublicDataReq::clear_pbdata() {
  pbdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdatePublicDataReq::kPlayeridFieldNumber;
const int S2SUpdatePublicDataReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdatePublicDataReq::S2SUpdatePublicDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdatePublicDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdatePublicDataReq)
}
S2SUpdatePublicDataReq::S2SUpdatePublicDataReq(const S2SUpdatePublicDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbdata_(from.pbdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdatePublicDataReq)
}

void S2SUpdatePublicDataReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SUpdatePublicDataReq::~S2SUpdatePublicDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdatePublicDataReq)
  SharedDtor();
}

void S2SUpdatePublicDataReq::SharedDtor() {
}

void S2SUpdatePublicDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdatePublicDataReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdatePublicDataReq& S2SUpdatePublicDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdatePublicDataReq.base);
  return *internal_default_instance();
}


void S2SUpdatePublicDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdatePublicDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SUpdatePublicDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdatePublicDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBString pbdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdatePublicDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdatePublicDataReq)
  return false;
#undef DO_
}

void S2SUpdatePublicDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdatePublicDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBString pbdata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->pbdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdatePublicDataReq)
}

::google::protobuf::uint8* S2SUpdatePublicDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdatePublicDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBString pbdata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->pbdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdatePublicDataReq)
  return target;
}

size_t S2SUpdatePublicDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdatePublicDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBString pbdata = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pbdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbdata(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdatePublicDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdatePublicDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdatePublicDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdatePublicDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdatePublicDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdatePublicDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdatePublicDataReq::MergeFrom(const S2SUpdatePublicDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdatePublicDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpdatePublicDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdatePublicDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdatePublicDataReq::CopyFrom(const S2SUpdatePublicDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdatePublicDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdatePublicDataReq::IsInitialized() const {
  return true;
}

void S2SUpdatePublicDataReq::Swap(S2SUpdatePublicDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdatePublicDataReq::InternalSwap(S2SUpdatePublicDataReq* other) {
  using std::swap;
  CastToBase(&pbdata_)->InternalSwap(CastToBase(&other->pbdata_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdatePublicDataReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickGamePlayerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickGamePlayerReq::kPlayeridFieldNumber;
const int S2SKickGamePlayerReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickGamePlayerReq::S2SKickGamePlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SKickGamePlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickGamePlayerReq)
}
S2SKickGamePlayerReq::S2SKickGamePlayerReq(const S2SKickGamePlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickGamePlayerReq)
}

void S2SKickGamePlayerReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickGamePlayerReq::~S2SKickGamePlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickGamePlayerReq)
  SharedDtor();
}

void S2SKickGamePlayerReq::SharedDtor() {
}

void S2SKickGamePlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickGamePlayerReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickGamePlayerReq& S2SKickGamePlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SKickGamePlayerReq.base);
  return *internal_default_instance();
}


void S2SKickGamePlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickGamePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickGamePlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickGamePlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickGamePlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickGamePlayerReq)
  return false;
#undef DO_
}

void S2SKickGamePlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickGamePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickGamePlayerReq)
}

::google::protobuf::uint8* S2SKickGamePlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickGamePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickGamePlayerReq)
  return target;
}

size_t S2SKickGamePlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickGamePlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickGamePlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickGamePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickGamePlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickGamePlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickGamePlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickGamePlayerReq)
    MergeFrom(*source);
  }
}

void S2SKickGamePlayerReq::MergeFrom(const S2SKickGamePlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickGamePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickGamePlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickGamePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickGamePlayerReq::CopyFrom(const S2SKickGamePlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickGamePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickGamePlayerReq::IsInitialized() const {
  return true;
}

void S2SKickGamePlayerReq::Swap(S2SKickGamePlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickGamePlayerReq::InternalSwap(S2SKickGamePlayerReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickGamePlayerReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickGatePlayerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickGatePlayerReq::kPlayeridFieldNumber;
const int S2SKickGatePlayerReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickGatePlayerReq::S2SKickGatePlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SKickGatePlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickGatePlayerReq)
}
S2SKickGatePlayerReq::S2SKickGatePlayerReq(const S2SKickGatePlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickGatePlayerReq)
}

void S2SKickGatePlayerReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickGatePlayerReq::~S2SKickGatePlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickGatePlayerReq)
  SharedDtor();
}

void S2SKickGatePlayerReq::SharedDtor() {
}

void S2SKickGatePlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickGatePlayerReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickGatePlayerReq& S2SKickGatePlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SKickGatePlayerReq.base);
  return *internal_default_instance();
}


void S2SKickGatePlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickGatePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickGatePlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickGatePlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickGatePlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickGatePlayerReq)
  return false;
#undef DO_
}

void S2SKickGatePlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickGatePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickGatePlayerReq)
}

::google::protobuf::uint8* S2SKickGatePlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickGatePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickGatePlayerReq)
  return target;
}

size_t S2SKickGatePlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickGatePlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickGatePlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickGatePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickGatePlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickGatePlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickGatePlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickGatePlayerReq)
    MergeFrom(*source);
  }
}

void S2SKickGatePlayerReq::MergeFrom(const S2SKickGatePlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickGatePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickGatePlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickGatePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickGatePlayerReq::CopyFrom(const S2SKickGatePlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickGatePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickGatePlayerReq::IsInitialized() const {
  return true;
}

void S2SKickGatePlayerReq::Swap(S2SKickGatePlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickGatePlayerReq::InternalSwap(S2SKickGatePlayerReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickGatePlayerReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginLoginVerifyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginLoginVerifyReq::kAccountidFieldNumber;
const int S2SLoginLoginVerifyReq::kTokenFieldNumber;
const int S2SLoginLoginVerifyReq::kIpFieldNumber;
const int S2SLoginLoginVerifyReq::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginLoginVerifyReq::S2SLoginLoginVerifyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoginVerifyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginLoginVerifyReq)
}
S2SLoginLoginVerifyReq::S2SLoginLoginVerifyReq(const S2SLoginLoginVerifyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginLoginVerifyReq)
}

void S2SLoginLoginVerifyReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
}

S2SLoginLoginVerifyReq::~S2SLoginLoginVerifyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginLoginVerifyReq)
  SharedDtor();
}

void S2SLoginLoginVerifyReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SLoginLoginVerifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginLoginVerifyReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginLoginVerifyReq& S2SLoginLoginVerifyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoginVerifyReq.base);
  return *internal_default_instance();
}


void S2SLoginLoginVerifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginLoginVerifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool S2SLoginLoginVerifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginLoginVerifyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginLoginVerifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginLoginVerifyReq)
  return false;
#undef DO_
}

void S2SLoginLoginVerifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginLoginVerifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ip(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginLoginVerifyReq)
}

::google::protobuf::uint8* S2SLoginLoginVerifyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginLoginVerifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ip(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginLoginVerifyReq)
  return target;
}

size_t S2SLoginLoginVerifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginLoginVerifyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginLoginVerifyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginLoginVerifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginLoginVerifyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginLoginVerifyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginLoginVerifyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginLoginVerifyReq)
    MergeFrom(*source);
  }
}

void S2SLoginLoginVerifyReq::MergeFrom(const S2SLoginLoginVerifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginLoginVerifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void S2SLoginLoginVerifyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginLoginVerifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginLoginVerifyReq::CopyFrom(const S2SLoginLoginVerifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginLoginVerifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginLoginVerifyReq::IsInitialized() const {
  return true;
}

void S2SLoginLoginVerifyReq::Swap(S2SLoginLoginVerifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginLoginVerifyReq::InternalSwap(S2SLoginLoginVerifyReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginLoginVerifyReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginLoginVerifyAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginLoginVerifyAck::kResultFieldNumber;
const int S2SLoginLoginVerifyAck::kAccountidFieldNumber;
const int S2SLoginLoginVerifyAck::kSessionidFieldNumber;
const int S2SLoginLoginVerifyAck::kBantimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginLoginVerifyAck::S2SLoginLoginVerifyAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoginVerifyAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginLoginVerifyAck)
}
S2SLoginLoginVerifyAck::S2SLoginLoginVerifyAck(const S2SLoginLoginVerifyAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginLoginVerifyAck)
}

void S2SLoginLoginVerifyAck::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
}

S2SLoginLoginVerifyAck::~S2SLoginLoginVerifyAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginLoginVerifyAck)
  SharedDtor();
}

void S2SLoginLoginVerifyAck::SharedDtor() {
}

void S2SLoginLoginVerifyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginLoginVerifyAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginLoginVerifyAck& S2SLoginLoginVerifyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoginVerifyAck.base);
  return *internal_default_instance();
}


void S2SLoginLoginVerifyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginLoginVerifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginLoginVerifyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginLoginVerifyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bantime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bantime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginLoginVerifyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginLoginVerifyAck)
  return false;
#undef DO_
}

void S2SLoginLoginVerifyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginLoginVerifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bantime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginLoginVerifyAck)
}

::google::protobuf::uint8* S2SLoginLoginVerifyAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginLoginVerifyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bantime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginLoginVerifyAck)
  return target;
}

size_t S2SLoginLoginVerifyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginLoginVerifyAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bantime());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginLoginVerifyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginLoginVerifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginLoginVerifyAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginLoginVerifyAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginLoginVerifyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginLoginVerifyAck)
    MergeFrom(*source);
  }
}

void S2SLoginLoginVerifyAck::MergeFrom(const S2SLoginLoginVerifyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginLoginVerifyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.bantime() != 0) {
    set_bantime(from.bantime());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginLoginVerifyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginLoginVerifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginLoginVerifyAck::CopyFrom(const S2SLoginLoginVerifyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginLoginVerifyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginLoginVerifyAck::IsInitialized() const {
  return true;
}

void S2SLoginLoginVerifyAck::Swap(S2SLoginLoginVerifyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginLoginVerifyAck::InternalSwap(S2SLoginLoginVerifyAck* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(bantime_, other->bantime_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginLoginVerifyAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBLoginData::InitAsDefaultInstance() {
  ::KFMsg::_PBLoginData_default_instance_._instance.get_mutable()->channeldata_ = const_cast< ::KFMsg::PBStrings*>(
      ::KFMsg::PBStrings::internal_default_instance());
}
void PBLoginData::clear_channeldata() {
  if (GetArenaNoVirtual() == NULL && channeldata_ != NULL) {
    delete channeldata_;
  }
  channeldata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLoginData::kTokenFieldNumber;
const int PBLoginData::kGateidFieldNumber;
const int PBLoginData::kSessionidFieldNumber;
const int PBLoginData::kChannelFieldNumber;
const int PBLoginData::kAccountFieldNumber;
const int PBLoginData::kAccountidFieldNumber;
const int PBLoginData::kPlayeridFieldNumber;
const int PBLoginData::kChanneldataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLoginData::PBLoginData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBLoginData)
}
PBLoginData::PBLoginData(const PBLoginData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.has_channeldata()) {
    channeldata_ = new ::KFMsg::PBStrings(*from.channeldata_);
  } else {
    channeldata_ = NULL;
  }
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBLoginData)
}

void PBLoginData::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channeldata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&channeldata_)) + sizeof(channel_));
}

PBLoginData::~PBLoginData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBLoginData)
  SharedDtor();
}

void PBLoginData::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channeldata_;
}

void PBLoginData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBLoginData::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLoginData& PBLoginData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_PBLoginData.base);
  return *internal_default_instance();
}


void PBLoginData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBLoginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && channeldata_ != NULL) {
    delete channeldata_;
  }
  channeldata_ = NULL;
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(channel_));
  _internal_metadata_.Clear();
}

bool PBLoginData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBLoginData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes account = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBStrings channeldata = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channeldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBLoginData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBLoginData)
  return false;
#undef DO_
}

void PBLoginData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBLoginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint32 channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->channel(), output);
  }

  // bytes account = 5;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->account(), output);
  }

  // uint64 accountid = 6;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->accountid(), output);
  }

  // uint64 playerid = 7;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->playerid(), output);
  }

  // .KFMsg.PBStrings channeldata = 8;
  if (this->has_channeldata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_channeldata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBLoginData)
}

::google::protobuf::uint8* PBLoginData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBLoginData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint32 channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->channel(), target);
  }

  // bytes account = 5;
  if (this->account().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->account(), target);
  }

  // uint64 accountid = 6;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->accountid(), target);
  }

  // uint64 playerid = 7;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->playerid(), target);
  }

  // .KFMsg.PBStrings channeldata = 8;
  if (this->has_channeldata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_channeldata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBLoginData)
  return target;
}

size_t PBLoginData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBLoginData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // bytes account = 5;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  // .KFMsg.PBStrings channeldata = 8;
  if (this->has_channeldata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *channeldata_);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 accountid = 6;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 playerid = 7;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBLoginData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBLoginData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLoginData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLoginData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBLoginData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBLoginData)
    MergeFrom(*source);
  }
}

void PBLoginData::MergeFrom(const PBLoginData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBLoginData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.has_channeldata()) {
    mutable_channeldata()->::KFMsg::PBStrings::MergeFrom(from.channeldata());
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void PBLoginData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBLoginData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLoginData::CopyFrom(const PBLoginData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBLoginData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLoginData::IsInitialized() const {
  return true;
}

void PBLoginData::Swap(PBLoginData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLoginData::InternalSwap(PBLoginData* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channeldata_, other->channeldata_);
  swap(gateid_, other->gateid_);
  swap(sessionid_, other->sessionid_);
  swap(accountid_, other->accountid_);
  swap(playerid_, other->playerid_);
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBLoginData::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginWorldVerifyReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginWorldVerifyReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginWorldVerifyReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginWorldVerifyReq::S2SLoginWorldVerifyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginWorldVerifyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginWorldVerifyReq)
}
S2SLoginWorldVerifyReq::S2SLoginWorldVerifyReq(const S2SLoginWorldVerifyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginWorldVerifyReq)
}

void S2SLoginWorldVerifyReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginWorldVerifyReq::~S2SLoginWorldVerifyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginWorldVerifyReq)
  SharedDtor();
}

void S2SLoginWorldVerifyReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginWorldVerifyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginWorldVerifyReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginWorldVerifyReq& S2SLoginWorldVerifyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginWorldVerifyReq.base);
  return *internal_default_instance();
}


void S2SLoginWorldVerifyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginWorldVerifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginWorldVerifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginWorldVerifyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginWorldVerifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginWorldVerifyReq)
  return false;
#undef DO_
}

void S2SLoginWorldVerifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginWorldVerifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginWorldVerifyReq)
}

::google::protobuf::uint8* S2SLoginWorldVerifyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginWorldVerifyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginWorldVerifyReq)
  return target;
}

size_t S2SLoginWorldVerifyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginWorldVerifyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginWorldVerifyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginWorldVerifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginWorldVerifyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginWorldVerifyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginWorldVerifyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginWorldVerifyReq)
    MergeFrom(*source);
  }
}

void S2SLoginWorldVerifyReq::MergeFrom(const S2SLoginWorldVerifyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginWorldVerifyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginWorldVerifyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginWorldVerifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginWorldVerifyReq::CopyFrom(const S2SLoginWorldVerifyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginWorldVerifyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginWorldVerifyReq::IsInitialized() const {
  return true;
}

void S2SLoginWorldVerifyReq::Swap(S2SLoginWorldVerifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginWorldVerifyReq::InternalSwap(S2SLoginWorldVerifyReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginWorldVerifyReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginFailedToLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginFailedToLoginAck::kGateidFieldNumber;
const int S2SLoginFailedToLoginAck::kResultFieldNumber;
const int S2SLoginFailedToLoginAck::kAccountidFieldNumber;
const int S2SLoginFailedToLoginAck::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginFailedToLoginAck::S2SLoginFailedToLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginFailedToLoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginFailedToLoginAck)
}
S2SLoginFailedToLoginAck::S2SLoginFailedToLoginAck(const S2SLoginFailedToLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginFailedToLoginAck)
}

void S2SLoginFailedToLoginAck::SharedCtor() {
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
}

S2SLoginFailedToLoginAck::~S2SLoginFailedToLoginAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginFailedToLoginAck)
  SharedDtor();
}

void S2SLoginFailedToLoginAck::SharedDtor() {
}

void S2SLoginFailedToLoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginFailedToLoginAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginFailedToLoginAck& S2SLoginFailedToLoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginFailedToLoginAck.base);
  return *internal_default_instance();
}


void S2SLoginFailedToLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginFailedToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginFailedToLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginFailedToLoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gateid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginFailedToLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginFailedToLoginAck)
  return false;
#undef DO_
}

void S2SLoginFailedToLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginFailedToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gateid = 1;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gateid(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginFailedToLoginAck)
}

::google::protobuf::uint8* S2SLoginFailedToLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginFailedToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gateid = 1;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gateid(), target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginFailedToLoginAck)
  return target;
}

size_t S2SLoginFailedToLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginFailedToLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 gateid = 1;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginFailedToLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginFailedToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginFailedToLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginFailedToLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginFailedToLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginFailedToLoginAck)
    MergeFrom(*source);
  }
}

void S2SLoginFailedToLoginAck::MergeFrom(const S2SLoginFailedToLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginFailedToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginFailedToLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginFailedToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginFailedToLoginAck::CopyFrom(const S2SLoginFailedToLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginFailedToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginFailedToLoginAck::IsInitialized() const {
  return true;
}

void S2SLoginFailedToLoginAck::Swap(S2SLoginFailedToLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginFailedToLoginAck::InternalSwap(S2SLoginFailedToLoginAck* other) {
  using std::swap;
  swap(gateid_, other->gateid_);
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginFailedToLoginAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginTellTokenToGameReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginTellTokenToGameReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginTellTokenToGameReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginTellTokenToGameReq::S2SLoginTellTokenToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginTellTokenToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginTellTokenToGameReq)
}
S2SLoginTellTokenToGameReq::S2SLoginTellTokenToGameReq(const S2SLoginTellTokenToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginTellTokenToGameReq)
}

void S2SLoginTellTokenToGameReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginTellTokenToGameReq::~S2SLoginTellTokenToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginTellTokenToGameReq)
  SharedDtor();
}

void S2SLoginTellTokenToGameReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginTellTokenToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginTellTokenToGameReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginTellTokenToGameReq& S2SLoginTellTokenToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginTellTokenToGameReq.base);
  return *internal_default_instance();
}


void S2SLoginTellTokenToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginTellTokenToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginTellTokenToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginTellTokenToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginTellTokenToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginTellTokenToGameReq)
  return false;
#undef DO_
}

void S2SLoginTellTokenToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginTellTokenToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginTellTokenToGameReq)
}

::google::protobuf::uint8* S2SLoginTellTokenToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginTellTokenToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginTellTokenToGameReq)
  return target;
}

size_t S2SLoginTellTokenToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginTellTokenToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginTellTokenToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginTellTokenToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginTellTokenToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginTellTokenToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginTellTokenToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginTellTokenToGameReq)
    MergeFrom(*source);
  }
}

void S2SLoginTellTokenToGameReq::MergeFrom(const S2SLoginTellTokenToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginTellTokenToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginTellTokenToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginTellTokenToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginTellTokenToGameReq::CopyFrom(const S2SLoginTellTokenToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginTellTokenToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginTellTokenToGameReq::IsInitialized() const {
  return true;
}

void S2SLoginTellTokenToGameReq::Swap(S2SLoginTellTokenToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginTellTokenToGameReq::InternalSwap(S2SLoginTellTokenToGameReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginTellTokenToGameReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginGameAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SLoginGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SLoginGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginGameAck::kPbloginFieldNumber;
const int S2SLoginGameAck::kResultFieldNumber;
const int S2SLoginGameAck::kServertimeFieldNumber;
const int S2SLoginGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginGameAck::S2SLoginGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginGameAck)
}
S2SLoginGameAck::S2SLoginGameAck(const S2SLoginGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  ::memcpy(&servertime_, &from.servertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&servertime_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginGameAck)
}

void S2SLoginGameAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(result_));
}

S2SLoginGameAck::~S2SLoginGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginGameAck)
  SharedDtor();
}

void S2SLoginGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SLoginGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginGameAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginGameAck& S2SLoginGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginGameAck.base);
  return *internal_default_instance();
}


void S2SLoginGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  ::memset(&servertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&servertime_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 servertime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginGameAck)
  return false;
#undef DO_
}

void S2SLoginGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->servertime(), output);
  }

  // .KFMsg.PBObject playerdata = 4;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginGameAck)
}

::google::protobuf::uint8* S2SLoginGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->servertime(), target);
  }

  // .KFMsg.PBObject playerdata = 4;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginGameAck)
  return target;
}

size_t S2SLoginGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 4;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->servertime());
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginGameAck)
    MergeFrom(*source);
  }
}

void S2SLoginGameAck::MergeFrom(const S2SLoginGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginGameAck::CopyFrom(const S2SLoginGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginGameAck::IsInitialized() const {
  return true;
}

void S2SLoginGameAck::Swap(S2SLoginGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginGameAck::InternalSwap(S2SLoginGameAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(servertime_, other->servertime_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginGameAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginLoadPlayerReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginLoadPlayerReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginLoadPlayerReq::kPbloginFieldNumber;
const int S2SLoginLoadPlayerReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginLoadPlayerReq::S2SLoginLoadPlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoadPlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginLoadPlayerReq)
}
S2SLoginLoadPlayerReq::S2SLoginLoadPlayerReq(const S2SLoginLoadPlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  zoneid_ = from.zoneid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginLoadPlayerReq)
}

void S2SLoginLoadPlayerReq::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(zoneid_));
}

S2SLoginLoadPlayerReq::~S2SLoginLoadPlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginLoadPlayerReq)
  SharedDtor();
}

void S2SLoginLoadPlayerReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginLoadPlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginLoadPlayerReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginLoadPlayerReq& S2SLoginLoadPlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoadPlayerReq.base);
  return *internal_default_instance();
}


void S2SLoginLoadPlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginLoadPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  zoneid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SLoginLoadPlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginLoadPlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginLoadPlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginLoadPlayerReq)
  return false;
#undef DO_
}

void S2SLoginLoadPlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginLoadPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginLoadPlayerReq)
}

::google::protobuf::uint8* S2SLoginLoadPlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginLoadPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginLoadPlayerReq)
  return target;
}

size_t S2SLoginLoadPlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginLoadPlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginLoadPlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginLoadPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginLoadPlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginLoadPlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginLoadPlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginLoadPlayerReq)
    MergeFrom(*source);
  }
}

void S2SLoginLoadPlayerReq::MergeFrom(const S2SLoginLoadPlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginLoadPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SLoginLoadPlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginLoadPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginLoadPlayerReq::CopyFrom(const S2SLoginLoadPlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginLoadPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginLoadPlayerReq::IsInitialized() const {
  return true;
}

void S2SLoginLoadPlayerReq::Swap(S2SLoginLoadPlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginLoadPlayerReq::InternalSwap(S2SLoginLoadPlayerReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginLoadPlayerReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginLoadPlayerAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginLoadPlayerAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SLoginLoadPlayerAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SLoginLoadPlayerAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginLoadPlayerAck::kPbloginFieldNumber;
const int S2SLoginLoadPlayerAck::kResultFieldNumber;
const int S2SLoginLoadPlayerAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginLoadPlayerAck::S2SLoginLoadPlayerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoadPlayerAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginLoadPlayerAck)
}
S2SLoginLoadPlayerAck::S2SLoginLoadPlayerAck(const S2SLoginLoadPlayerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginLoadPlayerAck)
}

void S2SLoginLoadPlayerAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(result_));
}

S2SLoginLoadPlayerAck::~S2SLoginLoadPlayerAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginLoadPlayerAck)
  SharedDtor();
}

void S2SLoginLoadPlayerAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SLoginLoadPlayerAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginLoadPlayerAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginLoadPlayerAck& S2SLoginLoadPlayerAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginLoadPlayerAck.base);
  return *internal_default_instance();
}


void S2SLoginLoadPlayerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginLoadPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SLoginLoadPlayerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginLoadPlayerAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginLoadPlayerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginLoadPlayerAck)
  return false;
#undef DO_
}

void S2SLoginLoadPlayerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginLoadPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginLoadPlayerAck)
}

::google::protobuf::uint8* S2SLoginLoadPlayerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginLoadPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginLoadPlayerAck)
  return target;
}

size_t S2SLoginLoadPlayerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginLoadPlayerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginLoadPlayerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginLoadPlayerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginLoadPlayerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginLoadPlayerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginLoadPlayerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginLoadPlayerAck)
    MergeFrom(*source);
  }
}

void S2SLoginLoadPlayerAck::MergeFrom(const S2SLoginLoadPlayerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginLoadPlayerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginLoadPlayerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginLoadPlayerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginLoadPlayerAck::CopyFrom(const S2SLoginLoadPlayerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginLoadPlayerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginLoadPlayerAck::IsInitialized() const {
  return true;
}

void S2SLoginLoadPlayerAck::Swap(S2SLoginLoadPlayerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginLoadPlayerAck::InternalSwap(S2SLoginLoadPlayerAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginLoadPlayerAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginOutReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginOutReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginOutReq::S2SLoginOutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginOutReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginOutReq)
}
S2SLoginOutReq::S2SLoginOutReq(const S2SLoginOutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginOutReq)
}

void S2SLoginOutReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLoginOutReq::~S2SLoginOutReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginOutReq)
  SharedDtor();
}

void S2SLoginOutReq::SharedDtor() {
}

void S2SLoginOutReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginOutReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginOutReq& S2SLoginOutReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginOutReq.base);
  return *internal_default_instance();
}


void S2SLoginOutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginOutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLoginOutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginOutReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginOutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginOutReq)
  return false;
#undef DO_
}

void S2SLoginOutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginOutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginOutReq)
}

::google::protobuf::uint8* S2SLoginOutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginOutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginOutReq)
  return target;
}

size_t S2SLoginOutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginOutReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginOutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginOutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginOutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginOutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginOutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginOutReq)
    MergeFrom(*source);
  }
}

void S2SLoginOutReq::MergeFrom(const S2SLoginOutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginOutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLoginOutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginOutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginOutReq::CopyFrom(const S2SLoginOutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginOutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginOutReq::IsInitialized() const {
  return true;
}

void S2SLoginOutReq::Swap(S2SLoginOutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginOutReq::InternalSwap(S2SLoginOutReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginOutReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerDisconnectionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerDisconnectionReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerDisconnectionReq::S2SPlayerDisconnectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerDisconnectionReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerDisconnectionReq)
}
S2SPlayerDisconnectionReq::S2SPlayerDisconnectionReq(const S2SPlayerDisconnectionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerDisconnectionReq)
}

void S2SPlayerDisconnectionReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SPlayerDisconnectionReq::~S2SPlayerDisconnectionReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerDisconnectionReq)
  SharedDtor();
}

void S2SPlayerDisconnectionReq::SharedDtor() {
}

void S2SPlayerDisconnectionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerDisconnectionReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerDisconnectionReq& S2SPlayerDisconnectionReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerDisconnectionReq.base);
  return *internal_default_instance();
}


void S2SPlayerDisconnectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerDisconnectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SPlayerDisconnectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerDisconnectionReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerDisconnectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerDisconnectionReq)
  return false;
#undef DO_
}

void S2SPlayerDisconnectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerDisconnectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerDisconnectionReq)
}

::google::protobuf::uint8* S2SPlayerDisconnectionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerDisconnectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerDisconnectionReq)
  return target;
}

size_t S2SPlayerDisconnectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerDisconnectionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerDisconnectionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerDisconnectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerDisconnectionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerDisconnectionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerDisconnectionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerDisconnectionReq)
    MergeFrom(*source);
  }
}

void S2SPlayerDisconnectionReq::MergeFrom(const S2SPlayerDisconnectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerDisconnectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SPlayerDisconnectionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerDisconnectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerDisconnectionReq::CopyFrom(const S2SPlayerDisconnectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerDisconnectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerDisconnectionReq::IsInitialized() const {
  return true;
}

void S2SPlayerDisconnectionReq::Swap(S2SPlayerDisconnectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerDisconnectionReq::InternalSwap(S2SPlayerDisconnectionReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerDisconnectionReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameReq::kPlayeridFieldNumber;
const int S2SSetPlayerNameReq::kOldnameFieldNumber;
const int S2SSetPlayerNameReq::kNewnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameReq::S2SSetPlayerNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SSetPlayerNameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameReq)
}
S2SSetPlayerNameReq::S2SSetPlayerNameReq(const S2SSetPlayerNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oldname().size() > 0) {
    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameReq)
}

void S2SSetPlayerNameReq::SharedCtor() {
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SSetPlayerNameReq::~S2SSetPlayerNameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameReq)
  SharedDtor();
}

void S2SSetPlayerNameReq::SharedDtor() {
  oldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameReq& S2SSetPlayerNameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SSetPlayerNameReq.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes oldname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oldname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameReq)
  return false;
#undef DO_
}

void S2SSetPlayerNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->oldname(), output);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->newname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameReq)
}

::google::protobuf::uint8* S2SSetPlayerNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->oldname(), target);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->newname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameReq)
  return target;
}

size_t S2SSetPlayerNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oldname());
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameReq)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameReq::MergeFrom(const S2SSetPlayerNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SSetPlayerNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameReq::CopyFrom(const S2SSetPlayerNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameReq::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameReq::Swap(S2SSetPlayerNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameReq::InternalSwap(S2SSetPlayerNameReq* other) {
  using std::swap;
  oldname_.Swap(&other->oldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameAck::kPlayeridFieldNumber;
const int S2SSetPlayerNameAck::kOldnameFieldNumber;
const int S2SSetPlayerNameAck::kNewnameFieldNumber;
const int S2SSetPlayerNameAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameAck::S2SSetPlayerNameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SSetPlayerNameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameAck)
}
S2SSetPlayerNameAck::S2SSetPlayerNameAck(const S2SSetPlayerNameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oldname().size() > 0) {
    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameAck)
}

void S2SSetPlayerNameAck::SharedCtor() {
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
}

S2SSetPlayerNameAck::~S2SSetPlayerNameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameAck)
  SharedDtor();
}

void S2SSetPlayerNameAck::SharedDtor() {
  oldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameAck& S2SSetPlayerNameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SSetPlayerNameAck.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes oldname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oldname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameAck)
  return false;
#undef DO_
}

void S2SSetPlayerNameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->oldname(), output);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->newname(), output);
  }

  // uint32 result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameAck)
}

::google::protobuf::uint8* S2SSetPlayerNameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->oldname(), target);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->newname(), target);
  }

  // uint32 result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameAck)
  return target;
}

size_t S2SSetPlayerNameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oldname());
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameAck)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameAck::MergeFrom(const S2SSetPlayerNameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SSetPlayerNameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameAck::CopyFrom(const S2SSetPlayerNameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameAck::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameAck::Swap(S2SSetPlayerNameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameAck::InternalSwap(S2SSetPlayerNameAck* other) {
  using std::swap;
  oldname_.Swap(&other->oldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateRoleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateRoleReq::kPlayeridFieldNumber;
const int S2SCreateRoleReq::kNewnameFieldNumber;
const int S2SCreateRoleReq::kModleidFieldNumber;
const int S2SCreateRoleReq::kSexFieldNumber;
const int S2SCreateRoleReq::kInviteridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateRoleReq::S2SCreateRoleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateRoleReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateRoleReq)
}
S2SCreateRoleReq::S2SCreateRoleReq(const S2SCreateRoleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&inviterid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(inviterid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateRoleReq)
}

void S2SCreateRoleReq::SharedCtor() {
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inviterid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(inviterid_));
}

S2SCreateRoleReq::~S2SCreateRoleReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateRoleReq)
  SharedDtor();
}

void S2SCreateRoleReq::SharedDtor() {
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateRoleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateRoleReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateRoleReq& S2SCreateRoleReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateRoleReq.base);
  return *internal_default_instance();
}


void S2SCreateRoleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateRoleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inviterid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(inviterid_));
  _internal_metadata_.Clear();
}

bool S2SCreateRoleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateRoleReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 modleid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 inviterid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inviterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateRoleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateRoleReq)
  return false;
#undef DO_
}

void S2SCreateRoleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateRoleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes newname = 2;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->newname(), output);
  }

  // uint32 modleid = 3;
  if (this->modleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modleid(), output);
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sex(), output);
  }

  // uint32 inviterid = 5;
  if (this->inviterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->inviterid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateRoleReq)
}

::google::protobuf::uint8* S2SCreateRoleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateRoleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes newname = 2;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->newname(), target);
  }

  // uint32 modleid = 3;
  if (this->modleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modleid(), target);
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sex(), target);
  }

  // uint32 inviterid = 5;
  if (this->inviterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->inviterid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateRoleReq)
  return target;
}

size_t S2SCreateRoleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateRoleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes newname = 2;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 modleid = 3;
  if (this->modleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modleid());
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // uint32 inviterid = 5;
  if (this->inviterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->inviterid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateRoleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateRoleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateRoleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateRoleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateRoleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateRoleReq)
    MergeFrom(*source);
  }
}

void S2SCreateRoleReq::MergeFrom(const S2SCreateRoleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateRoleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.modleid() != 0) {
    set_modleid(from.modleid());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.inviterid() != 0) {
    set_inviterid(from.inviterid());
  }
}

void S2SCreateRoleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateRoleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateRoleReq::CopyFrom(const S2SCreateRoleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateRoleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateRoleReq::IsInitialized() const {
  return true;
}

void S2SCreateRoleReq::Swap(S2SCreateRoleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateRoleReq::InternalSwap(S2SCreateRoleReq* other) {
  using std::swap;
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(modleid_, other->modleid_);
  swap(sex_, other->sex_);
  swap(inviterid_, other->inviterid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateRoleReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateRoleAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateRoleAck::kPlayeridFieldNumber;
const int S2SCreateRoleAck::kNewnameFieldNumber;
const int S2SCreateRoleAck::kModleidFieldNumber;
const int S2SCreateRoleAck::kSexFieldNumber;
const int S2SCreateRoleAck::kInviteridFieldNumber;
const int S2SCreateRoleAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateRoleAck::S2SCreateRoleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateRoleAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateRoleAck)
}
S2SCreateRoleAck::S2SCreateRoleAck(const S2SCreateRoleAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateRoleAck)
}

void S2SCreateRoleAck::SharedCtor() {
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
}

S2SCreateRoleAck::~S2SCreateRoleAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateRoleAck)
  SharedDtor();
}

void S2SCreateRoleAck::SharedDtor() {
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateRoleAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateRoleAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateRoleAck& S2SCreateRoleAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateRoleAck.base);
  return *internal_default_instance();
}


void S2SCreateRoleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateRoleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SCreateRoleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateRoleAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 modleid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 inviterid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inviterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateRoleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateRoleAck)
  return false;
#undef DO_
}

void S2SCreateRoleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateRoleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes newname = 2;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->newname(), output);
  }

  // uint32 modleid = 3;
  if (this->modleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->modleid(), output);
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sex(), output);
  }

  // uint32 inviterid = 5;
  if (this->inviterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->inviterid(), output);
  }

  // uint32 result = 6;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateRoleAck)
}

::google::protobuf::uint8* S2SCreateRoleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateRoleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes newname = 2;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->newname(), target);
  }

  // uint32 modleid = 3;
  if (this->modleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->modleid(), target);
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sex(), target);
  }

  // uint32 inviterid = 5;
  if (this->inviterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->inviterid(), target);
  }

  // uint32 result = 6;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateRoleAck)
  return target;
}

size_t S2SCreateRoleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateRoleAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes newname = 2;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 modleid = 3;
  if (this->modleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modleid());
  }

  // uint32 sex = 4;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // uint32 inviterid = 5;
  if (this->inviterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->inviterid());
  }

  // uint32 result = 6;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateRoleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateRoleAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateRoleAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateRoleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateRoleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateRoleAck)
    MergeFrom(*source);
  }
}

void S2SCreateRoleAck::MergeFrom(const S2SCreateRoleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateRoleAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.modleid() != 0) {
    set_modleid(from.modleid());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.inviterid() != 0) {
    set_inviterid(from.inviterid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SCreateRoleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateRoleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateRoleAck::CopyFrom(const S2SCreateRoleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateRoleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateRoleAck::IsInitialized() const {
  return true;
}

void S2SCreateRoleAck::Swap(S2SCreateRoleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateRoleAck::InternalSwap(S2SCreateRoleAck* other) {
  using std::swap;
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(modleid_, other->modleid_);
  swap(sex_, other->sex_);
  swap(inviterid_, other->inviterid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateRoleAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterWorldReq::kPlayeridFieldNumber;
const int S2SPlayerEnterWorldReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterWorldReq::S2SPlayerEnterWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerEnterWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterWorldReq)
}
S2SPlayerEnterWorldReq::S2SPlayerEnterWorldReq(const S2SPlayerEnterWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterWorldReq)
}

void S2SPlayerEnterWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SPlayerEnterWorldReq::~S2SPlayerEnterWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterWorldReq)
  SharedDtor();
}

void S2SPlayerEnterWorldReq::SharedDtor() {
}

void S2SPlayerEnterWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterWorldReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterWorldReq& S2SPlayerEnterWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerEnterWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerEnterWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterWorldReq)
  return false;
#undef DO_
}

void S2SPlayerEnterWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterWorldReq)
}

::google::protobuf::uint8* S2SPlayerEnterWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterWorldReq)
  return target;
}

size_t S2SPlayerEnterWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterWorldReq::MergeFrom(const S2SPlayerEnterWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SPlayerEnterWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterWorldReq::CopyFrom(const S2SPlayerEnterWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerEnterWorldReq::Swap(S2SPlayerEnterWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterWorldReq::InternalSwap(S2SPlayerEnterWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterWorldReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveWorldReq::kPlayeridFieldNumber;
const int S2SPlayerLeaveWorldReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveWorldReq::S2SPlayerLeaveWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerLeaveWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveWorldReq)
}
S2SPlayerLeaveWorldReq::S2SPlayerLeaveWorldReq(const S2SPlayerLeaveWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveWorldReq)
}

void S2SPlayerLeaveWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SPlayerLeaveWorldReq::~S2SPlayerLeaveWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveWorldReq)
  SharedDtor();
}

void S2SPlayerLeaveWorldReq::SharedDtor() {
}

void S2SPlayerLeaveWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveWorldReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveWorldReq& S2SPlayerLeaveWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerLeaveWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveWorldReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveWorldReq)
}

::google::protobuf::uint8* S2SPlayerLeaveWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveWorldReq)
  return target;
}

size_t S2SPlayerLeaveWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveWorldReq::MergeFrom(const S2SPlayerLeaveWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SPlayerLeaveWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveWorldReq::CopyFrom(const S2SPlayerLeaveWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveWorldReq::Swap(S2SPlayerLeaveWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveWorldReq::InternalSwap(S2SPlayerLeaveWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveWorldReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SGameSyncOnlineReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SGameSyncOnlineReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SGameSyncOnlineReq::S2SGameSyncOnlineReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SGameSyncOnlineReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SGameSyncOnlineReq)
}
S2SGameSyncOnlineReq::S2SGameSyncOnlineReq(const S2SGameSyncOnlineReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerid_(from.playerid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SGameSyncOnlineReq)
}

void S2SGameSyncOnlineReq::SharedCtor() {
}

S2SGameSyncOnlineReq::~S2SGameSyncOnlineReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SGameSyncOnlineReq)
  SharedDtor();
}

void S2SGameSyncOnlineReq::SharedDtor() {
}

void S2SGameSyncOnlineReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SGameSyncOnlineReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SGameSyncOnlineReq& S2SGameSyncOnlineReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SGameSyncOnlineReq.base);
  return *internal_default_instance();
}


void S2SGameSyncOnlineReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SGameSyncOnlineReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.Clear();
  _internal_metadata_.Clear();
}

bool S2SGameSyncOnlineReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SGameSyncOnlineReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_playerid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_playerid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SGameSyncOnlineReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SGameSyncOnlineReq)
  return false;
#undef DO_
}

void S2SGameSyncOnlineReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SGameSyncOnlineReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 playerid = 1;
  if (this->playerid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _playerid_cached_byte_size_));
  }
  for (int i = 0, n = this->playerid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->playerid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SGameSyncOnlineReq)
}

::google::protobuf::uint8* S2SGameSyncOnlineReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SGameSyncOnlineReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 playerid = 1;
  if (this->playerid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _playerid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->playerid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SGameSyncOnlineReq)
  return target;
}

size_t S2SGameSyncOnlineReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SGameSyncOnlineReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 playerid = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->playerid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _playerid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SGameSyncOnlineReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SGameSyncOnlineReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SGameSyncOnlineReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SGameSyncOnlineReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SGameSyncOnlineReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SGameSyncOnlineReq)
    MergeFrom(*source);
  }
}

void S2SGameSyncOnlineReq::MergeFrom(const S2SGameSyncOnlineReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SGameSyncOnlineReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerid_.MergeFrom(from.playerid_);
}

void S2SGameSyncOnlineReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SGameSyncOnlineReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SGameSyncOnlineReq::CopyFrom(const S2SGameSyncOnlineReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SGameSyncOnlineReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SGameSyncOnlineReq::IsInitialized() const {
  return true;
}

void S2SGameSyncOnlineReq::Swap(S2SGameSyncOnlineReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SGameSyncOnlineReq::InternalSwap(S2SGameSyncOnlineReq* other) {
  using std::swap;
  playerid_.InternalSwap(&other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SGameSyncOnlineReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailReq::kPlayeridFieldNumber;
const int S2SQueryMailReq::kMailtypeFieldNumber;
const int S2SQueryMailReq::kMaxmailidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailReq::S2SQueryMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailReq)
}
S2SQueryMailReq::S2SQueryMailReq(const S2SQueryMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailtype_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailReq)
}

void S2SQueryMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
}

S2SQueryMailReq::~S2SQueryMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailReq)
  SharedDtor();
}

void S2SQueryMailReq::SharedDtor() {
}

void S2SQueryMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailReq& S2SQueryMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  return *internal_default_instance();
}


void S2SQueryMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  _internal_metadata_.Clear();
}

bool S2SQueryMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 maxmailid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxmailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailReq)
  return false;
#undef DO_
}

void S2SQueryMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mailtype(), output);
  }

  // uint64 maxmailid = 3;
  if (this->maxmailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->maxmailid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailReq)
}

::google::protobuf::uint8* S2SQueryMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mailtype(), target);
  }

  // uint64 maxmailid = 3;
  if (this->maxmailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->maxmailid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailReq)
  return target;
}

size_t S2SQueryMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 maxmailid = 3;
  if (this->maxmailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maxmailid());
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailReq)
    MergeFrom(*source);
  }
}

void S2SQueryMailReq::MergeFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.maxmailid() != 0) {
    set_maxmailid(from.maxmailid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
}

void S2SQueryMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailReq::CopyFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailReq::IsInitialized() const {
  return true;
}

void S2SQueryMailReq::Swap(S2SQueryMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailReq::InternalSwap(S2SQueryMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(maxmailid_, other->maxmailid_);
  swap(mailtype_, other->mailtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBMail::InitAsDefaultInstance() {
}
void PBMail::clear_data() {
  data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMail::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMail::PBMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_PBMail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMail)
}
PBMail::PBMail(const PBMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMail)
}

void PBMail::SharedCtor() {
}

PBMail::~PBMail() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMail)
  SharedDtor();
}

void PBMail::SharedDtor() {
}

void PBMail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMail::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMail& PBMail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_PBMail.base);
  return *internal_default_instance();
}


void PBMail::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool PBMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBString data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMail)
  return false;
#undef DO_
}

void PBMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBString data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMail)
}

::google::protobuf::uint8* PBMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBString data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMail)
  return target;
}

size_t PBMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBString data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMail)
    MergeFrom(*source);
  }
}

void PBMail::MergeFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PBMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMail::CopyFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMail::IsInitialized() const {
  return true;
}

void PBMail::Swap(PBMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMail::InternalSwap(PBMail* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMail::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBMails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMails::kMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMails::PBMails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_PBMails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMails)
}
PBMails::PBMails(const PBMails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_(from.mail_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMails)
}

void PBMails::SharedCtor() {
}

PBMails::~PBMails() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMails)
  SharedDtor();
}

void PBMails::SharedDtor() {
}

void PBMails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMails::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMails& PBMails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_PBMails.base);
  return *internal_default_instance();
}


void PBMails::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_.Clear();
  _internal_metadata_.Clear();
}

bool PBMails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBMail mail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMails)
  return false;
#undef DO_
}

void PBMails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBMail mail = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mail(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMails)
}

::google::protobuf::uint8* PBMails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBMail mail = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mail(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMails)
  return target;
}

size_t PBMails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBMail mail = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mail_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mail(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMails)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMails)
    MergeFrom(*source);
  }
}

void PBMails::MergeFrom(const PBMails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_.MergeFrom(from.mail_);
}

void PBMails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMails::CopyFrom(const PBMails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMails::IsInitialized() const {
  return true;
}

void PBMails::Swap(PBMails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMails::InternalSwap(PBMails* other) {
  using std::swap;
  CastToBase(&mail_)->InternalSwap(CastToBase(&other->mail_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMails::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryMailAck_default_instance_._instance.get_mutable()->mails_ = const_cast< ::KFMsg::PBMails*>(
      ::KFMsg::PBMails::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailAck::kPlayeridFieldNumber;
const int S2SQueryMailAck::kMailsFieldNumber;
const int S2SQueryMailAck::kMailtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailAck::S2SQueryMailAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailAck)
}
S2SQueryMailAck::S2SQueryMailAck(const S2SQueryMailAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mails()) {
    mails_ = new ::KFMsg::PBMails(*from.mails_);
  } else {
    mails_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailtype_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailAck)
}

void S2SQueryMailAck::SharedCtor() {
  ::memset(&mails_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&mails_)) + sizeof(mailtype_));
}

S2SQueryMailAck::~S2SQueryMailAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailAck)
  SharedDtor();
}

void S2SQueryMailAck::SharedDtor() {
  if (this != internal_default_instance()) delete mails_;
}

void S2SQueryMailAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailAck& S2SQueryMailAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  return *internal_default_instance();
}


void S2SQueryMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mails_ != NULL) {
    delete mails_;
  }
  mails_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  _internal_metadata_.Clear();
}

bool S2SQueryMailAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMails mails = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailAck)
  return false;
#undef DO_
}

void S2SQueryMailAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBMails mails = 2;
  if (this->has_mails()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_mails(), output);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mailtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailAck)
}

::google::protobuf::uint8* S2SQueryMailAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBMails mails = 2;
  if (this->has_mails()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_mails(), deterministic, target);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mailtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailAck)
  return target;
}

size_t S2SQueryMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMails mails = 2;
  if (this->has_mails()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mails_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailAck)
    MergeFrom(*source);
  }
}

void S2SQueryMailAck::MergeFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mails()) {
    mutable_mails()->::KFMsg::PBMails::MergeFrom(from.mails());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
}

void S2SQueryMailAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailAck::CopyFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailAck::IsInitialized() const {
  return true;
}

void S2SQueryMailAck::Swap(S2SQueryMailAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailAck::InternalSwap(S2SQueryMailAck* other) {
  using std::swap;
  swap(mails_, other->mails_);
  swap(playerid_, other->playerid_);
  swap(mailtype_, other->mailtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDeleteMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDeleteMailReq::kPlayeridFieldNumber;
const int S2SDeleteMailReq::kMailidFieldNumber;
const int S2SDeleteMailReq::kMailtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDeleteMailReq::S2SDeleteMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SDeleteMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDeleteMailReq)
}
S2SDeleteMailReq::S2SDeleteMailReq(const S2SDeleteMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailtype_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDeleteMailReq)
}

void S2SDeleteMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
}

S2SDeleteMailReq::~S2SDeleteMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDeleteMailReq)
  SharedDtor();
}

void S2SDeleteMailReq::SharedDtor() {
}

void S2SDeleteMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDeleteMailReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDeleteMailReq& S2SDeleteMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SDeleteMailReq.base);
  return *internal_default_instance();
}


void S2SDeleteMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDeleteMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  _internal_metadata_.Clear();
}

bool S2SDeleteMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDeleteMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDeleteMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDeleteMailReq)
  return false;
#undef DO_
}

void S2SDeleteMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDeleteMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mailid(), output);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mailtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDeleteMailReq)
}

::google::protobuf::uint8* S2SDeleteMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDeleteMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mailid(), target);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mailtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDeleteMailReq)
  return target;
}

size_t S2SDeleteMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDeleteMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mailid());
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDeleteMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDeleteMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDeleteMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDeleteMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDeleteMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDeleteMailReq)
    MergeFrom(*source);
  }
}

void S2SDeleteMailReq::MergeFrom(const S2SDeleteMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDeleteMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
}

void S2SDeleteMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDeleteMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDeleteMailReq::CopyFrom(const S2SDeleteMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDeleteMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDeleteMailReq::IsInitialized() const {
  return true;
}

void S2SDeleteMailReq::Swap(S2SDeleteMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDeleteMailReq::InternalSwap(S2SDeleteMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(mailid_, other->mailid_);
  swap(mailtype_, other->mailtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDeleteMailReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddMailReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddMailReq_default_instance_._instance.get_mutable()->pbmail_ = const_cast< ::KFMsg::PBMail*>(
      ::KFMsg::PBMail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddMailReq::kPlayeridFieldNumber;
const int S2SAddMailReq::kMailtypeFieldNumber;
const int S2SAddMailReq::kPbmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddMailReq::S2SAddMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddMailReq)
}
S2SAddMailReq::S2SAddMailReq(const S2SAddMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmail()) {
    pbmail_ = new ::KFMsg::PBMail(*from.pbmail_);
  } else {
    pbmail_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailtype_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddMailReq)
}

void S2SAddMailReq::SharedCtor() {
  ::memset(&pbmail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&pbmail_)) + sizeof(mailtype_));
}

S2SAddMailReq::~S2SAddMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddMailReq)
  SharedDtor();
}

void S2SAddMailReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmail_;
}

void S2SAddMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddMailReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddMailReq& S2SAddMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  return *internal_default_instance();
}


void S2SAddMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  _internal_metadata_.Clear();
}

bool S2SAddMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMail pbmail = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddMailReq)
  return false;
#undef DO_
}

void S2SAddMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mailtype(), output);
  }

  // .KFMsg.PBMail pbmail = 5;
  if (this->has_pbmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_pbmail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddMailReq)
}

::google::protobuf::uint8* S2SAddMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mailtype(), target);
  }

  // .KFMsg.PBMail pbmail = 5;
  if (this->has_pbmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_pbmail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddMailReq)
  return target;
}

size_t S2SAddMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMail pbmail = 5;
  if (this->has_pbmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmail_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddMailReq)
    MergeFrom(*source);
  }
}

void S2SAddMailReq::MergeFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmail()) {
    mutable_pbmail()->::KFMsg::PBMail::MergeFrom(from.pbmail());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
}

void S2SAddMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddMailReq::CopyFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddMailReq::IsInitialized() const {
  return true;
}

void S2SAddMailReq::Swap(S2SAddMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddMailReq::InternalSwap(S2SAddMailReq* other) {
  using std::swap;
  swap(pbmail_, other->pbmail_);
  swap(playerid_, other->playerid_);
  swap(mailtype_, other->mailtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddMailReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNoticeNewMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNoticeNewMailReq::kPlayeridFieldNumber;
const int S2SNoticeNewMailReq::kMailtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNoticeNewMailReq::S2SNoticeNewMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNoticeNewMailReq)
}
S2SNoticeNewMailReq::S2SNoticeNewMailReq(const S2SNoticeNewMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mailtype_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNoticeNewMailReq)
}

void S2SNoticeNewMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
}

S2SNoticeNewMailReq::~S2SNoticeNewMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNoticeNewMailReq)
  SharedDtor();
}

void S2SNoticeNewMailReq::SharedDtor() {
}

void S2SNoticeNewMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNoticeNewMailReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNoticeNewMailReq& S2SNoticeNewMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  return *internal_default_instance();
}


void S2SNoticeNewMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(mailtype_));
  _internal_metadata_.Clear();
}

bool S2SNoticeNewMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNoticeNewMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNoticeNewMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNoticeNewMailReq)
  return false;
#undef DO_
}

void S2SNoticeNewMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mailtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNoticeNewMailReq)
}

::google::protobuf::uint8* S2SNoticeNewMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mailtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNoticeNewMailReq)
  return target;
}

size_t S2SNoticeNewMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNoticeNewMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNoticeNewMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNoticeNewMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNoticeNewMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNoticeNewMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNoticeNewMailReq)
    MergeFrom(*source);
  }
}

void S2SNoticeNewMailReq::MergeFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
}

void S2SNoticeNewMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNoticeNewMailReq::CopyFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNoticeNewMailReq::IsInitialized() const {
  return true;
}

void S2SNoticeNewMailReq::Swap(S2SNoticeNewMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNoticeNewMailReq::InternalSwap(S2SNoticeNewMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(mailtype_, other->mailtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNoticeNewMailReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRelation::InitAsDefaultInstance() {
  ::KFMsg::_PBRelation_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBStrings*>(
      ::KFMsg::PBStrings::internal_default_instance());
  ::KFMsg::_PBRelation_default_instance_._instance.get_mutable()->relationdata_ = const_cast< ::KFMsg::PBStrings*>(
      ::KFMsg::PBStrings::internal_default_instance());
}
void PBRelation::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
void PBRelation::clear_relationdata() {
  if (GetArenaNoVirtual() == NULL && relationdata_ != NULL) {
    delete relationdata_;
  }
  relationdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRelation::kPlayeridFieldNumber;
const int PBRelation::kPlayerdataFieldNumber;
const int PBRelation::kRelationdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRelation::PBRelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRelation)
}
PBRelation::PBRelation(const PBRelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBStrings(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  if (from.has_relationdata()) {
    relationdata_ = new ::KFMsg::PBStrings(*from.relationdata_);
  } else {
    relationdata_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRelation)
}

void PBRelation::SharedCtor() {
  ::memset(&playerdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&playerdata_)) + sizeof(playerid_));
}

PBRelation::~PBRelation() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRelation)
  SharedDtor();
}

void PBRelation::SharedDtor() {
  if (this != internal_default_instance()) delete playerdata_;
  if (this != internal_default_instance()) delete relationdata_;
}

void PBRelation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRelation::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRelation& PBRelation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_PBRelation.base);
  return *internal_default_instance();
}


void PBRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && relationdata_ != NULL) {
    delete relationdata_;
  }
  relationdata_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBRelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRelation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBStrings playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBStrings relationdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relationdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRelation)
  return false;
#undef DO_
}

void PBRelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBStrings playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  // .KFMsg.PBStrings relationdata = 3;
  if (this->has_relationdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_relationdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRelation)
}

::google::protobuf::uint8* PBRelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBStrings playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  // .KFMsg.PBStrings relationdata = 3;
  if (this->has_relationdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_relationdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRelation)
  return target;
}

size_t PBRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRelation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBStrings playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // .KFMsg.PBStrings relationdata = 3;
  if (this->has_relationdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *relationdata_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRelation)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRelation)
    MergeFrom(*source);
  }
}

void PBRelation::MergeFrom(const PBRelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBStrings::MergeFrom(from.playerdata());
  }
  if (from.has_relationdata()) {
    mutable_relationdata()->::KFMsg::PBStrings::MergeFrom(from.relationdata());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void PBRelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRelation::CopyFrom(const PBRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRelation::IsInitialized() const {
  return true;
}

void PBRelation::Swap(PBRelation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRelation::InternalSwap(PBRelation* other) {
  using std::swap;
  swap(playerdata_, other->playerdata_);
  swap(relationdata_, other->relationdata_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRelation::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendReq::kPlayeridFieldNumber;
const int S2SQueryFriendReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendReq::S2SQueryFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendReq)
}
S2SQueryFriendReq::S2SQueryFriendReq(const S2SQueryFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendReq)
}

void S2SQueryFriendReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
}

S2SQueryFriendReq::~S2SQueryFriendReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendReq)
  SharedDtor();
}

void S2SQueryFriendReq::SharedDtor() {
}

void S2SQueryFriendReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendReq& S2SQueryFriendReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SQueryFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendReq)
  return false;
#undef DO_
}

void S2SQueryFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendReq)
}

::google::protobuf::uint8* S2SQueryFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendReq)
  return target;
}

size_t S2SQueryFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendReq::MergeFrom(const S2SQueryFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SQueryFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendReq::CopyFrom(const S2SQueryFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendReq::Swap(S2SQueryFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendReq::InternalSwap(S2SQueryFriendReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendInviteReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendInviteReq::kPlayeridFieldNumber;
const int S2SQueryFriendInviteReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendInviteReq::S2SQueryFriendInviteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendInviteReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendInviteReq)
}
S2SQueryFriendInviteReq::S2SQueryFriendInviteReq(const S2SQueryFriendInviteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendInviteReq)
}

void S2SQueryFriendInviteReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
}

S2SQueryFriendInviteReq::~S2SQueryFriendInviteReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendInviteReq)
  SharedDtor();
}

void S2SQueryFriendInviteReq::SharedDtor() {
}

void S2SQueryFriendInviteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendInviteReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendInviteReq& S2SQueryFriendInviteReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendInviteReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendInviteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SQueryFriendInviteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendInviteReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendInviteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendInviteReq)
  return false;
#undef DO_
}

void S2SQueryFriendInviteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendInviteReq)
}

::google::protobuf::uint8* S2SQueryFriendInviteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendInviteReq)
  return target;
}

size_t S2SQueryFriendInviteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendInviteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendInviteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendInviteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendInviteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendInviteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendInviteReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendInviteReq::MergeFrom(const S2SQueryFriendInviteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SQueryFriendInviteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendInviteReq::CopyFrom(const S2SQueryFriendInviteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendInviteReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendInviteReq::Swap(S2SQueryFriendInviteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendInviteReq::InternalSwap(S2SQueryFriendInviteReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendInviteReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendAck::kPlayeridFieldNumber;
const int S2SQueryFriendAck::kPbfriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendAck::S2SQueryFriendAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendAck)
}
S2SQueryFriendAck::S2SQueryFriendAck(const S2SQueryFriendAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbfriend_(from.pbfriend_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendAck)
}

void S2SQueryFriendAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryFriendAck::~S2SQueryFriendAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendAck)
  SharedDtor();
}

void S2SQueryFriendAck::SharedDtor() {
}

void S2SQueryFriendAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendAck& S2SQueryFriendAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendAck.base);
  return *internal_default_instance();
}


void S2SQueryFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbfriend_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbfriend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbfriend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendAck)
  return false;
#undef DO_
}

void S2SQueryFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbfriend = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbfriend_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbfriend(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendAck)
}

::google::protobuf::uint8* S2SQueryFriendAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbfriend = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbfriend_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbfriend(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendAck)
  return target;
}

size_t S2SQueryFriendAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbfriend = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbfriend_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbfriend(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendAck)
    MergeFrom(*source);
  }
}

void S2SQueryFriendAck::MergeFrom(const S2SQueryFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbfriend_.MergeFrom(from.pbfriend_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryFriendAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendAck::CopyFrom(const S2SQueryFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendAck::IsInitialized() const {
  return true;
}

void S2SQueryFriendAck::Swap(S2SQueryFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendAck::InternalSwap(S2SQueryFriendAck* other) {
  using std::swap;
  CastToBase(&pbfriend_)->InternalSwap(CastToBase(&other->pbfriend_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendInviteAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendInviteAck::kPlayeridFieldNumber;
const int S2SQueryFriendInviteAck::kPbfriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendInviteAck::S2SQueryFriendInviteAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendInviteAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendInviteAck)
}
S2SQueryFriendInviteAck::S2SQueryFriendInviteAck(const S2SQueryFriendInviteAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbfriend_(from.pbfriend_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendInviteAck)
}

void S2SQueryFriendInviteAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryFriendInviteAck::~S2SQueryFriendInviteAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendInviteAck)
  SharedDtor();
}

void S2SQueryFriendInviteAck::SharedDtor() {
}

void S2SQueryFriendInviteAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendInviteAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendInviteAck& S2SQueryFriendInviteAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendInviteAck.base);
  return *internal_default_instance();
}


void S2SQueryFriendInviteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbfriend_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryFriendInviteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendInviteAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbfriend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbfriend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendInviteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendInviteAck)
  return false;
#undef DO_
}

void S2SQueryFriendInviteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbfriend = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbfriend_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbfriend(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendInviteAck)
}

::google::protobuf::uint8* S2SQueryFriendInviteAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbfriend = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbfriend_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbfriend(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendInviteAck)
  return target;
}

size_t S2SQueryFriendInviteAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendInviteAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbfriend = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbfriend_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbfriend(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendInviteAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendInviteAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendInviteAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendInviteAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendInviteAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendInviteAck)
    MergeFrom(*source);
  }
}

void S2SQueryFriendInviteAck::MergeFrom(const S2SQueryFriendInviteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendInviteAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbfriend_.MergeFrom(from.pbfriend_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryFriendInviteAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendInviteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendInviteAck::CopyFrom(const S2SQueryFriendInviteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendInviteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendInviteAck::IsInitialized() const {
  return true;
}

void S2SQueryFriendInviteAck::Swap(S2SQueryFriendInviteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendInviteAck::InternalSwap(S2SQueryFriendInviteAck* other) {
  using std::swap;
  CastToBase(&pbfriend_)->InternalSwap(CastToBase(&other->pbfriend_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendInviteAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendInviteReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendInviteReq::kSelfplayeridFieldNumber;
const int S2SAddFriendInviteReq::kTargetplayeridFieldNumber;
const int S2SAddFriendInviteReq::kMessageFieldNumber;
const int S2SAddFriendInviteReq::kServeridFieldNumber;
const int S2SAddFriendInviteReq::kTargetnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendInviteReq::S2SAddFriendInviteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendInviteReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendInviteReq)
}
S2SAddFriendInviteReq::S2SAddFriendInviteReq(const S2SAddFriendInviteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetname().size() > 0) {
    targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
  }
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendInviteReq)
}

void S2SAddFriendInviteReq::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
}

S2SAddFriendInviteReq::~S2SAddFriendInviteReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendInviteReq)
  SharedDtor();
}

void S2SAddFriendInviteReq::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SAddFriendInviteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendInviteReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendInviteReq& S2SAddFriendInviteReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendInviteReq.base);
  return *internal_default_instance();
}


void S2SAddFriendInviteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SAddFriendInviteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendInviteReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes targetname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_targetname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendInviteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendInviteReq)
  return false;
#undef DO_
}

void S2SAddFriendInviteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->serverid(), output);
  }

  // bytes targetname = 5;
  if (this->targetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->targetname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendInviteReq)
}

::google::protobuf::uint8* S2SAddFriendInviteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->serverid(), target);
  }

  // bytes targetname = 5;
  if (this->targetname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->targetname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendInviteReq)
  return target;
}

size_t S2SAddFriendInviteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendInviteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // bytes targetname = 5;
  if (this->targetname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->targetname());
  }

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendInviteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendInviteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendInviteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendInviteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendInviteReq)
    MergeFrom(*source);
  }
}

void S2SAddFriendInviteReq::MergeFrom(const S2SAddFriendInviteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.targetname().size() > 0) {

    targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
  }
  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SAddFriendInviteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendInviteReq::CopyFrom(const S2SAddFriendInviteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendInviteReq::IsInitialized() const {
  return true;
}

void S2SAddFriendInviteReq::Swap(S2SAddFriendInviteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendInviteReq::InternalSwap(S2SAddFriendInviteReq* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  targetname_.Swap(&other->targetname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendInviteReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendInviteAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddFriendInviteAck_default_instance_._instance.get_mutable()->pbfriend_ = const_cast< ::KFMsg::PBRelation*>(
      ::KFMsg::PBRelation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendInviteAck::kPlayeridFieldNumber;
const int S2SAddFriendInviteAck::kPbfriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendInviteAck::S2SAddFriendInviteAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendInviteAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendInviteAck)
}
S2SAddFriendInviteAck::S2SAddFriendInviteAck(const S2SAddFriendInviteAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbfriend()) {
    pbfriend_ = new ::KFMsg::PBRelation(*from.pbfriend_);
  } else {
    pbfriend_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendInviteAck)
}

void S2SAddFriendInviteAck::SharedCtor() {
  ::memset(&pbfriend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbfriend_)) + sizeof(playerid_));
}

S2SAddFriendInviteAck::~S2SAddFriendInviteAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendInviteAck)
  SharedDtor();
}

void S2SAddFriendInviteAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbfriend_;
}

void S2SAddFriendInviteAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendInviteAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendInviteAck& S2SAddFriendInviteAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendInviteAck.base);
  return *internal_default_instance();
}


void S2SAddFriendInviteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbfriend_ != NULL) {
    delete pbfriend_;
  }
  pbfriend_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddFriendInviteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendInviteAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRelation pbfriend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbfriend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendInviteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendInviteAck)
  return false;
#undef DO_
}

void S2SAddFriendInviteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbfriend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendInviteAck)
}

::google::protobuf::uint8* S2SAddFriendInviteAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendInviteAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbfriend(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendInviteAck)
  return target;
}

size_t S2SAddFriendInviteAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendInviteAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbfriend_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendInviteAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendInviteAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendInviteAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendInviteAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendInviteAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendInviteAck)
    MergeFrom(*source);
  }
}

void S2SAddFriendInviteAck::MergeFrom(const S2SAddFriendInviteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendInviteAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbfriend()) {
    mutable_pbfriend()->::KFMsg::PBRelation::MergeFrom(from.pbfriend());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddFriendInviteAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendInviteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendInviteAck::CopyFrom(const S2SAddFriendInviteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendInviteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendInviteAck::IsInitialized() const {
  return true;
}

void S2SAddFriendInviteAck::Swap(S2SAddFriendInviteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendInviteAck::InternalSwap(S2SAddFriendInviteAck* other) {
  using std::swap;
  swap(pbfriend_, other->pbfriend_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendInviteAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelFriendReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelFriendReq::kSelfplayeridFieldNumber;
const int S2SDelFriendReq::kTargetplayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelFriendReq::S2SDelFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SDelFriendReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelFriendReq)
}
S2SDelFriendReq::S2SDelFriendReq(const S2SDelFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelFriendReq)
}

void S2SDelFriendReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SDelFriendReq::~S2SDelFriendReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelFriendReq)
  SharedDtor();
}

void S2SDelFriendReq::SharedDtor() {
}

void S2SDelFriendReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelFriendReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelFriendReq& S2SDelFriendReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SDelFriendReq.base);
  return *internal_default_instance();
}


void S2SDelFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SDelFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelFriendReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelFriendReq)
  return false;
#undef DO_
}

void S2SDelFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelFriendReq)
}

::google::protobuf::uint8* S2SDelFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelFriendReq)
  return target;
}

size_t S2SDelFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelFriendReq)
    MergeFrom(*source);
  }
}

void S2SDelFriendReq::MergeFrom(const S2SDelFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SDelFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelFriendReq::CopyFrom(const S2SDelFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelFriendReq::IsInitialized() const {
  return true;
}

void S2SDelFriendReq::Swap(S2SDelFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelFriendReq::InternalSwap(S2SDelFriendReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelFriendReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelFriendAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelFriendAck::kPlayeridFieldNumber;
const int S2SDelFriendAck::kTargetplayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelFriendAck::S2SDelFriendAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SDelFriendAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelFriendAck)
}
S2SDelFriendAck::S2SDelFriendAck(const S2SDelFriendAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelFriendAck)
}

void S2SDelFriendAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(targetplayerid_));
}

S2SDelFriendAck::~S2SDelFriendAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelFriendAck)
  SharedDtor();
}

void S2SDelFriendAck::SharedDtor() {
}

void S2SDelFriendAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelFriendAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelFriendAck& S2SDelFriendAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SDelFriendAck.base);
  return *internal_default_instance();
}


void S2SDelFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SDelFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelFriendAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelFriendAck)
  return false;
#undef DO_
}

void S2SDelFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelFriendAck)
}

::google::protobuf::uint8* S2SDelFriendAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelFriendAck)
  return target;
}

size_t S2SDelFriendAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelFriendAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelFriendAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelFriendAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelFriendAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelFriendAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelFriendAck)
    MergeFrom(*source);
  }
}

void S2SDelFriendAck::MergeFrom(const S2SDelFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SDelFriendAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelFriendAck::CopyFrom(const S2SDelFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelFriendAck::IsInitialized() const {
  return true;
}

void S2SDelFriendAck::Swap(S2SDelFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelFriendAck::InternalSwap(S2SDelFriendAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelFriendAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelFriendInviteReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelFriendInviteReq::kSelfplayeridFieldNumber;
const int S2SDelFriendInviteReq::kTargetplayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelFriendInviteReq::S2SDelFriendInviteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SDelFriendInviteReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelFriendInviteReq)
}
S2SDelFriendInviteReq::S2SDelFriendInviteReq(const S2SDelFriendInviteReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelFriendInviteReq)
}

void S2SDelFriendInviteReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SDelFriendInviteReq::~S2SDelFriendInviteReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelFriendInviteReq)
  SharedDtor();
}

void S2SDelFriendInviteReq::SharedDtor() {
}

void S2SDelFriendInviteReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelFriendInviteReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelFriendInviteReq& S2SDelFriendInviteReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SDelFriendInviteReq.base);
  return *internal_default_instance();
}


void S2SDelFriendInviteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SDelFriendInviteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelFriendInviteReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelFriendInviteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelFriendInviteReq)
  return false;
#undef DO_
}

void S2SDelFriendInviteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelFriendInviteReq)
}

::google::protobuf::uint8* S2SDelFriendInviteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelFriendInviteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelFriendInviteReq)
  return target;
}

size_t S2SDelFriendInviteReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelFriendInviteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelFriendInviteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelFriendInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelFriendInviteReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelFriendInviteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelFriendInviteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelFriendInviteReq)
    MergeFrom(*source);
  }
}

void S2SDelFriendInviteReq::MergeFrom(const S2SDelFriendInviteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelFriendInviteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SDelFriendInviteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelFriendInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelFriendInviteReq::CopyFrom(const S2SDelFriendInviteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelFriendInviteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelFriendInviteReq::IsInitialized() const {
  return true;
}

void S2SDelFriendInviteReq::Swap(S2SDelFriendInviteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelFriendInviteReq::InternalSwap(S2SDelFriendInviteReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelFriendInviteReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendReq::kSelfplayeridFieldNumber;
const int S2SAddFriendReq::kTargetplayeridFieldNumber;
const int S2SAddFriendReq::kServeridFieldNumber;
const int S2SAddFriendReq::kTargetnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendReq::S2SAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendReq)
}
S2SAddFriendReq::S2SAddFriendReq(const S2SAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetname().size() > 0) {
    targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
  }
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendReq)
}

void S2SAddFriendReq::SharedCtor() {
  targetname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
}

S2SAddFriendReq::~S2SAddFriendReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendReq)
  SharedDtor();
}

void S2SAddFriendReq::SharedDtor() {
  targetname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SAddFriendReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendReq& S2SAddFriendReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendReq.base);
  return *internal_default_instance();
}


void S2SAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes targetname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_targetname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendReq)
  return false;
#undef DO_
}

void S2SAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // bytes targetname = 4;
  if (this->targetname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->targetname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendReq)
}

::google::protobuf::uint8* S2SAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // bytes targetname = 4;
  if (this->targetname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->targetname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendReq)
  return target;
}

size_t S2SAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes targetname = 4;
  if (this->targetname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->targetname());
  }

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendReq)
    MergeFrom(*source);
  }
}

void S2SAddFriendReq::MergeFrom(const S2SAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetname().size() > 0) {

    targetname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetname_);
  }
  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendReq::CopyFrom(const S2SAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendReq::IsInitialized() const {
  return true;
}

void S2SAddFriendReq::Swap(S2SAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendReq::InternalSwap(S2SAddFriendReq* other) {
  using std::swap;
  targetname_.Swap(&other->targetname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddFriendAck_default_instance_._instance.get_mutable()->pbfriend_ = const_cast< ::KFMsg::PBRelation*>(
      ::KFMsg::PBRelation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendAck::kPlayeridFieldNumber;
const int S2SAddFriendAck::kPbfriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendAck::S2SAddFriendAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendAck)
}
S2SAddFriendAck::S2SAddFriendAck(const S2SAddFriendAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbfriend()) {
    pbfriend_ = new ::KFMsg::PBRelation(*from.pbfriend_);
  } else {
    pbfriend_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendAck)
}

void S2SAddFriendAck::SharedCtor() {
  ::memset(&pbfriend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbfriend_)) + sizeof(playerid_));
}

S2SAddFriendAck::~S2SAddFriendAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendAck)
  SharedDtor();
}

void S2SAddFriendAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbfriend_;
}

void S2SAddFriendAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendAck& S2SAddFriendAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddFriendAck.base);
  return *internal_default_instance();
}


void S2SAddFriendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbfriend_ != NULL) {
    delete pbfriend_;
  }
  pbfriend_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddFriendAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRelation pbfriend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbfriend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendAck)
  return false;
#undef DO_
}

void S2SAddFriendAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbfriend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendAck)
}

::google::protobuf::uint8* S2SAddFriendAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbfriend(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendAck)
  return target;
}

size_t S2SAddFriendAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbfriend_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendAck)
    MergeFrom(*source);
  }
}

void S2SAddFriendAck::MergeFrom(const S2SAddFriendAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbfriend()) {
    mutable_pbfriend()->::KFMsg::PBRelation::MergeFrom(from.pbfriend());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddFriendAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendAck::CopyFrom(const S2SAddFriendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendAck::IsInitialized() const {
  return true;
}

void S2SAddFriendAck::Swap(S2SAddFriendAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendAck::InternalSwap(S2SAddFriendAck* other) {
  using std::swap;
  swap(pbfriend_, other->pbfriend_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendReq::InitAsDefaultInstance() {
}
void S2SUpdateFriendReq::clear_pbdata() {
  pbdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendReq::kFriendidFieldNumber;
const int S2SUpdateFriendReq::kServeridFieldNumber;
const int S2SUpdateFriendReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendReq::S2SUpdateFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateFriendReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendReq)
}
S2SUpdateFriendReq::S2SUpdateFriendReq(const S2SUpdateFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbdata_(from.pbdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&friendid_, &from.friendid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&friendid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendReq)
}

void S2SUpdateFriendReq::SharedCtor() {
  ::memset(&friendid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&friendid_)) + sizeof(serverid_));
}

S2SUpdateFriendReq::~S2SUpdateFriendReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendReq)
  SharedDtor();
}

void S2SUpdateFriendReq::SharedDtor() {
}

void S2SUpdateFriendReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendReq& S2SUpdateFriendReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateFriendReq.base);
  return *internal_default_instance();
}


void S2SUpdateFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&friendid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&friendid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 friendid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBString pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendReq)
  return false;
#undef DO_
}

void S2SUpdateFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 friendid = 1;
  if (this->friendid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->friendid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // repeated .KFMsg.PBString pbdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pbdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendReq)
}

::google::protobuf::uint8* S2SUpdateFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 friendid = 1;
  if (this->friendid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->friendid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // repeated .KFMsg.PBString pbdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pbdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendReq)
  return target;
}

size_t S2SUpdateFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBString pbdata = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pbdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbdata(static_cast<int>(i)));
    }
  }

  // uint64 friendid = 1;
  if (this->friendid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friendid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendReq)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendReq::MergeFrom(const S2SUpdateFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.friendid() != 0) {
    set_friendid(from.friendid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SUpdateFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendReq::CopyFrom(const S2SUpdateFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendReq::IsInitialized() const {
  return true;
}

void S2SUpdateFriendReq::Swap(S2SUpdateFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendReq::InternalSwap(S2SUpdateFriendReq* other) {
  using std::swap;
  CastToBase(&pbdata_)->InternalSwap(CastToBase(&other->pbdata_));
  swap(friendid_, other->friendid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendLinessReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendLinessReq::kSelfplayeridFieldNumber;
const int S2SUpdateFriendLinessReq::kTargetplayeridFieldNumber;
const int S2SUpdateFriendLinessReq::kFriendlinessFieldNumber;
const int S2SUpdateFriendLinessReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendLinessReq::S2SUpdateFriendLinessReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateFriendLinessReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendLinessReq)
}
S2SUpdateFriendLinessReq::S2SUpdateFriendLinessReq(const S2SUpdateFriendLinessReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendLinessReq)
}

void S2SUpdateFriendLinessReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(type_));
}

S2SUpdateFriendLinessReq::~S2SUpdateFriendLinessReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendLinessReq)
  SharedDtor();
}

void S2SUpdateFriendLinessReq::SharedDtor() {
}

void S2SUpdateFriendLinessReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendLinessReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendLinessReq& S2SUpdateFriendLinessReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateFriendLinessReq.base);
  return *internal_default_instance();
}


void S2SUpdateFriendLinessReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendLinessReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendLinessReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendLinessReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friendliness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendLinessReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendLinessReq)
  return false;
#undef DO_
}

void S2SUpdateFriendLinessReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendLinessReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friendliness(), output);
  }

  // uint32 type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendLinessReq)
}

::google::protobuf::uint8* S2SUpdateFriendLinessReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendLinessReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friendliness(), target);
  }

  // uint32 type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendLinessReq)
  return target;
}

size_t S2SUpdateFriendLinessReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendLinessReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friendliness());
  }

  // uint32 type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendLinessReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendLinessReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendLinessReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendLinessReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendLinessReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendLinessReq)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendLinessReq::MergeFrom(const S2SUpdateFriendLinessReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendLinessReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.friendliness() != 0) {
    set_friendliness(from.friendliness());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SUpdateFriendLinessReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendLinessReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendLinessReq::CopyFrom(const S2SUpdateFriendLinessReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendLinessReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendLinessReq::IsInitialized() const {
  return true;
}

void S2SUpdateFriendLinessReq::Swap(S2SUpdateFriendLinessReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendLinessReq::InternalSwap(S2SUpdateFriendLinessReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(friendliness_, other->friendliness_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendLinessReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryBasicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryBasicReq::kPlayeridFieldNumber;
const int S2SQueryBasicReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryBasicReq::S2SQueryBasicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryBasicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryBasicReq)
}
S2SQueryBasicReq::S2SQueryBasicReq(const S2SQueryBasicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryBasicReq)
}

void S2SQueryBasicReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryBasicReq::~S2SQueryBasicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryBasicReq)
  SharedDtor();
}

void S2SQueryBasicReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryBasicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryBasicReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryBasicReq& S2SQueryBasicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryBasicReq.base);
  return *internal_default_instance();
}


void S2SQueryBasicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryBasicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryBasicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryBasicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryBasicReq)
  return false;
#undef DO_
}

void S2SQueryBasicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryBasicReq)
}

::google::protobuf::uint8* S2SQueryBasicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryBasicReq)
  return target;
}

size_t S2SQueryBasicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryBasicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryBasicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryBasicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryBasicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryBasicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryBasicReq)
    MergeFrom(*source);
  }
}

void S2SQueryBasicReq::MergeFrom(const S2SQueryBasicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryBasicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryBasicReq::CopyFrom(const S2SQueryBasicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryBasicReq::IsInitialized() const {
  return true;
}

void S2SQueryBasicReq::Swap(S2SQueryBasicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryBasicReq::InternalSwap(S2SQueryBasicReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryBasicReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryBasicAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryBasicAck_default_instance_._instance.get_mutable()->pbobject_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SQueryBasicAck::clear_pbobject() {
  if (GetArenaNoVirtual() == NULL && pbobject_ != NULL) {
    delete pbobject_;
  }
  pbobject_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryBasicAck::kPlayeridFieldNumber;
const int S2SQueryBasicAck::kPbobjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryBasicAck::S2SQueryBasicAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryBasicAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryBasicAck)
}
S2SQueryBasicAck::S2SQueryBasicAck(const S2SQueryBasicAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbobject()) {
    pbobject_ = new ::KFMsg::PBObject(*from.pbobject_);
  } else {
    pbobject_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryBasicAck)
}

void S2SQueryBasicAck::SharedCtor() {
  ::memset(&pbobject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbobject_)) + sizeof(playerid_));
}

S2SQueryBasicAck::~S2SQueryBasicAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryBasicAck)
  SharedDtor();
}

void S2SQueryBasicAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbobject_;
}

void S2SQueryBasicAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryBasicAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryBasicAck& S2SQueryBasicAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryBasicAck.base);
  return *internal_default_instance();
}


void S2SQueryBasicAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryBasicAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbobject_ != NULL) {
    delete pbobject_;
  }
  pbobject_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryBasicAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryBasicAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbobject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryBasicAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryBasicAck)
  return false;
#undef DO_
}

void S2SQueryBasicAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryBasicAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBObject pbobject = 2;
  if (this->has_pbobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbobject(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryBasicAck)
}

::google::protobuf::uint8* S2SQueryBasicAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryBasicAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBObject pbobject = 2;
  if (this->has_pbobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbobject(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryBasicAck)
  return target;
}

size_t S2SQueryBasicAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryBasicAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbobject = 2;
  if (this->has_pbobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbobject_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryBasicAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryBasicAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryBasicAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryBasicAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryBasicAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryBasicAck)
    MergeFrom(*source);
  }
}

void S2SQueryBasicAck::MergeFrom(const S2SQueryBasicAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryBasicAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbobject()) {
    mutable_pbobject()->::KFMsg::PBObject::MergeFrom(from.pbobject());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryBasicAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryBasicAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryBasicAck::CopyFrom(const S2SQueryBasicAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryBasicAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryBasicAck::IsInitialized() const {
  return true;
}

void S2SQueryBasicAck::Swap(S2SQueryBasicAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryBasicAck::InternalSwap(S2SQueryBasicAck* other) {
  using std::swap;
  swap(pbobject_, other->pbobject_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryBasicAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerReq::kZoneidFieldNumber;
const int S2SQueryPlayerReq::kPlayeridFieldNumber;
const int S2SQueryPlayerReq::kQueryidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerReq::S2SQueryPlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryPlayerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerReq)
}
S2SQueryPlayerReq::S2SQueryPlayerReq(const S2SQueryPlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerReq)
}

void S2SQueryPlayerReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryPlayerReq::~S2SQueryPlayerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerReq)
  SharedDtor();
}

void S2SQueryPlayerReq::SharedDtor() {
}

void S2SQueryPlayerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerReq& S2SQueryPlayerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryPlayerReq.base);
  return *internal_default_instance();
}


void S2SQueryPlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 zoneid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 queryid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &queryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerReq)
  return false;
#undef DO_
}

void S2SQueryPlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->zoneid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 queryid = 3;
  if (this->queryid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->queryid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerReq)
}

::google::protobuf::uint8* S2SQueryPlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->zoneid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 queryid = 3;
  if (this->queryid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->queryid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerReq)
  return target;
}

size_t S2SQueryPlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 queryid = 3;
  if (this->queryid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->queryid());
  }

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerReq)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerReq::MergeFrom(const S2SQueryPlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.queryid() != 0) {
    set_queryid(from.queryid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryPlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerReq::CopyFrom(const S2SQueryPlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerReq::IsInitialized() const {
  return true;
}

void S2SQueryPlayerReq::Swap(S2SQueryPlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerReq::InternalSwap(S2SQueryPlayerReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(queryid_, other->queryid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryPlayerAck_default_instance_._instance.get_mutable()->pbobject_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SQueryPlayerAck::clear_pbobject() {
  if (GetArenaNoVirtual() == NULL && pbobject_ != NULL) {
    delete pbobject_;
  }
  pbobject_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerAck::kPlayeridFieldNumber;
const int S2SQueryPlayerAck::kPbobjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerAck::S2SQueryPlayerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryPlayerAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerAck)
}
S2SQueryPlayerAck::S2SQueryPlayerAck(const S2SQueryPlayerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbobject()) {
    pbobject_ = new ::KFMsg::PBObject(*from.pbobject_);
  } else {
    pbobject_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerAck)
}

void S2SQueryPlayerAck::SharedCtor() {
  ::memset(&pbobject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbobject_)) + sizeof(playerid_));
}

S2SQueryPlayerAck::~S2SQueryPlayerAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerAck)
  SharedDtor();
}

void S2SQueryPlayerAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbobject_;
}

void S2SQueryPlayerAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerAck& S2SQueryPlayerAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryPlayerAck.base);
  return *internal_default_instance();
}


void S2SQueryPlayerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbobject_ != NULL) {
    delete pbobject_;
  }
  pbobject_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbobject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerAck)
  return false;
#undef DO_
}

void S2SQueryPlayerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBObject pbobject = 2;
  if (this->has_pbobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbobject(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerAck)
}

::google::protobuf::uint8* S2SQueryPlayerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBObject pbobject = 2;
  if (this->has_pbobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbobject(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerAck)
  return target;
}

size_t S2SQueryPlayerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbobject = 2;
  if (this->has_pbobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbobject_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerAck)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerAck::MergeFrom(const S2SQueryPlayerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbobject()) {
    mutable_pbobject()->::KFMsg::PBObject::MergeFrom(from.pbobject());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryPlayerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerAck::CopyFrom(const S2SQueryPlayerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerAck::IsInitialized() const {
  return true;
}

void S2SQueryPlayerAck::Swap(S2SQueryPlayerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerAck::InternalSwap(S2SQueryPlayerAck* other) {
  using std::swap;
  swap(pbobject_, other->pbobject_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailFlagReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailFlagReq::kPlayeridFieldNumber;
const int S2SUpdateMailFlagReq::kMailidFieldNumber;
const int S2SUpdateMailFlagReq::kMailtypeFieldNumber;
const int S2SUpdateMailFlagReq::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailFlagReq::S2SUpdateMailFlagReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateMailFlagReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailFlagReq)
}
S2SUpdateMailFlagReq::S2SUpdateMailFlagReq(const S2SUpdateMailFlagReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailFlagReq)
}

void S2SUpdateMailFlagReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
}

S2SUpdateMailFlagReq::~S2SUpdateMailFlagReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailFlagReq)
  SharedDtor();
}

void S2SUpdateMailFlagReq::SharedDtor() {
}

void S2SUpdateMailFlagReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailFlagReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailFlagReq& S2SUpdateMailFlagReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateMailFlagReq.base);
  return *internal_default_instance();
}


void S2SUpdateMailFlagReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailFlagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailFlagReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailFlagReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailFlagReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailFlagReq)
  return false;
#undef DO_
}

void S2SUpdateMailFlagReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailFlagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mailid(), output);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mailtype(), output);
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailFlagReq)
}

::google::protobuf::uint8* S2SUpdateMailFlagReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailFlagReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mailid(), target);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mailtype(), target);
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailFlagReq)
  return target;
}

size_t S2SUpdateMailFlagReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailFlagReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mailid());
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailFlagReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailFlagReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailFlagReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailFlagReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailFlagReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailFlagReq)
    MergeFrom(*source);
  }
}

void S2SUpdateMailFlagReq::MergeFrom(const S2SUpdateMailFlagReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailFlagReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SUpdateMailFlagReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailFlagReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailFlagReq::CopyFrom(const S2SUpdateMailFlagReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailFlagReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailFlagReq::IsInitialized() const {
  return true;
}

void S2SUpdateMailFlagReq::Swap(S2SUpdateMailFlagReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailFlagReq::InternalSwap(S2SUpdateMailFlagReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(mailid_, other->mailid_);
  swap(mailtype_, other->mailtype_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailFlagReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailFlagAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailFlagAck::kPlayeridFieldNumber;
const int S2SUpdateMailFlagAck::kMailidFieldNumber;
const int S2SUpdateMailFlagAck::kMailtypeFieldNumber;
const int S2SUpdateMailFlagAck::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailFlagAck::S2SUpdateMailFlagAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateMailFlagAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailFlagAck)
}
S2SUpdateMailFlagAck::S2SUpdateMailFlagAck(const S2SUpdateMailFlagAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailFlagAck)
}

void S2SUpdateMailFlagAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
}

S2SUpdateMailFlagAck::~S2SUpdateMailFlagAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailFlagAck)
  SharedDtor();
}

void S2SUpdateMailFlagAck::SharedDtor() {
}

void S2SUpdateMailFlagAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailFlagAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailFlagAck& S2SUpdateMailFlagAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateMailFlagAck.base);
  return *internal_default_instance();
}


void S2SUpdateMailFlagAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailFlagAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailFlagAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailFlagAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mailid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mailid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailFlagAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailFlagAck)
  return false;
#undef DO_
}

void S2SUpdateMailFlagAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailFlagAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mailid(), output);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mailtype(), output);
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailFlagAck)
}

::google::protobuf::uint8* S2SUpdateMailFlagAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailFlagAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mailid(), target);
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mailtype(), target);
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailFlagAck)
  return target;
}

size_t S2SUpdateMailFlagAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailFlagAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 mailid = 2;
  if (this->mailid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mailid());
  }

  // uint32 mailtype = 3;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailFlagAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailFlagAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailFlagAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailFlagAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailFlagAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailFlagAck)
    MergeFrom(*source);
  }
}

void S2SUpdateMailFlagAck::MergeFrom(const S2SUpdateMailFlagAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailFlagAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.mailid() != 0) {
    set_mailid(from.mailid());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SUpdateMailFlagAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailFlagAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailFlagAck::CopyFrom(const S2SUpdateMailFlagAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailFlagAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailFlagAck::IsInitialized() const {
  return true;
}

void S2SUpdateMailFlagAck::Swap(S2SUpdateMailFlagAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailFlagAck::InternalSwap(S2SUpdateMailFlagAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(mailid_, other->mailid_);
  swap(mailtype_, other->mailtype_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailFlagAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerToastReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerToastReq::kSelfplayeridFieldNumber;
const int S2SPlayerToastReq::kTargetplayeridFieldNumber;
const int S2SPlayerToastReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerToastReq::S2SPlayerToastReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerToastReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerToastReq)
}
S2SPlayerToastReq::S2SPlayerToastReq(const S2SPlayerToastReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerToastReq)
}

void S2SPlayerToastReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
}

S2SPlayerToastReq::~S2SPlayerToastReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerToastReq)
  SharedDtor();
}

void S2SPlayerToastReq::SharedDtor() {
}

void S2SPlayerToastReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerToastReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerToastReq& S2SPlayerToastReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerToastReq.base);
  return *internal_default_instance();
}


void S2SPlayerToastReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerToastReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerToastReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerToastReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerToastReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerToastReq)
  return false;
#undef DO_
}

void S2SPlayerToastReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerToastReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerToastReq)
}

::google::protobuf::uint8* S2SPlayerToastReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerToastReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerToastReq)
  return target;
}

size_t S2SPlayerToastReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerToastReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerToastReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerToastReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerToastReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerToastReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerToastReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerToastReq)
    MergeFrom(*source);
  }
}

void S2SPlayerToastReq::MergeFrom(const S2SPlayerToastReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerToastReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SPlayerToastReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerToastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerToastReq::CopyFrom(const S2SPlayerToastReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerToastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerToastReq::IsInitialized() const {
  return true;
}

void S2SPlayerToastReq::Swap(S2SPlayerToastReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerToastReq::InternalSwap(S2SPlayerToastReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerToastReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerToastAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerToastAck::kResultFieldNumber;
const int S2SPlayerToastAck::kPlayeridFieldNumber;
const int S2SPlayerToastAck::kTargetplayeridFieldNumber;
const int S2SPlayerToastAck::kTargetserveridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerToastAck::S2SPlayerToastAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerToastAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerToastAck)
}
S2SPlayerToastAck::S2SPlayerToastAck(const S2SPlayerToastAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerToastAck)
}

void S2SPlayerToastAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
}

S2SPlayerToastAck::~S2SPlayerToastAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerToastAck)
  SharedDtor();
}

void S2SPlayerToastAck::SharedDtor() {
}

void S2SPlayerToastAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerToastAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerToastAck& S2SPlayerToastAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerToastAck.base);
  return *internal_default_instance();
}


void S2SPlayerToastAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerToastAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SPlayerToastAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerToastAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetserverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerToastAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerToastAck)
  return false;
#undef DO_
}

void S2SPlayerToastAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerToastAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->targetplayerid(), output);
  }

  // uint64 targetserverid = 4;
  if (this->targetserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->targetserverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerToastAck)
}

::google::protobuf::uint8* S2SPlayerToastAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerToastAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->targetplayerid(), target);
  }

  // uint64 targetserverid = 4;
  if (this->targetserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->targetserverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerToastAck)
  return target;
}

size_t S2SPlayerToastAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerToastAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint64 targetserverid = 4;
  if (this->targetserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetserverid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerToastAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerToastAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerToastAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerToastAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerToastAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerToastAck)
    MergeFrom(*source);
  }
}

void S2SPlayerToastAck::MergeFrom(const S2SPlayerToastAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerToastAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.targetserverid() != 0) {
    set_targetserverid(from.targetserverid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SPlayerToastAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerToastAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerToastAck::CopyFrom(const S2SPlayerToastAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerToastAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerToastAck::IsInitialized() const {
  return true;
}

void S2SPlayerToastAck::Swap(S2SPlayerToastAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerToastAck::InternalSwap(S2SPlayerToastAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(targetserverid_, other->targetserverid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerToastAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryToastCountReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryToastCountReq::kSelfplayeridFieldNumber;
const int S2SQueryToastCountReq::kTargetplayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryToastCountReq::S2SQueryToastCountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryToastCountReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryToastCountReq)
}
S2SQueryToastCountReq::S2SQueryToastCountReq(const S2SQueryToastCountReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryToastCountReq)
}

void S2SQueryToastCountReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SQueryToastCountReq::~S2SQueryToastCountReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryToastCountReq)
  SharedDtor();
}

void S2SQueryToastCountReq::SharedDtor() {
}

void S2SQueryToastCountReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryToastCountReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryToastCountReq& S2SQueryToastCountReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryToastCountReq.base);
  return *internal_default_instance();
}


void S2SQueryToastCountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryToastCountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SQueryToastCountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryToastCountReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryToastCountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryToastCountReq)
  return false;
#undef DO_
}

void S2SQueryToastCountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryToastCountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryToastCountReq)
}

::google::protobuf::uint8* S2SQueryToastCountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryToastCountReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryToastCountReq)
  return target;
}

size_t S2SQueryToastCountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryToastCountReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryToastCountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryToastCountReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryToastCountReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryToastCountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryToastCountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryToastCountReq)
    MergeFrom(*source);
  }
}

void S2SQueryToastCountReq::MergeFrom(const S2SQueryToastCountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryToastCountReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SQueryToastCountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryToastCountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryToastCountReq::CopyFrom(const S2SQueryToastCountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryToastCountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryToastCountReq::IsInitialized() const {
  return true;
}

void S2SQueryToastCountReq::Swap(S2SQueryToastCountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryToastCountReq::InternalSwap(S2SQueryToastCountReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryToastCountReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendLinessAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendLinessAck::kPlayeridFieldNumber;
const int S2SUpdateFriendLinessAck::kTargetplayeridFieldNumber;
const int S2SUpdateFriendLinessAck::kFriendlinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendLinessAck::S2SUpdateFriendLinessAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateFriendLinessAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendLinessAck)
}
S2SUpdateFriendLinessAck::S2SUpdateFriendLinessAck(const S2SUpdateFriendLinessAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friendliness_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendLinessAck)
}

void S2SUpdateFriendLinessAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendliness_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
}

S2SUpdateFriendLinessAck::~S2SUpdateFriendLinessAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendLinessAck)
  SharedDtor();
}

void S2SUpdateFriendLinessAck::SharedDtor() {
}

void S2SUpdateFriendLinessAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendLinessAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendLinessAck& S2SUpdateFriendLinessAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateFriendLinessAck.base);
  return *internal_default_instance();
}


void S2SUpdateFriendLinessAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendLinessAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendliness_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendLinessAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendLinessAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 friendliness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friendliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendLinessAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendLinessAck)
  return false;
#undef DO_
}

void S2SUpdateFriendLinessAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendLinessAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // uint64 friendliness = 3;
  if (this->friendliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->friendliness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendLinessAck)
}

::google::protobuf::uint8* S2SUpdateFriendLinessAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendLinessAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // uint64 friendliness = 3;
  if (this->friendliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->friendliness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendLinessAck)
  return target;
}

size_t S2SUpdateFriendLinessAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendLinessAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint64 friendliness = 3;
  if (this->friendliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friendliness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendLinessAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendLinessAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendLinessAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendLinessAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendLinessAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendLinessAck)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendLinessAck::MergeFrom(const S2SUpdateFriendLinessAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendLinessAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.friendliness() != 0) {
    set_friendliness(from.friendliness());
  }
}

void S2SUpdateFriendLinessAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendLinessAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendLinessAck::CopyFrom(const S2SUpdateFriendLinessAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendLinessAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendLinessAck::IsInitialized() const {
  return true;
}

void S2SUpdateFriendLinessAck::Swap(S2SUpdateFriendLinessAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendLinessAck::InternalSwap(S2SUpdateFriendLinessAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(friendliness_, other->friendliness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendLinessAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateMatchGroupReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SCreateMatchGroupReq_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SCreateMatchGroupReq::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateMatchGroupReq::kPbmemberFieldNumber;
const int S2SCreateMatchGroupReq::kGroupidFieldNumber;
const int S2SCreateMatchGroupReq::kMaxcountFieldNumber;
const int S2SCreateMatchGroupReq::kMatchidFieldNumber;
const int S2SCreateMatchGroupReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateMatchGroupReq::S2SCreateMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateMatchGroupReq)
}
S2SCreateMatchGroupReq::S2SCreateMatchGroupReq(const S2SCreateMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateMatchGroupReq)
}

void S2SCreateMatchGroupReq::SharedCtor() {
  ::memset(&pbmember_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbmember_)) + sizeof(playerid_));
}

S2SCreateMatchGroupReq::~S2SCreateMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateMatchGroupReq)
  SharedDtor();
}

void S2SCreateMatchGroupReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SCreateMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateMatchGroupReq& S2SCreateMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SCreateMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SCreateMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBObject pbmember = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateMatchGroupReq)
  return false;
#undef DO_
}

void S2SCreateMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbmember(), output);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->groupid(), output);
  }

  // uint32 maxcount = 3;
  if (this->maxcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxcount(), output);
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->matchid(), output);
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateMatchGroupReq)
}

::google::protobuf::uint8* S2SCreateMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbmember(), deterministic, target);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->groupid(), target);
  }

  // uint32 maxcount = 3;
  if (this->maxcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxcount(), target);
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->matchid(), target);
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateMatchGroupReq)
  return target;
}

size_t S2SCreateMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint32 maxcount = 3;
  if (this->maxcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxcount());
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SCreateMatchGroupReq::MergeFrom(const S2SCreateMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.maxcount() != 0) {
    set_maxcount(from.maxcount());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SCreateMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateMatchGroupReq::CopyFrom(const S2SCreateMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SCreateMatchGroupReq::Swap(S2SCreateMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateMatchGroupReq::InternalSwap(S2SCreateMatchGroupReq* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  swap(groupid_, other->groupid_);
  swap(maxcount_, other->maxcount_);
  swap(matchid_, other->matchid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateGroupMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateGroupMatchReq::kGroupidFieldNumber;
const int S2SUpdateGroupMatchReq::kMaxcountFieldNumber;
const int S2SUpdateGroupMatchReq::kMatchidFieldNumber;
const int S2SUpdateGroupMatchReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateGroupMatchReq::S2SUpdateGroupMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateGroupMatchReq)
}
S2SUpdateGroupMatchReq::S2SUpdateGroupMatchReq(const S2SUpdateGroupMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateGroupMatchReq)
}

void S2SUpdateGroupMatchReq::SharedCtor() {
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
}

S2SUpdateGroupMatchReq::~S2SUpdateGroupMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateGroupMatchReq)
  SharedDtor();
}

void S2SUpdateGroupMatchReq::SharedDtor() {
}

void S2SUpdateGroupMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateGroupMatchReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateGroupMatchReq& S2SUpdateGroupMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupMatchReq.base);
  return *internal_default_instance();
}


void S2SUpdateGroupMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateGroupMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateGroupMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateGroupMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxcount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateGroupMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateGroupMatchReq)
  return false;
#undef DO_
}

void S2SUpdateGroupMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateGroupMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint32 maxcount = 2;
  if (this->maxcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxcount(), output);
  }

  // uint32 matchid = 3;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->matchid(), output);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateGroupMatchReq)
}

::google::protobuf::uint8* S2SUpdateGroupMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateGroupMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint32 maxcount = 2;
  if (this->maxcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxcount(), target);
  }

  // uint32 matchid = 3;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->matchid(), target);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateGroupMatchReq)
  return target;
}

size_t S2SUpdateGroupMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateGroupMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint32 maxcount = 2;
  if (this->maxcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxcount());
  }

  // uint32 matchid = 3;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateGroupMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateGroupMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateGroupMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateGroupMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateGroupMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateGroupMatchReq)
    MergeFrom(*source);
  }
}

void S2SUpdateGroupMatchReq::MergeFrom(const S2SUpdateGroupMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateGroupMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.maxcount() != 0) {
    set_maxcount(from.maxcount());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpdateGroupMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateGroupMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateGroupMatchReq::CopyFrom(const S2SUpdateGroupMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateGroupMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateGroupMatchReq::IsInitialized() const {
  return true;
}

void S2SUpdateGroupMatchReq::Swap(S2SUpdateGroupMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateGroupMatchReq::InternalSwap(S2SUpdateGroupMatchReq* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(maxcount_, other->maxcount_);
  swap(matchid_, other->matchid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateGroupMatchReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateMatchGroupToShardReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SCreateMatchGroupToShardReq_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SCreateMatchGroupToShardReq::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateMatchGroupToShardReq::kPbmemberFieldNumber;
const int S2SCreateMatchGroupToShardReq::kGroupidFieldNumber;
const int S2SCreateMatchGroupToShardReq::kMaxcountFieldNumber;
const int S2SCreateMatchGroupToShardReq::kMatchidFieldNumber;
const int S2SCreateMatchGroupToShardReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateMatchGroupToShardReq::S2SCreateMatchGroupToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateMatchGroupToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateMatchGroupToShardReq)
}
S2SCreateMatchGroupToShardReq::S2SCreateMatchGroupToShardReq(const S2SCreateMatchGroupToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateMatchGroupToShardReq)
}

void S2SCreateMatchGroupToShardReq::SharedCtor() {
  ::memset(&pbmember_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbmember_)) + sizeof(playerid_));
}

S2SCreateMatchGroupToShardReq::~S2SCreateMatchGroupToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateMatchGroupToShardReq)
  SharedDtor();
}

void S2SCreateMatchGroupToShardReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SCreateMatchGroupToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateMatchGroupToShardReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateMatchGroupToShardReq& S2SCreateMatchGroupToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateMatchGroupToShardReq.base);
  return *internal_default_instance();
}


void S2SCreateMatchGroupToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateMatchGroupToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SCreateMatchGroupToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateMatchGroupToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBObject pbmember = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateMatchGroupToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateMatchGroupToShardReq)
  return false;
#undef DO_
}

void S2SCreateMatchGroupToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateMatchGroupToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbmember(), output);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->groupid(), output);
  }

  // uint32 maxcount = 3;
  if (this->maxcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxcount(), output);
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->matchid(), output);
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateMatchGroupToShardReq)
}

::google::protobuf::uint8* S2SCreateMatchGroupToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateMatchGroupToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbmember(), deterministic, target);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->groupid(), target);
  }

  // uint32 maxcount = 3;
  if (this->maxcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxcount(), target);
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->matchid(), target);
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateMatchGroupToShardReq)
  return target;
}

size_t S2SCreateMatchGroupToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateMatchGroupToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint32 maxcount = 3;
  if (this->maxcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxcount());
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateMatchGroupToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateMatchGroupToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateMatchGroupToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateMatchGroupToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateMatchGroupToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateMatchGroupToShardReq)
    MergeFrom(*source);
  }
}

void S2SCreateMatchGroupToShardReq::MergeFrom(const S2SCreateMatchGroupToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateMatchGroupToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.maxcount() != 0) {
    set_maxcount(from.maxcount());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SCreateMatchGroupToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateMatchGroupToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateMatchGroupToShardReq::CopyFrom(const S2SCreateMatchGroupToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateMatchGroupToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateMatchGroupToShardReq::IsInitialized() const {
  return true;
}

void S2SCreateMatchGroupToShardReq::Swap(S2SCreateMatchGroupToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateMatchGroupToShardReq::InternalSwap(S2SCreateMatchGroupToShardReq* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  swap(groupid_, other->groupid_);
  swap(maxcount_, other->maxcount_);
  swap(matchid_, other->matchid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateMatchGroupToShardReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SReceiveInviteMatchGroupReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SReceiveInviteMatchGroupReq_default_instance_._instance.get_mutable()->inviter_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SReceiveInviteMatchGroupReq::clear_inviter() {
  if (GetArenaNoVirtual() == NULL && inviter_ != NULL) {
    delete inviter_;
  }
  inviter_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SReceiveInviteMatchGroupReq::kPlayeridFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kGroupidFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kInviterFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kSourceFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kMatchidFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kInviterplayeridFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kInviterserveridFieldNumber;
const int S2SReceiveInviteMatchGroupReq::kPlayernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SReceiveInviteMatchGroupReq::S2SReceiveInviteMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SReceiveInviteMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SReceiveInviteMatchGroupReq)
}
S2SReceiveInviteMatchGroupReq::S2SReceiveInviteMatchGroupReq(const S2SReceiveInviteMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.has_inviter()) {
    inviter_ = new ::KFMsg::PBObject(*from.inviter_);
  } else {
    inviter_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SReceiveInviteMatchGroupReq)
}

void S2SReceiveInviteMatchGroupReq::SharedCtor() {
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inviter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&inviter_)) + sizeof(matchid_));
}

S2SReceiveInviteMatchGroupReq::~S2SReceiveInviteMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SReceiveInviteMatchGroupReq)
  SharedDtor();
}

void S2SReceiveInviteMatchGroupReq::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inviter_;
}

void S2SReceiveInviteMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SReceiveInviteMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SReceiveInviteMatchGroupReq& S2SReceiveInviteMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SReceiveInviteMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SReceiveInviteMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && inviter_ != NULL) {
    delete inviter_;
  }
  inviter_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool S2SReceiveInviteMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject inviter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inviter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes source = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 inviterplayerid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inviterplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 inviterserverid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inviterserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playername = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SReceiveInviteMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SReceiveInviteMatchGroupReq)
  return false;
#undef DO_
}

void S2SReceiveInviteMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->groupid(), output);
  }

  // .KFMsg.PBObject inviter = 3;
  if (this->has_inviter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_inviter(), output);
  }

  // bytes source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->source(), output);
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->matchid(), output);
  }

  // uint64 inviterplayerid = 6;
  if (this->inviterplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->inviterplayerid(), output);
  }

  // uint64 inviterserverid = 7;
  if (this->inviterserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->inviterserverid(), output);
  }

  // bytes playername = 8;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->playername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SReceiveInviteMatchGroupReq)
}

::google::protobuf::uint8* S2SReceiveInviteMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->groupid(), target);
  }

  // .KFMsg.PBObject inviter = 3;
  if (this->has_inviter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_inviter(), deterministic, target);
  }

  // bytes source = 4;
  if (this->source().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->source(), target);
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->matchid(), target);
  }

  // uint64 inviterplayerid = 6;
  if (this->inviterplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->inviterplayerid(), target);
  }

  // uint64 inviterserverid = 7;
  if (this->inviterserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->inviterserverid(), target);
  }

  // bytes playername = 8;
  if (this->playername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->playername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SReceiveInviteMatchGroupReq)
  return target;
}

size_t S2SReceiveInviteMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes source = 4;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->source());
  }

  // bytes playername = 8;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playername());
  }

  // .KFMsg.PBObject inviter = 3;
  if (this->has_inviter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inviter_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 inviterplayerid = 6;
  if (this->inviterplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->inviterplayerid());
  }

  // uint64 inviterserverid = 7;
  if (this->inviterserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->inviterserverid());
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SReceiveInviteMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SReceiveInviteMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SReceiveInviteMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SReceiveInviteMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SReceiveInviteMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SReceiveInviteMatchGroupReq::MergeFrom(const S2SReceiveInviteMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.has_inviter()) {
    mutable_inviter()->::KFMsg::PBObject::MergeFrom(from.inviter());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.inviterplayerid() != 0) {
    set_inviterplayerid(from.inviterplayerid());
  }
  if (from.inviterserverid() != 0) {
    set_inviterserverid(from.inviterserverid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void S2SReceiveInviteMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SReceiveInviteMatchGroupReq::CopyFrom(const S2SReceiveInviteMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SReceiveInviteMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SReceiveInviteMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SReceiveInviteMatchGroupReq::Swap(S2SReceiveInviteMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SReceiveInviteMatchGroupReq::InternalSwap(S2SReceiveInviteMatchGroupReq* other) {
  using std::swap;
  source_.Swap(&other->source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inviter_, other->inviter_);
  swap(playerid_, other->playerid_);
  swap(groupid_, other->groupid_);
  swap(inviterplayerid_, other->inviterplayerid_);
  swap(inviterserverid_, other->inviterserverid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SReceiveInviteMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SConsentInviteMatchGroupReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SConsentInviteMatchGroupReq_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SConsentInviteMatchGroupReq::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SConsentInviteMatchGroupReq::kGroupidFieldNumber;
const int S2SConsentInviteMatchGroupReq::kPlayeridFieldNumber;
const int S2SConsentInviteMatchGroupReq::kServeridFieldNumber;
const int S2SConsentInviteMatchGroupReq::kPbmemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SConsentInviteMatchGroupReq::S2SConsentInviteMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SConsentInviteMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SConsentInviteMatchGroupReq)
}
S2SConsentInviteMatchGroupReq::S2SConsentInviteMatchGroupReq(const S2SConsentInviteMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SConsentInviteMatchGroupReq)
}

void S2SConsentInviteMatchGroupReq::SharedCtor() {
  ::memset(&pbmember_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&pbmember_)) + sizeof(serverid_));
}

S2SConsentInviteMatchGroupReq::~S2SConsentInviteMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SConsentInviteMatchGroupReq)
  SharedDtor();
}

void S2SConsentInviteMatchGroupReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SConsentInviteMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SConsentInviteMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SConsentInviteMatchGroupReq& S2SConsentInviteMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SConsentInviteMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SConsentInviteMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SConsentInviteMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SConsentInviteMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SConsentInviteMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbmember = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SConsentInviteMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SConsentInviteMatchGroupReq)
  return false;
#undef DO_
}

void S2SConsentInviteMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SConsentInviteMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbmember(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SConsentInviteMatchGroupReq)
}

::google::protobuf::uint8* S2SConsentInviteMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SConsentInviteMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbmember(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SConsentInviteMatchGroupReq)
  return target;
}

size_t S2SConsentInviteMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SConsentInviteMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SConsentInviteMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SConsentInviteMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SConsentInviteMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SConsentInviteMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SConsentInviteMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SConsentInviteMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SConsentInviteMatchGroupReq::MergeFrom(const S2SConsentInviteMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SConsentInviteMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SConsentInviteMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SConsentInviteMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SConsentInviteMatchGroupReq::CopyFrom(const S2SConsentInviteMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SConsentInviteMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SConsentInviteMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SConsentInviteMatchGroupReq::Swap(S2SConsentInviteMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SConsentInviteMatchGroupReq::InternalSwap(S2SConsentInviteMatchGroupReq* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SConsentInviteMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddMatchGroupMemberReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddMatchGroupMemberReq_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SAddMatchGroupMemberReq::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddMatchGroupMemberReq::kGroupidFieldNumber;
const int S2SAddMatchGroupMemberReq::kPlayeridFieldNumber;
const int S2SAddMatchGroupMemberReq::kServeridFieldNumber;
const int S2SAddMatchGroupMemberReq::kPbmemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddMatchGroupMemberReq::S2SAddMatchGroupMemberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddMatchGroupMemberReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddMatchGroupMemberReq)
}
S2SAddMatchGroupMemberReq::S2SAddMatchGroupMemberReq(const S2SAddMatchGroupMemberReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddMatchGroupMemberReq)
}

void S2SAddMatchGroupMemberReq::SharedCtor() {
  ::memset(&pbmember_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&pbmember_)) + sizeof(serverid_));
}

S2SAddMatchGroupMemberReq::~S2SAddMatchGroupMemberReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddMatchGroupMemberReq)
  SharedDtor();
}

void S2SAddMatchGroupMemberReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SAddMatchGroupMemberReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddMatchGroupMemberReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddMatchGroupMemberReq& S2SAddMatchGroupMemberReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddMatchGroupMemberReq.base);
  return *internal_default_instance();
}


void S2SAddMatchGroupMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddMatchGroupMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SAddMatchGroupMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddMatchGroupMemberReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbmember = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddMatchGroupMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddMatchGroupMemberReq)
  return false;
#undef DO_
}

void S2SAddMatchGroupMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddMatchGroupMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbmember(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddMatchGroupMemberReq)
}

::google::protobuf::uint8* S2SAddMatchGroupMemberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddMatchGroupMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbmember(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddMatchGroupMemberReq)
  return target;
}

size_t S2SAddMatchGroupMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddMatchGroupMemberReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddMatchGroupMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddMatchGroupMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddMatchGroupMemberReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddMatchGroupMemberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddMatchGroupMemberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddMatchGroupMemberReq)
    MergeFrom(*source);
  }
}

void S2SAddMatchGroupMemberReq::MergeFrom(const S2SAddMatchGroupMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddMatchGroupMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SAddMatchGroupMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddMatchGroupMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddMatchGroupMemberReq::CopyFrom(const S2SAddMatchGroupMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddMatchGroupMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddMatchGroupMemberReq::IsInitialized() const {
  return true;
}

void S2SAddMatchGroupMemberReq::Swap(S2SAddMatchGroupMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddMatchGroupMemberReq::InternalSwap(S2SAddMatchGroupMemberReq* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddMatchGroupMemberReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddMatchGroupMemberAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddMatchGroupMemberAck_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SAddMatchGroupMemberAck::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddMatchGroupMemberAck::kPbmemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddMatchGroupMemberAck::S2SAddMatchGroupMemberAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddMatchGroupMemberAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddMatchGroupMemberAck)
}
S2SAddMatchGroupMemberAck::S2SAddMatchGroupMemberAck(const S2SAddMatchGroupMemberAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddMatchGroupMemberAck)
}

void S2SAddMatchGroupMemberAck::SharedCtor() {
  pbmember_ = NULL;
}

S2SAddMatchGroupMemberAck::~S2SAddMatchGroupMemberAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddMatchGroupMemberAck)
  SharedDtor();
}

void S2SAddMatchGroupMemberAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SAddMatchGroupMemberAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddMatchGroupMemberAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddMatchGroupMemberAck& S2SAddMatchGroupMemberAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddMatchGroupMemberAck.base);
  return *internal_default_instance();
}


void S2SAddMatchGroupMemberAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddMatchGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SAddMatchGroupMemberAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddMatchGroupMemberAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBObject pbmember = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddMatchGroupMemberAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddMatchGroupMemberAck)
  return false;
#undef DO_
}

void S2SAddMatchGroupMemberAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddMatchGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbmember(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddMatchGroupMemberAck)
}

::google::protobuf::uint8* S2SAddMatchGroupMemberAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddMatchGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbmember(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddMatchGroupMemberAck)
  return target;
}

size_t S2SAddMatchGroupMemberAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddMatchGroupMemberAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 1;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddMatchGroupMemberAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddMatchGroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddMatchGroupMemberAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddMatchGroupMemberAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddMatchGroupMemberAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddMatchGroupMemberAck)
    MergeFrom(*source);
  }
}

void S2SAddMatchGroupMemberAck::MergeFrom(const S2SAddMatchGroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddMatchGroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
}

void S2SAddMatchGroupMemberAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddMatchGroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddMatchGroupMemberAck::CopyFrom(const S2SAddMatchGroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddMatchGroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddMatchGroupMemberAck::IsInitialized() const {
  return true;
}

void S2SAddMatchGroupMemberAck::Swap(S2SAddMatchGroupMemberAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddMatchGroupMemberAck::InternalSwap(S2SAddMatchGroupMemberAck* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddMatchGroupMemberAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellMatchGroupDataAck::InitAsDefaultInstance() {
}
void S2STellMatchGroupDataAck::clear_pbmember() {
  pbmember_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellMatchGroupDataAck::kPbmemberFieldNumber;
const int S2STellMatchGroupDataAck::kGroupidFieldNumber;
const int S2STellMatchGroupDataAck::kCaptainidFieldNumber;
const int S2STellMatchGroupDataAck::kMaxcountFieldNumber;
const int S2STellMatchGroupDataAck::kMatchidFieldNumber;
const int S2STellMatchGroupDataAck::kNewaddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellMatchGroupDataAck::S2STellMatchGroupDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2STellMatchGroupDataAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellMatchGroupDataAck)
}
S2STellMatchGroupDataAck::S2STellMatchGroupDataAck(const S2STellMatchGroupDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbmember_(from.pbmember_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&newadd_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(newadd_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellMatchGroupDataAck)
}

void S2STellMatchGroupDataAck::SharedCtor() {
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newadd_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(newadd_));
}

S2STellMatchGroupDataAck::~S2STellMatchGroupDataAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellMatchGroupDataAck)
  SharedDtor();
}

void S2STellMatchGroupDataAck::SharedDtor() {
}

void S2STellMatchGroupDataAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellMatchGroupDataAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellMatchGroupDataAck& S2STellMatchGroupDataAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2STellMatchGroupDataAck.base);
  return *internal_default_instance();
}


void S2STellMatchGroupDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellMatchGroupDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbmember_.Clear();
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newadd_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(newadd_));
  _internal_metadata_.Clear();
}

bool S2STellMatchGroupDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellMatchGroupDataAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBObject pbmember = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 captainid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxcount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool newadd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &newadd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellMatchGroupDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellMatchGroupDataAck)
  return false;
#undef DO_
}

void S2STellMatchGroupDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellMatchGroupDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBObject pbmember = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbmember_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pbmember(static_cast<int>(i)),
      output);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->groupid(), output);
  }

  // uint64 captainid = 3;
  if (this->captainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->captainid(), output);
  }

  // uint32 maxcount = 4;
  if (this->maxcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxcount(), output);
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->matchid(), output);
  }

  // bool newadd = 6;
  if (this->newadd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->newadd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellMatchGroupDataAck)
}

::google::protobuf::uint8* S2STellMatchGroupDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellMatchGroupDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBObject pbmember = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbmember_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pbmember(static_cast<int>(i)), deterministic, target);
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->groupid(), target);
  }

  // uint64 captainid = 3;
  if (this->captainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->captainid(), target);
  }

  // uint32 maxcount = 4;
  if (this->maxcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxcount(), target);
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->matchid(), target);
  }

  // bool newadd = 6;
  if (this->newadd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->newadd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellMatchGroupDataAck)
  return target;
}

size_t S2STellMatchGroupDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellMatchGroupDataAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBObject pbmember = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pbmember_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbmember(static_cast<int>(i)));
    }
  }

  // uint64 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 captainid = 3;
  if (this->captainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->captainid());
  }

  // uint32 maxcount = 4;
  if (this->maxcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxcount());
  }

  // uint32 matchid = 5;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // bool newadd = 6;
  if (this->newadd() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellMatchGroupDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellMatchGroupDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellMatchGroupDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellMatchGroupDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellMatchGroupDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellMatchGroupDataAck)
    MergeFrom(*source);
  }
}

void S2STellMatchGroupDataAck::MergeFrom(const S2STellMatchGroupDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellMatchGroupDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbmember_.MergeFrom(from.pbmember_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.captainid() != 0) {
    set_captainid(from.captainid());
  }
  if (from.maxcount() != 0) {
    set_maxcount(from.maxcount());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.newadd() != 0) {
    set_newadd(from.newadd());
  }
}

void S2STellMatchGroupDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellMatchGroupDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellMatchGroupDataAck::CopyFrom(const S2STellMatchGroupDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellMatchGroupDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellMatchGroupDataAck::IsInitialized() const {
  return true;
}

void S2STellMatchGroupDataAck::Swap(S2STellMatchGroupDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellMatchGroupDataAck::InternalSwap(S2STellMatchGroupDataAck* other) {
  using std::swap;
  CastToBase(&pbmember_)->InternalSwap(CastToBase(&other->pbmember_));
  swap(groupid_, other->groupid_);
  swap(captainid_, other->captainid_);
  swap(maxcount_, other->maxcount_);
  swap(matchid_, other->matchid_);
  swap(newadd_, other->newadd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellMatchGroupDataAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRemoveMatchGroupMemberAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRemoveMatchGroupMemberAck::kMemberidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRemoveMatchGroupMemberAck::S2SRemoveMatchGroupMemberAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SRemoveMatchGroupMemberAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRemoveMatchGroupMemberAck)
}
S2SRemoveMatchGroupMemberAck::S2SRemoveMatchGroupMemberAck(const S2SRemoveMatchGroupMemberAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  memberid_ = from.memberid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRemoveMatchGroupMemberAck)
}

void S2SRemoveMatchGroupMemberAck::SharedCtor() {
  memberid_ = GOOGLE_ULONGLONG(0);
}

S2SRemoveMatchGroupMemberAck::~S2SRemoveMatchGroupMemberAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRemoveMatchGroupMemberAck)
  SharedDtor();
}

void S2SRemoveMatchGroupMemberAck::SharedDtor() {
}

void S2SRemoveMatchGroupMemberAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRemoveMatchGroupMemberAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRemoveMatchGroupMemberAck& S2SRemoveMatchGroupMemberAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SRemoveMatchGroupMemberAck.base);
  return *internal_default_instance();
}


void S2SRemoveMatchGroupMemberAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  memberid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SRemoveMatchGroupMemberAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 memberid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRemoveMatchGroupMemberAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRemoveMatchGroupMemberAck)
  return false;
#undef DO_
}

void S2SRemoveMatchGroupMemberAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberid = 1;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->memberid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRemoveMatchGroupMemberAck)
}

::google::protobuf::uint8* S2SRemoveMatchGroupMemberAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberid = 1;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->memberid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRemoveMatchGroupMemberAck)
  return target;
}

size_t S2SRemoveMatchGroupMemberAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 memberid = 1;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRemoveMatchGroupMemberAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRemoveMatchGroupMemberAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRemoveMatchGroupMemberAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRemoveMatchGroupMemberAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRemoveMatchGroupMemberAck)
    MergeFrom(*source);
  }
}

void S2SRemoveMatchGroupMemberAck::MergeFrom(const S2SRemoveMatchGroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
}

void S2SRemoveMatchGroupMemberAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRemoveMatchGroupMemberAck::CopyFrom(const S2SRemoveMatchGroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRemoveMatchGroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRemoveMatchGroupMemberAck::IsInitialized() const {
  return true;
}

void S2SRemoveMatchGroupMemberAck::Swap(S2SRemoveMatchGroupMemberAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRemoveMatchGroupMemberAck::InternalSwap(S2SRemoveMatchGroupMemberAck* other) {
  using std::swap;
  swap(memberid_, other->memberid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRemoveMatchGroupMemberAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLeaveMatchGroupReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLeaveMatchGroupReq::kGroupidFieldNumber;
const int S2SLeaveMatchGroupReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLeaveMatchGroupReq::S2SLeaveMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLeaveMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLeaveMatchGroupReq)
}
S2SLeaveMatchGroupReq::S2SLeaveMatchGroupReq(const S2SLeaveMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLeaveMatchGroupReq)
}

void S2SLeaveMatchGroupReq::SharedCtor() {
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
}

S2SLeaveMatchGroupReq::~S2SLeaveMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLeaveMatchGroupReq)
  SharedDtor();
}

void S2SLeaveMatchGroupReq::SharedDtor() {
}

void S2SLeaveMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLeaveMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLeaveMatchGroupReq& S2SLeaveMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLeaveMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SLeaveMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLeaveMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SLeaveMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLeaveMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLeaveMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLeaveMatchGroupReq)
  return false;
#undef DO_
}

void S2SLeaveMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLeaveMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLeaveMatchGroupReq)
}

::google::protobuf::uint8* S2SLeaveMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLeaveMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLeaveMatchGroupReq)
  return target;
}

size_t S2SLeaveMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLeaveMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLeaveMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLeaveMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLeaveMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLeaveMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLeaveMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLeaveMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SLeaveMatchGroupReq::MergeFrom(const S2SLeaveMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLeaveMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLeaveMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLeaveMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLeaveMatchGroupReq::CopyFrom(const S2SLeaveMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLeaveMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLeaveMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SLeaveMatchGroupReq::Swap(S2SLeaveMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLeaveMatchGroupReq::InternalSwap(S2SLeaveMatchGroupReq* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLeaveMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickMatchGroupReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickMatchGroupReq::kGroupidFieldNumber;
const int S2SKickMatchGroupReq::kCaptainidFieldNumber;
const int S2SKickMatchGroupReq::kServeridFieldNumber;
const int S2SKickMatchGroupReq::kMemberidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickMatchGroupReq::S2SKickMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SKickMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickMatchGroupReq)
}
S2SKickMatchGroupReq::S2SKickMatchGroupReq(const S2SKickMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&memberid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(memberid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickMatchGroupReq)
}

void S2SKickMatchGroupReq::SharedCtor() {
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(memberid_));
}

S2SKickMatchGroupReq::~S2SKickMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickMatchGroupReq)
  SharedDtor();
}

void S2SKickMatchGroupReq::SharedDtor() {
}

void S2SKickMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickMatchGroupReq& S2SKickMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SKickMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SKickMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(memberid_));
  _internal_metadata_.Clear();
}

bool S2SKickMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 captainid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 memberid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickMatchGroupReq)
  return false;
#undef DO_
}

void S2SKickMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 captainid = 2;
  if (this->captainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->captainid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // uint64 memberid = 4;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->memberid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickMatchGroupReq)
}

::google::protobuf::uint8* S2SKickMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 captainid = 2;
  if (this->captainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->captainid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // uint64 memberid = 4;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->memberid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickMatchGroupReq)
  return target;
}

size_t S2SKickMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 captainid = 2;
  if (this->captainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->captainid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 memberid = 4;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SKickMatchGroupReq::MergeFrom(const S2SKickMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.captainid() != 0) {
    set_captainid(from.captainid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
}

void S2SKickMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickMatchGroupReq::CopyFrom(const S2SKickMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SKickMatchGroupReq::Swap(S2SKickMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickMatchGroupReq::InternalSwap(S2SKickMatchGroupReq* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(captainid_, other->captainid_);
  swap(serverid_, other->serverid_);
  swap(memberid_, other->memberid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLeaveMatchGroupAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLeaveMatchGroupAck::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLeaveMatchGroupAck::S2SLeaveMatchGroupAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLeaveMatchGroupAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLeaveMatchGroupAck)
}
S2SLeaveMatchGroupAck::S2SLeaveMatchGroupAck(const S2SLeaveMatchGroupAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLeaveMatchGroupAck)
}

void S2SLeaveMatchGroupAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLeaveMatchGroupAck::~S2SLeaveMatchGroupAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLeaveMatchGroupAck)
  SharedDtor();
}

void S2SLeaveMatchGroupAck::SharedDtor() {
}

void S2SLeaveMatchGroupAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLeaveMatchGroupAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLeaveMatchGroupAck& S2SLeaveMatchGroupAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLeaveMatchGroupAck.base);
  return *internal_default_instance();
}


void S2SLeaveMatchGroupAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLeaveMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLeaveMatchGroupAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLeaveMatchGroupAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLeaveMatchGroupAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLeaveMatchGroupAck)
  return false;
#undef DO_
}

void S2SLeaveMatchGroupAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLeaveMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLeaveMatchGroupAck)
}

::google::protobuf::uint8* S2SLeaveMatchGroupAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLeaveMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLeaveMatchGroupAck)
  return target;
}

size_t S2SLeaveMatchGroupAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLeaveMatchGroupAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLeaveMatchGroupAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLeaveMatchGroupAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLeaveMatchGroupAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLeaveMatchGroupAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLeaveMatchGroupAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLeaveMatchGroupAck)
    MergeFrom(*source);
  }
}

void S2SLeaveMatchGroupAck::MergeFrom(const S2SLeaveMatchGroupAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLeaveMatchGroupAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLeaveMatchGroupAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLeaveMatchGroupAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLeaveMatchGroupAck::CopyFrom(const S2SLeaveMatchGroupAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLeaveMatchGroupAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLeaveMatchGroupAck::IsInitialized() const {
  return true;
}

void S2SLeaveMatchGroupAck::Swap(S2SLeaveMatchGroupAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLeaveMatchGroupAck::InternalSwap(S2SLeaveMatchGroupAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLeaveMatchGroupAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SApplyMatchGroupReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SApplyMatchGroupReq_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SApplyMatchGroupReq::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SApplyMatchGroupReq::kGroupidFieldNumber;
const int S2SApplyMatchGroupReq::kPlayeridFieldNumber;
const int S2SApplyMatchGroupReq::kServeridFieldNumber;
const int S2SApplyMatchGroupReq::kPbmemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SApplyMatchGroupReq::S2SApplyMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SApplyMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SApplyMatchGroupReq)
}
S2SApplyMatchGroupReq::S2SApplyMatchGroupReq(const S2SApplyMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SApplyMatchGroupReq)
}

void S2SApplyMatchGroupReq::SharedCtor() {
  ::memset(&pbmember_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&pbmember_)) + sizeof(serverid_));
}

S2SApplyMatchGroupReq::~S2SApplyMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SApplyMatchGroupReq)
  SharedDtor();
}

void S2SApplyMatchGroupReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SApplyMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SApplyMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SApplyMatchGroupReq& S2SApplyMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SApplyMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SApplyMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SApplyMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SApplyMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SApplyMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbmember = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SApplyMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SApplyMatchGroupReq)
  return false;
#undef DO_
}

void S2SApplyMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SApplyMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbmember(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SApplyMatchGroupReq)
}

::google::protobuf::uint8* S2SApplyMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SApplyMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbmember(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SApplyMatchGroupReq)
  return target;
}

size_t S2SApplyMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SApplyMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 4;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SApplyMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SApplyMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SApplyMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SApplyMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SApplyMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SApplyMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SApplyMatchGroupReq::MergeFrom(const S2SApplyMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SApplyMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SApplyMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SApplyMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SApplyMatchGroupReq::CopyFrom(const S2SApplyMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SApplyMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SApplyMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SApplyMatchGroupReq::Swap(S2SApplyMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SApplyMatchGroupReq::InternalSwap(S2SApplyMatchGroupReq* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SApplyMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SApplyMatchGroupAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SApplyMatchGroupAck_default_instance_._instance.get_mutable()->pbmember_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SApplyMatchGroupAck::clear_pbmember() {
  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SApplyMatchGroupAck::kPlayeridFieldNumber;
const int S2SApplyMatchGroupAck::kPbmemberFieldNumber;
const int S2SApplyMatchGroupAck::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SApplyMatchGroupAck::S2SApplyMatchGroupAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SApplyMatchGroupAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SApplyMatchGroupAck)
}
S2SApplyMatchGroupAck::S2SApplyMatchGroupAck(const S2SApplyMatchGroupAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmember()) {
    pbmember_ = new ::KFMsg::PBObject(*from.pbmember_);
  } else {
    pbmember_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SApplyMatchGroupAck)
}

void S2SApplyMatchGroupAck::SharedCtor() {
  ::memset(&pbmember_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&pbmember_)) + sizeof(serverid_));
}

S2SApplyMatchGroupAck::~S2SApplyMatchGroupAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SApplyMatchGroupAck)
  SharedDtor();
}

void S2SApplyMatchGroupAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbmember_;
}

void S2SApplyMatchGroupAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SApplyMatchGroupAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SApplyMatchGroupAck& S2SApplyMatchGroupAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SApplyMatchGroupAck.base);
  return *internal_default_instance();
}


void S2SApplyMatchGroupAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SApplyMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmember_ != NULL) {
    delete pbmember_;
  }
  pbmember_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SApplyMatchGroupAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SApplyMatchGroupAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbmember = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SApplyMatchGroupAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SApplyMatchGroupAck)
  return false;
#undef DO_
}

void S2SApplyMatchGroupAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SApplyMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBObject pbmember = 2;
  if (this->has_pbmember()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbmember(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SApplyMatchGroupAck)
}

::google::protobuf::uint8* S2SApplyMatchGroupAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SApplyMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBObject pbmember = 2;
  if (this->has_pbmember()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbmember(), deterministic, target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SApplyMatchGroupAck)
  return target;
}

size_t S2SApplyMatchGroupAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SApplyMatchGroupAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbmember = 2;
  if (this->has_pbmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmember_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SApplyMatchGroupAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SApplyMatchGroupAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SApplyMatchGroupAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SApplyMatchGroupAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SApplyMatchGroupAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SApplyMatchGroupAck)
    MergeFrom(*source);
  }
}

void S2SApplyMatchGroupAck::MergeFrom(const S2SApplyMatchGroupAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SApplyMatchGroupAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmember()) {
    mutable_pbmember()->::KFMsg::PBObject::MergeFrom(from.pbmember());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SApplyMatchGroupAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SApplyMatchGroupAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SApplyMatchGroupAck::CopyFrom(const S2SApplyMatchGroupAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SApplyMatchGroupAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SApplyMatchGroupAck::IsInitialized() const {
  return true;
}

void S2SApplyMatchGroupAck::Swap(S2SApplyMatchGroupAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SApplyMatchGroupAck::InternalSwap(S2SApplyMatchGroupAck* other) {
  using std::swap;
  swap(pbmember_, other->pbmember_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SApplyMatchGroupAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SConsentApplyMatchGroupAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SConsentApplyMatchGroupAck::kGroupidFieldNumber;
const int S2SConsentApplyMatchGroupAck::kPlayeridFieldNumber;
const int S2SConsentApplyMatchGroupAck::kCaptainidFieldNumber;
const int S2SConsentApplyMatchGroupAck::kServeridFieldNumber;
const int S2SConsentApplyMatchGroupAck::kPlayernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SConsentApplyMatchGroupAck::S2SConsentApplyMatchGroupAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SConsentApplyMatchGroupAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SConsentApplyMatchGroupAck)
}
S2SConsentApplyMatchGroupAck::S2SConsentApplyMatchGroupAck(const S2SConsentApplyMatchGroupAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SConsentApplyMatchGroupAck)
}

void S2SConsentApplyMatchGroupAck::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
}

S2SConsentApplyMatchGroupAck::~S2SConsentApplyMatchGroupAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SConsentApplyMatchGroupAck)
  SharedDtor();
}

void S2SConsentApplyMatchGroupAck::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SConsentApplyMatchGroupAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SConsentApplyMatchGroupAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SConsentApplyMatchGroupAck& S2SConsentApplyMatchGroupAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SConsentApplyMatchGroupAck.base);
  return *internal_default_instance();
}


void S2SConsentApplyMatchGroupAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SConsentApplyMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SConsentApplyMatchGroupAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SConsentApplyMatchGroupAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 captainid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playername = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SConsentApplyMatchGroupAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SConsentApplyMatchGroupAck)
  return false;
#undef DO_
}

void S2SConsentApplyMatchGroupAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SConsentApplyMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 captainid = 3;
  if (this->captainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->captainid(), output);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->serverid(), output);
  }

  // bytes playername = 5;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->playername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SConsentApplyMatchGroupAck)
}

::google::protobuf::uint8* S2SConsentApplyMatchGroupAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SConsentApplyMatchGroupAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 captainid = 3;
  if (this->captainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->captainid(), target);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->serverid(), target);
  }

  // bytes playername = 5;
  if (this->playername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->playername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SConsentApplyMatchGroupAck)
  return target;
}

size_t S2SConsentApplyMatchGroupAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SConsentApplyMatchGroupAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes playername = 5;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playername());
  }

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 captainid = 3;
  if (this->captainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->captainid());
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SConsentApplyMatchGroupAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SConsentApplyMatchGroupAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SConsentApplyMatchGroupAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SConsentApplyMatchGroupAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SConsentApplyMatchGroupAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SConsentApplyMatchGroupAck)
    MergeFrom(*source);
  }
}

void S2SConsentApplyMatchGroupAck::MergeFrom(const S2SConsentApplyMatchGroupAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SConsentApplyMatchGroupAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.captainid() != 0) {
    set_captainid(from.captainid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SConsentApplyMatchGroupAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SConsentApplyMatchGroupAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SConsentApplyMatchGroupAck::CopyFrom(const S2SConsentApplyMatchGroupAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SConsentApplyMatchGroupAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SConsentApplyMatchGroupAck::IsInitialized() const {
  return true;
}

void S2SConsentApplyMatchGroupAck::Swap(S2SConsentApplyMatchGroupAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SConsentApplyMatchGroupAck::InternalSwap(S2SConsentApplyMatchGroupAck* other) {
  using std::swap;
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  swap(captainid_, other->captainid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SConsentApplyMatchGroupAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOnLineQueryMatchGroupReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOnLineQueryMatchGroupReq::kGroupidFieldNumber;
const int S2SOnLineQueryMatchGroupReq::kPlayeridFieldNumber;
const int S2SOnLineQueryMatchGroupReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOnLineQueryMatchGroupReq::S2SOnLineQueryMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SOnLineQueryMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOnLineQueryMatchGroupReq)
}
S2SOnLineQueryMatchGroupReq::S2SOnLineQueryMatchGroupReq(const S2SOnLineQueryMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOnLineQueryMatchGroupReq)
}

void S2SOnLineQueryMatchGroupReq::SharedCtor() {
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
}

S2SOnLineQueryMatchGroupReq::~S2SOnLineQueryMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOnLineQueryMatchGroupReq)
  SharedDtor();
}

void S2SOnLineQueryMatchGroupReq::SharedDtor() {
}

void S2SOnLineQueryMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOnLineQueryMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOnLineQueryMatchGroupReq& S2SOnLineQueryMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SOnLineQueryMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SOnLineQueryMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SOnLineQueryMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOnLineQueryMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOnLineQueryMatchGroupReq)
  return false;
#undef DO_
}

void S2SOnLineQueryMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOnLineQueryMatchGroupReq)
}

::google::protobuf::uint8* S2SOnLineQueryMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOnLineQueryMatchGroupReq)
  return target;
}

size_t S2SOnLineQueryMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOnLineQueryMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOnLineQueryMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOnLineQueryMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOnLineQueryMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOnLineQueryMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SOnLineQueryMatchGroupReq::MergeFrom(const S2SOnLineQueryMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SOnLineQueryMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOnLineQueryMatchGroupReq::CopyFrom(const S2SOnLineQueryMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOnLineQueryMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOnLineQueryMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SOnLineQueryMatchGroupReq::Swap(S2SOnLineQueryMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOnLineQueryMatchGroupReq::InternalSwap(S2SOnLineQueryMatchGroupReq* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOnLineQueryMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOffLineUpdateMatchGroupReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOffLineUpdateMatchGroupReq::kGroupidFieldNumber;
const int S2SOffLineUpdateMatchGroupReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOffLineUpdateMatchGroupReq::S2SOffLineUpdateMatchGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SOffLineUpdateMatchGroupReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOffLineUpdateMatchGroupReq)
}
S2SOffLineUpdateMatchGroupReq::S2SOffLineUpdateMatchGroupReq(const S2SOffLineUpdateMatchGroupReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOffLineUpdateMatchGroupReq)
}

void S2SOffLineUpdateMatchGroupReq::SharedCtor() {
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
}

S2SOffLineUpdateMatchGroupReq::~S2SOffLineUpdateMatchGroupReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOffLineUpdateMatchGroupReq)
  SharedDtor();
}

void S2SOffLineUpdateMatchGroupReq::SharedDtor() {
}

void S2SOffLineUpdateMatchGroupReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOffLineUpdateMatchGroupReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOffLineUpdateMatchGroupReq& S2SOffLineUpdateMatchGroupReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SOffLineUpdateMatchGroupReq.base);
  return *internal_default_instance();
}


void S2SOffLineUpdateMatchGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SOffLineUpdateMatchGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOffLineUpdateMatchGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOffLineUpdateMatchGroupReq)
  return false;
#undef DO_
}

void S2SOffLineUpdateMatchGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOffLineUpdateMatchGroupReq)
}

::google::protobuf::uint8* S2SOffLineUpdateMatchGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOffLineUpdateMatchGroupReq)
  return target;
}

size_t S2SOffLineUpdateMatchGroupReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOffLineUpdateMatchGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOffLineUpdateMatchGroupReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOffLineUpdateMatchGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOffLineUpdateMatchGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOffLineUpdateMatchGroupReq)
    MergeFrom(*source);
  }
}

void S2SOffLineUpdateMatchGroupReq::MergeFrom(const S2SOffLineUpdateMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SOffLineUpdateMatchGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOffLineUpdateMatchGroupReq::CopyFrom(const S2SOffLineUpdateMatchGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOffLineUpdateMatchGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOffLineUpdateMatchGroupReq::IsInitialized() const {
  return true;
}

void S2SOffLineUpdateMatchGroupReq::Swap(S2SOffLineUpdateMatchGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOffLineUpdateMatchGroupReq::InternalSwap(S2SOffLineUpdateMatchGroupReq* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOffLineUpdateMatchGroupReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateGroupMemberReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateGroupMemberReq_default_instance_._instance.get_mutable()->pbstrings_ = const_cast< ::KFMsg::PBStrings*>(
      ::KFMsg::PBStrings::internal_default_instance());
}
void S2SUpdateGroupMemberReq::clear_pbstrings() {
  if (GetArenaNoVirtual() == NULL && pbstrings_ != NULL) {
    delete pbstrings_;
  }
  pbstrings_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateGroupMemberReq::kGroupidFieldNumber;
const int S2SUpdateGroupMemberReq::kMemberidFieldNumber;
const int S2SUpdateGroupMemberReq::kDatanameFieldNumber;
const int S2SUpdateGroupMemberReq::kPbstringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateGroupMemberReq::S2SUpdateGroupMemberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupMemberReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateGroupMemberReq)
}
S2SUpdateGroupMemberReq::S2SUpdateGroupMemberReq(const S2SUpdateGroupMemberReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataname().size() > 0) {
    dataname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataname_);
  }
  if (from.has_pbstrings()) {
    pbstrings_ = new ::KFMsg::PBStrings(*from.pbstrings_);
  } else {
    pbstrings_ = NULL;
  }
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&memberid_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(memberid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateGroupMemberReq)
}

void S2SUpdateGroupMemberReq::SharedCtor() {
  dataname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbstrings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&pbstrings_)) + sizeof(memberid_));
}

S2SUpdateGroupMemberReq::~S2SUpdateGroupMemberReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateGroupMemberReq)
  SharedDtor();
}

void S2SUpdateGroupMemberReq::SharedDtor() {
  dataname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbstrings_;
}

void S2SUpdateGroupMemberReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateGroupMemberReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateGroupMemberReq& S2SUpdateGroupMemberReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupMemberReq.base);
  return *internal_default_instance();
}


void S2SUpdateGroupMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateGroupMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbstrings_ != NULL) {
    delete pbstrings_;
  }
  pbstrings_ = NULL;
  ::memset(&groupid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&groupid_)) + sizeof(memberid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateGroupMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateGroupMemberReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 groupid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 memberid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dataname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dataname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBStrings pbstrings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbstrings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateGroupMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateGroupMemberReq)
  return false;
#undef DO_
}

void S2SUpdateGroupMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateGroupMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->groupid(), output);
  }

  // uint64 memberid = 2;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->memberid(), output);
  }

  // bytes dataname = 3;
  if (this->dataname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->dataname(), output);
  }

  // .KFMsg.PBStrings pbstrings = 4;
  if (this->has_pbstrings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbstrings(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateGroupMemberReq)
}

::google::protobuf::uint8* S2SUpdateGroupMemberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateGroupMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->groupid(), target);
  }

  // uint64 memberid = 2;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->memberid(), target);
  }

  // bytes dataname = 3;
  if (this->dataname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->dataname(), target);
  }

  // .KFMsg.PBStrings pbstrings = 4;
  if (this->has_pbstrings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbstrings(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateGroupMemberReq)
  return target;
}

size_t S2SUpdateGroupMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateGroupMemberReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes dataname = 3;
  if (this->dataname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dataname());
  }

  // .KFMsg.PBStrings pbstrings = 4;
  if (this->has_pbstrings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbstrings_);
  }

  // uint64 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 memberid = 2;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateGroupMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateGroupMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateGroupMemberReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateGroupMemberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateGroupMemberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateGroupMemberReq)
    MergeFrom(*source);
  }
}

void S2SUpdateGroupMemberReq::MergeFrom(const S2SUpdateGroupMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateGroupMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dataname().size() > 0) {

    dataname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataname_);
  }
  if (from.has_pbstrings()) {
    mutable_pbstrings()->::KFMsg::PBStrings::MergeFrom(from.pbstrings());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
}

void S2SUpdateGroupMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateGroupMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateGroupMemberReq::CopyFrom(const S2SUpdateGroupMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateGroupMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateGroupMemberReq::IsInitialized() const {
  return true;
}

void S2SUpdateGroupMemberReq::Swap(S2SUpdateGroupMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateGroupMemberReq::InternalSwap(S2SUpdateGroupMemberReq* other) {
  using std::swap;
  dataname_.Swap(&other->dataname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbstrings_, other->pbstrings_);
  swap(groupid_, other->groupid_);
  swap(memberid_, other->memberid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateGroupMemberReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateGroupMemberAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateGroupMemberAck_default_instance_._instance.get_mutable()->pbstrings_ = const_cast< ::KFMsg::PBStrings*>(
      ::KFMsg::PBStrings::internal_default_instance());
}
void S2SUpdateGroupMemberAck::clear_pbstrings() {
  if (GetArenaNoVirtual() == NULL && pbstrings_ != NULL) {
    delete pbstrings_;
  }
  pbstrings_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateGroupMemberAck::kMemberidFieldNumber;
const int S2SUpdateGroupMemberAck::kDatanameFieldNumber;
const int S2SUpdateGroupMemberAck::kPbstringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateGroupMemberAck::S2SUpdateGroupMemberAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupMemberAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateGroupMemberAck)
}
S2SUpdateGroupMemberAck::S2SUpdateGroupMemberAck(const S2SUpdateGroupMemberAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dataname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataname().size() > 0) {
    dataname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataname_);
  }
  if (from.has_pbstrings()) {
    pbstrings_ = new ::KFMsg::PBStrings(*from.pbstrings_);
  } else {
    pbstrings_ = NULL;
  }
  memberid_ = from.memberid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateGroupMemberAck)
}

void S2SUpdateGroupMemberAck::SharedCtor() {
  dataname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbstrings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&pbstrings_)) + sizeof(memberid_));
}

S2SUpdateGroupMemberAck::~S2SUpdateGroupMemberAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateGroupMemberAck)
  SharedDtor();
}

void S2SUpdateGroupMemberAck::SharedDtor() {
  dataname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbstrings_;
}

void S2SUpdateGroupMemberAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateGroupMemberAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateGroupMemberAck& S2SUpdateGroupMemberAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupMemberAck.base);
  return *internal_default_instance();
}


void S2SUpdateGroupMemberAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbstrings_ != NULL) {
    delete pbstrings_;
  }
  pbstrings_ = NULL;
  memberid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SUpdateGroupMemberAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateGroupMemberAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 memberid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes dataname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dataname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBStrings pbstrings = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbstrings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateGroupMemberAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateGroupMemberAck)
  return false;
#undef DO_
}

void S2SUpdateGroupMemberAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberid = 1;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->memberid(), output);
  }

  // bytes dataname = 2;
  if (this->dataname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->dataname(), output);
  }

  // .KFMsg.PBStrings pbstrings = 3;
  if (this->has_pbstrings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbstrings(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateGroupMemberAck)
}

::google::protobuf::uint8* S2SUpdateGroupMemberAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateGroupMemberAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberid = 1;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->memberid(), target);
  }

  // bytes dataname = 2;
  if (this->dataname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->dataname(), target);
  }

  // .KFMsg.PBStrings pbstrings = 3;
  if (this->has_pbstrings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbstrings(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateGroupMemberAck)
  return target;
}

size_t S2SUpdateGroupMemberAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateGroupMemberAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes dataname = 2;
  if (this->dataname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dataname());
  }

  // .KFMsg.PBStrings pbstrings = 3;
  if (this->has_pbstrings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbstrings_);
  }

  // uint64 memberid = 1;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateGroupMemberAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateGroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateGroupMemberAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateGroupMemberAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateGroupMemberAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateGroupMemberAck)
    MergeFrom(*source);
  }
}

void S2SUpdateGroupMemberAck::MergeFrom(const S2SUpdateGroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateGroupMemberAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dataname().size() > 0) {

    dataname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataname_);
  }
  if (from.has_pbstrings()) {
    mutable_pbstrings()->::KFMsg::PBStrings::MergeFrom(from.pbstrings());
  }
  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
}

void S2SUpdateGroupMemberAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateGroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateGroupMemberAck::CopyFrom(const S2SUpdateGroupMemberAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateGroupMemberAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateGroupMemberAck::IsInitialized() const {
  return true;
}

void S2SUpdateGroupMemberAck::Swap(S2SUpdateGroupMemberAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateGroupMemberAck::InternalSwap(S2SUpdateGroupMemberAck* other) {
  using std::swap;
  dataname_.Swap(&other->dataname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbstrings_, other->pbstrings_);
  swap(memberid_, other->memberid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateGroupMemberAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateGroupDataAck::InitAsDefaultInstance() {
}
void S2SUpdateGroupDataAck::clear_pbstring() {
  pbstring_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateGroupDataAck::kPbstringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateGroupDataAck::S2SUpdateGroupDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupDataAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateGroupDataAck)
}
S2SUpdateGroupDataAck::S2SUpdateGroupDataAck(const S2SUpdateGroupDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbstring_(from.pbstring_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateGroupDataAck)
}

void S2SUpdateGroupDataAck::SharedCtor() {
}

S2SUpdateGroupDataAck::~S2SUpdateGroupDataAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateGroupDataAck)
  SharedDtor();
}

void S2SUpdateGroupDataAck::SharedDtor() {
}

void S2SUpdateGroupDataAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateGroupDataAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateGroupDataAck& S2SUpdateGroupDataAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGroupDataAck.base);
  return *internal_default_instance();
}


void S2SUpdateGroupDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateGroupDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbstring_.Clear();
  _internal_metadata_.Clear();
}

bool S2SUpdateGroupDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateGroupDataAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBString pbstring = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateGroupDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateGroupDataAck)
  return false;
#undef DO_
}

void S2SUpdateGroupDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateGroupDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBString pbstring = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbstring_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pbstring(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateGroupDataAck)
}

::google::protobuf::uint8* S2SUpdateGroupDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateGroupDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBString pbstring = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbstring_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pbstring(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateGroupDataAck)
  return target;
}

size_t S2SUpdateGroupDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateGroupDataAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBString pbstring = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pbstring_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbstring(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateGroupDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateGroupDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateGroupDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateGroupDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateGroupDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateGroupDataAck)
    MergeFrom(*source);
  }
}

void S2SUpdateGroupDataAck::MergeFrom(const S2SUpdateGroupDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateGroupDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbstring_.MergeFrom(from.pbstring_);
}

void S2SUpdateGroupDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateGroupDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateGroupDataAck::CopyFrom(const S2SUpdateGroupDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateGroupDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateGroupDataAck::IsInitialized() const {
  return true;
}

void S2SUpdateGroupDataAck::Swap(S2SUpdateGroupDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateGroupDataAck::InternalSwap(S2SUpdateGroupDataAck* other) {
  using std::swap;
  CastToBase(&pbstring_)->InternalSwap(CastToBase(&other->pbstring_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateGroupDataAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateGuestListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateGuestListReq::kPlayeridFieldNumber;
const int S2SUpdateGuestListReq::kGuestidFieldNumber;
const int S2SUpdateGuestListReq::kGuesttimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateGuestListReq::S2SUpdateGuestListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGuestListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateGuestListReq)
}
S2SUpdateGuestListReq::S2SUpdateGuestListReq(const S2SUpdateGuestListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guesttime_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(guesttime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateGuestListReq)
}

void S2SUpdateGuestListReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guesttime_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guesttime_));
}

S2SUpdateGuestListReq::~S2SUpdateGuestListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateGuestListReq)
  SharedDtor();
}

void S2SUpdateGuestListReq::SharedDtor() {
}

void S2SUpdateGuestListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateGuestListReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateGuestListReq& S2SUpdateGuestListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGuestListReq.base);
  return *internal_default_instance();
}


void S2SUpdateGuestListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateGuestListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guesttime_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guesttime_));
  _internal_metadata_.Clear();
}

bool S2SUpdateGuestListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateGuestListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guestid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guesttime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guesttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateGuestListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateGuestListReq)
  return false;
#undef DO_
}

void S2SUpdateGuestListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateGuestListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guestid = 2;
  if (this->guestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guestid(), output);
  }

  // uint64 guesttime = 3;
  if (this->guesttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guesttime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateGuestListReq)
}

::google::protobuf::uint8* S2SUpdateGuestListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateGuestListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guestid = 2;
  if (this->guestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guestid(), target);
  }

  // uint64 guesttime = 3;
  if (this->guesttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guesttime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateGuestListReq)
  return target;
}

size_t S2SUpdateGuestListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateGuestListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guestid = 2;
  if (this->guestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guestid());
  }

  // uint64 guesttime = 3;
  if (this->guesttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guesttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateGuestListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateGuestListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateGuestListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateGuestListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateGuestListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateGuestListReq)
    MergeFrom(*source);
  }
}

void S2SUpdateGuestListReq::MergeFrom(const S2SUpdateGuestListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateGuestListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guestid() != 0) {
    set_guestid(from.guestid());
  }
  if (from.guesttime() != 0) {
    set_guesttime(from.guesttime());
  }
}

void S2SUpdateGuestListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateGuestListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateGuestListReq::CopyFrom(const S2SUpdateGuestListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateGuestListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateGuestListReq::IsInitialized() const {
  return true;
}

void S2SUpdateGuestListReq::Swap(S2SUpdateGuestListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateGuestListReq::InternalSwap(S2SUpdateGuestListReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guestid_, other->guestid_);
  swap(guesttime_, other->guesttime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateGuestListReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryGuestReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryGuestReq::kPlayeridFieldNumber;
const int S2SQueryGuestReq::kQueryidFieldNumber;
const int S2SQueryGuestReq::kQuerytimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryGuestReq::S2SQueryGuestReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuestReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryGuestReq)
}
S2SQueryGuestReq::S2SQueryGuestReq(const S2SQueryGuestReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&querytime_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(querytime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryGuestReq)
}

void S2SQueryGuestReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&querytime_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(querytime_));
}

S2SQueryGuestReq::~S2SQueryGuestReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryGuestReq)
  SharedDtor();
}

void S2SQueryGuestReq::SharedDtor() {
}

void S2SQueryGuestReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryGuestReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryGuestReq& S2SQueryGuestReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuestReq.base);
  return *internal_default_instance();
}


void S2SQueryGuestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryGuestReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&querytime_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(querytime_));
  _internal_metadata_.Clear();
}

bool S2SQueryGuestReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryGuestReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 queryid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &queryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 querytime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &querytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryGuestReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryGuestReq)
  return false;
#undef DO_
}

void S2SQueryGuestReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryGuestReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 queryid = 2;
  if (this->queryid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->queryid(), output);
  }

  // uint64 querytime = 3;
  if (this->querytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->querytime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryGuestReq)
}

::google::protobuf::uint8* S2SQueryGuestReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryGuestReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 queryid = 2;
  if (this->queryid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->queryid(), target);
  }

  // uint64 querytime = 3;
  if (this->querytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->querytime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryGuestReq)
  return target;
}

size_t S2SQueryGuestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryGuestReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 queryid = 2;
  if (this->queryid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->queryid());
  }

  // uint64 querytime = 3;
  if (this->querytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->querytime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryGuestReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryGuestReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryGuestReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryGuestReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryGuestReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryGuestReq)
    MergeFrom(*source);
  }
}

void S2SQueryGuestReq::MergeFrom(const S2SQueryGuestReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryGuestReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.queryid() != 0) {
    set_queryid(from.queryid());
  }
  if (from.querytime() != 0) {
    set_querytime(from.querytime());
  }
}

void S2SQueryGuestReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryGuestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryGuestReq::CopyFrom(const S2SQueryGuestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryGuestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryGuestReq::IsInitialized() const {
  return true;
}

void S2SQueryGuestReq::Swap(S2SQueryGuestReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryGuestReq::InternalSwap(S2SQueryGuestReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(queryid_, other->queryid_);
  swap(querytime_, other->querytime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryGuestReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryGuestAck::InitAsDefaultInstance() {
}
void S2SQueryGuestAck::clear_guestdata() {
  guestdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryGuestAck::kPlayeridFieldNumber;
const int S2SQueryGuestAck::kQueryidFieldNumber;
const int S2SQueryGuestAck::kGuestcountFieldNumber;
const int S2SQueryGuestAck::kGuestdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryGuestAck::S2SQueryGuestAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuestAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryGuestAck)
}
S2SQueryGuestAck::S2SQueryGuestAck(const S2SQueryGuestAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guestdata_(from.guestdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guestcount_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(guestcount_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryGuestAck)
}

void S2SQueryGuestAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guestcount_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guestcount_));
}

S2SQueryGuestAck::~S2SQueryGuestAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryGuestAck)
  SharedDtor();
}

void S2SQueryGuestAck::SharedDtor() {
}

void S2SQueryGuestAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryGuestAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryGuestAck& S2SQueryGuestAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuestAck.base);
  return *internal_default_instance();
}


void S2SQueryGuestAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryGuestAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guestdata_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guestcount_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guestcount_));
  _internal_metadata_.Clear();
}

bool S2SQueryGuestAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryGuestAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 queryid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &queryid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 guestcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guestcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBGuestData guestdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_guestdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryGuestAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryGuestAck)
  return false;
#undef DO_
}

void S2SQueryGuestAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryGuestAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 queryid = 2;
  if (this->queryid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->queryid(), output);
  }

  // uint32 guestcount = 3;
  if (this->guestcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->guestcount(), output);
  }

  // repeated .KFMsg.PBGuestData guestdata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guestdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->guestdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryGuestAck)
}

::google::protobuf::uint8* S2SQueryGuestAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryGuestAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 queryid = 2;
  if (this->queryid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->queryid(), target);
  }

  // uint32 guestcount = 3;
  if (this->guestcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->guestcount(), target);
  }

  // repeated .KFMsg.PBGuestData guestdata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guestdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->guestdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryGuestAck)
  return target;
}

size_t S2SQueryGuestAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryGuestAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBGuestData guestdata = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->guestdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->guestdata(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 queryid = 2;
  if (this->queryid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->queryid());
  }

  // uint32 guestcount = 3;
  if (this->guestcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guestcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryGuestAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryGuestAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryGuestAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryGuestAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryGuestAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryGuestAck)
    MergeFrom(*source);
  }
}

void S2SQueryGuestAck::MergeFrom(const S2SQueryGuestAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryGuestAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guestdata_.MergeFrom(from.guestdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.queryid() != 0) {
    set_queryid(from.queryid());
  }
  if (from.guestcount() != 0) {
    set_guestcount(from.guestcount());
  }
}

void S2SQueryGuestAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryGuestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryGuestAck::CopyFrom(const S2SQueryGuestAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryGuestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryGuestAck::IsInitialized() const {
  return true;
}

void S2SQueryGuestAck::Swap(S2SQueryGuestAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryGuestAck::InternalSwap(S2SQueryGuestAck* other) {
  using std::swap;
  CastToBase(&guestdata_)->InternalSwap(CastToBase(&other->guestdata_));
  swap(playerid_, other->playerid_);
  swap(queryid_, other->queryid_);
  swap(guestcount_, other->guestcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryGuestAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNewPlayerLoginMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNewPlayerLoginMailReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNewPlayerLoginMailReq::S2SNewPlayerLoginMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SNewPlayerLoginMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNewPlayerLoginMailReq)
}
S2SNewPlayerLoginMailReq::S2SNewPlayerLoginMailReq(const S2SNewPlayerLoginMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNewPlayerLoginMailReq)
}

void S2SNewPlayerLoginMailReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SNewPlayerLoginMailReq::~S2SNewPlayerLoginMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNewPlayerLoginMailReq)
  SharedDtor();
}

void S2SNewPlayerLoginMailReq::SharedDtor() {
}

void S2SNewPlayerLoginMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNewPlayerLoginMailReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNewPlayerLoginMailReq& S2SNewPlayerLoginMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SNewPlayerLoginMailReq.base);
  return *internal_default_instance();
}


void S2SNewPlayerLoginMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNewPlayerLoginMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SNewPlayerLoginMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNewPlayerLoginMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNewPlayerLoginMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNewPlayerLoginMailReq)
  return false;
#undef DO_
}

void S2SNewPlayerLoginMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNewPlayerLoginMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNewPlayerLoginMailReq)
}

::google::protobuf::uint8* S2SNewPlayerLoginMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNewPlayerLoginMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNewPlayerLoginMailReq)
  return target;
}

size_t S2SNewPlayerLoginMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNewPlayerLoginMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNewPlayerLoginMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNewPlayerLoginMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNewPlayerLoginMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNewPlayerLoginMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNewPlayerLoginMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNewPlayerLoginMailReq)
    MergeFrom(*source);
  }
}

void S2SNewPlayerLoginMailReq::MergeFrom(const S2SNewPlayerLoginMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNewPlayerLoginMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SNewPlayerLoginMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNewPlayerLoginMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNewPlayerLoginMailReq::CopyFrom(const S2SNewPlayerLoginMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNewPlayerLoginMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNewPlayerLoginMailReq::IsInitialized() const {
  return true;
}

void S2SNewPlayerLoginMailReq::Swap(S2SNewPlayerLoginMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNewPlayerLoginMailReq::InternalSwap(S2SNewPlayerLoginMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNewPlayerLoginMailReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateRankDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateRankDataReq_default_instance_._instance.get_mutable()->pbrankdata_ = const_cast< ::KFMsg::PBRankData*>(
      ::KFMsg::PBRankData::internal_default_instance());
}
void S2SUpdateRankDataReq::clear_pbrankdata() {
  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateRankDataReq::kPlayeridFieldNumber;
const int S2SUpdateRankDataReq::kRankidFieldNumber;
const int S2SUpdateRankDataReq::kZoneidFieldNumber;
const int S2SUpdateRankDataReq::kPbrankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateRankDataReq::S2SUpdateRankDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateRankDataReq)
}
S2SUpdateRankDataReq::S2SUpdateRankDataReq(const S2SUpdateRankDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbrankdata()) {
    pbrankdata_ = new ::KFMsg::PBRankData(*from.pbrankdata_);
  } else {
    pbrankdata_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateRankDataReq)
}

void S2SUpdateRankDataReq::SharedCtor() {
  ::memset(&pbrankdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&pbrankdata_)) + sizeof(zoneid_));
}

S2SUpdateRankDataReq::~S2SUpdateRankDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateRankDataReq)
  SharedDtor();
}

void S2SUpdateRankDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbrankdata_;
}

void S2SUpdateRankDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateRankDataReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateRankDataReq& S2SUpdateRankDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  return *internal_default_instance();
}


void S2SUpdateRankDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateRankDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateRankDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRankData pbrankdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbrankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateRankDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateRankDataReq)
  return false;
#undef DO_
}

void S2SUpdateRankDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rankid(), output);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbrankdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateRankDataReq)
}

::google::protobuf::uint8* S2SUpdateRankDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rankid(), target);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbrankdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateRankDataReq)
  return target;
}

size_t S2SUpdateRankDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateRankDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbrankdata_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateRankDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateRankDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateRankDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateRankDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateRankDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdateRankDataReq::MergeFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbrankdata()) {
    mutable_pbrankdata()->::KFMsg::PBRankData::MergeFrom(from.pbrankdata());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SUpdateRankDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateRankDataReq::CopyFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateRankDataReq::IsInitialized() const {
  return true;
}

void S2SUpdateRankDataReq::Swap(S2SUpdateRankDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateRankDataReq::InternalSwap(S2SUpdateRankDataReq* other) {
  using std::swap;
  swap(pbrankdata_, other->pbrankdata_);
  swap(playerid_, other->playerid_);
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateRankDataReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRankListReq::kPlayeridFieldNumber;
const int S2SQueryRankListReq::kServeridFieldNumber;
const int S2SQueryRankListReq::kRankidFieldNumber;
const int S2SQueryRankListReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRankListReq::S2SQueryRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRankListReq)
}
S2SQueryRankListReq::S2SQueryRankListReq(const S2SQueryRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRankListReq)
}

void S2SQueryRankListReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryRankListReq::~S2SQueryRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRankListReq)
  SharedDtor();
}

void S2SQueryRankListReq::SharedDtor() {
}

void S2SQueryRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRankListReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRankListReq& S2SQueryRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRankListReq)
  return false;
#undef DO_
}

void S2SQueryRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // uint32 rankid = 3;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rankid(), output);
  }

  // uint32 zoneid = 4;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRankListReq)
}

::google::protobuf::uint8* S2SQueryRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // uint32 rankid = 3;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rankid(), target);
  }

  // uint32 zoneid = 4;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRankListReq)
  return target;
}

size_t S2SQueryRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 rankid = 3;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 4;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryRankListReq::MergeFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRankListReq::CopyFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryRankListReq::Swap(S2SQueryRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRankListReq::InternalSwap(S2SQueryRankListReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRankListReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendRankListReq::kPlayeridFieldNumber;
const int S2SQueryFriendRankListReq::kServeridFieldNumber;
const int S2SQueryFriendRankListReq::kRankidFieldNumber;
const int S2SQueryFriendRankListReq::kFriendidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendRankListReq::S2SQueryFriendRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendRankListReq)
}
S2SQueryFriendRankListReq::S2SQueryFriendRankListReq(const S2SQueryFriendRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friendid_(from.friendid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rankid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(rankid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendRankListReq)
}

void S2SQueryFriendRankListReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankid_));
}

S2SQueryFriendRankListReq::~S2SQueryFriendRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendRankListReq)
  SharedDtor();
}

void S2SQueryFriendRankListReq::SharedDtor() {
}

void S2SQueryFriendRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendRankListReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendRankListReq& S2SQueryFriendRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendid_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankid_));
  _internal_metadata_.Clear();
}

bool S2SQueryFriendRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 friendid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friendid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_friendid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendRankListReq)
  return false;
#undef DO_
}

void S2SQueryFriendRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // uint32 rankid = 3;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rankid(), output);
  }

  // repeated uint64 friendid = 4;
  if (this->friendid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friendid_cached_byte_size_));
  }
  for (int i = 0, n = this->friendid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->friendid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendRankListReq)
}

::google::protobuf::uint8* S2SQueryFriendRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // uint32 rankid = 3;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rankid(), target);
  }

  // repeated uint64 friendid = 4;
  if (this->friendid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _friendid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->friendid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendRankListReq)
  return target;
}

size_t S2SQueryFriendRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 friendid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friendid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friendid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 rankid = 3;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendRankListReq::MergeFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendid_.MergeFrom(from.friendid_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SQueryFriendRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendRankListReq::CopyFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendRankListReq::Swap(S2SQueryFriendRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendRankListReq::InternalSwap(S2SQueryFriendRankListReq* other) {
  using std::swap;
  friendid_.InternalSwap(&other->friendid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendRankListReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddRecentPlayerDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddRecentPlayerDataReq_default_instance_._instance.get_mutable()->pbdata_ = const_cast< ::KFMsg::PBStrings*>(
      ::KFMsg::PBStrings::internal_default_instance());
}
void S2SAddRecentPlayerDataReq::clear_pbdata() {
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddRecentPlayerDataReq::kRoomidFieldNumber;
const int S2SAddRecentPlayerDataReq::kPlayeridFieldNumber;
const int S2SAddRecentPlayerDataReq::kMembersFieldNumber;
const int S2SAddRecentPlayerDataReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddRecentPlayerDataReq::S2SAddRecentPlayerDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddRecentPlayerDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddRecentPlayerDataReq)
}
S2SAddRecentPlayerDataReq::S2SAddRecentPlayerDataReq(const S2SAddRecentPlayerDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbdata()) {
    pbdata_ = new ::KFMsg::PBStrings(*from.pbdata_);
  } else {
    pbdata_ = NULL;
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddRecentPlayerDataReq)
}

void S2SAddRecentPlayerDataReq::SharedCtor() {
  ::memset(&pbdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbdata_)) + sizeof(playerid_));
}

S2SAddRecentPlayerDataReq::~S2SAddRecentPlayerDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddRecentPlayerDataReq)
  SharedDtor();
}

void S2SAddRecentPlayerDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbdata_;
}

void S2SAddRecentPlayerDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddRecentPlayerDataReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddRecentPlayerDataReq& S2SAddRecentPlayerDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddRecentPlayerDataReq.base);
  return *internal_default_instance();
}


void S2SAddRecentPlayerDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddRecentPlayerDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SAddRecentPlayerDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddRecentPlayerDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 members = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBStrings pbdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddRecentPlayerDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddRecentPlayerDataReq)
  return false;
#undef DO_
}

void S2SAddRecentPlayerDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddRecentPlayerDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // repeated uint64 members = 3;
  if (this->members_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _members_cached_byte_size_));
  }
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->members(i), output);
  }

  // .KFMsg.PBStrings pbdata = 4;
  if (this->has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddRecentPlayerDataReq)
}

::google::protobuf::uint8* S2SAddRecentPlayerDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddRecentPlayerDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // repeated uint64 members = 3;
  if (this->members_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _members_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->members_, target);
  }

  // .KFMsg.PBStrings pbdata = 4;
  if (this->has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddRecentPlayerDataReq)
  return target;
}

size_t S2SAddRecentPlayerDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddRecentPlayerDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 members = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->members_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _members_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .KFMsg.PBStrings pbdata = 4;
  if (this->has_pbdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbdata_);
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddRecentPlayerDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddRecentPlayerDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddRecentPlayerDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddRecentPlayerDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddRecentPlayerDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddRecentPlayerDataReq)
    MergeFrom(*source);
  }
}

void S2SAddRecentPlayerDataReq::MergeFrom(const S2SAddRecentPlayerDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddRecentPlayerDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_pbdata()) {
    mutable_pbdata()->::KFMsg::PBStrings::MergeFrom(from.pbdata());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddRecentPlayerDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddRecentPlayerDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddRecentPlayerDataReq::CopyFrom(const S2SAddRecentPlayerDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddRecentPlayerDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddRecentPlayerDataReq::IsInitialized() const {
  return true;
}

void S2SAddRecentPlayerDataReq::Swap(S2SAddRecentPlayerDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddRecentPlayerDataReq::InternalSwap(S2SAddRecentPlayerDataReq* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  swap(pbdata_, other->pbdata_);
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddRecentPlayerDataReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRecentListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRecentListReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRecentListReq::S2SQueryRecentListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryRecentListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRecentListReq)
}
S2SQueryRecentListReq::S2SQueryRecentListReq(const S2SQueryRecentListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRecentListReq)
}

void S2SQueryRecentListReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryRecentListReq::~S2SQueryRecentListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRecentListReq)
  SharedDtor();
}

void S2SQueryRecentListReq::SharedDtor() {
}

void S2SQueryRecentListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRecentListReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRecentListReq& S2SQueryRecentListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryRecentListReq.base);
  return *internal_default_instance();
}


void S2SQueryRecentListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRecentListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryRecentListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRecentListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRecentListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRecentListReq)
  return false;
#undef DO_
}

void S2SQueryRecentListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRecentListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRecentListReq)
}

::google::protobuf::uint8* S2SQueryRecentListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRecentListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRecentListReq)
  return target;
}

size_t S2SQueryRecentListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRecentListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRecentListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRecentListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRecentListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRecentListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRecentListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRecentListReq)
    MergeFrom(*source);
  }
}

void S2SQueryRecentListReq::MergeFrom(const S2SQueryRecentListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRecentListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryRecentListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRecentListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRecentListReq::CopyFrom(const S2SQueryRecentListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRecentListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRecentListReq::IsInitialized() const {
  return true;
}

void S2SQueryRecentListReq::Swap(S2SQueryRecentListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRecentListReq::InternalSwap(S2SQueryRecentListReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRecentListReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRecentListAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRecentListAck::kPlayeridFieldNumber;
const int S2SQueryRecentListAck::kPbrelationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRecentListAck::S2SQueryRecentListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryRecentListAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRecentListAck)
}
S2SQueryRecentListAck::S2SQueryRecentListAck(const S2SQueryRecentListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbrelation_(from.pbrelation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRecentListAck)
}

void S2SQueryRecentListAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryRecentListAck::~S2SQueryRecentListAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRecentListAck)
  SharedDtor();
}

void S2SQueryRecentListAck::SharedDtor() {
}

void S2SQueryRecentListAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRecentListAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRecentListAck& S2SQueryRecentListAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryRecentListAck.base);
  return *internal_default_instance();
}


void S2SQueryRecentListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRecentListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbrelation_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryRecentListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRecentListAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbrelation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbrelation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRecentListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRecentListAck)
  return false;
#undef DO_
}

void S2SQueryRecentListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRecentListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbrelation = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbrelation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbrelation(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRecentListAck)
}

::google::protobuf::uint8* S2SQueryRecentListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRecentListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbrelation = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbrelation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbrelation(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRecentListAck)
  return target;
}

size_t S2SQueryRecentListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRecentListAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbrelation = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbrelation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbrelation(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRecentListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRecentListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRecentListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRecentListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRecentListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRecentListAck)
    MergeFrom(*source);
  }
}

void S2SQueryRecentListAck::MergeFrom(const S2SQueryRecentListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRecentListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbrelation_.MergeFrom(from.pbrelation_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryRecentListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRecentListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRecentListAck::CopyFrom(const S2SQueryRecentListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRecentListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRecentListAck::IsInitialized() const {
  return true;
}

void S2SQueryRecentListAck::Swap(S2SQueryRecentListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRecentListAck::InternalSwap(S2SQueryRecentListAck* other) {
  using std::swap;
  CastToBase(&pbrelation_)->InternalSwap(CastToBase(&other->pbrelation_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRecentListAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateGuidReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateGuidReq::kPlayeridFieldNumber;
const int S2SCreateGuidReq::kServeridFieldNumber;
const int S2SCreateGuidReq::kNameFieldNumber;
const int S2SCreateGuidReq::kGuildnameFieldNumber;
const int S2SCreateGuidReq::kMedalFieldNumber;
const int S2SCreateGuidReq::kManifestoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateGuidReq::S2SCreateGuidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateGuidReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateGuidReq)
}
S2SCreateGuidReq::S2SCreateGuidReq(const S2SCreateGuidReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guildname().size() > 0) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  manifesto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manifesto().size() > 0) {
    manifesto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manifesto_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&medal_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(medal_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateGuidReq)
}

void S2SCreateGuidReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifesto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&medal_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(medal_));
}

S2SCreateGuidReq::~S2SCreateGuidReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateGuidReq)
  SharedDtor();
}

void S2SCreateGuidReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifesto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateGuidReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateGuidReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateGuidReq& S2SCreateGuidReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateGuidReq.base);
  return *internal_default_instance();
}


void S2SCreateGuidReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateGuidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&medal_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(medal_));
  _internal_metadata_.Clear();
}

bool S2SCreateGuidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateGuidReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes guildname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guildname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 medal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &medal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes manifesto = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manifesto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateGuidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateGuidReq)
  return false;
#undef DO_
}

void S2SCreateGuidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateGuidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // bytes guildname = 4;
  if (this->guildname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->guildname(), output);
  }

  // uint32 medal = 5;
  if (this->medal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->medal(), output);
  }

  // bytes manifesto = 6;
  if (this->manifesto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->manifesto(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateGuidReq)
}

::google::protobuf::uint8* S2SCreateGuidReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateGuidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // bytes guildname = 4;
  if (this->guildname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->guildname(), target);
  }

  // uint32 medal = 5;
  if (this->medal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->medal(), target);
  }

  // bytes manifesto = 6;
  if (this->manifesto().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->manifesto(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateGuidReq)
  return target;
}

size_t S2SCreateGuidReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateGuidReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes guildname = 4;
  if (this->guildname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guildname());
  }

  // bytes manifesto = 6;
  if (this->manifesto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manifesto());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 medal = 5;
  if (this->medal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->medal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateGuidReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateGuidReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateGuidReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateGuidReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateGuidReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateGuidReq)
    MergeFrom(*source);
  }
}

void S2SCreateGuidReq::MergeFrom(const S2SCreateGuidReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateGuidReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.guildname().size() > 0) {

    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  if (from.manifesto().size() > 0) {

    manifesto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manifesto_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.medal() != 0) {
    set_medal(from.medal());
  }
}

void S2SCreateGuidReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateGuidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateGuidReq::CopyFrom(const S2SCreateGuidReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateGuidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateGuidReq::IsInitialized() const {
  return true;
}

void S2SCreateGuidReq::Swap(S2SCreateGuidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateGuidReq::InternalSwap(S2SCreateGuidReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guildname_.Swap(&other->guildname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manifesto_.Swap(&other->manifesto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  swap(medal_, other->medal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateGuidReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateGuildToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateGuildToShardReq::kPlayeridFieldNumber;
const int S2SCreateGuildToShardReq::kServeridFieldNumber;
const int S2SCreateGuildToShardReq::kNameFieldNumber;
const int S2SCreateGuildToShardReq::kGuildnameFieldNumber;
const int S2SCreateGuildToShardReq::kMedalFieldNumber;
const int S2SCreateGuildToShardReq::kManifestoFieldNumber;
const int S2SCreateGuildToShardReq::kGuildidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateGuildToShardReq::S2SCreateGuildToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateGuildToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateGuildToShardReq)
}
S2SCreateGuildToShardReq::S2SCreateGuildToShardReq(const S2SCreateGuildToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guildname().size() > 0) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  manifesto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manifesto().size() > 0) {
    manifesto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manifesto_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&medal_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(medal_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateGuildToShardReq)
}

void S2SCreateGuildToShardReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifesto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&medal_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(medal_));
}

S2SCreateGuildToShardReq::~S2SCreateGuildToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateGuildToShardReq)
  SharedDtor();
}

void S2SCreateGuildToShardReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifesto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateGuildToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateGuildToShardReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateGuildToShardReq& S2SCreateGuildToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateGuildToShardReq.base);
  return *internal_default_instance();
}


void S2SCreateGuildToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateGuildToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&medal_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(medal_));
  _internal_metadata_.Clear();
}

bool S2SCreateGuildToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateGuildToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes guildname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guildname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 medal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &medal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes manifesto = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manifesto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateGuildToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateGuildToShardReq)
  return false;
#undef DO_
}

void S2SCreateGuildToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateGuildToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // bytes guildname = 4;
  if (this->guildname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->guildname(), output);
  }

  // uint32 medal = 5;
  if (this->medal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->medal(), output);
  }

  // bytes manifesto = 6;
  if (this->manifesto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->manifesto(), output);
  }

  // uint64 guildid = 7;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->guildid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateGuildToShardReq)
}

::google::protobuf::uint8* S2SCreateGuildToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateGuildToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // bytes guildname = 4;
  if (this->guildname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->guildname(), target);
  }

  // uint32 medal = 5;
  if (this->medal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->medal(), target);
  }

  // bytes manifesto = 6;
  if (this->manifesto().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->manifesto(), target);
  }

  // uint64 guildid = 7;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->guildid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateGuildToShardReq)
  return target;
}

size_t S2SCreateGuildToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateGuildToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes guildname = 4;
  if (this->guildname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guildname());
  }

  // bytes manifesto = 6;
  if (this->manifesto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manifesto());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 guildid = 7;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint32 medal = 5;
  if (this->medal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->medal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateGuildToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateGuildToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateGuildToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateGuildToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateGuildToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateGuildToShardReq)
    MergeFrom(*source);
  }
}

void S2SCreateGuildToShardReq::MergeFrom(const S2SCreateGuildToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateGuildToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.guildname().size() > 0) {

    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  if (from.manifesto().size() > 0) {

    manifesto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manifesto_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.medal() != 0) {
    set_medal(from.medal());
  }
}

void S2SCreateGuildToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateGuildToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateGuildToShardReq::CopyFrom(const S2SCreateGuildToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateGuildToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateGuildToShardReq::IsInitialized() const {
  return true;
}

void S2SCreateGuildToShardReq::Swap(S2SCreateGuildToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateGuildToShardReq::InternalSwap(S2SCreateGuildToShardReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guildname_.Swap(&other->guildname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manifesto_.Swap(&other->manifesto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  swap(guildid_, other->guildid_);
  swap(medal_, other->medal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateGuildToShardReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateGuildAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateGuildAck::kCodeFieldNumber;
const int S2SCreateGuildAck::kPlayeridFieldNumber;
const int S2SCreateGuildAck::kGuildidFieldNumber;
const int S2SCreateGuildAck::kMedalFieldNumber;
const int S2SCreateGuildAck::kManifestoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateGuildAck::S2SCreateGuildAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SCreateGuildAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateGuildAck)
}
S2SCreateGuildAck::S2SCreateGuildAck(const S2SCreateGuildAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  manifesto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manifesto().size() > 0) {
    manifesto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manifesto_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guildid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateGuildAck)
}

void S2SCreateGuildAck::SharedCtor() {
  manifesto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
}

S2SCreateGuildAck::~S2SCreateGuildAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateGuildAck)
  SharedDtor();
}

void S2SCreateGuildAck::SharedDtor() {
  manifesto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateGuildAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateGuildAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateGuildAck& S2SCreateGuildAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SCreateGuildAck.base);
  return *internal_default_instance();
}


void S2SCreateGuildAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
  _internal_metadata_.Clear();
}

bool S2SCreateGuildAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateGuildAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 medal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &medal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes manifesto = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manifesto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateGuildAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateGuildAck)
  return false;
#undef DO_
}

void S2SCreateGuildAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 guildid = 3;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guildid(), output);
  }

  // uint32 medal = 4;
  if (this->medal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->medal(), output);
  }

  // bytes manifesto = 5;
  if (this->manifesto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->manifesto(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateGuildAck)
}

::google::protobuf::uint8* S2SCreateGuildAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 guildid = 3;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guildid(), target);
  }

  // uint32 medal = 4;
  if (this->medal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->medal(), target);
  }

  // bytes manifesto = 5;
  if (this->manifesto().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->manifesto(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateGuildAck)
  return target;
}

size_t S2SCreateGuildAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateGuildAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes manifesto = 5;
  if (this->manifesto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manifesto());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  // uint32 medal = 4;
  if (this->medal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->medal());
  }

  // uint64 guildid = 3;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateGuildAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateGuildAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateGuildAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateGuildAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateGuildAck)
    MergeFrom(*source);
  }
}

void S2SCreateGuildAck::MergeFrom(const S2SCreateGuildAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.manifesto().size() > 0) {

    manifesto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manifesto_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.medal() != 0) {
    set_medal(from.medal());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
}

void S2SCreateGuildAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateGuildAck::CopyFrom(const S2SCreateGuildAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateGuildAck::IsInitialized() const {
  return true;
}

void S2SCreateGuildAck::Swap(S2SCreateGuildAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateGuildAck::InternalSwap(S2SCreateGuildAck* other) {
  using std::swap;
  manifesto_.Swap(&other->manifesto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(code_, other->code_);
  swap(medal_, other->medal_);
  swap(guildid_, other->guildid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateGuildAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMemberBasicDataReq::InitAsDefaultInstance() {
}
void S2SUpdateMemberBasicDataReq::clear_pbdata() {
  pbdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMemberBasicDataReq::kPlayeridFieldNumber;
const int S2SUpdateMemberBasicDataReq::kGuildidFieldNumber;
const int S2SUpdateMemberBasicDataReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMemberBasicDataReq::S2SUpdateMemberBasicDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateMemberBasicDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMemberBasicDataReq)
}
S2SUpdateMemberBasicDataReq::S2SUpdateMemberBasicDataReq(const S2SUpdateMemberBasicDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbdata_(from.pbdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guildid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMemberBasicDataReq)
}

void S2SUpdateMemberBasicDataReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
}

S2SUpdateMemberBasicDataReq::~S2SUpdateMemberBasicDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMemberBasicDataReq)
  SharedDtor();
}

void S2SUpdateMemberBasicDataReq::SharedDtor() {
}

void S2SUpdateMemberBasicDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMemberBasicDataReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMemberBasicDataReq& S2SUpdateMemberBasicDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateMemberBasicDataReq.base);
  return *internal_default_instance();
}


void S2SUpdateMemberBasicDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMemberBasicDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMemberBasicDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMemberBasicDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBString pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMemberBasicDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMemberBasicDataReq)
  return false;
#undef DO_
}

void S2SUpdateMemberBasicDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMemberBasicDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // repeated .KFMsg.PBString pbdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pbdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMemberBasicDataReq)
}

::google::protobuf::uint8* S2SUpdateMemberBasicDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMemberBasicDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // repeated .KFMsg.PBString pbdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pbdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMemberBasicDataReq)
  return target;
}

size_t S2SUpdateMemberBasicDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMemberBasicDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBString pbdata = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pbdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbdata(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMemberBasicDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMemberBasicDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMemberBasicDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMemberBasicDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMemberBasicDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMemberBasicDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdateMemberBasicDataReq::MergeFrom(const S2SUpdateMemberBasicDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMemberBasicDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
}

void S2SUpdateMemberBasicDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMemberBasicDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMemberBasicDataReq::CopyFrom(const S2SUpdateMemberBasicDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMemberBasicDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMemberBasicDataReq::IsInitialized() const {
  return true;
}

void S2SUpdateMemberBasicDataReq::Swap(S2SUpdateMemberBasicDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMemberBasicDataReq::InternalSwap(S2SUpdateMemberBasicDataReq* other) {
  using std::swap;
  CastToBase(&pbdata_)->InternalSwap(CastToBase(&other->pbdata_));
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMemberBasicDataReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SInviteGuildReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SInviteGuildReq::kGuildidFieldNumber;
const int S2SInviteGuildReq::kInvitorFieldNumber;
const int S2SInviteGuildReq::kInvitedidFieldNumber;
const int S2SInviteGuildReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SInviteGuildReq::S2SInviteGuildReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SInviteGuildReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SInviteGuildReq)
}
S2SInviteGuildReq::S2SInviteGuildReq(const S2SInviteGuildReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SInviteGuildReq)
}

void S2SInviteGuildReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
}

S2SInviteGuildReq::~S2SInviteGuildReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SInviteGuildReq)
  SharedDtor();
}

void S2SInviteGuildReq::SharedDtor() {
}

void S2SInviteGuildReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SInviteGuildReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SInviteGuildReq& S2SInviteGuildReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SInviteGuildReq.base);
  return *internal_default_instance();
}


void S2SInviteGuildReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SInviteGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SInviteGuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SInviteGuildReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 invitor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invitor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 invitedid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invitedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SInviteGuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SInviteGuildReq)
  return false;
#undef DO_
}

void S2SInviteGuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SInviteGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 invitor = 2;
  if (this->invitor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->invitor(), output);
  }

  // uint64 invitedid = 3;
  if (this->invitedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->invitedid(), output);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SInviteGuildReq)
}

::google::protobuf::uint8* S2SInviteGuildReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SInviteGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 invitor = 2;
  if (this->invitor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->invitor(), target);
  }

  // uint64 invitedid = 3;
  if (this->invitedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->invitedid(), target);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SInviteGuildReq)
  return target;
}

size_t S2SInviteGuildReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SInviteGuildReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 invitor = 2;
  if (this->invitor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invitor());
  }

  // uint64 invitedid = 3;
  if (this->invitedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invitedid());
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SInviteGuildReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SInviteGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SInviteGuildReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SInviteGuildReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SInviteGuildReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SInviteGuildReq)
    MergeFrom(*source);
  }
}

void S2SInviteGuildReq::MergeFrom(const S2SInviteGuildReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SInviteGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.invitor() != 0) {
    set_invitor(from.invitor());
  }
  if (from.invitedid() != 0) {
    set_invitedid(from.invitedid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SInviteGuildReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SInviteGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SInviteGuildReq::CopyFrom(const S2SInviteGuildReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SInviteGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SInviteGuildReq::IsInitialized() const {
  return true;
}

void S2SInviteGuildReq::Swap(S2SInviteGuildReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SInviteGuildReq::InternalSwap(S2SInviteGuildReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(invitor_, other->invitor_);
  swap(invitedid_, other->invitedid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SInviteGuildReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SInviteGuildAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SInviteGuildAck::kGuildidFieldNumber;
const int S2SInviteGuildAck::kPlayeridFieldNumber;
const int S2SInviteGuildAck::kInvitedidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SInviteGuildAck::S2SInviteGuildAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SInviteGuildAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SInviteGuildAck)
}
S2SInviteGuildAck::S2SInviteGuildAck(const S2SInviteGuildAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&invitedid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(invitedid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SInviteGuildAck)
}

void S2SInviteGuildAck::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invitedid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(invitedid_));
}

S2SInviteGuildAck::~S2SInviteGuildAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SInviteGuildAck)
  SharedDtor();
}

void S2SInviteGuildAck::SharedDtor() {
}

void S2SInviteGuildAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SInviteGuildAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SInviteGuildAck& S2SInviteGuildAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SInviteGuildAck.base);
  return *internal_default_instance();
}


void S2SInviteGuildAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SInviteGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invitedid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(invitedid_));
  _internal_metadata_.Clear();
}

bool S2SInviteGuildAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SInviteGuildAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 invitedid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invitedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SInviteGuildAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SInviteGuildAck)
  return false;
#undef DO_
}

void S2SInviteGuildAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SInviteGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 invitedid = 3;
  if (this->invitedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->invitedid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SInviteGuildAck)
}

::google::protobuf::uint8* S2SInviteGuildAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SInviteGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 invitedid = 3;
  if (this->invitedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->invitedid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SInviteGuildAck)
  return target;
}

size_t S2SInviteGuildAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SInviteGuildAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 invitedid = 3;
  if (this->invitedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invitedid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SInviteGuildAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SInviteGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SInviteGuildAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SInviteGuildAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SInviteGuildAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SInviteGuildAck)
    MergeFrom(*source);
  }
}

void S2SInviteGuildAck::MergeFrom(const S2SInviteGuildAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SInviteGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.invitedid() != 0) {
    set_invitedid(from.invitedid());
  }
}

void S2SInviteGuildAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SInviteGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SInviteGuildAck::CopyFrom(const S2SInviteGuildAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SInviteGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SInviteGuildAck::IsInitialized() const {
  return true;
}

void S2SInviteGuildAck::Swap(S2SInviteGuildAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SInviteGuildAck::InternalSwap(S2SInviteGuildAck* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  swap(invitedid_, other->invitedid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SInviteGuildAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SApplyGuildReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SApplyGuildReq::kGuildidFieldNumber;
const int S2SApplyGuildReq::kInvitorFieldNumber;
const int S2SApplyGuildReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SApplyGuildReq::S2SApplyGuildReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SApplyGuildReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SApplyGuildReq)
}
S2SApplyGuildReq::S2SApplyGuildReq(const S2SApplyGuildReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SApplyGuildReq)
}

void S2SApplyGuildReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
}

S2SApplyGuildReq::~S2SApplyGuildReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SApplyGuildReq)
  SharedDtor();
}

void S2SApplyGuildReq::SharedDtor() {
}

void S2SApplyGuildReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SApplyGuildReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SApplyGuildReq& S2SApplyGuildReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SApplyGuildReq.base);
  return *internal_default_instance();
}


void S2SApplyGuildReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SApplyGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SApplyGuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SApplyGuildReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 invitor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invitor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SApplyGuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SApplyGuildReq)
  return false;
#undef DO_
}

void S2SApplyGuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SApplyGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 invitor = 2;
  if (this->invitor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->invitor(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SApplyGuildReq)
}

::google::protobuf::uint8* S2SApplyGuildReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SApplyGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 invitor = 2;
  if (this->invitor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->invitor(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SApplyGuildReq)
  return target;
}

size_t S2SApplyGuildReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SApplyGuildReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 invitor = 2;
  if (this->invitor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invitor());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SApplyGuildReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SApplyGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SApplyGuildReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SApplyGuildReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SApplyGuildReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SApplyGuildReq)
    MergeFrom(*source);
  }
}

void S2SApplyGuildReq::MergeFrom(const S2SApplyGuildReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SApplyGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.invitor() != 0) {
    set_invitor(from.invitor());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SApplyGuildReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SApplyGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SApplyGuildReq::CopyFrom(const S2SApplyGuildReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SApplyGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SApplyGuildReq::IsInitialized() const {
  return true;
}

void S2SApplyGuildReq::Swap(S2SApplyGuildReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SApplyGuildReq::InternalSwap(S2SApplyGuildReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(invitor_, other->invitor_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SApplyGuildReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SApplyGuildAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SApplyGuildAck::kPlayeridFieldNumber;
const int S2SApplyGuildAck::kGuildidFieldNumber;
const int S2SApplyGuildAck::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SApplyGuildAck::S2SApplyGuildAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SApplyGuildAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SApplyGuildAck)
}
S2SApplyGuildAck::S2SApplyGuildAck(const S2SApplyGuildAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SApplyGuildAck)
}

void S2SApplyGuildAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
}

S2SApplyGuildAck::~S2SApplyGuildAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SApplyGuildAck)
  SharedDtor();
}

void S2SApplyGuildAck::SharedDtor() {
}

void S2SApplyGuildAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SApplyGuildAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SApplyGuildAck& S2SApplyGuildAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SApplyGuildAck.base);
  return *internal_default_instance();
}


void S2SApplyGuildAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SApplyGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool S2SApplyGuildAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SApplyGuildAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SApplyGuildAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SApplyGuildAck)
  return false;
#undef DO_
}

void S2SApplyGuildAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SApplyGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SApplyGuildAck)
}

::google::protobuf::uint8* S2SApplyGuildAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SApplyGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SApplyGuildAck)
  return target;
}

size_t S2SApplyGuildAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SApplyGuildAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SApplyGuildAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SApplyGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SApplyGuildAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SApplyGuildAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SApplyGuildAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SApplyGuildAck)
    MergeFrom(*source);
  }
}

void S2SApplyGuildAck::MergeFrom(const S2SApplyGuildAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SApplyGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void S2SApplyGuildAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SApplyGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SApplyGuildAck::CopyFrom(const S2SApplyGuildAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SApplyGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SApplyGuildAck::IsInitialized() const {
  return true;
}

void S2SApplyGuildAck::Swap(S2SApplyGuildAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SApplyGuildAck::InternalSwap(S2SApplyGuildAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SApplyGuildAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerGuildChangeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerGuildChangeReq::kPlayeridFieldNumber;
const int S2SPlayerGuildChangeReq::kGuildidFieldNumber;
const int S2SPlayerGuildChangeReq::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerGuildChangeReq::S2SPlayerGuildChangeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerGuildChangeReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerGuildChangeReq)
}
S2SPlayerGuildChangeReq::S2SPlayerGuildChangeReq(const S2SPlayerGuildChangeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerGuildChangeReq)
}

void S2SPlayerGuildChangeReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
}

S2SPlayerGuildChangeReq::~S2SPlayerGuildChangeReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerGuildChangeReq)
  SharedDtor();
}

void S2SPlayerGuildChangeReq::SharedDtor() {
}

void S2SPlayerGuildChangeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerGuildChangeReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerGuildChangeReq& S2SPlayerGuildChangeReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SPlayerGuildChangeReq.base);
  return *internal_default_instance();
}


void S2SPlayerGuildChangeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerGuildChangeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool S2SPlayerGuildChangeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerGuildChangeReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerGuildChangeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerGuildChangeReq)
  return false;
#undef DO_
}

void S2SPlayerGuildChangeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerGuildChangeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerGuildChangeReq)
}

::google::protobuf::uint8* S2SPlayerGuildChangeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerGuildChangeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerGuildChangeReq)
  return target;
}

size_t S2SPlayerGuildChangeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerGuildChangeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerGuildChangeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerGuildChangeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerGuildChangeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerGuildChangeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerGuildChangeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerGuildChangeReq)
    MergeFrom(*source);
  }
}

void S2SPlayerGuildChangeReq::MergeFrom(const S2SPlayerGuildChangeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerGuildChangeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void S2SPlayerGuildChangeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerGuildChangeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerGuildChangeReq::CopyFrom(const S2SPlayerGuildChangeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerGuildChangeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerGuildChangeReq::IsInitialized() const {
  return true;
}

void S2SPlayerGuildChangeReq::Swap(S2SPlayerGuildChangeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerGuildChangeReq::InternalSwap(S2SPlayerGuildChangeReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerGuildChangeReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SExitGuildReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SExitGuildReq::kGuildidFieldNumber;
const int S2SExitGuildReq::kPlayeridFieldNumber;
const int S2SExitGuildReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SExitGuildReq::S2SExitGuildReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SExitGuildReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SExitGuildReq)
}
S2SExitGuildReq::S2SExitGuildReq(const S2SExitGuildReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SExitGuildReq)
}

void S2SExitGuildReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
}

S2SExitGuildReq::~S2SExitGuildReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SExitGuildReq)
  SharedDtor();
}

void S2SExitGuildReq::SharedDtor() {
}

void S2SExitGuildReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SExitGuildReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SExitGuildReq& S2SExitGuildReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SExitGuildReq.base);
  return *internal_default_instance();
}


void S2SExitGuildReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SExitGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SExitGuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SExitGuildReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SExitGuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SExitGuildReq)
  return false;
#undef DO_
}

void S2SExitGuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SExitGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SExitGuildReq)
}

::google::protobuf::uint8* S2SExitGuildReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SExitGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SExitGuildReq)
  return target;
}

size_t S2SExitGuildReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SExitGuildReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SExitGuildReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SExitGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SExitGuildReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SExitGuildReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SExitGuildReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SExitGuildReq)
    MergeFrom(*source);
  }
}

void S2SExitGuildReq::MergeFrom(const S2SExitGuildReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SExitGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SExitGuildReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SExitGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SExitGuildReq::CopyFrom(const S2SExitGuildReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SExitGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SExitGuildReq::IsInitialized() const {
  return true;
}

void S2SExitGuildReq::Swap(S2SExitGuildReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SExitGuildReq::InternalSwap(S2SExitGuildReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SExitGuildReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STransferMasterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STransferMasterReq::kGuildidFieldNumber;
const int S2STransferMasterReq::kPlayeridFieldNumber;
const int S2STransferMasterReq::kNewmasteridFieldNumber;
const int S2STransferMasterReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STransferMasterReq::S2STransferMasterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2STransferMasterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STransferMasterReq)
}
S2STransferMasterReq::S2STransferMasterReq(const S2STransferMasterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STransferMasterReq)
}

void S2STransferMasterReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
}

S2STransferMasterReq::~S2STransferMasterReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STransferMasterReq)
  SharedDtor();
}

void S2STransferMasterReq::SharedDtor() {
}

void S2STransferMasterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STransferMasterReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STransferMasterReq& S2STransferMasterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2STransferMasterReq.base);
  return *internal_default_instance();
}


void S2STransferMasterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STransferMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2STransferMasterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STransferMasterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 newmasterid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &newmasterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STransferMasterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STransferMasterReq)
  return false;
#undef DO_
}

void S2STransferMasterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STransferMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 newmasterid = 3;
  if (this->newmasterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->newmasterid(), output);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STransferMasterReq)
}

::google::protobuf::uint8* S2STransferMasterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STransferMasterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 newmasterid = 3;
  if (this->newmasterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->newmasterid(), target);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STransferMasterReq)
  return target;
}

size_t S2STransferMasterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STransferMasterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 newmasterid = 3;
  if (this->newmasterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->newmasterid());
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STransferMasterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STransferMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STransferMasterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STransferMasterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STransferMasterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STransferMasterReq)
    MergeFrom(*source);
  }
}

void S2STransferMasterReq::MergeFrom(const S2STransferMasterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STransferMasterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.newmasterid() != 0) {
    set_newmasterid(from.newmasterid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2STransferMasterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STransferMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STransferMasterReq::CopyFrom(const S2STransferMasterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STransferMasterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STransferMasterReq::IsInitialized() const {
  return true;
}

void S2STransferMasterReq::Swap(S2STransferMasterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STransferMasterReq::InternalSwap(S2STransferMasterReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  swap(newmasterid_, other->newmasterid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STransferMasterReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SReviewApplyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SReviewApplyReq::kPlayeridFieldNumber;
const int S2SReviewApplyReq::kDealplayeridFieldNumber;
const int S2SReviewApplyReq::kOperatortypeFieldNumber;
const int S2SReviewApplyReq::kGuildidFieldNumber;
const int S2SReviewApplyReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SReviewApplyReq::S2SReviewApplyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SReviewApplyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SReviewApplyReq)
}
S2SReviewApplyReq::S2SReviewApplyReq(const S2SReviewApplyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dealplayerid_, &from.dealplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&dealplayerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SReviewApplyReq)
}

void S2SReviewApplyReq::SharedCtor() {
  ::memset(&dealplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&dealplayerid_)) + sizeof(serverid_));
}

S2SReviewApplyReq::~S2SReviewApplyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SReviewApplyReq)
  SharedDtor();
}

void S2SReviewApplyReq::SharedDtor() {
}

void S2SReviewApplyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SReviewApplyReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SReviewApplyReq& S2SReviewApplyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SReviewApplyReq.base);
  return *internal_default_instance();
}


void S2SReviewApplyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SReviewApplyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dealplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&dealplayerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SReviewApplyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SReviewApplyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dealplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dealplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 operatortype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operatortype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SReviewApplyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SReviewApplyReq)
  return false;
#undef DO_
}

void S2SReviewApplyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SReviewApplyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->playerid(), output);
  }

  // uint64 dealplayerid = 2;
  if (this->dealplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dealplayerid(), output);
  }

  // uint32 operatortype = 3;
  if (this->operatortype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->operatortype(), output);
  }

  // uint64 guildid = 4;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guildid(), output);
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SReviewApplyReq)
}

::google::protobuf::uint8* S2SReviewApplyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SReviewApplyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->playerid(), target);
  }

  // uint64 dealplayerid = 2;
  if (this->dealplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dealplayerid(), target);
  }

  // uint32 operatortype = 3;
  if (this->operatortype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->operatortype(), target);
  }

  // uint64 guildid = 4;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guildid(), target);
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SReviewApplyReq)
  return target;
}

size_t S2SReviewApplyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SReviewApplyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dealplayerid = 2;
  if (this->dealplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dealplayerid());
  }

  // uint32 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  // uint32 operatortype = 3;
  if (this->operatortype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->operatortype());
  }

  // uint64 guildid = 4;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SReviewApplyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SReviewApplyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SReviewApplyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SReviewApplyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SReviewApplyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SReviewApplyReq)
    MergeFrom(*source);
  }
}

void S2SReviewApplyReq::MergeFrom(const S2SReviewApplyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SReviewApplyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dealplayerid() != 0) {
    set_dealplayerid(from.dealplayerid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.operatortype() != 0) {
    set_operatortype(from.operatortype());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SReviewApplyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SReviewApplyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SReviewApplyReq::CopyFrom(const S2SReviewApplyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SReviewApplyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SReviewApplyReq::IsInitialized() const {
  return true;
}

void S2SReviewApplyReq::Swap(S2SReviewApplyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SReviewApplyReq::InternalSwap(S2SReviewApplyReq* other) {
  using std::swap;
  swap(dealplayerid_, other->dealplayerid_);
  swap(playerid_, other->playerid_);
  swap(operatortype_, other->operatortype_);
  swap(guildid_, other->guildid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SReviewApplyReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDissolveGuildReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDissolveGuildReq::kPlayeridFieldNumber;
const int S2SDissolveGuildReq::kGuildidFieldNumber;
const int S2SDissolveGuildReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDissolveGuildReq::S2SDissolveGuildReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SDissolveGuildReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDissolveGuildReq)
}
S2SDissolveGuildReq::S2SDissolveGuildReq(const S2SDissolveGuildReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDissolveGuildReq)
}

void S2SDissolveGuildReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
}

S2SDissolveGuildReq::~S2SDissolveGuildReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDissolveGuildReq)
  SharedDtor();
}

void S2SDissolveGuildReq::SharedDtor() {
}

void S2SDissolveGuildReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDissolveGuildReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDissolveGuildReq& S2SDissolveGuildReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SDissolveGuildReq.base);
  return *internal_default_instance();
}


void S2SDissolveGuildReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDissolveGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SDissolveGuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDissolveGuildReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDissolveGuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDissolveGuildReq)
  return false;
#undef DO_
}

void S2SDissolveGuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDissolveGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDissolveGuildReq)
}

::google::protobuf::uint8* S2SDissolveGuildReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDissolveGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDissolveGuildReq)
  return target;
}

size_t S2SDissolveGuildReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDissolveGuildReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDissolveGuildReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDissolveGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDissolveGuildReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDissolveGuildReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDissolveGuildReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDissolveGuildReq)
    MergeFrom(*source);
  }
}

void S2SDissolveGuildReq::MergeFrom(const S2SDissolveGuildReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDissolveGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SDissolveGuildReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDissolveGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDissolveGuildReq::CopyFrom(const S2SDissolveGuildReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDissolveGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDissolveGuildReq::IsInitialized() const {
  return true;
}

void S2SDissolveGuildReq::Swap(S2SDissolveGuildReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDissolveGuildReq::InternalSwap(S2SDissolveGuildReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDissolveGuildReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SModifyMedalReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SModifyMedalReq::kPlayeridFieldNumber;
const int S2SModifyMedalReq::kGuildidFieldNumber;
const int S2SModifyMedalReq::kServeridFieldNumber;
const int S2SModifyMedalReq::kNewmedalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SModifyMedalReq::S2SModifyMedalReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SModifyMedalReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SModifyMedalReq)
}
S2SModifyMedalReq::S2SModifyMedalReq(const S2SModifyMedalReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&newmedal_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(newmedal_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SModifyMedalReq)
}

void S2SModifyMedalReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newmedal_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(newmedal_));
}

S2SModifyMedalReq::~S2SModifyMedalReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SModifyMedalReq)
  SharedDtor();
}

void S2SModifyMedalReq::SharedDtor() {
}

void S2SModifyMedalReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SModifyMedalReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SModifyMedalReq& S2SModifyMedalReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SModifyMedalReq.base);
  return *internal_default_instance();
}


void S2SModifyMedalReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SModifyMedalReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newmedal_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(newmedal_));
  _internal_metadata_.Clear();
}

bool S2SModifyMedalReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SModifyMedalReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 newmedal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newmedal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SModifyMedalReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SModifyMedalReq)
  return false;
#undef DO_
}

void S2SModifyMedalReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SModifyMedalReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // uint32 newmedal = 4;
  if (this->newmedal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->newmedal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SModifyMedalReq)
}

::google::protobuf::uint8* S2SModifyMedalReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SModifyMedalReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // uint32 newmedal = 4;
  if (this->newmedal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->newmedal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SModifyMedalReq)
  return target;
}

size_t S2SModifyMedalReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SModifyMedalReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 newmedal = 4;
  if (this->newmedal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->newmedal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SModifyMedalReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SModifyMedalReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SModifyMedalReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SModifyMedalReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SModifyMedalReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SModifyMedalReq)
    MergeFrom(*source);
  }
}

void S2SModifyMedalReq::MergeFrom(const S2SModifyMedalReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SModifyMedalReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.newmedal() != 0) {
    set_newmedal(from.newmedal());
  }
}

void S2SModifyMedalReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SModifyMedalReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SModifyMedalReq::CopyFrom(const S2SModifyMedalReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SModifyMedalReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SModifyMedalReq::IsInitialized() const {
  return true;
}

void S2SModifyMedalReq::Swap(S2SModifyMedalReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SModifyMedalReq::InternalSwap(S2SModifyMedalReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(serverid_, other->serverid_);
  swap(newmedal_, other->newmedal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SModifyMedalReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryGuildListReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryGuildListReq_default_instance_._instance.get_mutable()->guilds_ = const_cast< ::KFMsg::PBGuildIdArray*>(
      ::KFMsg::PBGuildIdArray::internal_default_instance());
}
void S2SQueryGuildListReq::clear_guilds() {
  if (GetArenaNoVirtual() == NULL && guilds_ != NULL) {
    delete guilds_;
  }
  guilds_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryGuildListReq::kPlayeridFieldNumber;
const int S2SQueryGuildListReq::kServeridFieldNumber;
const int S2SQueryGuildListReq::kGuildsFieldNumber;
const int S2SQueryGuildListReq::kCursorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryGuildListReq::S2SQueryGuildListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuildListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryGuildListReq)
}
S2SQueryGuildListReq::S2SQueryGuildListReq(const S2SQueryGuildListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guilds()) {
    guilds_ = new ::KFMsg::PBGuildIdArray(*from.guilds_);
  } else {
    guilds_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cursor_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(cursor_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryGuildListReq)
}

void S2SQueryGuildListReq::SharedCtor() {
  ::memset(&guilds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cursor_) -
      reinterpret_cast<char*>(&guilds_)) + sizeof(cursor_));
}

S2SQueryGuildListReq::~S2SQueryGuildListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryGuildListReq)
  SharedDtor();
}

void S2SQueryGuildListReq::SharedDtor() {
  if (this != internal_default_instance()) delete guilds_;
}

void S2SQueryGuildListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryGuildListReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryGuildListReq& S2SQueryGuildListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuildListReq.base);
  return *internal_default_instance();
}


void S2SQueryGuildListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryGuildListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && guilds_ != NULL) {
    delete guilds_;
  }
  guilds_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cursor_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(cursor_));
  _internal_metadata_.Clear();
}

bool S2SQueryGuildListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryGuildListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBGuildIdArray guilds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guilds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cursor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cursor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryGuildListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryGuildListReq)
  return false;
#undef DO_
}

void S2SQueryGuildListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryGuildListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // .KFMsg.PBGuildIdArray guilds = 3;
  if (this->has_guilds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_guilds(), output);
  }

  // uint32 cursor = 4;
  if (this->cursor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cursor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryGuildListReq)
}

::google::protobuf::uint8* S2SQueryGuildListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryGuildListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // .KFMsg.PBGuildIdArray guilds = 3;
  if (this->has_guilds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_guilds(), deterministic, target);
  }

  // uint32 cursor = 4;
  if (this->cursor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cursor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryGuildListReq)
  return target;
}

size_t S2SQueryGuildListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryGuildListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBGuildIdArray guilds = 3;
  if (this->has_guilds()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *guilds_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 cursor = 4;
  if (this->cursor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cursor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryGuildListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryGuildListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryGuildListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryGuildListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryGuildListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryGuildListReq)
    MergeFrom(*source);
  }
}

void S2SQueryGuildListReq::MergeFrom(const S2SQueryGuildListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryGuildListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guilds()) {
    mutable_guilds()->::KFMsg::PBGuildIdArray::MergeFrom(from.guilds());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.cursor() != 0) {
    set_cursor(from.cursor());
  }
}

void S2SQueryGuildListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryGuildListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryGuildListReq::CopyFrom(const S2SQueryGuildListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryGuildListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryGuildListReq::IsInitialized() const {
  return true;
}

void S2SQueryGuildListReq::Swap(S2SQueryGuildListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryGuildListReq::InternalSwap(S2SQueryGuildListReq* other) {
  using std::swap;
  swap(guilds_, other->guilds_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  swap(cursor_, other->cursor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryGuildListReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickMemberReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickMemberReq::kPlayeridFieldNumber;
const int S2SKickMemberReq::kGuildidFieldNumber;
const int S2SKickMemberReq::kToplayeridFieldNumber;
const int S2SKickMemberReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickMemberReq::S2SKickMemberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SKickMemberReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickMemberReq)
}
S2SKickMemberReq::S2SKickMemberReq(const S2SKickMemberReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickMemberReq)
}

void S2SKickMemberReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
}

S2SKickMemberReq::~S2SKickMemberReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickMemberReq)
  SharedDtor();
}

void S2SKickMemberReq::SharedDtor() {
}

void S2SKickMemberReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickMemberReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickMemberReq& S2SKickMemberReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SKickMemberReq.base);
  return *internal_default_instance();
}


void S2SKickMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SKickMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickMemberReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 toplayerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &toplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickMemberReq)
  return false;
#undef DO_
}

void S2SKickMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // uint64 toplayerid = 3;
  if (this->toplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->toplayerid(), output);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickMemberReq)
}

::google::protobuf::uint8* S2SKickMemberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // uint64 toplayerid = 3;
  if (this->toplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->toplayerid(), target);
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickMemberReq)
  return target;
}

size_t S2SKickMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickMemberReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 toplayerid = 3;
  if (this->toplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->toplayerid());
  }

  // uint64 serverid = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickMemberReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickMemberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickMemberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickMemberReq)
    MergeFrom(*source);
  }
}

void S2SKickMemberReq::MergeFrom(const S2SKickMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.toplayerid() != 0) {
    set_toplayerid(from.toplayerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SKickMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickMemberReq::CopyFrom(const S2SKickMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickMemberReq::IsInitialized() const {
  return true;
}

void S2SKickMemberReq::Swap(S2SKickMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickMemberReq::InternalSwap(S2SKickMemberReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(toplayerid_, other->toplayerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickMemberReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginQueryGuildReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginQueryGuildReq::kGuildidFieldNumber;
const int S2SLoginQueryGuildReq::kPlayeridFieldNumber;
const int S2SLoginQueryGuildReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginQueryGuildReq::S2SLoginQueryGuildReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginQueryGuildReq)
}
S2SLoginQueryGuildReq::S2SLoginQueryGuildReq(const S2SLoginQueryGuildReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginQueryGuildReq)
}

void S2SLoginQueryGuildReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
}

S2SLoginQueryGuildReq::~S2SLoginQueryGuildReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginQueryGuildReq)
  SharedDtor();
}

void S2SLoginQueryGuildReq::SharedDtor() {
}

void S2SLoginQueryGuildReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginQueryGuildReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginQueryGuildReq& S2SLoginQueryGuildReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildReq.base);
  return *internal_default_instance();
}


void S2SLoginQueryGuildReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginQueryGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SLoginQueryGuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginQueryGuildReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginQueryGuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginQueryGuildReq)
  return false;
#undef DO_
}

void S2SLoginQueryGuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginQueryGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint32 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->playerid(), output);
  }

  // uint32 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginQueryGuildReq)
}

::google::protobuf::uint8* S2SLoginQueryGuildReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginQueryGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint32 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->playerid(), target);
  }

  // uint32 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginQueryGuildReq)
  return target;
}

size_t S2SLoginQueryGuildReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginQueryGuildReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint32 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  // uint32 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginQueryGuildReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginQueryGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginQueryGuildReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginQueryGuildReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginQueryGuildReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginQueryGuildReq)
    MergeFrom(*source);
  }
}

void S2SLoginQueryGuildReq::MergeFrom(const S2SLoginQueryGuildReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginQueryGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SLoginQueryGuildReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginQueryGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginQueryGuildReq::CopyFrom(const S2SLoginQueryGuildReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginQueryGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginQueryGuildReq::IsInitialized() const {
  return true;
}

void S2SLoginQueryGuildReq::Swap(S2SLoginQueryGuildReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginQueryGuildReq::InternalSwap(S2SLoginQueryGuildReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginQueryGuildReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginQueryGuildAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginQueryGuildAck_default_instance_._instance.get_mutable()->guilddata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SLoginQueryGuildAck::clear_guilddata() {
  if (GetArenaNoVirtual() == NULL && guilddata_ != NULL) {
    delete guilddata_;
  }
  guilddata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginQueryGuildAck::kPlayeridFieldNumber;
const int S2SLoginQueryGuildAck::kGuilddataFieldNumber;
const int S2SLoginQueryGuildAck::kShowapplicantFieldNumber;
const int S2SLoginQueryGuildAck::kGuildidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginQueryGuildAck::S2SLoginQueryGuildAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginQueryGuildAck)
}
S2SLoginQueryGuildAck::S2SLoginQueryGuildAck(const S2SLoginQueryGuildAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guilddata()) {
    guilddata_ = new ::KFMsg::PBObject(*from.guilddata_);
  } else {
    guilddata_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&showapplicant_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(showapplicant_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginQueryGuildAck)
}

void S2SLoginQueryGuildAck::SharedCtor() {
  ::memset(&guilddata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&showapplicant_) -
      reinterpret_cast<char*>(&guilddata_)) + sizeof(showapplicant_));
}

S2SLoginQueryGuildAck::~S2SLoginQueryGuildAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginQueryGuildAck)
  SharedDtor();
}

void S2SLoginQueryGuildAck::SharedDtor() {
  if (this != internal_default_instance()) delete guilddata_;
}

void S2SLoginQueryGuildAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginQueryGuildAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginQueryGuildAck& S2SLoginQueryGuildAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildAck.base);
  return *internal_default_instance();
}


void S2SLoginQueryGuildAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginQueryGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && guilddata_ != NULL) {
    delete guilddata_;
  }
  guilddata_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&showapplicant_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(showapplicant_));
  _internal_metadata_.Clear();
}

bool S2SLoginQueryGuildAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginQueryGuildAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject guilddata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guilddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool showapplicant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showapplicant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginQueryGuildAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginQueryGuildAck)
  return false;
#undef DO_
}

void S2SLoginQueryGuildAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginQueryGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBObject guilddata = 2;
  if (this->has_guilddata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_guilddata(), output);
  }

  // bool showapplicant = 3;
  if (this->showapplicant() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->showapplicant(), output);
  }

  // uint64 guildid = 4;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guildid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginQueryGuildAck)
}

::google::protobuf::uint8* S2SLoginQueryGuildAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginQueryGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBObject guilddata = 2;
  if (this->has_guilddata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_guilddata(), deterministic, target);
  }

  // bool showapplicant = 3;
  if (this->showapplicant() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->showapplicant(), target);
  }

  // uint64 guildid = 4;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guildid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginQueryGuildAck)
  return target;
}

size_t S2SLoginQueryGuildAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginQueryGuildAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject guilddata = 2;
  if (this->has_guilddata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *guilddata_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 4;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // bool showapplicant = 3;
  if (this->showapplicant() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginQueryGuildAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginQueryGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginQueryGuildAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginQueryGuildAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginQueryGuildAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginQueryGuildAck)
    MergeFrom(*source);
  }
}

void S2SLoginQueryGuildAck::MergeFrom(const S2SLoginQueryGuildAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginQueryGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guilddata()) {
    mutable_guilddata()->::KFMsg::PBObject::MergeFrom(from.guilddata());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.showapplicant() != 0) {
    set_showapplicant(from.showapplicant());
  }
}

void S2SLoginQueryGuildAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginQueryGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginQueryGuildAck::CopyFrom(const S2SLoginQueryGuildAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginQueryGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginQueryGuildAck::IsInitialized() const {
  return true;
}

void S2SLoginQueryGuildAck::Swap(S2SLoginQueryGuildAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginQueryGuildAck::InternalSwap(S2SLoginQueryGuildAck* other) {
  using std::swap;
  swap(guilddata_, other->guilddata_);
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(showapplicant_, other->showapplicant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginQueryGuildAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateGuildDataReq::InitAsDefaultInstance() {
}
void S2SUpdateGuildDataReq::clear_pbdata() {
  pbdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateGuildDataReq::kGuildidFieldNumber;
const int S2SUpdateGuildDataReq::kPlayeridFieldNumber;
const int S2SUpdateGuildDataReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateGuildDataReq::S2SUpdateGuildDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGuildDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateGuildDataReq)
}
S2SUpdateGuildDataReq::S2SUpdateGuildDataReq(const S2SUpdateGuildDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbdata_(from.pbdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateGuildDataReq)
}

void S2SUpdateGuildDataReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
}

S2SUpdateGuildDataReq::~S2SUpdateGuildDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateGuildDataReq)
  SharedDtor();
}

void S2SUpdateGuildDataReq::SharedDtor() {
}

void S2SUpdateGuildDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateGuildDataReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateGuildDataReq& S2SUpdateGuildDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpdateGuildDataReq.base);
  return *internal_default_instance();
}


void S2SUpdateGuildDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateGuildDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateGuildDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateGuildDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBString pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateGuildDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateGuildDataReq)
  return false;
#undef DO_
}

void S2SUpdateGuildDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateGuildDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // repeated .KFMsg.PBString pbdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pbdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateGuildDataReq)
}

::google::protobuf::uint8* S2SUpdateGuildDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateGuildDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // repeated .KFMsg.PBString pbdata = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pbdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateGuildDataReq)
  return target;
}

size_t S2SUpdateGuildDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateGuildDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBString pbdata = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pbdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbdata(static_cast<int>(i)));
    }
  }

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateGuildDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateGuildDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateGuildDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateGuildDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateGuildDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateGuildDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdateGuildDataReq::MergeFrom(const S2SUpdateGuildDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateGuildDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpdateGuildDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateGuildDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateGuildDataReq::CopyFrom(const S2SUpdateGuildDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateGuildDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateGuildDataReq::IsInitialized() const {
  return true;
}

void S2SUpdateGuildDataReq::Swap(S2SUpdateGuildDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateGuildDataReq::InternalSwap(S2SUpdateGuildDataReq* other) {
  using std::swap;
  CastToBase(&pbdata_)->InternalSwap(CastToBase(&other->pbdata_));
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateGuildDataReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpgradeGuildReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpgradeGuildReq::kGuildidFieldNumber;
const int S2SUpgradeGuildReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpgradeGuildReq::S2SUpgradeGuildReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpgradeGuildReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpgradeGuildReq)
}
S2SUpgradeGuildReq::S2SUpgradeGuildReq(const S2SUpgradeGuildReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpgradeGuildReq)
}

void S2SUpgradeGuildReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
}

S2SUpgradeGuildReq::~S2SUpgradeGuildReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpgradeGuildReq)
  SharedDtor();
}

void S2SUpgradeGuildReq::SharedDtor() {
}

void S2SUpgradeGuildReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpgradeGuildReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpgradeGuildReq& S2SUpgradeGuildReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpgradeGuildReq.base);
  return *internal_default_instance();
}


void S2SUpgradeGuildReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpgradeGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SUpgradeGuildReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpgradeGuildReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpgradeGuildReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpgradeGuildReq)
  return false;
#undef DO_
}

void S2SUpgradeGuildReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpgradeGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpgradeGuildReq)
}

::google::protobuf::uint8* S2SUpgradeGuildReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpgradeGuildReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpgradeGuildReq)
  return target;
}

size_t S2SUpgradeGuildReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpgradeGuildReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpgradeGuildReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpgradeGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpgradeGuildReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpgradeGuildReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpgradeGuildReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpgradeGuildReq)
    MergeFrom(*source);
  }
}

void S2SUpgradeGuildReq::MergeFrom(const S2SUpgradeGuildReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpgradeGuildReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpgradeGuildReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpgradeGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpgradeGuildReq::CopyFrom(const S2SUpgradeGuildReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpgradeGuildReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpgradeGuildReq::IsInitialized() const {
  return true;
}

void S2SUpgradeGuildReq::Swap(S2SUpgradeGuildReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpgradeGuildReq::InternalSwap(S2SUpgradeGuildReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpgradeGuildReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpgradeGuildAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpgradeGuildAck::kPlayeridFieldNumber;
const int S2SUpgradeGuildAck::kLevelFieldNumber;
const int S2SUpgradeGuildAck::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpgradeGuildAck::S2SUpgradeGuildAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SUpgradeGuildAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpgradeGuildAck)
}
S2SUpgradeGuildAck::S2SUpgradeGuildAck(const S2SUpgradeGuildAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpgradeGuildAck)
}

void S2SUpgradeGuildAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
}

S2SUpgradeGuildAck::~S2SUpgradeGuildAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpgradeGuildAck)
  SharedDtor();
}

void S2SUpgradeGuildAck::SharedDtor() {
}

void S2SUpgradeGuildAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpgradeGuildAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpgradeGuildAck& S2SUpgradeGuildAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SUpgradeGuildAck.base);
  return *internal_default_instance();
}


void S2SUpgradeGuildAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpgradeGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool S2SUpgradeGuildAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpgradeGuildAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpgradeGuildAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpgradeGuildAck)
  return false;
#undef DO_
}

void S2SUpgradeGuildAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpgradeGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpgradeGuildAck)
}

::google::protobuf::uint8* S2SUpgradeGuildAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpgradeGuildAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpgradeGuildAck)
  return target;
}

size_t S2SUpgradeGuildAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpgradeGuildAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpgradeGuildAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpgradeGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpgradeGuildAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpgradeGuildAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpgradeGuildAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpgradeGuildAck)
    MergeFrom(*source);
  }
}

void S2SUpgradeGuildAck::MergeFrom(const S2SUpgradeGuildAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpgradeGuildAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void S2SUpgradeGuildAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpgradeGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpgradeGuildAck::CopyFrom(const S2SUpgradeGuildAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpgradeGuildAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpgradeGuildAck::IsInitialized() const {
  return true;
}

void S2SUpgradeGuildAck::Swap(S2SUpgradeGuildAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpgradeGuildAck::InternalSwap(S2SUpgradeGuildAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(level_, other->level_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpgradeGuildAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAppointGuildMemberReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAppointGuildMemberReq::kPlayeridFieldNumber;
const int S2SAppointGuildMemberReq::kGuildidFieldNumber;
const int S2SAppointGuildMemberReq::kToplayeridFieldNumber;
const int S2SAppointGuildMemberReq::kTitleFieldNumber;
const int S2SAppointGuildMemberReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAppointGuildMemberReq::S2SAppointGuildMemberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAppointGuildMemberReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAppointGuildMemberReq)
}
S2SAppointGuildMemberReq::S2SAppointGuildMemberReq(const S2SAppointGuildMemberReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&title_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(title_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAppointGuildMemberReq)
}

void S2SAppointGuildMemberReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&title_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(title_));
}

S2SAppointGuildMemberReq::~S2SAppointGuildMemberReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAppointGuildMemberReq)
  SharedDtor();
}

void S2SAppointGuildMemberReq::SharedDtor() {
}

void S2SAppointGuildMemberReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAppointGuildMemberReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAppointGuildMemberReq& S2SAppointGuildMemberReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAppointGuildMemberReq.base);
  return *internal_default_instance();
}


void S2SAppointGuildMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAppointGuildMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&title_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(title_));
  _internal_metadata_.Clear();
}

bool S2SAppointGuildMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAppointGuildMemberReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 toplayerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &toplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 title = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAppointGuildMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAppointGuildMemberReq)
  return false;
#undef DO_
}

void S2SAppointGuildMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAppointGuildMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // uint64 toplayerid = 3;
  if (this->toplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->toplayerid(), output);
  }

  // uint32 title = 4;
  if (this->title() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->title(), output);
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAppointGuildMemberReq)
}

::google::protobuf::uint8* S2SAppointGuildMemberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAppointGuildMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // uint64 toplayerid = 3;
  if (this->toplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->toplayerid(), target);
  }

  // uint32 title = 4;
  if (this->title() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->title(), target);
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAppointGuildMemberReq)
  return target;
}

size_t S2SAppointGuildMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAppointGuildMemberReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 toplayerid = 3;
  if (this->toplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->toplayerid());
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 title = 4;
  if (this->title() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAppointGuildMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAppointGuildMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAppointGuildMemberReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAppointGuildMemberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAppointGuildMemberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAppointGuildMemberReq)
    MergeFrom(*source);
  }
}

void S2SAppointGuildMemberReq::MergeFrom(const S2SAppointGuildMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAppointGuildMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.toplayerid() != 0) {
    set_toplayerid(from.toplayerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.title() != 0) {
    set_title(from.title());
  }
}

void S2SAppointGuildMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAppointGuildMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAppointGuildMemberReq::CopyFrom(const S2SAppointGuildMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAppointGuildMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAppointGuildMemberReq::IsInitialized() const {
  return true;
}

void S2SAppointGuildMemberReq::Swap(S2SAppointGuildMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAppointGuildMemberReq::InternalSwap(S2SAppointGuildMemberReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(toplayerid_, other->toplayerid_);
  swap(serverid_, other->serverid_);
  swap(title_, other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAppointGuildMemberReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSearchGuildByNameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSearchGuildByNameReq::kGuildnameFieldNumber;
const int S2SSearchGuildByNameReq::kServeridFieldNumber;
const int S2SSearchGuildByNameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSearchGuildByNameReq::S2SSearchGuildByNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SSearchGuildByNameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSearchGuildByNameReq)
}
S2SSearchGuildByNameReq::S2SSearchGuildByNameReq(const S2SSearchGuildByNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guildname().size() > 0) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSearchGuildByNameReq)
}

void S2SSearchGuildByNameReq::SharedCtor() {
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(playerid_));
}

S2SSearchGuildByNameReq::~S2SSearchGuildByNameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSearchGuildByNameReq)
  SharedDtor();
}

void S2SSearchGuildByNameReq::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSearchGuildByNameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSearchGuildByNameReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSearchGuildByNameReq& S2SSearchGuildByNameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SSearchGuildByNameReq.base);
  return *internal_default_instance();
}


void S2SSearchGuildByNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSearchGuildByNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SSearchGuildByNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSearchGuildByNameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes guildname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guildname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSearchGuildByNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSearchGuildByNameReq)
  return false;
#undef DO_
}

void S2SSearchGuildByNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSearchGuildByNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guildname = 1;
  if (this->guildname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->guildname(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSearchGuildByNameReq)
}

::google::protobuf::uint8* S2SSearchGuildByNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSearchGuildByNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes guildname = 1;
  if (this->guildname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->guildname(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSearchGuildByNameReq)
  return target;
}

size_t S2SSearchGuildByNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSearchGuildByNameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes guildname = 1;
  if (this->guildname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->guildname());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSearchGuildByNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSearchGuildByNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSearchGuildByNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSearchGuildByNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSearchGuildByNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSearchGuildByNameReq)
    MergeFrom(*source);
  }
}

void S2SSearchGuildByNameReq::MergeFrom(const S2SSearchGuildByNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSearchGuildByNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildname().size() > 0) {

    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SSearchGuildByNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSearchGuildByNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSearchGuildByNameReq::CopyFrom(const S2SSearchGuildByNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSearchGuildByNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSearchGuildByNameReq::IsInitialized() const {
  return true;
}

void S2SSearchGuildByNameReq::Swap(S2SSearchGuildByNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSearchGuildByNameReq::InternalSwap(S2SSearchGuildByNameReq* other) {
  using std::swap;
  guildname_.Swap(&other->guildname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSearchGuildByNameReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetGuildSwitchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetGuildSwitchReq::kPlayeridFieldNumber;
const int S2SSetGuildSwitchReq::kGuildidFieldNumber;
const int S2SSetGuildSwitchReq::kTypeFieldNumber;
const int S2SSetGuildSwitchReq::kFlagFieldNumber;
const int S2SSetGuildSwitchReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetGuildSwitchReq::S2SSetGuildSwitchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SSetGuildSwitchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetGuildSwitchReq)
}
S2SSetGuildSwitchReq::S2SSetGuildSwitchReq(const S2SSetGuildSwitchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetGuildSwitchReq)
}

void S2SSetGuildSwitchReq::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
}

S2SSetGuildSwitchReq::~S2SSetGuildSwitchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetGuildSwitchReq)
  SharedDtor();
}

void S2SSetGuildSwitchReq::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetGuildSwitchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetGuildSwitchReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetGuildSwitchReq& S2SSetGuildSwitchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SSetGuildSwitchReq.base);
  return *internal_default_instance();
}


void S2SSetGuildSwitchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetGuildSwitchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SSetGuildSwitchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetGuildSwitchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetGuildSwitchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetGuildSwitchReq)
  return false;
#undef DO_
}

void S2SSetGuildSwitchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetGuildSwitchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  // bytes type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->type(), output);
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->flag(), output);
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetGuildSwitchReq)
}

::google::protobuf::uint8* S2SSetGuildSwitchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetGuildSwitchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  // bytes type = 3;
  if (this->type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->type(), target);
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->flag(), target);
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetGuildSwitchReq)
  return target;
}

size_t S2SSetGuildSwitchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetGuildSwitchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->type());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 serverid = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 flag = 4;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetGuildSwitchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetGuildSwitchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetGuildSwitchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetGuildSwitchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetGuildSwitchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetGuildSwitchReq)
    MergeFrom(*source);
  }
}

void S2SSetGuildSwitchReq::MergeFrom(const S2SSetGuildSwitchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetGuildSwitchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SSetGuildSwitchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetGuildSwitchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetGuildSwitchReq::CopyFrom(const S2SSetGuildSwitchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetGuildSwitchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetGuildSwitchReq::IsInitialized() const {
  return true;
}

void S2SSetGuildSwitchReq::Swap(S2SSetGuildSwitchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetGuildSwitchReq::InternalSwap(S2SSetGuildSwitchReq* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  swap(serverid_, other->serverid_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetGuildSwitchReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginQueryGuildidReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginQueryGuildidReq::kPlayeridFieldNumber;
const int S2SLoginQueryGuildidReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginQueryGuildidReq::S2SLoginQueryGuildidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildidReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginQueryGuildidReq)
}
S2SLoginQueryGuildidReq::S2SLoginQueryGuildidReq(const S2SLoginQueryGuildidReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginQueryGuildidReq)
}

void S2SLoginQueryGuildidReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
}

S2SLoginQueryGuildidReq::~S2SLoginQueryGuildidReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginQueryGuildidReq)
  SharedDtor();
}

void S2SLoginQueryGuildidReq::SharedDtor() {
}

void S2SLoginQueryGuildidReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginQueryGuildidReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginQueryGuildidReq& S2SLoginQueryGuildidReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildidReq.base);
  return *internal_default_instance();
}


void S2SLoginQueryGuildidReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginQueryGuildidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2SLoginQueryGuildidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginQueryGuildidReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginQueryGuildidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginQueryGuildidReq)
  return false;
#undef DO_
}

void S2SLoginQueryGuildidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginQueryGuildidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginQueryGuildidReq)
}

::google::protobuf::uint8* S2SLoginQueryGuildidReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginQueryGuildidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginQueryGuildidReq)
  return target;
}

size_t S2SLoginQueryGuildidReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginQueryGuildidReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginQueryGuildidReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginQueryGuildidReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginQueryGuildidReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginQueryGuildidReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginQueryGuildidReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginQueryGuildidReq)
    MergeFrom(*source);
  }
}

void S2SLoginQueryGuildidReq::MergeFrom(const S2SLoginQueryGuildidReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginQueryGuildidReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SLoginQueryGuildidReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginQueryGuildidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginQueryGuildidReq::CopyFrom(const S2SLoginQueryGuildidReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginQueryGuildidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginQueryGuildidReq::IsInitialized() const {
  return true;
}

void S2SLoginQueryGuildidReq::Swap(S2SLoginQueryGuildidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginQueryGuildidReq::InternalSwap(S2SLoginQueryGuildidReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginQueryGuildidReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginQueryGuildidAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginQueryGuildidAck::kPlayeridFieldNumber;
const int S2SLoginQueryGuildidAck::kGuildidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginQueryGuildidAck::S2SLoginQueryGuildidAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildidAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginQueryGuildidAck)
}
S2SLoginQueryGuildidAck::S2SLoginQueryGuildidAck(const S2SLoginQueryGuildidAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guildid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginQueryGuildidAck)
}

void S2SLoginQueryGuildidAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
}

S2SLoginQueryGuildidAck::~S2SLoginQueryGuildidAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginQueryGuildidAck)
  SharedDtor();
}

void S2SLoginQueryGuildidAck::SharedDtor() {
}

void S2SLoginQueryGuildidAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginQueryGuildidAck::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginQueryGuildidAck& S2SLoginQueryGuildidAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SLoginQueryGuildidAck.base);
  return *internal_default_instance();
}


void S2SLoginQueryGuildidAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginQueryGuildidAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(guildid_));
  _internal_metadata_.Clear();
}

bool S2SLoginQueryGuildidAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginQueryGuildidAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guildid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginQueryGuildidAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginQueryGuildidAck)
  return false;
#undef DO_
}

void S2SLoginQueryGuildidAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginQueryGuildidAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guildid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginQueryGuildidAck)
}

::google::protobuf::uint8* S2SLoginQueryGuildidAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginQueryGuildidAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guildid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginQueryGuildidAck)
  return target;
}

size_t S2SLoginQueryGuildidAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginQueryGuildidAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 guildid = 2;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginQueryGuildidAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginQueryGuildidAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginQueryGuildidAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginQueryGuildidAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginQueryGuildidAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginQueryGuildidAck)
    MergeFrom(*source);
  }
}

void S2SLoginQueryGuildidAck::MergeFrom(const S2SLoginQueryGuildidAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginQueryGuildidAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
}

void S2SLoginQueryGuildidAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginQueryGuildidAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginQueryGuildidAck::CopyFrom(const S2SLoginQueryGuildidAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginQueryGuildidAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginQueryGuildidAck::IsInitialized() const {
  return true;
}

void S2SLoginQueryGuildidAck::Swap(S2SLoginQueryGuildidAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginQueryGuildidAck::InternalSwap(S2SLoginQueryGuildidAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(guildid_, other->guildid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginQueryGuildidAck::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryGuildLogReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryGuildLogReq::kGuildidFieldNumber;
const int S2SQueryGuildLogReq::kPlayeridFieldNumber;
const int S2SQueryGuildLogReq::kServeridFieldNumber;
const int S2SQueryGuildLogReq::kBeginposFieldNumber;
const int S2SQueryGuildLogReq::kEndposFieldNumber;
const int S2SQueryGuildLogReq::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryGuildLogReq::S2SQueryGuildLogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuildLogReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryGuildLogReq)
}
S2SQueryGuildLogReq::S2SQueryGuildLogReq(const S2SQueryGuildLogReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(page_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryGuildLogReq)
}

void S2SQueryGuildLogReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(page_));
}

S2SQueryGuildLogReq::~S2SQueryGuildLogReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryGuildLogReq)
  SharedDtor();
}

void S2SQueryGuildLogReq::SharedDtor() {
}

void S2SQueryGuildLogReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryGuildLogReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryGuildLogReq& S2SQueryGuildLogReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SQueryGuildLogReq.base);
  return *internal_default_instance();
}


void S2SQueryGuildLogReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryGuildLogReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(page_));
  _internal_metadata_.Clear();
}

bool S2SQueryGuildLogReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryGuildLogReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 beginpos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beginpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 endpos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryGuildLogReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryGuildLogReq)
  return false;
#undef DO_
}

void S2SQueryGuildLogReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryGuildLogReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // uint32 beginpos = 4;
  if (this->beginpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->beginpos(), output);
  }

  // uint32 endpos = 5;
  if (this->endpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->endpos(), output);
  }

  // uint32 page = 6;
  if (this->page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->page(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryGuildLogReq)
}

::google::protobuf::uint8* S2SQueryGuildLogReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryGuildLogReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // uint32 beginpos = 4;
  if (this->beginpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->beginpos(), target);
  }

  // uint32 endpos = 5;
  if (this->endpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->endpos(), target);
  }

  // uint32 page = 6;
  if (this->page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->page(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryGuildLogReq)
  return target;
}

size_t S2SQueryGuildLogReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryGuildLogReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 beginpos = 4;
  if (this->beginpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beginpos());
  }

  // uint32 endpos = 5;
  if (this->endpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endpos());
  }

  // uint32 page = 6;
  if (this->page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryGuildLogReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryGuildLogReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryGuildLogReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryGuildLogReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryGuildLogReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryGuildLogReq)
    MergeFrom(*source);
  }
}

void S2SQueryGuildLogReq::MergeFrom(const S2SQueryGuildLogReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryGuildLogReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.beginpos() != 0) {
    set_beginpos(from.beginpos());
  }
  if (from.endpos() != 0) {
    set_endpos(from.endpos());
  }
  if (from.page() != 0) {
    set_page(from.page());
  }
}

void S2SQueryGuildLogReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryGuildLogReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryGuildLogReq::CopyFrom(const S2SQueryGuildLogReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryGuildLogReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryGuildLogReq::IsInitialized() const {
  return true;
}

void S2SQueryGuildLogReq::Swap(S2SQueryGuildLogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryGuildLogReq::InternalSwap(S2SQueryGuildLogReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  swap(serverid_, other->serverid_);
  swap(beginpos_, other->beginpos_);
  swap(endpos_, other->endpos_);
  swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryGuildLogReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddGuildActivenessReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddGuildActivenessReq::kGuildidFieldNumber;
const int S2SAddGuildActivenessReq::kPlayeridFieldNumber;
const int S2SAddGuildActivenessReq::kActivenessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddGuildActivenessReq::S2SAddGuildActivenessReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SAddGuildActivenessReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddGuildActivenessReq)
}
S2SAddGuildActivenessReq::S2SAddGuildActivenessReq(const S2SAddGuildActivenessReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guildid_, &from.guildid_,
    static_cast<size_t>(reinterpret_cast<char*>(&activeness_) -
    reinterpret_cast<char*>(&guildid_)) + sizeof(activeness_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddGuildActivenessReq)
}

void S2SAddGuildActivenessReq::SharedCtor() {
  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activeness_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(activeness_));
}

S2SAddGuildActivenessReq::~S2SAddGuildActivenessReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddGuildActivenessReq)
  SharedDtor();
}

void S2SAddGuildActivenessReq::SharedDtor() {
}

void S2SAddGuildActivenessReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddGuildActivenessReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddGuildActivenessReq& S2SAddGuildActivenessReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SAddGuildActivenessReq.base);
  return *internal_default_instance();
}


void S2SAddGuildActivenessReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddGuildActivenessReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guildid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&activeness_) -
      reinterpret_cast<char*>(&guildid_)) + sizeof(activeness_));
  _internal_metadata_.Clear();
}

bool S2SAddGuildActivenessReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddGuildActivenessReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guildid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 activeness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activeness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddGuildActivenessReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddGuildActivenessReq)
  return false;
#undef DO_
}

void S2SAddGuildActivenessReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddGuildActivenessReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guildid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint32 activeness = 3;
  if (this->activeness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->activeness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddGuildActivenessReq)
}

::google::protobuf::uint8* S2SAddGuildActivenessReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddGuildActivenessReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guildid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint32 activeness = 3;
  if (this->activeness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->activeness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddGuildActivenessReq)
  return target;
}

size_t S2SAddGuildActivenessReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddGuildActivenessReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guildid = 1;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 activeness = 3;
  if (this->activeness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activeness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddGuildActivenessReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddGuildActivenessReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddGuildActivenessReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddGuildActivenessReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddGuildActivenessReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddGuildActivenessReq)
    MergeFrom(*source);
  }
}

void S2SAddGuildActivenessReq::MergeFrom(const S2SAddGuildActivenessReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddGuildActivenessReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.activeness() != 0) {
    set_activeness(from.activeness());
  }
}

void S2SAddGuildActivenessReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddGuildActivenessReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddGuildActivenessReq::CopyFrom(const S2SAddGuildActivenessReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddGuildActivenessReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddGuildActivenessReq::IsInitialized() const {
  return true;
}

void S2SAddGuildActivenessReq::Swap(S2SAddGuildActivenessReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddGuildActivenessReq::InternalSwap(S2SAddGuildActivenessReq* other) {
  using std::swap;
  swap(guildid_, other->guildid_);
  swap(playerid_, other->playerid_);
  swap(activeness_, other->activeness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddGuildActivenessReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SGMAddMailReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SGMAddMailReq_default_instance_._instance.get_mutable()->pbmail_ = const_cast< ::KFMsg::PBMail*>(
      ::KFMsg::PBMail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SGMAddMailReq::kPlayeridsFieldNumber;
const int S2SGMAddMailReq::kMailtypeFieldNumber;
const int S2SGMAddMailReq::kPbmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SGMAddMailReq::S2SGMAddMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SGMAddMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SGMAddMailReq)
}
S2SGMAddMailReq::S2SGMAddMailReq(const S2SGMAddMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerids_(from.playerids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmail()) {
    pbmail_ = new ::KFMsg::PBMail(*from.pbmail_);
  } else {
    pbmail_ = NULL;
  }
  mailtype_ = from.mailtype_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SGMAddMailReq)
}

void S2SGMAddMailReq::SharedCtor() {
  ::memset(&pbmail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mailtype_) -
      reinterpret_cast<char*>(&pbmail_)) + sizeof(mailtype_));
}

S2SGMAddMailReq::~S2SGMAddMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SGMAddMailReq)
  SharedDtor();
}

void S2SGMAddMailReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmail_;
}

void S2SGMAddMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SGMAddMailReq::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SGMAddMailReq& S2SGMAddMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SGMAddMailReq.base);
  return *internal_default_instance();
}


void S2SGMAddMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SGMAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerids_.Clear();
  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
  mailtype_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SGMAddMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SGMAddMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 playerids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_playerids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_playerids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mailtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mailtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMail pbmail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SGMAddMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SGMAddMailReq)
  return false;
#undef DO_
}

void S2SGMAddMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SGMAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 playerids = 1;
  if (this->playerids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _playerids_cached_byte_size_));
  }
  for (int i = 0, n = this->playerids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->playerids(i), output);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mailtype(), output);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbmail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SGMAddMailReq)
}

::google::protobuf::uint8* S2SGMAddMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SGMAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 playerids = 1;
  if (this->playerids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _playerids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->playerids_, target);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mailtype(), target);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbmail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SGMAddMailReq)
  return target;
}

size_t S2SGMAddMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SGMAddMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 playerids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->playerids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _playerids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmail_);
  }

  // uint32 mailtype = 2;
  if (this->mailtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mailtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SGMAddMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SGMAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SGMAddMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SGMAddMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SGMAddMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SGMAddMailReq)
    MergeFrom(*source);
  }
}

void S2SGMAddMailReq::MergeFrom(const S2SGMAddMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SGMAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerids_.MergeFrom(from.playerids_);
  if (from.has_pbmail()) {
    mutable_pbmail()->::KFMsg::PBMail::MergeFrom(from.pbmail());
  }
  if (from.mailtype() != 0) {
    set_mailtype(from.mailtype());
  }
}

void S2SGMAddMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SGMAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SGMAddMailReq::CopyFrom(const S2SGMAddMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SGMAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SGMAddMailReq::IsInitialized() const {
  return true;
}

void S2SGMAddMailReq::Swap(S2SGMAddMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SGMAddMailReq::InternalSwap(S2SGMAddMailReq* other) {
  using std::swap;
  playerids_.InternalSwap(&other->playerids_);
  swap(pbmail_, other->pbmail_);
  swap(mailtype_, other->mailtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SGMAddMailReq::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSendChatToServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSendChatToServer::kChatinfoFieldNumber;
const int S2SSendChatToServer::kIsvoiceFieldNumber;
const int S2SSendChatToServer::kPlayernameFieldNumber;
const int S2SSendChatToServer::kPlayeridFieldNumber;
const int S2SSendChatToServer::kPlayericonFieldNumber;
const int S2SSendChatToServer::kPlayergradeFieldNumber;
const int S2SSendChatToServer::kPlayersexFieldNumber;
const int S2SSendChatToServer::kPlayericonboxFieldNumber;
const int S2SSendChatToServer::kPlayerserveridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSendChatToServer::S2SSendChatToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFServerMessage_2eproto::scc_info_S2SSendChatToServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSendChatToServer)
}
S2SSendChatToServer::S2SSendChatToServer(const S2SSendChatToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chatinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chatinfo().size() > 0) {
    chatinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatinfo_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  playericon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playericon().size() > 0) {
    playericon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playericon_);
  }
  playericonbox_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playericonbox().size() > 0) {
    playericonbox_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playericonbox_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playersex_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(playersex_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSendChatToServer)
}

void S2SSendChatToServer::SharedCtor() {
  chatinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playericon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playericonbox_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playersex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(playersex_));
}

S2SSendChatToServer::~S2SSendChatToServer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSendChatToServer)
  SharedDtor();
}

void S2SSendChatToServer::SharedDtor() {
  chatinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playericon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playericonbox_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSendChatToServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSendChatToServer::descriptor() {
  ::protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSendChatToServer& S2SSendChatToServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFServerMessage_2eproto::scc_info_S2SSendChatToServer.base);
  return *internal_default_instance();
}


void S2SSendChatToServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSendChatToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playericon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playericonbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playersex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(playersex_));
  _internal_metadata_.Clear();
}

bool S2SSendChatToServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSendChatToServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes chatinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chatinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 isvoice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isvoice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playername = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playericon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playericon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playergrade = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playergrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playersex = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playersex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playericonbox = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playericonbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerserverid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSendChatToServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSendChatToServer)
  return false;
#undef DO_
}

void S2SSendChatToServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSendChatToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chatinfo = 1;
  if (this->chatinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->chatinfo(), output);
  }

  // uint32 isvoice = 2;
  if (this->isvoice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->isvoice(), output);
  }

  // bytes playername = 3;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->playername(), output);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  // bytes playericon = 5;
  if (this->playericon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->playericon(), output);
  }

  // uint32 playergrade = 6;
  if (this->playergrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->playergrade(), output);
  }

  // uint32 playersex = 7;
  if (this->playersex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->playersex(), output);
  }

  // bytes playericonbox = 8;
  if (this->playericonbox().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->playericonbox(), output);
  }

  // uint64 playerserverid = 9;
  if (this->playerserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->playerserverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSendChatToServer)
}

::google::protobuf::uint8* S2SSendChatToServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSendChatToServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chatinfo = 1;
  if (this->chatinfo().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->chatinfo(), target);
  }

  // uint32 isvoice = 2;
  if (this->isvoice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->isvoice(), target);
  }

  // bytes playername = 3;
  if (this->playername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->playername(), target);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  // bytes playericon = 5;
  if (this->playericon().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->playericon(), target);
  }

  // uint32 playergrade = 6;
  if (this->playergrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->playergrade(), target);
  }

  // uint32 playersex = 7;
  if (this->playersex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->playersex(), target);
  }

  // bytes playericonbox = 8;
  if (this->playericonbox().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->playericonbox(), target);
  }

  // uint64 playerserverid = 9;
  if (this->playerserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->playerserverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSendChatToServer)
  return target;
}

size_t S2SSendChatToServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSendChatToServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes chatinfo = 1;
  if (this->chatinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chatinfo());
  }

  // bytes playername = 3;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playername());
  }

  // bytes playericon = 5;
  if (this->playericon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playericon());
  }

  // bytes playericonbox = 8;
  if (this->playericonbox().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playericonbox());
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 isvoice = 2;
  if (this->isvoice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->isvoice());
  }

  // uint32 playergrade = 6;
  if (this->playergrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playergrade());
  }

  // uint64 playerserverid = 9;
  if (this->playerserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerserverid());
  }

  // uint32 playersex = 7;
  if (this->playersex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playersex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSendChatToServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSendChatToServer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSendChatToServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSendChatToServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSendChatToServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSendChatToServer)
    MergeFrom(*source);
  }
}

void S2SSendChatToServer::MergeFrom(const S2SSendChatToServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSendChatToServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chatinfo().size() > 0) {

    chatinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatinfo_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.playericon().size() > 0) {

    playericon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playericon_);
  }
  if (from.playericonbox().size() > 0) {

    playericonbox_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playericonbox_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.isvoice() != 0) {
    set_isvoice(from.isvoice());
  }
  if (from.playergrade() != 0) {
    set_playergrade(from.playergrade());
  }
  if (from.playerserverid() != 0) {
    set_playerserverid(from.playerserverid());
  }
  if (from.playersex() != 0) {
    set_playersex(from.playersex());
  }
}

void S2SSendChatToServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSendChatToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSendChatToServer::CopyFrom(const S2SSendChatToServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSendChatToServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSendChatToServer::IsInitialized() const {
  return true;
}

void S2SSendChatToServer::Swap(S2SSendChatToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSendChatToServer::InternalSwap(S2SSendChatToServer* other) {
  using std::swap;
  chatinfo_.Swap(&other->chatinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playericon_.Swap(&other->playericon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playericonbox_.Swap(&other->playericonbox_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(isvoice_, other->isvoice_);
  swap(playergrade_, other->playergrade_);
  swap(playerserverid_, other->playerserverid_);
  swap(playersex_, other->playersex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSendChatToServer::GetMetadata() const {
  protobuf_KFServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STransmitMessageReq* Arena::CreateMaybeMessage< ::KFMsg::S2STransmitMessageReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STransmitMessageReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastMessageReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastMessageReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastMessageReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToWord* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToWord >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToWord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGame* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGame >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGate* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGate >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STransmitToPlayer* Arena::CreateMaybeMessage< ::KFMsg::S2STransmitToPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STransmitToPlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STransmitToServer* Arena::CreateMaybeMessage< ::KFMsg::S2STransmitToServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STransmitToServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateZoneToProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateZoneToProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateZoneToProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STransmitToDataShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2STransmitToDataShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STransmitToDataShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSavePlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSavePlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSavePlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeletePlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeletePlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeletePlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdatePublicDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdatePublicDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdatePublicDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickGamePlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickGamePlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickGamePlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickGatePlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickGatePlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickGatePlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginLoginVerifyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginLoginVerifyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginLoginVerifyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginLoginVerifyAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginLoginVerifyAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginLoginVerifyAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBLoginData* Arena::CreateMaybeMessage< ::KFMsg::PBLoginData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBLoginData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginWorldVerifyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginWorldVerifyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginWorldVerifyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginFailedToLoginAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginFailedToLoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginFailedToLoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginTellTokenToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginTellTokenToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginTellTokenToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginLoadPlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginLoadPlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginLoadPlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginLoadPlayerAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginLoadPlayerAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginLoadPlayerAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginOutReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginOutReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginOutReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerDisconnectionReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerDisconnectionReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerDisconnectionReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateRoleReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateRoleReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateRoleReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateRoleAck* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateRoleAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateRoleAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SGameSyncOnlineReq* Arena::CreateMaybeMessage< ::KFMsg::S2SGameSyncOnlineReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SGameSyncOnlineReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail* Arena::CreateMaybeMessage< ::KFMsg::PBMail >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMails* Arena::CreateMaybeMessage< ::KFMsg::PBMails >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDeleteMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDeleteMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDeleteMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNoticeNewMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNoticeNewMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNoticeNewMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation* Arena::CreateMaybeMessage< ::KFMsg::PBRelation >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendInviteReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendInviteReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendInviteReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendInviteAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendInviteAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendInviteAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendInviteReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendInviteReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendInviteReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendInviteAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendInviteAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendInviteAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelFriendReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDelFriendReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelFriendReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelFriendAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDelFriendAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelFriendAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelFriendInviteReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDelFriendInviteReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelFriendInviteReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendLinessReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendLinessReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendLinessReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryBasicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryBasicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryBasicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryBasicAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryBasicAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryBasicAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailFlagReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailFlagReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailFlagReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailFlagAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailFlagAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailFlagAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerToastReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerToastReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerToastReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerToastAck* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerToastAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerToastAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryToastCountReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryToastCountReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryToastCountReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendLinessAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendLinessAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendLinessAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateGroupMatchReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateGroupMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateGroupMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateMatchGroupToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateMatchGroupToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateMatchGroupToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SReceiveInviteMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SReceiveInviteMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SReceiveInviteMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SConsentInviteMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SConsentInviteMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SConsentInviteMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddMatchGroupMemberReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddMatchGroupMemberReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddMatchGroupMemberReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddMatchGroupMemberAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddMatchGroupMemberAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddMatchGroupMemberAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellMatchGroupDataAck* Arena::CreateMaybeMessage< ::KFMsg::S2STellMatchGroupDataAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellMatchGroupDataAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRemoveMatchGroupMemberAck* Arena::CreateMaybeMessage< ::KFMsg::S2SRemoveMatchGroupMemberAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRemoveMatchGroupMemberAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLeaveMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLeaveMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLeaveMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLeaveMatchGroupAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLeaveMatchGroupAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLeaveMatchGroupAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SApplyMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SApplyMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SApplyMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SApplyMatchGroupAck* Arena::CreateMaybeMessage< ::KFMsg::S2SApplyMatchGroupAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SApplyMatchGroupAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SConsentApplyMatchGroupAck* Arena::CreateMaybeMessage< ::KFMsg::S2SConsentApplyMatchGroupAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SConsentApplyMatchGroupAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOnLineQueryMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SOnLineQueryMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOnLineQueryMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOffLineUpdateMatchGroupReq* Arena::CreateMaybeMessage< ::KFMsg::S2SOffLineUpdateMatchGroupReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOffLineUpdateMatchGroupReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateGroupMemberReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateGroupMemberReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateGroupMemberReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateGroupMemberAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateGroupMemberAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateGroupMemberAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateGroupDataAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateGroupDataAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateGroupDataAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateGuestListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateGuestListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateGuestListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryGuestReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryGuestReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryGuestReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryGuestAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryGuestAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryGuestAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNewPlayerLoginMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNewPlayerLoginMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNewPlayerLoginMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateRankDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateRankDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateRankDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddRecentPlayerDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddRecentPlayerDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddRecentPlayerDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRecentListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRecentListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRecentListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRecentListAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRecentListAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRecentListAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateGuidReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateGuidReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateGuidReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateGuildToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateGuildToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateGuildToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateGuildAck* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateGuildAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateGuildAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMemberBasicDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMemberBasicDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMemberBasicDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SInviteGuildReq* Arena::CreateMaybeMessage< ::KFMsg::S2SInviteGuildReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SInviteGuildReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SInviteGuildAck* Arena::CreateMaybeMessage< ::KFMsg::S2SInviteGuildAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SInviteGuildAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SApplyGuildReq* Arena::CreateMaybeMessage< ::KFMsg::S2SApplyGuildReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SApplyGuildReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SApplyGuildAck* Arena::CreateMaybeMessage< ::KFMsg::S2SApplyGuildAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SApplyGuildAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerGuildChangeReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerGuildChangeReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerGuildChangeReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SExitGuildReq* Arena::CreateMaybeMessage< ::KFMsg::S2SExitGuildReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SExitGuildReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STransferMasterReq* Arena::CreateMaybeMessage< ::KFMsg::S2STransferMasterReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STransferMasterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SReviewApplyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SReviewApplyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SReviewApplyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDissolveGuildReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDissolveGuildReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDissolveGuildReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SModifyMedalReq* Arena::CreateMaybeMessage< ::KFMsg::S2SModifyMedalReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SModifyMedalReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryGuildListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryGuildListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryGuildListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickMemberReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickMemberReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickMemberReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginQueryGuildReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginQueryGuildReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginQueryGuildReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginQueryGuildAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginQueryGuildAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginQueryGuildAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateGuildDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateGuildDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateGuildDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpgradeGuildReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpgradeGuildReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpgradeGuildReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpgradeGuildAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpgradeGuildAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpgradeGuildAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAppointGuildMemberReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAppointGuildMemberReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAppointGuildMemberReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSearchGuildByNameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSearchGuildByNameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSearchGuildByNameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetGuildSwitchReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSetGuildSwitchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetGuildSwitchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginQueryGuildidReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginQueryGuildidReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginQueryGuildidReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginQueryGuildidAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginQueryGuildidAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginQueryGuildidAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryGuildLogReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryGuildLogReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryGuildLogReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddGuildActivenessReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddGuildActivenessReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddGuildActivenessReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SGMAddMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SGMAddMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SGMAddMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSendChatToServer* Arena::CreateMaybeMessage< ::KFMsg::S2SSendChatToServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSendChatToServer >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
