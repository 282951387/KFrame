// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFClientMessage.proto

#ifndef PROTOBUF_INCLUDED_KFClientMessage_2eproto
#define PROTOBUF_INCLUDED_KFClientMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "KFDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFClientMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFClientMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[116];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFClientMessage_2eproto
namespace KFMsg {
class MsgAddFriendInviteReq;
class MsgAddFriendInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgAddFriendInviteReqDefaultTypeInternal _MsgAddFriendInviteReq_default_instance_;
class MsgApplyGuildReq;
class MsgApplyGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgApplyGuildReqDefaultTypeInternal _MsgApplyGuildReq_default_instance_;
class MsgApplyMatchGroupReq;
class MsgApplyMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgApplyMatchGroupReqDefaultTypeInternal _MsgApplyMatchGroupReq_default_instance_;
class MsgAppointGuildMemberReq;
class MsgAppointGuildMemberReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgAppointGuildMemberReqDefaultTypeInternal _MsgAppointGuildMemberReq_default_instance_;
class MsgBindAlipayReq;
class MsgBindAlipayReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgBindAlipayReqDefaultTypeInternal _MsgBindAlipayReq_default_instance_;
class MsgBuyStoreAck;
class MsgBuyStoreAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgBuyStoreAckDefaultTypeInternal _MsgBuyStoreAck_default_instance_;
class MsgBuyStoreReq;
class MsgBuyStoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgBuyStoreReqDefaultTypeInternal _MsgBuyStoreReq_default_instance_;
class MsgCancelMatchAck;
class MsgCancelMatchAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCancelMatchAckDefaultTypeInternal _MsgCancelMatchAck_default_instance_;
class MsgCancelMatchReq;
class MsgCancelMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCancelMatchReqDefaultTypeInternal _MsgCancelMatchReq_default_instance_;
class MsgChangeIconBoxReq;
class MsgChangeIconBoxReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgChangeIconBoxReqDefaultTypeInternal _MsgChangeIconBoxReq_default_instance_;
class MsgChangeIconReq;
class MsgChangeIconReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgChangeIconReqDefaultTypeInternal _MsgChangeIconReq_default_instance_;
class MsgChangeModelReq;
class MsgChangeModelReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgChangeModelReqDefaultTypeInternal _MsgChangeModelReq_default_instance_;
class MsgChangeMottoReq;
class MsgChangeMottoReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgChangeMottoReqDefaultTypeInternal _MsgChangeMottoReq_default_instance_;
class MsgChangeNameReq;
class MsgChangeNameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgChangeNameReqDefaultTypeInternal _MsgChangeNameReq_default_instance_;
class MsgChangeSexReq;
class MsgChangeSexReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgChangeSexReqDefaultTypeInternal _MsgChangeSexReq_default_instance_;
class MsgCompoundDataReq;
class MsgCompoundDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCompoundDataReqDefaultTypeInternal _MsgCompoundDataReq_default_instance_;
class MsgCreateGuildReq;
class MsgCreateGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCreateGuildReqDefaultTypeInternal _MsgCreateGuildReq_default_instance_;
class MsgCreateRoleReq;
class MsgCreateRoleReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCreateRoleReqDefaultTypeInternal _MsgCreateRoleReq_default_instance_;
class MsgDebugCommandReq;
class MsgDebugCommandReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDebugCommandReqDefaultTypeInternal _MsgDebugCommandReq_default_instance_;
class MsgDelFriendReq;
class MsgDelFriendReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDelFriendReqDefaultTypeInternal _MsgDelFriendReq_default_instance_;
class MsgDeleteMailReq;
class MsgDeleteMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDeleteMailReqDefaultTypeInternal _MsgDeleteMailReq_default_instance_;
class MsgDissolveGuildReq;
class MsgDissolveGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDissolveGuildReqDefaultTypeInternal _MsgDissolveGuildReq_default_instance_;
class MsgDressClothesReq;
class MsgDressClothesReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDressClothesReqDefaultTypeInternal _MsgDressClothesReq_default_instance_;
class MsgEnterChatReq;
class MsgEnterChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgEnterChatReqDefaultTypeInternal _MsgEnterChatReq_default_instance_;
class MsgEnterGame;
class MsgEnterGameDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgEnterGameDefaultTypeInternal _MsgEnterGame_default_instance_;
class MsgExChangeInviteRecordAck;
class MsgExChangeInviteRecordAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgExChangeInviteRecordAckDefaultTypeInternal _MsgExChangeInviteRecordAck_default_instance_;
class MsgExChangeInviteRecordReq;
class MsgExChangeInviteRecordReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgExChangeInviteRecordReqDefaultTypeInternal _MsgExChangeInviteRecordReq_default_instance_;
class MsgExChangeInviteScoreAck;
class MsgExChangeInviteScoreAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgExChangeInviteScoreAckDefaultTypeInternal _MsgExChangeInviteScoreAck_default_instance_;
class MsgExChangeInviteScoreReq;
class MsgExChangeInviteScoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgExChangeInviteScoreReqDefaultTypeInternal _MsgExChangeInviteScoreReq_default_instance_;
class MsgExitGuildReq;
class MsgExitGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgExitGuildReqDefaultTypeInternal _MsgExitGuildReq_default_instance_;
class MsgGiveStoreReq;
class MsgGiveStoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgGiveStoreReqDefaultTypeInternal _MsgGiveStoreReq_default_instance_;
class MsgInviteGuildReq;
class MsgInviteGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgInviteGuildReqDefaultTypeInternal _MsgInviteGuildReq_default_instance_;
class MsgInviteMatchGroupReq;
class MsgInviteMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgInviteMatchGroupReqDefaultTypeInternal _MsgInviteMatchGroupReq_default_instance_;
class MsgKickMatchGroupReq;
class MsgKickMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgKickMatchGroupReqDefaultTypeInternal _MsgKickMatchGroupReq_default_instance_;
class MsgKickMemberReq;
class MsgKickMemberReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgKickMemberReqDefaultTypeInternal _MsgKickMemberReq_default_instance_;
class MsgLeaveChatReq;
class MsgLeaveChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLeaveChatReqDefaultTypeInternal _MsgLeaveChatReq_default_instance_;
class MsgLeaveMatchGroupReq;
class MsgLeaveMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLeaveMatchGroupReqDefaultTypeInternal _MsgLeaveMatchGroupReq_default_instance_;
class MsgLoginGameReq;
class MsgLoginGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginGameReqDefaultTypeInternal _MsgLoginGameReq_default_instance_;
class MsgLoginOutReq;
class MsgLoginOutReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginOutReqDefaultTypeInternal _MsgLoginOutReq_default_instance_;
class MsgLoginVerifyAck;
class MsgLoginVerifyAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginVerifyAckDefaultTypeInternal _MsgLoginVerifyAck_default_instance_;
class MsgLoginVerifyReq;
class MsgLoginVerifyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginVerifyReqDefaultTypeInternal _MsgLoginVerifyReq_default_instance_;
class MsgMatchGroupPrepareReq;
class MsgMatchGroupPrepareReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgMatchGroupPrepareReqDefaultTypeInternal _MsgMatchGroupPrepareReq_default_instance_;
class MsgMatchResultAck;
class MsgMatchResultAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgMatchResultAckDefaultTypeInternal _MsgMatchResultAck_default_instance_;
class MsgModifyGuildMedalReq;
class MsgModifyGuildMedalReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgModifyGuildMedalReqDefaultTypeInternal _MsgModifyGuildMedalReq_default_instance_;
class MsgPlayerToastReq;
class MsgPlayerToastReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgPlayerToastReqDefaultTypeInternal _MsgPlayerToastReq_default_instance_;
class MsgQueryBasicReq;
class MsgQueryBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicReqDefaultTypeInternal _MsgQueryBasicReq_default_instance_;
class MsgQueryFriendRankListAck;
class MsgQueryFriendRankListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryFriendRankListAckDefaultTypeInternal _MsgQueryFriendRankListAck_default_instance_;
class MsgQueryFriendRankListReq;
class MsgQueryFriendRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryFriendRankListReqDefaultTypeInternal _MsgQueryFriendRankListReq_default_instance_;
class MsgQueryGuestAck;
class MsgQueryGuestAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuestAckDefaultTypeInternal _MsgQueryGuestAck_default_instance_;
class MsgQueryGuestReq;
class MsgQueryGuestReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuestReqDefaultTypeInternal _MsgQueryGuestReq_default_instance_;
class MsgQueryGuildListAck;
class MsgQueryGuildListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuildListAckDefaultTypeInternal _MsgQueryGuildListAck_default_instance_;
class MsgQueryGuildListAck_GuilddatasEntry_DoNotUse;
class MsgQueryGuildListAck_GuilddatasEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuildListAck_GuilddatasEntry_DoNotUseDefaultTypeInternal _MsgQueryGuildListAck_GuilddatasEntry_DoNotUse_default_instance_;
class MsgQueryGuildListReq;
class MsgQueryGuildListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuildListReqDefaultTypeInternal _MsgQueryGuildListReq_default_instance_;
class MsgQueryGuildLogAck;
class MsgQueryGuildLogAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuildLogAckDefaultTypeInternal _MsgQueryGuildLogAck_default_instance_;
class MsgQueryGuildLogReq;
class MsgQueryGuildLogReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryGuildLogReqDefaultTypeInternal _MsgQueryGuildLogReq_default_instance_;
class MsgQueryInviteScoreAck;
class MsgQueryInviteScoreAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryInviteScoreAckDefaultTypeInternal _MsgQueryInviteScoreAck_default_instance_;
class MsgQueryInviteScoreReq;
class MsgQueryInviteScoreReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryInviteScoreReqDefaultTypeInternal _MsgQueryInviteScoreReq_default_instance_;
class MsgQueryMailReq;
class MsgQueryMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryMailReqDefaultTypeInternal _MsgQueryMailReq_default_instance_;
class MsgQueryPlayerAck;
class MsgQueryPlayerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerAckDefaultTypeInternal _MsgQueryPlayerAck_default_instance_;
class MsgQueryPlayerReq;
class MsgQueryPlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerReqDefaultTypeInternal _MsgQueryPlayerReq_default_instance_;
class MsgQueryRankListAck;
class MsgQueryRankListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRankListAckDefaultTypeInternal _MsgQueryRankListAck_default_instance_;
class MsgQueryRankListReq;
class MsgQueryRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRankListReqDefaultTypeInternal _MsgQueryRankListReq_default_instance_;
class MsgQueryRecentListAck;
class MsgQueryRecentListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRecentListAckDefaultTypeInternal _MsgQueryRecentListAck_default_instance_;
class MsgQueryRecentListReq;
class MsgQueryRecentListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRecentListReqDefaultTypeInternal _MsgQueryRecentListReq_default_instance_;
class MsgQuerySettingAck;
class MsgQuerySettingAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQuerySettingAckDefaultTypeInternal _MsgQuerySettingAck_default_instance_;
class MsgQuerySettingReq;
class MsgQuerySettingReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQuerySettingReqDefaultTypeInternal _MsgQuerySettingReq_default_instance_;
class MsgQueryStoreInfoAck;
class MsgQueryStoreInfoAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryStoreInfoAckDefaultTypeInternal _MsgQueryStoreInfoAck_default_instance_;
class MsgQueryStoreInfoReq;
class MsgQueryStoreInfoReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryStoreInfoReqDefaultTypeInternal _MsgQueryStoreInfoReq_default_instance_;
class MsgQueryToastCountAck;
class MsgQueryToastCountAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryToastCountAckDefaultTypeInternal _MsgQueryToastCountAck_default_instance_;
class MsgQueryToastCountReq;
class MsgQueryToastCountReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryToastCountReqDefaultTypeInternal _MsgQueryToastCountReq_default_instance_;
class MsgReceiveAchieveRewardReq;
class MsgReceiveAchieveRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReceiveAchieveRewardReqDefaultTypeInternal _MsgReceiveAchieveRewardReq_default_instance_;
class MsgReceiveActivityRewardReq;
class MsgReceiveActivityRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReceiveActivityRewardReqDefaultTypeInternal _MsgReceiveActivityRewardReq_default_instance_;
class MsgReceiveGiftRewardReq;
class MsgReceiveGiftRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReceiveGiftRewardReqDefaultTypeInternal _MsgReceiveGiftRewardReq_default_instance_;
class MsgReceiveMailRewardReq;
class MsgReceiveMailRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReceiveMailRewardReqDefaultTypeInternal _MsgReceiveMailRewardReq_default_instance_;
class MsgReceiveTaskRewardReq;
class MsgReceiveTaskRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReceiveTaskRewardReqDefaultTypeInternal _MsgReceiveTaskRewardReq_default_instance_;
class MsgRemoveDataReq;
class MsgRemoveDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRemoveDataReqDefaultTypeInternal _MsgRemoveDataReq_default_instance_;
class MsgReplyApplyMatchGroupReq;
class MsgReplyApplyMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReplyApplyMatchGroupReqDefaultTypeInternal _MsgReplyApplyMatchGroupReq_default_instance_;
class MsgReplyFriendInviteReq;
class MsgReplyFriendInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReplyFriendInviteReqDefaultTypeInternal _MsgReplyFriendInviteReq_default_instance_;
class MsgReplyInviteMatchGroupReq;
class MsgReplyInviteMatchGroupReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReplyInviteMatchGroupReqDefaultTypeInternal _MsgReplyInviteMatchGroupReq_default_instance_;
class MsgResultDisplay;
class MsgResultDisplayDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgResultDisplayDefaultTypeInternal _MsgResultDisplay_default_instance_;
class MsgReviewApplyReq;
class MsgReviewApplyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReviewApplyReqDefaultTypeInternal _MsgReviewApplyReq_default_instance_;
class MsgSearchGuildByNameReq;
class MsgSearchGuildByNameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSearchGuildByNameReqDefaultTypeInternal _MsgSearchGuildByNameReq_default_instance_;
class MsgSendChatInfo;
class MsgSendChatInfoDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSendChatInfoDefaultTypeInternal _MsgSendChatInfo_default_instance_;
class MsgSendChatReq;
class MsgSendChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSendChatReqDefaultTypeInternal _MsgSendChatReq_default_instance_;
class MsgSendGroupChatInfo;
class MsgSendGroupChatInfoDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSendGroupChatInfoDefaultTypeInternal _MsgSendGroupChatInfo_default_instance_;
class MsgSendGroupChatReq;
class MsgSendGroupChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSendGroupChatReqDefaultTypeInternal _MsgSendGroupChatReq_default_instance_;
class MsgSendOneByOneChatInfo;
class MsgSendOneByOneChatInfoDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSendOneByOneChatInfoDefaultTypeInternal _MsgSendOneByOneChatInfo_default_instance_;
class MsgSendOneByOneChatReq;
class MsgSendOneByOneChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSendOneByOneChatReqDefaultTypeInternal _MsgSendOneByOneChatReq_default_instance_;
class MsgSetGuildSwitchReq;
class MsgSetGuildSwitchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetGuildSwitchReqDefaultTypeInternal _MsgSetGuildSwitchReq_default_instance_;
class MsgSetModelDefaultClothesReq;
class MsgSetModelDefaultClothesReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetModelDefaultClothesReqDefaultTypeInternal _MsgSetModelDefaultClothesReq_default_instance_;
class MsgSetRefuseFriendInviteReq;
class MsgSetRefuseFriendInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetRefuseFriendInviteReqDefaultTypeInternal _MsgSetRefuseFriendInviteReq_default_instance_;
class MsgSetWishOrderReq;
class MsgSetWishOrderReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetWishOrderReqDefaultTypeInternal _MsgSetWishOrderReq_default_instance_;
class MsgSevenSignInRewardReq;
class MsgSevenSignInRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSevenSignInRewardReqDefaultTypeInternal _MsgSevenSignInRewardReq_default_instance_;
class MsgShowRewardElement;
class MsgShowRewardElementDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgShowRewardElementDefaultTypeInternal _MsgShowRewardElement_default_instance_;
class MsgStartMatchAck;
class MsgStartMatchAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgStartMatchAckDefaultTypeInternal _MsgStartMatchAck_default_instance_;
class MsgStartMatchReq;
class MsgStartMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgStartMatchReqDefaultTypeInternal _MsgStartMatchReq_default_instance_;
class MsgSyncAddData;
class MsgSyncAddDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncAddDataDefaultTypeInternal _MsgSyncAddData_default_instance_;
class MsgSyncRemoveData;
class MsgSyncRemoveDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncRemoveDataDefaultTypeInternal _MsgSyncRemoveData_default_instance_;
class MsgSyncUpdateData;
class MsgSyncUpdateDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncUpdateDataDefaultTypeInternal _MsgSyncUpdateData_default_instance_;
class MsgTellBeKick;
class MsgTellBeKickDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellBeKickDefaultTypeInternal _MsgTellBeKick_default_instance_;
class MsgTellMarquee;
class MsgTellMarqueeDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellMarqueeDefaultTypeInternal _MsgTellMarquee_default_instance_;
class MsgTellMatchPlayerCount;
class MsgTellMatchPlayerCountDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellMatchPlayerCountDefaultTypeInternal _MsgTellMatchPlayerCount_default_instance_;
class MsgTellMatchWaitTime;
class MsgTellMatchWaitTimeDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellMatchWaitTimeDefaultTypeInternal _MsgTellMatchWaitTime_default_instance_;
class MsgTellQueryBasic;
class MsgTellQueryBasicDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellQueryBasicDefaultTypeInternal _MsgTellQueryBasic_default_instance_;
class MsgTellSevenExtendReward;
class MsgTellSevenExtendRewardDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellSevenExtendRewardDefaultTypeInternal _MsgTellSevenExtendReward_default_instance_;
class MsgTellSysNotcie;
class MsgTellSysNotcieDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellSysNotcieDefaultTypeInternal _MsgTellSysNotcie_default_instance_;
class MsgTitleChangeReq;
class MsgTitleChangeReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTitleChangeReqDefaultTypeInternal _MsgTitleChangeReq_default_instance_;
class MsgTransferMasterReq;
class MsgTransferMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTransferMasterReqDefaultTypeInternal _MsgTransferMasterReq_default_instance_;
class MsgUpdateGroupMatchReq;
class MsgUpdateGroupMatchReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUpdateGroupMatchReqDefaultTypeInternal _MsgUpdateGroupMatchReq_default_instance_;
class MsgUpdateSettingReq;
class MsgUpdateSettingReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUpdateSettingReqDefaultTypeInternal _MsgUpdateSettingReq_default_instance_;
class MsgUpgradeGuildReq;
class MsgUpgradeGuildReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUpgradeGuildReqDefaultTypeInternal _MsgUpgradeGuildReq_default_instance_;
class MsgUseItemReq;
class MsgUseItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUseItemReqDefaultTypeInternal _MsgUseItemReq_default_instance_;
class MsgViewMailReq;
class MsgViewMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgViewMailReqDefaultTypeInternal _MsgViewMailReq_default_instance_;
class PBExChangeInviteRecord;
class PBExChangeInviteRecordDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBExChangeInviteRecordDefaultTypeInternal _PBExChangeInviteRecord_default_instance_;
class PBStores;
class PBStoresDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBStoresDefaultTypeInternal _PBStores_default_instance_;
class PBStores_StoreEntry_DoNotUse;
class PBStores_StoreEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBStores_StoreEntry_DoNotUseDefaultTypeInternal _PBStores_StoreEntry_DoNotUse_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::MsgAddFriendInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgAddFriendInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgApplyGuildReq* Arena::CreateMaybeMessage<::KFMsg::MsgApplyGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgApplyMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::MsgApplyMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgAppointGuildMemberReq* Arena::CreateMaybeMessage<::KFMsg::MsgAppointGuildMemberReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgBindAlipayReq* Arena::CreateMaybeMessage<::KFMsg::MsgBindAlipayReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgBuyStoreAck* Arena::CreateMaybeMessage<::KFMsg::MsgBuyStoreAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgBuyStoreReq* Arena::CreateMaybeMessage<::KFMsg::MsgBuyStoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCancelMatchAck* Arena::CreateMaybeMessage<::KFMsg::MsgCancelMatchAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCancelMatchReq* Arena::CreateMaybeMessage<::KFMsg::MsgCancelMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgChangeIconBoxReq* Arena::CreateMaybeMessage<::KFMsg::MsgChangeIconBoxReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgChangeIconReq* Arena::CreateMaybeMessage<::KFMsg::MsgChangeIconReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgChangeModelReq* Arena::CreateMaybeMessage<::KFMsg::MsgChangeModelReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgChangeMottoReq* Arena::CreateMaybeMessage<::KFMsg::MsgChangeMottoReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgChangeNameReq* Arena::CreateMaybeMessage<::KFMsg::MsgChangeNameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgChangeSexReq* Arena::CreateMaybeMessage<::KFMsg::MsgChangeSexReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCompoundDataReq* Arena::CreateMaybeMessage<::KFMsg::MsgCompoundDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCreateGuildReq* Arena::CreateMaybeMessage<::KFMsg::MsgCreateGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCreateRoleReq* Arena::CreateMaybeMessage<::KFMsg::MsgCreateRoleReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDebugCommandReq* Arena::CreateMaybeMessage<::KFMsg::MsgDebugCommandReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDelFriendReq* Arena::CreateMaybeMessage<::KFMsg::MsgDelFriendReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDeleteMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgDeleteMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDissolveGuildReq* Arena::CreateMaybeMessage<::KFMsg::MsgDissolveGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDressClothesReq* Arena::CreateMaybeMessage<::KFMsg::MsgDressClothesReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgEnterChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgEnterChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgEnterGame* Arena::CreateMaybeMessage<::KFMsg::MsgEnterGame>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgExChangeInviteRecordAck* Arena::CreateMaybeMessage<::KFMsg::MsgExChangeInviteRecordAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgExChangeInviteRecordReq* Arena::CreateMaybeMessage<::KFMsg::MsgExChangeInviteRecordReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgExChangeInviteScoreAck* Arena::CreateMaybeMessage<::KFMsg::MsgExChangeInviteScoreAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgExChangeInviteScoreReq* Arena::CreateMaybeMessage<::KFMsg::MsgExChangeInviteScoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgExitGuildReq* Arena::CreateMaybeMessage<::KFMsg::MsgExitGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgGiveStoreReq* Arena::CreateMaybeMessage<::KFMsg::MsgGiveStoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgInviteGuildReq* Arena::CreateMaybeMessage<::KFMsg::MsgInviteGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgInviteMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::MsgInviteMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgKickMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::MsgKickMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgKickMemberReq* Arena::CreateMaybeMessage<::KFMsg::MsgKickMemberReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLeaveChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgLeaveChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLeaveMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::MsgLeaveMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginGameReq* Arena::CreateMaybeMessage<::KFMsg::MsgLoginGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginOutReq* Arena::CreateMaybeMessage<::KFMsg::MsgLoginOutReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginVerifyAck* Arena::CreateMaybeMessage<::KFMsg::MsgLoginVerifyAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginVerifyReq* Arena::CreateMaybeMessage<::KFMsg::MsgLoginVerifyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgMatchGroupPrepareReq* Arena::CreateMaybeMessage<::KFMsg::MsgMatchGroupPrepareReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgMatchResultAck* Arena::CreateMaybeMessage<::KFMsg::MsgMatchResultAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgModifyGuildMedalReq* Arena::CreateMaybeMessage<::KFMsg::MsgModifyGuildMedalReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgPlayerToastReq* Arena::CreateMaybeMessage<::KFMsg::MsgPlayerToastReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryFriendRankListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryFriendRankListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryFriendRankListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryFriendRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuestAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuestAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuestReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuestReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuildListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuildListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuildListAck_GuilddatasEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuildListAck_GuilddatasEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuildListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuildListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuildLogAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuildLogAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryGuildLogReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryGuildLogReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryInviteScoreAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryInviteScoreAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryInviteScoreReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryInviteScoreReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRankListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRankListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRankListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRecentListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRecentListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRecentListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRecentListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQuerySettingAck* Arena::CreateMaybeMessage<::KFMsg::MsgQuerySettingAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQuerySettingReq* Arena::CreateMaybeMessage<::KFMsg::MsgQuerySettingReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryStoreInfoAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryStoreInfoAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryStoreInfoReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryStoreInfoReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryToastCountAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryToastCountAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryToastCountReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryToastCountReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReceiveAchieveRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgReceiveAchieveRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReceiveActivityRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgReceiveActivityRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReceiveGiftRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgReceiveGiftRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReceiveMailRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgReceiveMailRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReceiveTaskRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgReceiveTaskRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRemoveDataReq* Arena::CreateMaybeMessage<::KFMsg::MsgRemoveDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReplyApplyMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::MsgReplyApplyMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReplyFriendInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgReplyFriendInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReplyInviteMatchGroupReq* Arena::CreateMaybeMessage<::KFMsg::MsgReplyInviteMatchGroupReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgResultDisplay* Arena::CreateMaybeMessage<::KFMsg::MsgResultDisplay>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReviewApplyReq* Arena::CreateMaybeMessage<::KFMsg::MsgReviewApplyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSearchGuildByNameReq* Arena::CreateMaybeMessage<::KFMsg::MsgSearchGuildByNameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSendChatInfo* Arena::CreateMaybeMessage<::KFMsg::MsgSendChatInfo>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSendChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgSendChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSendGroupChatInfo* Arena::CreateMaybeMessage<::KFMsg::MsgSendGroupChatInfo>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSendGroupChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgSendGroupChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSendOneByOneChatInfo* Arena::CreateMaybeMessage<::KFMsg::MsgSendOneByOneChatInfo>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSendOneByOneChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgSendOneByOneChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetGuildSwitchReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetGuildSwitchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetModelDefaultClothesReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetModelDefaultClothesReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetRefuseFriendInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetRefuseFriendInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetWishOrderReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetWishOrderReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSevenSignInRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgSevenSignInRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgShowRewardElement* Arena::CreateMaybeMessage<::KFMsg::MsgShowRewardElement>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgStartMatchAck* Arena::CreateMaybeMessage<::KFMsg::MsgStartMatchAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgStartMatchReq* Arena::CreateMaybeMessage<::KFMsg::MsgStartMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncAddData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncAddData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncRemoveData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncRemoveData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncUpdateData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncUpdateData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellBeKick* Arena::CreateMaybeMessage<::KFMsg::MsgTellBeKick>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellMarquee* Arena::CreateMaybeMessage<::KFMsg::MsgTellMarquee>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellMatchPlayerCount* Arena::CreateMaybeMessage<::KFMsg::MsgTellMatchPlayerCount>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellMatchWaitTime* Arena::CreateMaybeMessage<::KFMsg::MsgTellMatchWaitTime>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellQueryBasic* Arena::CreateMaybeMessage<::KFMsg::MsgTellQueryBasic>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellSevenExtendReward* Arena::CreateMaybeMessage<::KFMsg::MsgTellSevenExtendReward>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellSysNotcie* Arena::CreateMaybeMessage<::KFMsg::MsgTellSysNotcie>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTitleChangeReq* Arena::CreateMaybeMessage<::KFMsg::MsgTitleChangeReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTransferMasterReq* Arena::CreateMaybeMessage<::KFMsg::MsgTransferMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUpdateGroupMatchReq* Arena::CreateMaybeMessage<::KFMsg::MsgUpdateGroupMatchReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUpdateSettingReq* Arena::CreateMaybeMessage<::KFMsg::MsgUpdateSettingReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUpgradeGuildReq* Arena::CreateMaybeMessage<::KFMsg::MsgUpgradeGuildReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUseItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgUseItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgViewMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgViewMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBExChangeInviteRecord* Arena::CreateMaybeMessage<::KFMsg::PBExChangeInviteRecord>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBStores* Arena::CreateMaybeMessage<::KFMsg::PBStores>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBStores_StoreEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBStores_StoreEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum ClientProtocol {
  MSG_CLIENT_PROTOCOL_UNKNOW = 0,
  MSG_RESULT_DISPLAY = 1,
  MSG_LOGIN_ENTER_GAME = 10,
  MSG_SYNC_UPDATE_DATA = 11,
  MSG_SYNC_ADD_DATA = 12,
  MSG_SYNC_REMOVE_DATA = 13,
  MSG_TELL_QUERY_BASIC = 15,
  MSG_TELL_BE_KICK = 100,
  MSG_LOGIN_VERIFY_REQ = 101,
  MSG_LOGIN_VERIFY_ACK = 102,
  MSG_LOGIN_GAME_REQ = 103,
  MSG_LOGIN_OUT_REQ = 105,
  MSG_CREATE_ROLE_REQ = 107,
  MSG_CHANGE_NAME_REQ = 108,
  MSG_CHANGE_SEX_REQ = 109,
  MSG_RECEIVE_ACTIVITY_REWARD_REQ = 110,
  MSG_RECEIVE_TASK_REWARD_REQ = 111,
  MSG_RECEIVE_ACHIEVE_REWARD_REQ = 112,
  MSG_RECEIVE_GIFT_REWARD_REQ = 113,
  MSG_RECEIVE_MAIL_REWARD_REQ = 114,
  MSG_VIEW_MAIL_REQ = 115,
  MSG_DELETE_MAIL_REQ = 116,
  MSG_QUERY_MAIL_REQ = 117,
  MSG_START_MATCH_REQ = 118,
  MSG_START_MATCH_ACK = 119,
  MSG_CANCEL_MATCH_REQ = 120,
  MSG_MATCH_RESULT_ACK = 121,
  MSG_ADD_FRIEND_INVITE_REQ = 122,
  MSG_REPLY_FRIEND_INVITE_REQ = 123,
  MSG_DEL_FRIEND_REQ = 124,
  MSG_ENTER_CHAT_REQ = 126,
  MSG_SEND_CHAT_REQ = 127,
  MSG_SEND_CHAT_INFO = 128,
  MSG_LEAVE_CHAT_REQ = 129,
  MSG_SET_REFUSE_FRIEND_INVITE_REQ = 130,
  MSG_QUERY_BASIC_REQ = 131,
  MSG_QUERY_PLAYER_REQ = 132,
  MSG_QUERY_PLAYER_ACK = 14,
  MSG_BUY_STORE_REQ = 133,
  MSG_GIVE_STORE_REQ = 134,
  MSG_SEND_ONEBYONE_CHAT_REQ = 135,
  MSG_SEND_ONEBYONE_CHAT_INFO = 136,
  MSG_CHANGE_ICON_REQ = 137,
  MSG_DEBUG_COMMAND_REQ = 143,
  MSG_CHANGE_MOTTO_REQ = 144,
  MSG_SET_MODEL_DEFAULT_CLOTHES_REQ = 145,
  MSG_PLAYER_TOAST_REQ = 146,
  MSG_REMOVE_DATA_REQ = 147,
  MSG_DRESS_CLOTHES_REQ = 148,
  MSG_CHANGE_MODEL_REQ = 149,
  MSG_SHOW_REWARD_ELEMENT = 150,
  MSG_INVITE_MATCH_GROUP_REQ = 151,
  MSG_REPLY_INVITE_MATCH_GROUP_REQ = 153,
  MSG_LEAVE_MATCH_GROUP_REQ = 154,
  MSG_KICK_MATCH_GROUP_REQ = 155,
  MSG_APPLY_MATCH_GROUP_REQ = 156,
  MSG_REPLY_APPLY_MATCH_GROUP_REQ = 157,
  MSG_MATCH_GROUP_PREPARE_REQ = 160,
  MSG_CHANGE_ICON_BOX_REQ = 161,
  MSG_QUERY_GUEST_REQ = 162,
  MSG_QUERY_GUEST_ACK = 163,
  MSG_CANCEL_MATCH_ACK = 164,
  MSG_USE_ITEM_REQ = 165,
  MSG_QUERY_TOAST_COUNT_REQ = 166,
  MSG_QUERY_TOAST_COUNT_ACK = 167,
  MSG_QUERY_STORE_INFO_REQ = 170,
  MSG_QUERY_STORE_INFO_ACK = 171,
  MSG_BUY_STORE_ACK = 173,
  MSG_UPDATE_GROUP_MATCH_REQ = 174,
  MSG_SEND_GROUPCHAT_REQ = 175,
  MSG_SEND_GROUPCHAT_INFO = 176,
  MSG_SET_WISH_ORDER_REQ = 177,
  MSG_QUERY_SETTING_REQ = 178,
  MSG_QUERY_SETTING_ACK = 179,
  MSG_UPDATE_SETTING_REQ = 180,
  MSG_QUERY_RECENT_LIST_REQ = 181,
  MSG_QUERY_RECENT_LIST_ACK = 182,
  MSG_QUERY_RANK_LIST_REQ = 183,
  MSG_QUERY_RANK_LIST_ACK = 184,
  MSG_QUERY_FRIEND_RANK_LIST_REQ = 185,
  MSG_QUERY_FRIEND_RANK_LIST_ACK = 186,
  MSG_COMPOUND_DATA_REQ = 187,
  MSG_SEVEN_SIGNIN_REWARD_REQ = 198,
  MSG_TELL_SEVEN_EXTEND_REWARD = 199,
  MSG_CREATE_GUILD_REQ = 200,
  MSG_INVITE_GUILD_REQ = 201,
  MSG_APPLY_GUILD_REQ = 202,
  MSG_TELL_MATCH_WAIT_TIME = 203,
  MSG_EXIT_GUILD_REQ = 204,
  MSG_TRANSFER_MASTER_REQ = 205,
  MSG_REVIEW_APPLY_REQ = 206,
  MSG_DISSOLVE_GUILD_REQ = 207,
  MSG_MODIFY_GUILD_MEDAL_REQ = 208,
  MSG_QUERY_GUILD_LIST_REQ = 209,
  MSG_QUERY_GUILD_LIST_ACK = 210,
  MSG_KICK_MEMBER_REQ = 211,
  MSG_UPGRADE_GUILD_REQ = 212,
  MSG_APPOINT_GUILD_MEMBER_REQ = 213,
  MSG_SEARCH_GUILD_BY_NAME_REQ = 214,
  MSG_SET_GUILD_SWITCH_REQ = 215,
  MSG_QUERY_GUILD_LOG_REQ = 216,
  MSG_QUERY_GUILD_LOG_ACK = 217,
  MSG_TELL_MARQUEE = 300,
  MSG_TELL_SYS_NOTICE = 301,
  MSG_BIND_ALIPAY_REQ = 302,
  MSG_QUERY_INVITE_SCORE_REQ = 303,
  MSG_QUERY_INVITE_SCORE_ACK = 304,
  MSG_EXCHANGE_INVITE_SCORE_REQ = 305,
  MSG_EXCHANGE_INVITE_SCORE_ACK = 306,
  MSG_EXCHANGE_INVITE_RECORD_REQ = 307,
  MSG_EXCHANGE_INVITE_RECORD_ACK = 308,
  MSG_TELL_MATCH_PLAYER_COUNT = 309,
  MSG_TITLE_CHANGE_REQ = 310,
  ClientProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool ClientProtocol_IsValid(int value);
const ClientProtocol ClientProtocol_MIN = MSG_CLIENT_PROTOCOL_UNKNOW;
const ClientProtocol ClientProtocol_MAX = MSG_TITLE_CHANGE_REQ;
const int ClientProtocol_ARRAYSIZE = ClientProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* ClientProtocol_descriptor();
inline const ::std::string& ClientProtocol_Name(ClientProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientProtocol_descriptor(), value);
}
inline bool ClientProtocol_Parse(
    const ::std::string& name, ClientProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientProtocol>(
    ClientProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgResultDisplay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgResultDisplay) */ {
 public:
  MsgResultDisplay();
  virtual ~MsgResultDisplay();

  MsgResultDisplay(const MsgResultDisplay& from);

  inline MsgResultDisplay& operator=(const MsgResultDisplay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgResultDisplay(MsgResultDisplay&& from) noexcept
    : MsgResultDisplay() {
    *this = ::std::move(from);
  }

  inline MsgResultDisplay& operator=(MsgResultDisplay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResultDisplay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgResultDisplay* internal_default_instance() {
    return reinterpret_cast<const MsgResultDisplay*>(
               &_MsgResultDisplay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgResultDisplay* other);
  friend void swap(MsgResultDisplay& a, MsgResultDisplay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgResultDisplay* New() const final {
    return CreateMaybeMessage<MsgResultDisplay>(NULL);
  }

  MsgResultDisplay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgResultDisplay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgResultDisplay& from);
  void MergeFrom(const MsgResultDisplay& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResultDisplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param(int index) const;
  ::std::string* mutable_param(int index);
  void set_param(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param(int index, ::std::string&& value);
  #endif
  void set_param(int index, const char* value);
  void set_param(int index, const void* value, size_t size);
  ::std::string* add_param();
  void add_param(const ::std::string& value);
  #if LANG_CXX11
  void add_param(::std::string&& value);
  #endif
  void add_param(const char* value);
  void add_param(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgResultDisplay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgEnterGame) */ {
 public:
  MsgEnterGame();
  virtual ~MsgEnterGame();

  MsgEnterGame(const MsgEnterGame& from);

  inline MsgEnterGame& operator=(const MsgEnterGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgEnterGame(MsgEnterGame&& from) noexcept
    : MsgEnterGame() {
    *this = ::std::move(from);
  }

  inline MsgEnterGame& operator=(MsgEnterGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgEnterGame* internal_default_instance() {
    return reinterpret_cast<const MsgEnterGame*>(
               &_MsgEnterGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgEnterGame* other);
  friend void swap(MsgEnterGame& a, MsgEnterGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgEnterGame* New() const final {
    return CreateMaybeMessage<MsgEnterGame>(NULL);
  }

  MsgEnterGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgEnterGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgEnterGame& from);
  void MergeFrom(const MsgEnterGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgEnterGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 1;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 servertime = 2;
  void clear_servertime();
  static const int kServertimeFieldNumber = 2;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncUpdateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncUpdateData) */ {
 public:
  MsgSyncUpdateData();
  virtual ~MsgSyncUpdateData();

  MsgSyncUpdateData(const MsgSyncUpdateData& from);

  inline MsgSyncUpdateData& operator=(const MsgSyncUpdateData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncUpdateData(MsgSyncUpdateData&& from) noexcept
    : MsgSyncUpdateData() {
    *this = ::std::move(from);
  }

  inline MsgSyncUpdateData& operator=(MsgSyncUpdateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncUpdateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncUpdateData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncUpdateData*>(
               &_MsgSyncUpdateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgSyncUpdateData* other);
  friend void swap(MsgSyncUpdateData& a, MsgSyncUpdateData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncUpdateData* New() const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(NULL);
  }

  MsgSyncUpdateData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncUpdateData& from);
  void MergeFrom(const MsgSyncUpdateData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncUpdateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncUpdateData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncAddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncAddData) */ {
 public:
  MsgSyncAddData();
  virtual ~MsgSyncAddData();

  MsgSyncAddData(const MsgSyncAddData& from);

  inline MsgSyncAddData& operator=(const MsgSyncAddData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncAddData(MsgSyncAddData&& from) noexcept
    : MsgSyncAddData() {
    *this = ::std::move(from);
  }

  inline MsgSyncAddData& operator=(MsgSyncAddData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncAddData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncAddData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncAddData*>(
               &_MsgSyncAddData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgSyncAddData* other);
  friend void swap(MsgSyncAddData& a, MsgSyncAddData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncAddData* New() const final {
    return CreateMaybeMessage<MsgSyncAddData>(NULL);
  }

  MsgSyncAddData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncAddData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncAddData& from);
  void MergeFrom(const MsgSyncAddData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncAddData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncAddData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncRemoveData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncRemoveData) */ {
 public:
  MsgSyncRemoveData();
  virtual ~MsgSyncRemoveData();

  MsgSyncRemoveData(const MsgSyncRemoveData& from);

  inline MsgSyncRemoveData& operator=(const MsgSyncRemoveData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncRemoveData(MsgSyncRemoveData&& from) noexcept
    : MsgSyncRemoveData() {
    *this = ::std::move(from);
  }

  inline MsgSyncRemoveData& operator=(MsgSyncRemoveData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncRemoveData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncRemoveData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncRemoveData*>(
               &_MsgSyncRemoveData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgSyncRemoveData* other);
  friend void swap(MsgSyncRemoveData& a, MsgSyncRemoveData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncRemoveData* New() const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(NULL);
  }

  MsgSyncRemoveData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncRemoveData& from);
  void MergeFrom(const MsgSyncRemoveData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncRemoveData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncRemoveData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellQueryBasic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellQueryBasic) */ {
 public:
  MsgTellQueryBasic();
  virtual ~MsgTellQueryBasic();

  MsgTellQueryBasic(const MsgTellQueryBasic& from);

  inline MsgTellQueryBasic& operator=(const MsgTellQueryBasic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellQueryBasic(MsgTellQueryBasic&& from) noexcept
    : MsgTellQueryBasic() {
    *this = ::std::move(from);
  }

  inline MsgTellQueryBasic& operator=(MsgTellQueryBasic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellQueryBasic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellQueryBasic* internal_default_instance() {
    return reinterpret_cast<const MsgTellQueryBasic*>(
               &_MsgTellQueryBasic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgTellQueryBasic* other);
  friend void swap(MsgTellQueryBasic& a, MsgTellQueryBasic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellQueryBasic* New() const final {
    return CreateMaybeMessage<MsgTellQueryBasic>(NULL);
  }

  MsgTellQueryBasic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellQueryBasic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellQueryBasic& from);
  void MergeFrom(const MsgTellQueryBasic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellQueryBasic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellQueryBasic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellBeKick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellBeKick) */ {
 public:
  MsgTellBeKick();
  virtual ~MsgTellBeKick();

  MsgTellBeKick(const MsgTellBeKick& from);

  inline MsgTellBeKick& operator=(const MsgTellBeKick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellBeKick(MsgTellBeKick&& from) noexcept
    : MsgTellBeKick() {
    *this = ::std::move(from);
  }

  inline MsgTellBeKick& operator=(MsgTellBeKick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellBeKick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellBeKick* internal_default_instance() {
    return reinterpret_cast<const MsgTellBeKick*>(
               &_MsgTellBeKick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgTellBeKick* other);
  friend void swap(MsgTellBeKick& a, MsgTellBeKick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellBeKick* New() const final {
    return CreateMaybeMessage<MsgTellBeKick>(NULL);
  }

  MsgTellBeKick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellBeKick>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellBeKick& from);
  void MergeFrom(const MsgTellBeKick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellBeKick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellBeKick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginVerifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginVerifyReq) */ {
 public:
  MsgLoginVerifyReq();
  virtual ~MsgLoginVerifyReq();

  MsgLoginVerifyReq(const MsgLoginVerifyReq& from);

  inline MsgLoginVerifyReq& operator=(const MsgLoginVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginVerifyReq(MsgLoginVerifyReq&& from) noexcept
    : MsgLoginVerifyReq() {
    *this = ::std::move(from);
  }

  inline MsgLoginVerifyReq& operator=(MsgLoginVerifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginVerifyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginVerifyReq* internal_default_instance() {
    return reinterpret_cast<const MsgLoginVerifyReq*>(
               &_MsgLoginVerifyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgLoginVerifyReq* other);
  friend void swap(MsgLoginVerifyReq& a, MsgLoginVerifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginVerifyReq* New() const final {
    return CreateMaybeMessage<MsgLoginVerifyReq>(NULL);
  }

  MsgLoginVerifyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginVerifyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginVerifyReq& from);
  void MergeFrom(const MsgLoginVerifyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginVerifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 accountid = 1;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginVerifyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginVerifyAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginVerifyAck) */ {
 public:
  MsgLoginVerifyAck();
  virtual ~MsgLoginVerifyAck();

  MsgLoginVerifyAck(const MsgLoginVerifyAck& from);

  inline MsgLoginVerifyAck& operator=(const MsgLoginVerifyAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginVerifyAck(MsgLoginVerifyAck&& from) noexcept
    : MsgLoginVerifyAck() {
    *this = ::std::move(from);
  }

  inline MsgLoginVerifyAck& operator=(MsgLoginVerifyAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginVerifyAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginVerifyAck* internal_default_instance() {
    return reinterpret_cast<const MsgLoginVerifyAck*>(
               &_MsgLoginVerifyAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgLoginVerifyAck* other);
  friend void swap(MsgLoginVerifyAck& a, MsgLoginVerifyAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginVerifyAck* New() const final {
    return CreateMaybeMessage<MsgLoginVerifyAck>(NULL);
  }

  MsgLoginVerifyAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginVerifyAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginVerifyAck& from);
  void MergeFrom(const MsgLoginVerifyAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginVerifyAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginVerifyAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginGameReq) */ {
 public:
  MsgLoginGameReq();
  virtual ~MsgLoginGameReq();

  MsgLoginGameReq(const MsgLoginGameReq& from);

  inline MsgLoginGameReq& operator=(const MsgLoginGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginGameReq(MsgLoginGameReq&& from) noexcept
    : MsgLoginGameReq() {
    *this = ::std::move(from);
  }

  inline MsgLoginGameReq& operator=(MsgLoginGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginGameReq* internal_default_instance() {
    return reinterpret_cast<const MsgLoginGameReq*>(
               &_MsgLoginGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(MsgLoginGameReq* other);
  friend void swap(MsgLoginGameReq& a, MsgLoginGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginGameReq* New() const final {
    return CreateMaybeMessage<MsgLoginGameReq>(NULL);
  }

  MsgLoginGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginGameReq& from);
  void MergeFrom(const MsgLoginGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginOutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginOutReq) */ {
 public:
  MsgLoginOutReq();
  virtual ~MsgLoginOutReq();

  MsgLoginOutReq(const MsgLoginOutReq& from);

  inline MsgLoginOutReq& operator=(const MsgLoginOutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginOutReq(MsgLoginOutReq&& from) noexcept
    : MsgLoginOutReq() {
    *this = ::std::move(from);
  }

  inline MsgLoginOutReq& operator=(MsgLoginOutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginOutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginOutReq* internal_default_instance() {
    return reinterpret_cast<const MsgLoginOutReq*>(
               &_MsgLoginOutReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(MsgLoginOutReq* other);
  friend void swap(MsgLoginOutReq& a, MsgLoginOutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginOutReq* New() const final {
    return CreateMaybeMessage<MsgLoginOutReq>(NULL);
  }

  MsgLoginOutReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginOutReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginOutReq& from);
  void MergeFrom(const MsgLoginOutReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginOutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginOutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCreateRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCreateRoleReq) */ {
 public:
  MsgCreateRoleReq();
  virtual ~MsgCreateRoleReq();

  MsgCreateRoleReq(const MsgCreateRoleReq& from);

  inline MsgCreateRoleReq& operator=(const MsgCreateRoleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCreateRoleReq(MsgCreateRoleReq&& from) noexcept
    : MsgCreateRoleReq() {
    *this = ::std::move(from);
  }

  inline MsgCreateRoleReq& operator=(MsgCreateRoleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateRoleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCreateRoleReq* internal_default_instance() {
    return reinterpret_cast<const MsgCreateRoleReq*>(
               &_MsgCreateRoleReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(MsgCreateRoleReq* other);
  friend void swap(MsgCreateRoleReq& a, MsgCreateRoleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCreateRoleReq* New() const final {
    return CreateMaybeMessage<MsgCreateRoleReq>(NULL);
  }

  MsgCreateRoleReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCreateRoleReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCreateRoleReq& from);
  void MergeFrom(const MsgCreateRoleReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreateRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 sex = 2;
  void clear_sex();
  static const int kSexFieldNumber = 2;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // uint32 model = 3;
  void clear_model();
  static const int kModelFieldNumber = 3;
  ::google::protobuf::uint32 model() const;
  void set_model(::google::protobuf::uint32 value);

  // uint64 inviterid = 4;
  void clear_inviterid();
  static const int kInviteridFieldNumber = 4;
  ::google::protobuf::uint64 inviterid() const;
  void set_inviterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCreateRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 model_;
  ::google::protobuf::uint64 inviterid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgChangeNameReq) */ {
 public:
  MsgChangeNameReq();
  virtual ~MsgChangeNameReq();

  MsgChangeNameReq(const MsgChangeNameReq& from);

  inline MsgChangeNameReq& operator=(const MsgChangeNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeNameReq(MsgChangeNameReq&& from) noexcept
    : MsgChangeNameReq() {
    *this = ::std::move(from);
  }

  inline MsgChangeNameReq& operator=(MsgChangeNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeNameReq* internal_default_instance() {
    return reinterpret_cast<const MsgChangeNameReq*>(
               &_MsgChangeNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(MsgChangeNameReq* other);
  friend void swap(MsgChangeNameReq& a, MsgChangeNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeNameReq* New() const final {
    return CreateMaybeMessage<MsgChangeNameReq>(NULL);
  }

  MsgChangeNameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeNameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeNameReq& from);
  void MergeFrom(const MsgChangeNameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeSexReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgChangeSexReq) */ {
 public:
  MsgChangeSexReq();
  virtual ~MsgChangeSexReq();

  MsgChangeSexReq(const MsgChangeSexReq& from);

  inline MsgChangeSexReq& operator=(const MsgChangeSexReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeSexReq(MsgChangeSexReq&& from) noexcept
    : MsgChangeSexReq() {
    *this = ::std::move(from);
  }

  inline MsgChangeSexReq& operator=(MsgChangeSexReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeSexReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeSexReq* internal_default_instance() {
    return reinterpret_cast<const MsgChangeSexReq*>(
               &_MsgChangeSexReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(MsgChangeSexReq* other);
  friend void swap(MsgChangeSexReq& a, MsgChangeSexReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeSexReq* New() const final {
    return CreateMaybeMessage<MsgChangeSexReq>(NULL);
  }

  MsgChangeSexReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeSexReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeSexReq& from);
  void MergeFrom(const MsgChangeSexReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeSexReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 sex = 1;
  void clear_sex();
  static const int kSexFieldNumber = 1;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeSexReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeIconReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgChangeIconReq) */ {
 public:
  MsgChangeIconReq();
  virtual ~MsgChangeIconReq();

  MsgChangeIconReq(const MsgChangeIconReq& from);

  inline MsgChangeIconReq& operator=(const MsgChangeIconReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeIconReq(MsgChangeIconReq&& from) noexcept
    : MsgChangeIconReq() {
    *this = ::std::move(from);
  }

  inline MsgChangeIconReq& operator=(MsgChangeIconReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeIconReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeIconReq* internal_default_instance() {
    return reinterpret_cast<const MsgChangeIconReq*>(
               &_MsgChangeIconReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(MsgChangeIconReq* other);
  friend void swap(MsgChangeIconReq& a, MsgChangeIconReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeIconReq* New() const final {
    return CreateMaybeMessage<MsgChangeIconReq>(NULL);
  }

  MsgChangeIconReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeIconReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeIconReq& from);
  void MergeFrom(const MsgChangeIconReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeIconReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes icon = 1;
  void clear_icon();
  static const int kIconFieldNumber = 1;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const void* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeIconReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeIconBoxReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgChangeIconBoxReq) */ {
 public:
  MsgChangeIconBoxReq();
  virtual ~MsgChangeIconBoxReq();

  MsgChangeIconBoxReq(const MsgChangeIconBoxReq& from);

  inline MsgChangeIconBoxReq& operator=(const MsgChangeIconBoxReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeIconBoxReq(MsgChangeIconBoxReq&& from) noexcept
    : MsgChangeIconBoxReq() {
    *this = ::std::move(from);
  }

  inline MsgChangeIconBoxReq& operator=(MsgChangeIconBoxReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeIconBoxReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeIconBoxReq* internal_default_instance() {
    return reinterpret_cast<const MsgChangeIconBoxReq*>(
               &_MsgChangeIconBoxReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(MsgChangeIconBoxReq* other);
  friend void swap(MsgChangeIconBoxReq& a, MsgChangeIconBoxReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeIconBoxReq* New() const final {
    return CreateMaybeMessage<MsgChangeIconBoxReq>(NULL);
  }

  MsgChangeIconBoxReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeIconBoxReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeIconBoxReq& from);
  void MergeFrom(const MsgChangeIconBoxReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeIconBoxReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes iconbox = 1;
  void clear_iconbox();
  static const int kIconboxFieldNumber = 1;
  const ::std::string& iconbox() const;
  void set_iconbox(const ::std::string& value);
  #if LANG_CXX11
  void set_iconbox(::std::string&& value);
  #endif
  void set_iconbox(const char* value);
  void set_iconbox(const void* value, size_t size);
  ::std::string* mutable_iconbox();
  ::std::string* release_iconbox();
  void set_allocated_iconbox(::std::string* iconbox);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeIconBoxReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr iconbox_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeMottoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgChangeMottoReq) */ {
 public:
  MsgChangeMottoReq();
  virtual ~MsgChangeMottoReq();

  MsgChangeMottoReq(const MsgChangeMottoReq& from);

  inline MsgChangeMottoReq& operator=(const MsgChangeMottoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeMottoReq(MsgChangeMottoReq&& from) noexcept
    : MsgChangeMottoReq() {
    *this = ::std::move(from);
  }

  inline MsgChangeMottoReq& operator=(MsgChangeMottoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeMottoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeMottoReq* internal_default_instance() {
    return reinterpret_cast<const MsgChangeMottoReq*>(
               &_MsgChangeMottoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(MsgChangeMottoReq* other);
  friend void swap(MsgChangeMottoReq& a, MsgChangeMottoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeMottoReq* New() const final {
    return CreateMaybeMessage<MsgChangeMottoReq>(NULL);
  }

  MsgChangeMottoReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeMottoReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeMottoReq& from);
  void MergeFrom(const MsgChangeMottoReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeMottoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes motto = 1;
  void clear_motto();
  static const int kMottoFieldNumber = 1;
  const ::std::string& motto() const;
  void set_motto(const ::std::string& value);
  #if LANG_CXX11
  void set_motto(::std::string&& value);
  #endif
  void set_motto(const char* value);
  void set_motto(const void* value, size_t size);
  ::std::string* mutable_motto();
  ::std::string* release_motto();
  void set_allocated_motto(::std::string* motto);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeMottoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr motto_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicReq) */ {
 public:
  MsgQueryBasicReq();
  virtual ~MsgQueryBasicReq();

  MsgQueryBasicReq(const MsgQueryBasicReq& from);

  inline MsgQueryBasicReq& operator=(const MsgQueryBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicReq(MsgQueryBasicReq&& from) noexcept
    : MsgQueryBasicReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicReq& operator=(MsgQueryBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicReq*>(
               &_MsgQueryBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(MsgQueryBasicReq* other);
  friend void swap(MsgQueryBasicReq& a, MsgQueryBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicReq* New() const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(NULL);
  }

  MsgQueryBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicReq& from);
  void MergeFrom(const MsgQueryBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerReq) */ {
 public:
  MsgQueryPlayerReq();
  virtual ~MsgQueryPlayerReq();

  MsgQueryPlayerReq(const MsgQueryPlayerReq& from);

  inline MsgQueryPlayerReq& operator=(const MsgQueryPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerReq(MsgQueryPlayerReq&& from) noexcept
    : MsgQueryPlayerReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerReq& operator=(MsgQueryPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerReq*>(
               &_MsgQueryPlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(MsgQueryPlayerReq* other);
  friend void swap(MsgQueryPlayerReq& a, MsgQueryPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerReq* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(NULL);
  }

  MsgQueryPlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerReq& from);
  void MergeFrom(const MsgQueryPlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerAck) */ {
 public:
  MsgQueryPlayerAck();
  virtual ~MsgQueryPlayerAck();

  MsgQueryPlayerAck(const MsgQueryPlayerAck& from);

  inline MsgQueryPlayerAck& operator=(const MsgQueryPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerAck(MsgQueryPlayerAck&& from) noexcept
    : MsgQueryPlayerAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerAck& operator=(MsgQueryPlayerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerAck*>(
               &_MsgQueryPlayerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(MsgQueryPlayerAck* other);
  friend void swap(MsgQueryPlayerAck& a, MsgQueryPlayerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerAck* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(NULL);
  }

  MsgQueryPlayerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerAck& from);
  void MergeFrom(const MsgQueryPlayerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveTaskRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReceiveTaskRewardReq) */ {
 public:
  MsgReceiveTaskRewardReq();
  virtual ~MsgReceiveTaskRewardReq();

  MsgReceiveTaskRewardReq(const MsgReceiveTaskRewardReq& from);

  inline MsgReceiveTaskRewardReq& operator=(const MsgReceiveTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReceiveTaskRewardReq(MsgReceiveTaskRewardReq&& from) noexcept
    : MsgReceiveTaskRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgReceiveTaskRewardReq& operator=(MsgReceiveTaskRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveTaskRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReceiveTaskRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgReceiveTaskRewardReq*>(
               &_MsgReceiveTaskRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(MsgReceiveTaskRewardReq* other);
  friend void swap(MsgReceiveTaskRewardReq& a, MsgReceiveTaskRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReceiveTaskRewardReq* New() const final {
    return CreateMaybeMessage<MsgReceiveTaskRewardReq>(NULL);
  }

  MsgReceiveTaskRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReceiveTaskRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReceiveTaskRewardReq& from);
  void MergeFrom(const MsgReceiveTaskRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReceiveTaskRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 taskid = 1;
  void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  ::google::protobuf::uint32 taskid() const;
  void set_taskid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveTaskRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 taskid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveActivityRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReceiveActivityRewardReq) */ {
 public:
  MsgReceiveActivityRewardReq();
  virtual ~MsgReceiveActivityRewardReq();

  MsgReceiveActivityRewardReq(const MsgReceiveActivityRewardReq& from);

  inline MsgReceiveActivityRewardReq& operator=(const MsgReceiveActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReceiveActivityRewardReq(MsgReceiveActivityRewardReq&& from) noexcept
    : MsgReceiveActivityRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgReceiveActivityRewardReq& operator=(MsgReceiveActivityRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveActivityRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReceiveActivityRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgReceiveActivityRewardReq*>(
               &_MsgReceiveActivityRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(MsgReceiveActivityRewardReq* other);
  friend void swap(MsgReceiveActivityRewardReq& a, MsgReceiveActivityRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReceiveActivityRewardReq* New() const final {
    return CreateMaybeMessage<MsgReceiveActivityRewardReq>(NULL);
  }

  MsgReceiveActivityRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReceiveActivityRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReceiveActivityRewardReq& from);
  void MergeFrom(const MsgReceiveActivityRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReceiveActivityRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveActivityRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveAchieveRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReceiveAchieveRewardReq) */ {
 public:
  MsgReceiveAchieveRewardReq();
  virtual ~MsgReceiveAchieveRewardReq();

  MsgReceiveAchieveRewardReq(const MsgReceiveAchieveRewardReq& from);

  inline MsgReceiveAchieveRewardReq& operator=(const MsgReceiveAchieveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReceiveAchieveRewardReq(MsgReceiveAchieveRewardReq&& from) noexcept
    : MsgReceiveAchieveRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgReceiveAchieveRewardReq& operator=(MsgReceiveAchieveRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveAchieveRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReceiveAchieveRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgReceiveAchieveRewardReq*>(
               &_MsgReceiveAchieveRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(MsgReceiveAchieveRewardReq* other);
  friend void swap(MsgReceiveAchieveRewardReq& a, MsgReceiveAchieveRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReceiveAchieveRewardReq* New() const final {
    return CreateMaybeMessage<MsgReceiveAchieveRewardReq>(NULL);
  }

  MsgReceiveAchieveRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReceiveAchieveRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReceiveAchieveRewardReq& from);
  void MergeFrom(const MsgReceiveAchieveRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReceiveAchieveRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 achieveid = 1;
  void clear_achieveid();
  static const int kAchieveidFieldNumber = 1;
  ::google::protobuf::uint32 achieveid() const;
  void set_achieveid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveAchieveRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 achieveid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveGiftRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReceiveGiftRewardReq) */ {
 public:
  MsgReceiveGiftRewardReq();
  virtual ~MsgReceiveGiftRewardReq();

  MsgReceiveGiftRewardReq(const MsgReceiveGiftRewardReq& from);

  inline MsgReceiveGiftRewardReq& operator=(const MsgReceiveGiftRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReceiveGiftRewardReq(MsgReceiveGiftRewardReq&& from) noexcept
    : MsgReceiveGiftRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgReceiveGiftRewardReq& operator=(MsgReceiveGiftRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveGiftRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReceiveGiftRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgReceiveGiftRewardReq*>(
               &_MsgReceiveGiftRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(MsgReceiveGiftRewardReq* other);
  friend void swap(MsgReceiveGiftRewardReq& a, MsgReceiveGiftRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReceiveGiftRewardReq* New() const final {
    return CreateMaybeMessage<MsgReceiveGiftRewardReq>(NULL);
  }

  MsgReceiveGiftRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReceiveGiftRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReceiveGiftRewardReq& from);
  void MergeFrom(const MsgReceiveGiftRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReceiveGiftRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes giftkey = 1;
  void clear_giftkey();
  static const int kGiftkeyFieldNumber = 1;
  const ::std::string& giftkey() const;
  void set_giftkey(const ::std::string& value);
  #if LANG_CXX11
  void set_giftkey(::std::string&& value);
  #endif
  void set_giftkey(const char* value);
  void set_giftkey(const void* value, size_t size);
  ::std::string* mutable_giftkey();
  ::std::string* release_giftkey();
  void set_allocated_giftkey(::std::string* giftkey);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveGiftRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr giftkey_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveMailRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReceiveMailRewardReq) */ {
 public:
  MsgReceiveMailRewardReq();
  virtual ~MsgReceiveMailRewardReq();

  MsgReceiveMailRewardReq(const MsgReceiveMailRewardReq& from);

  inline MsgReceiveMailRewardReq& operator=(const MsgReceiveMailRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReceiveMailRewardReq(MsgReceiveMailRewardReq&& from) noexcept
    : MsgReceiveMailRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgReceiveMailRewardReq& operator=(MsgReceiveMailRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveMailRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReceiveMailRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgReceiveMailRewardReq*>(
               &_MsgReceiveMailRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(MsgReceiveMailRewardReq* other);
  friend void swap(MsgReceiveMailRewardReq& a, MsgReceiveMailRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReceiveMailRewardReq* New() const final {
    return CreateMaybeMessage<MsgReceiveMailRewardReq>(NULL);
  }

  MsgReceiveMailRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReceiveMailRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReceiveMailRewardReq& from);
  void MergeFrom(const MsgReceiveMailRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReceiveMailRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 mailid = 1;
  void clear_mailid();
  static const int kMailidFieldNumber = 1;
  ::google::protobuf::uint64 mailid() const;
  void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveMailRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 mailid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgViewMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgViewMailReq) */ {
 public:
  MsgViewMailReq();
  virtual ~MsgViewMailReq();

  MsgViewMailReq(const MsgViewMailReq& from);

  inline MsgViewMailReq& operator=(const MsgViewMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgViewMailReq(MsgViewMailReq&& from) noexcept
    : MsgViewMailReq() {
    *this = ::std::move(from);
  }

  inline MsgViewMailReq& operator=(MsgViewMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgViewMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgViewMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgViewMailReq*>(
               &_MsgViewMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(MsgViewMailReq* other);
  friend void swap(MsgViewMailReq& a, MsgViewMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgViewMailReq* New() const final {
    return CreateMaybeMessage<MsgViewMailReq>(NULL);
  }

  MsgViewMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgViewMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgViewMailReq& from);
  void MergeFrom(const MsgViewMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgViewMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 mailid = 1;
  void clear_mailid();
  static const int kMailidFieldNumber = 1;
  ::google::protobuf::uint64 mailid() const;
  void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgViewMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 mailid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDeleteMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDeleteMailReq) */ {
 public:
  MsgDeleteMailReq();
  virtual ~MsgDeleteMailReq();

  MsgDeleteMailReq(const MsgDeleteMailReq& from);

  inline MsgDeleteMailReq& operator=(const MsgDeleteMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDeleteMailReq(MsgDeleteMailReq&& from) noexcept
    : MsgDeleteMailReq() {
    *this = ::std::move(from);
  }

  inline MsgDeleteMailReq& operator=(MsgDeleteMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeleteMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDeleteMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteMailReq*>(
               &_MsgDeleteMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(MsgDeleteMailReq* other);
  friend void swap(MsgDeleteMailReq& a, MsgDeleteMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDeleteMailReq* New() const final {
    return CreateMaybeMessage<MsgDeleteMailReq>(NULL);
  }

  MsgDeleteMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDeleteMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDeleteMailReq& from);
  void MergeFrom(const MsgDeleteMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDeleteMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 mailid = 1;
  void clear_mailid();
  static const int kMailidFieldNumber = 1;
  ::google::protobuf::uint64 mailid() const;
  void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDeleteMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 mailid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryMailReq) */ {
 public:
  MsgQueryMailReq();
  virtual ~MsgQueryMailReq();

  MsgQueryMailReq(const MsgQueryMailReq& from);

  inline MsgQueryMailReq& operator=(const MsgQueryMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryMailReq(MsgQueryMailReq&& from) noexcept
    : MsgQueryMailReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryMailReq& operator=(MsgQueryMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryMailReq*>(
               &_MsgQueryMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(MsgQueryMailReq* other);
  friend void swap(MsgQueryMailReq& a, MsgQueryMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryMailReq* New() const final {
    return CreateMaybeMessage<MsgQueryMailReq>(NULL);
  }

  MsgQueryMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryMailReq& from);
  void MergeFrom(const MsgQueryMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 mailtype = 1;
  void clear_mailtype();
  static const int kMailtypeFieldNumber = 1;
  ::google::protobuf::uint32 mailtype() const;
  void set_mailtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mailtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStartMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgStartMatchReq) */ {
 public:
  MsgStartMatchReq();
  virtual ~MsgStartMatchReq();

  MsgStartMatchReq(const MsgStartMatchReq& from);

  inline MsgStartMatchReq& operator=(const MsgStartMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStartMatchReq(MsgStartMatchReq&& from) noexcept
    : MsgStartMatchReq() {
    *this = ::std::move(from);
  }

  inline MsgStartMatchReq& operator=(MsgStartMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStartMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStartMatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgStartMatchReq*>(
               &_MsgStartMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(MsgStartMatchReq* other);
  friend void swap(MsgStartMatchReq& a, MsgStartMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStartMatchReq* New() const final {
    return CreateMaybeMessage<MsgStartMatchReq>(NULL);
  }

  MsgStartMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgStartMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgStartMatchReq& from);
  void MergeFrom(const MsgStartMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStartMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // bool allowgroup = 2;
  void clear_allowgroup();
  static const int kAllowgroupFieldNumber = 2;
  bool allowgroup() const;
  void set_allowgroup(bool value);

  // uint32 battleserverid = 3;
  void clear_battleserverid();
  static const int kBattleserveridFieldNumber = 3;
  ::google::protobuf::uint32 battleserverid() const;
  void set_battleserverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStartMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint32 matchid_;
  bool allowgroup_;
  ::google::protobuf::uint32 battleserverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStartMatchAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgStartMatchAck) */ {
 public:
  MsgStartMatchAck();
  virtual ~MsgStartMatchAck();

  MsgStartMatchAck(const MsgStartMatchAck& from);

  inline MsgStartMatchAck& operator=(const MsgStartMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStartMatchAck(MsgStartMatchAck&& from) noexcept
    : MsgStartMatchAck() {
    *this = ::std::move(from);
  }

  inline MsgStartMatchAck& operator=(MsgStartMatchAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStartMatchAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStartMatchAck* internal_default_instance() {
    return reinterpret_cast<const MsgStartMatchAck*>(
               &_MsgStartMatchAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(MsgStartMatchAck* other);
  friend void swap(MsgStartMatchAck& a, MsgStartMatchAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStartMatchAck* New() const final {
    return CreateMaybeMessage<MsgStartMatchAck>(NULL);
  }

  MsgStartMatchAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgStartMatchAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgStartMatchAck& from);
  void MergeFrom(const MsgStartMatchAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStartMatchAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStartMatchAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCancelMatchReq) */ {
 public:
  MsgCancelMatchReq();
  virtual ~MsgCancelMatchReq();

  MsgCancelMatchReq(const MsgCancelMatchReq& from);

  inline MsgCancelMatchReq& operator=(const MsgCancelMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCancelMatchReq(MsgCancelMatchReq&& from) noexcept
    : MsgCancelMatchReq() {
    *this = ::std::move(from);
  }

  inline MsgCancelMatchReq& operator=(MsgCancelMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCancelMatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgCancelMatchReq*>(
               &_MsgCancelMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(MsgCancelMatchReq* other);
  friend void swap(MsgCancelMatchReq& a, MsgCancelMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCancelMatchReq* New() const final {
    return CreateMaybeMessage<MsgCancelMatchReq>(NULL);
  }

  MsgCancelMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCancelMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCancelMatchReq& from);
  void MergeFrom(const MsgCancelMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCancelMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelMatchAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCancelMatchAck) */ {
 public:
  MsgCancelMatchAck();
  virtual ~MsgCancelMatchAck();

  MsgCancelMatchAck(const MsgCancelMatchAck& from);

  inline MsgCancelMatchAck& operator=(const MsgCancelMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCancelMatchAck(MsgCancelMatchAck&& from) noexcept
    : MsgCancelMatchAck() {
    *this = ::std::move(from);
  }

  inline MsgCancelMatchAck& operator=(MsgCancelMatchAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelMatchAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCancelMatchAck* internal_default_instance() {
    return reinterpret_cast<const MsgCancelMatchAck*>(
               &_MsgCancelMatchAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(MsgCancelMatchAck* other);
  friend void swap(MsgCancelMatchAck& a, MsgCancelMatchAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCancelMatchAck* New() const final {
    return CreateMaybeMessage<MsgCancelMatchAck>(NULL);
  }

  MsgCancelMatchAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCancelMatchAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCancelMatchAck& from);
  void MergeFrom(const MsgCancelMatchAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCancelMatchAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelMatchAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMatchResultAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgMatchResultAck) */ {
 public:
  MsgMatchResultAck();
  virtual ~MsgMatchResultAck();

  MsgMatchResultAck(const MsgMatchResultAck& from);

  inline MsgMatchResultAck& operator=(const MsgMatchResultAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMatchResultAck(MsgMatchResultAck&& from) noexcept
    : MsgMatchResultAck() {
    *this = ::std::move(from);
  }

  inline MsgMatchResultAck& operator=(MsgMatchResultAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMatchResultAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMatchResultAck* internal_default_instance() {
    return reinterpret_cast<const MsgMatchResultAck*>(
               &_MsgMatchResultAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(MsgMatchResultAck* other);
  friend void swap(MsgMatchResultAck& a, MsgMatchResultAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMatchResultAck* New() const final {
    return CreateMaybeMessage<MsgMatchResultAck>(NULL);
  }

  MsgMatchResultAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMatchResultAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMatchResultAck& from);
  void MergeFrom(const MsgMatchResultAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMatchResultAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes token = 6;
  void clear_token();
  static const int kTokenFieldNumber = 6;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // uint32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMatchResultAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellMatchWaitTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellMatchWaitTime) */ {
 public:
  MsgTellMatchWaitTime();
  virtual ~MsgTellMatchWaitTime();

  MsgTellMatchWaitTime(const MsgTellMatchWaitTime& from);

  inline MsgTellMatchWaitTime& operator=(const MsgTellMatchWaitTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellMatchWaitTime(MsgTellMatchWaitTime&& from) noexcept
    : MsgTellMatchWaitTime() {
    *this = ::std::move(from);
  }

  inline MsgTellMatchWaitTime& operator=(MsgTellMatchWaitTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellMatchWaitTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellMatchWaitTime* internal_default_instance() {
    return reinterpret_cast<const MsgTellMatchWaitTime*>(
               &_MsgTellMatchWaitTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(MsgTellMatchWaitTime* other);
  friend void swap(MsgTellMatchWaitTime& a, MsgTellMatchWaitTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellMatchWaitTime* New() const final {
    return CreateMaybeMessage<MsgTellMatchWaitTime>(NULL);
  }

  MsgTellMatchWaitTime* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellMatchWaitTime>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellMatchWaitTime& from);
  void MergeFrom(const MsgTellMatchWaitTime& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellMatchWaitTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 waittime = 1;
  void clear_waittime();
  static const int kWaittimeFieldNumber = 1;
  ::google::protobuf::uint32 waittime() const;
  void set_waittime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellMatchWaitTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 waittime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellMatchPlayerCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellMatchPlayerCount) */ {
 public:
  MsgTellMatchPlayerCount();
  virtual ~MsgTellMatchPlayerCount();

  MsgTellMatchPlayerCount(const MsgTellMatchPlayerCount& from);

  inline MsgTellMatchPlayerCount& operator=(const MsgTellMatchPlayerCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellMatchPlayerCount(MsgTellMatchPlayerCount&& from) noexcept
    : MsgTellMatchPlayerCount() {
    *this = ::std::move(from);
  }

  inline MsgTellMatchPlayerCount& operator=(MsgTellMatchPlayerCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellMatchPlayerCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellMatchPlayerCount* internal_default_instance() {
    return reinterpret_cast<const MsgTellMatchPlayerCount*>(
               &_MsgTellMatchPlayerCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(MsgTellMatchPlayerCount* other);
  friend void swap(MsgTellMatchPlayerCount& a, MsgTellMatchPlayerCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellMatchPlayerCount* New() const final {
    return CreateMaybeMessage<MsgTellMatchPlayerCount>(NULL);
  }

  MsgTellMatchPlayerCount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellMatchPlayerCount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellMatchPlayerCount& from);
  void MergeFrom(const MsgTellMatchPlayerCount& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellMatchPlayerCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellMatchPlayerCount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAddFriendInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgAddFriendInviteReq) */ {
 public:
  MsgAddFriendInviteReq();
  virtual ~MsgAddFriendInviteReq();

  MsgAddFriendInviteReq(const MsgAddFriendInviteReq& from);

  inline MsgAddFriendInviteReq& operator=(const MsgAddFriendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgAddFriendInviteReq(MsgAddFriendInviteReq&& from) noexcept
    : MsgAddFriendInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgAddFriendInviteReq& operator=(MsgAddFriendInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAddFriendInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgAddFriendInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgAddFriendInviteReq*>(
               &_MsgAddFriendInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(MsgAddFriendInviteReq* other);
  friend void swap(MsgAddFriendInviteReq& a, MsgAddFriendInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgAddFriendInviteReq* New() const final {
    return CreateMaybeMessage<MsgAddFriendInviteReq>(NULL);
  }

  MsgAddFriendInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgAddFriendInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgAddFriendInviteReq& from);
  void MergeFrom(const MsgAddFriendInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAddFriendInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAddFriendInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyFriendInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReplyFriendInviteReq) */ {
 public:
  MsgReplyFriendInviteReq();
  virtual ~MsgReplyFriendInviteReq();

  MsgReplyFriendInviteReq(const MsgReplyFriendInviteReq& from);

  inline MsgReplyFriendInviteReq& operator=(const MsgReplyFriendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReplyFriendInviteReq(MsgReplyFriendInviteReq&& from) noexcept
    : MsgReplyFriendInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgReplyFriendInviteReq& operator=(MsgReplyFriendInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyFriendInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReplyFriendInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgReplyFriendInviteReq*>(
               &_MsgReplyFriendInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(MsgReplyFriendInviteReq* other);
  friend void swap(MsgReplyFriendInviteReq& a, MsgReplyFriendInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReplyFriendInviteReq* New() const final {
    return CreateMaybeMessage<MsgReplyFriendInviteReq>(NULL);
  }

  MsgReplyFriendInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReplyFriendInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReplyFriendInviteReq& from);
  void MergeFrom(const MsgReplyFriendInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReplyFriendInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 operate = 2;
  void clear_operate();
  static const int kOperateFieldNumber = 2;
  ::google::protobuf::uint32 operate() const;
  void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyFriendInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 operate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDelFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDelFriendReq) */ {
 public:
  MsgDelFriendReq();
  virtual ~MsgDelFriendReq();

  MsgDelFriendReq(const MsgDelFriendReq& from);

  inline MsgDelFriendReq& operator=(const MsgDelFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDelFriendReq(MsgDelFriendReq&& from) noexcept
    : MsgDelFriendReq() {
    *this = ::std::move(from);
  }

  inline MsgDelFriendReq& operator=(MsgDelFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDelFriendReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDelFriendReq* internal_default_instance() {
    return reinterpret_cast<const MsgDelFriendReq*>(
               &_MsgDelFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(MsgDelFriendReq* other);
  friend void swap(MsgDelFriendReq& a, MsgDelFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDelFriendReq* New() const final {
    return CreateMaybeMessage<MsgDelFriendReq>(NULL);
  }

  MsgDelFriendReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDelFriendReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDelFriendReq& from);
  void MergeFrom(const MsgDelFriendReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDelFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDelFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetRefuseFriendInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetRefuseFriendInviteReq) */ {
 public:
  MsgSetRefuseFriendInviteReq();
  virtual ~MsgSetRefuseFriendInviteReq();

  MsgSetRefuseFriendInviteReq(const MsgSetRefuseFriendInviteReq& from);

  inline MsgSetRefuseFriendInviteReq& operator=(const MsgSetRefuseFriendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetRefuseFriendInviteReq(MsgSetRefuseFriendInviteReq&& from) noexcept
    : MsgSetRefuseFriendInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgSetRefuseFriendInviteReq& operator=(MsgSetRefuseFriendInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetRefuseFriendInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetRefuseFriendInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetRefuseFriendInviteReq*>(
               &_MsgSetRefuseFriendInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(MsgSetRefuseFriendInviteReq* other);
  friend void swap(MsgSetRefuseFriendInviteReq& a, MsgSetRefuseFriendInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetRefuseFriendInviteReq* New() const final {
    return CreateMaybeMessage<MsgSetRefuseFriendInviteReq>(NULL);
  }

  MsgSetRefuseFriendInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetRefuseFriendInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetRefuseFriendInviteReq& from);
  void MergeFrom(const MsgSetRefuseFriendInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetRefuseFriendInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 refuse = 1;
  void clear_refuse();
  static const int kRefuseFieldNumber = 1;
  ::google::protobuf::uint32 refuse() const;
  void set_refuse(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetRefuseFriendInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 refuse_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgEnterChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgEnterChatReq) */ {
 public:
  MsgEnterChatReq();
  virtual ~MsgEnterChatReq();

  MsgEnterChatReq(const MsgEnterChatReq& from);

  inline MsgEnterChatReq& operator=(const MsgEnterChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgEnterChatReq(MsgEnterChatReq&& from) noexcept
    : MsgEnterChatReq() {
    *this = ::std::move(from);
  }

  inline MsgEnterChatReq& operator=(MsgEnterChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgEnterChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgEnterChatReq*>(
               &_MsgEnterChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(MsgEnterChatReq* other);
  friend void swap(MsgEnterChatReq& a, MsgEnterChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgEnterChatReq* New() const final {
    return CreateMaybeMessage<MsgEnterChatReq>(NULL);
  }

  MsgEnterChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgEnterChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgEnterChatReq& from);
  void MergeFrom(const MsgEnterChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgEnterChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgEnterChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSendChatReq) */ {
 public:
  MsgSendChatReq();
  virtual ~MsgSendChatReq();

  MsgSendChatReq(const MsgSendChatReq& from);

  inline MsgSendChatReq& operator=(const MsgSendChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSendChatReq(MsgSendChatReq&& from) noexcept
    : MsgSendChatReq() {
    *this = ::std::move(from);
  }

  inline MsgSendChatReq& operator=(MsgSendChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSendChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgSendChatReq*>(
               &_MsgSendChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(MsgSendChatReq* other);
  friend void swap(MsgSendChatReq& a, MsgSendChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSendChatReq* New() const final {
    return CreateMaybeMessage<MsgSendChatReq>(NULL);
  }

  MsgSendChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSendChatReq& from);
  void MergeFrom(const MsgSendChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::uint32 isvoice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSendChatInfo) */ {
 public:
  MsgSendChatInfo();
  virtual ~MsgSendChatInfo();

  MsgSendChatInfo(const MsgSendChatInfo& from);

  inline MsgSendChatInfo& operator=(const MsgSendChatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSendChatInfo(MsgSendChatInfo&& from) noexcept
    : MsgSendChatInfo() {
    *this = ::std::move(from);
  }

  inline MsgSendChatInfo& operator=(MsgSendChatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendChatInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSendChatInfo* internal_default_instance() {
    return reinterpret_cast<const MsgSendChatInfo*>(
               &_MsgSendChatInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(MsgSendChatInfo* other);
  friend void swap(MsgSendChatInfo& a, MsgSendChatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSendChatInfo* New() const final {
    return CreateMaybeMessage<MsgSendChatInfo>(NULL);
  }

  MsgSendChatInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendChatInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSendChatInfo& from);
  void MergeFrom(const MsgSendChatInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendChatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // bytes playername = 3;
  void clear_playername();
  static const int kPlayernameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // bytes playericon = 5;
  void clear_playericon();
  static const int kPlayericonFieldNumber = 5;
  const ::std::string& playericon() const;
  void set_playericon(const ::std::string& value);
  #if LANG_CXX11
  void set_playericon(::std::string&& value);
  #endif
  void set_playericon(const char* value);
  void set_playericon(const void* value, size_t size);
  ::std::string* mutable_playericon();
  ::std::string* release_playericon();
  void set_allocated_playericon(::std::string* playericon);

  // bytes playericonbox = 8;
  void clear_playericonbox();
  static const int kPlayericonboxFieldNumber = 8;
  const ::std::string& playericonbox() const;
  void set_playericonbox(const ::std::string& value);
  #if LANG_CXX11
  void set_playericonbox(::std::string&& value);
  #endif
  void set_playericonbox(const char* value);
  void set_playericonbox(const void* value, size_t size);
  ::std::string* mutable_playericonbox();
  ::std::string* release_playericonbox();
  void set_allocated_playericonbox(::std::string* playericonbox);

  // uint64 playerid = 4;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // uint32 playergrade = 6;
  void clear_playergrade();
  static const int kPlayergradeFieldNumber = 6;
  ::google::protobuf::uint32 playergrade() const;
  void set_playergrade(::google::protobuf::uint32 value);

  // uint64 playerserverid = 9;
  void clear_playerserverid();
  static const int kPlayerserveridFieldNumber = 9;
  ::google::protobuf::uint64 playerserverid() const;
  void set_playerserverid(::google::protobuf::uint64 value);

  // uint32 playersex = 7;
  void clear_playersex();
  static const int kPlayersexFieldNumber = 7;
  ::google::protobuf::uint32 playersex() const;
  void set_playersex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendChatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr playericon_;
  ::google::protobuf::internal::ArenaStringPtr playericonbox_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 isvoice_;
  ::google::protobuf::uint32 playergrade_;
  ::google::protobuf::uint64 playerserverid_;
  ::google::protobuf::uint32 playersex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLeaveChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLeaveChatReq) */ {
 public:
  MsgLeaveChatReq();
  virtual ~MsgLeaveChatReq();

  MsgLeaveChatReq(const MsgLeaveChatReq& from);

  inline MsgLeaveChatReq& operator=(const MsgLeaveChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLeaveChatReq(MsgLeaveChatReq&& from) noexcept
    : MsgLeaveChatReq() {
    *this = ::std::move(from);
  }

  inline MsgLeaveChatReq& operator=(MsgLeaveChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLeaveChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLeaveChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgLeaveChatReq*>(
               &_MsgLeaveChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(MsgLeaveChatReq* other);
  friend void swap(MsgLeaveChatReq& a, MsgLeaveChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLeaveChatReq* New() const final {
    return CreateMaybeMessage<MsgLeaveChatReq>(NULL);
  }

  MsgLeaveChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLeaveChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLeaveChatReq& from);
  void MergeFrom(const MsgLeaveChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLeaveChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLeaveChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendOneByOneChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSendOneByOneChatReq) */ {
 public:
  MsgSendOneByOneChatReq();
  virtual ~MsgSendOneByOneChatReq();

  MsgSendOneByOneChatReq(const MsgSendOneByOneChatReq& from);

  inline MsgSendOneByOneChatReq& operator=(const MsgSendOneByOneChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSendOneByOneChatReq(MsgSendOneByOneChatReq&& from) noexcept
    : MsgSendOneByOneChatReq() {
    *this = ::std::move(from);
  }

  inline MsgSendOneByOneChatReq& operator=(MsgSendOneByOneChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendOneByOneChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSendOneByOneChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgSendOneByOneChatReq*>(
               &_MsgSendOneByOneChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(MsgSendOneByOneChatReq* other);
  friend void swap(MsgSendOneByOneChatReq& a, MsgSendOneByOneChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSendOneByOneChatReq* New() const final {
    return CreateMaybeMessage<MsgSendOneByOneChatReq>(NULL);
  }

  MsgSendOneByOneChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendOneByOneChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSendOneByOneChatReq& from);
  void MergeFrom(const MsgSendOneByOneChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendOneByOneChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // bytes chattype = 4;
  void clear_chattype();
  static const int kChattypeFieldNumber = 4;
  const ::std::string& chattype() const;
  void set_chattype(const ::std::string& value);
  #if LANG_CXX11
  void set_chattype(::std::string&& value);
  #endif
  void set_chattype(const char* value);
  void set_chattype(const void* value, size_t size);
  ::std::string* mutable_chattype();
  ::std::string* release_chattype();
  void set_allocated_chattype(::std::string* chattype);

  // bytes selfinfo = 5;
  void clear_selfinfo();
  static const int kSelfinfoFieldNumber = 5;
  const ::std::string& selfinfo() const;
  void set_selfinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_selfinfo(::std::string&& value);
  #endif
  void set_selfinfo(const char* value);
  void set_selfinfo(const void* value, size_t size);
  ::std::string* mutable_selfinfo();
  ::std::string* release_selfinfo();
  void set_allocated_selfinfo(::std::string* selfinfo);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 6;
  void clear_serverid();
  static const int kServeridFieldNumber = 6;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendOneByOneChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::internal::ArenaStringPtr chattype_;
  ::google::protobuf::internal::ArenaStringPtr selfinfo_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 isvoice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendOneByOneChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSendOneByOneChatInfo) */ {
 public:
  MsgSendOneByOneChatInfo();
  virtual ~MsgSendOneByOneChatInfo();

  MsgSendOneByOneChatInfo(const MsgSendOneByOneChatInfo& from);

  inline MsgSendOneByOneChatInfo& operator=(const MsgSendOneByOneChatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSendOneByOneChatInfo(MsgSendOneByOneChatInfo&& from) noexcept
    : MsgSendOneByOneChatInfo() {
    *this = ::std::move(from);
  }

  inline MsgSendOneByOneChatInfo& operator=(MsgSendOneByOneChatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendOneByOneChatInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSendOneByOneChatInfo* internal_default_instance() {
    return reinterpret_cast<const MsgSendOneByOneChatInfo*>(
               &_MsgSendOneByOneChatInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(MsgSendOneByOneChatInfo* other);
  friend void swap(MsgSendOneByOneChatInfo& a, MsgSendOneByOneChatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSendOneByOneChatInfo* New() const final {
    return CreateMaybeMessage<MsgSendOneByOneChatInfo>(NULL);
  }

  MsgSendOneByOneChatInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendOneByOneChatInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSendOneByOneChatInfo& from);
  void MergeFrom(const MsgSendOneByOneChatInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendOneByOneChatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // bytes chattype = 4;
  void clear_chattype();
  static const int kChattypeFieldNumber = 4;
  const ::std::string& chattype() const;
  void set_chattype(const ::std::string& value);
  #if LANG_CXX11
  void set_chattype(::std::string&& value);
  #endif
  void set_chattype(const char* value);
  void set_chattype(const void* value, size_t size);
  ::std::string* mutable_chattype();
  ::std::string* release_chattype();
  void set_allocated_chattype(::std::string* chattype);

  // bytes playerinfo = 5;
  void clear_playerinfo();
  static const int kPlayerinfoFieldNumber = 5;
  const ::std::string& playerinfo() const;
  void set_playerinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_playerinfo(::std::string&& value);
  #endif
  void set_playerinfo(const char* value);
  void set_playerinfo(const void* value, size_t size);
  ::std::string* mutable_playerinfo();
  ::std::string* release_playerinfo();
  void set_allocated_playerinfo(::std::string* playerinfo);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 serverid = 6;
  void clear_serverid();
  static const int kServeridFieldNumber = 6;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendOneByOneChatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::internal::ArenaStringPtr chattype_;
  ::google::protobuf::internal::ArenaStringPtr playerinfo_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 isvoice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDebugCommandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDebugCommandReq) */ {
 public:
  MsgDebugCommandReq();
  virtual ~MsgDebugCommandReq();

  MsgDebugCommandReq(const MsgDebugCommandReq& from);

  inline MsgDebugCommandReq& operator=(const MsgDebugCommandReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDebugCommandReq(MsgDebugCommandReq&& from) noexcept
    : MsgDebugCommandReq() {
    *this = ::std::move(from);
  }

  inline MsgDebugCommandReq& operator=(MsgDebugCommandReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDebugCommandReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDebugCommandReq* internal_default_instance() {
    return reinterpret_cast<const MsgDebugCommandReq*>(
               &_MsgDebugCommandReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(MsgDebugCommandReq* other);
  friend void swap(MsgDebugCommandReq& a, MsgDebugCommandReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDebugCommandReq* New() const final {
    return CreateMaybeMessage<MsgDebugCommandReq>(NULL);
  }

  MsgDebugCommandReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDebugCommandReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDebugCommandReq& from);
  void MergeFrom(const MsgDebugCommandReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDebugCommandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const void* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // bytes command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const void* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDebugCommandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgShowRewardElement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgShowRewardElement) */ {
 public:
  MsgShowRewardElement();
  virtual ~MsgShowRewardElement();

  MsgShowRewardElement(const MsgShowRewardElement& from);

  inline MsgShowRewardElement& operator=(const MsgShowRewardElement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgShowRewardElement(MsgShowRewardElement&& from) noexcept
    : MsgShowRewardElement() {
    *this = ::std::move(from);
  }

  inline MsgShowRewardElement& operator=(MsgShowRewardElement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShowRewardElement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgShowRewardElement* internal_default_instance() {
    return reinterpret_cast<const MsgShowRewardElement*>(
               &_MsgShowRewardElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(MsgShowRewardElement* other);
  friend void swap(MsgShowRewardElement& a, MsgShowRewardElement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgShowRewardElement* New() const final {
    return CreateMaybeMessage<MsgShowRewardElement>(NULL);
  }

  MsgShowRewardElement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgShowRewardElement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgShowRewardElement& from);
  void MergeFrom(const MsgShowRewardElement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgShowRewardElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes reward = 1;
  void clear_reward();
  static const int kRewardFieldNumber = 1;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgShowRewardElement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendGroupChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSendGroupChatReq) */ {
 public:
  MsgSendGroupChatReq();
  virtual ~MsgSendGroupChatReq();

  MsgSendGroupChatReq(const MsgSendGroupChatReq& from);

  inline MsgSendGroupChatReq& operator=(const MsgSendGroupChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSendGroupChatReq(MsgSendGroupChatReq&& from) noexcept
    : MsgSendGroupChatReq() {
    *this = ::std::move(from);
  }

  inline MsgSendGroupChatReq& operator=(MsgSendGroupChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendGroupChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSendGroupChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgSendGroupChatReq*>(
               &_MsgSendGroupChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(MsgSendGroupChatReq* other);
  friend void swap(MsgSendGroupChatReq& a, MsgSendGroupChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSendGroupChatReq* New() const final {
    return CreateMaybeMessage<MsgSendGroupChatReq>(NULL);
  }

  MsgSendGroupChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendGroupChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSendGroupChatReq& from);
  void MergeFrom(const MsgSendGroupChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendGroupChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendGroupChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::uint32 isvoice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendGroupChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSendGroupChatInfo) */ {
 public:
  MsgSendGroupChatInfo();
  virtual ~MsgSendGroupChatInfo();

  MsgSendGroupChatInfo(const MsgSendGroupChatInfo& from);

  inline MsgSendGroupChatInfo& operator=(const MsgSendGroupChatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSendGroupChatInfo(MsgSendGroupChatInfo&& from) noexcept
    : MsgSendGroupChatInfo() {
    *this = ::std::move(from);
  }

  inline MsgSendGroupChatInfo& operator=(MsgSendGroupChatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendGroupChatInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSendGroupChatInfo* internal_default_instance() {
    return reinterpret_cast<const MsgSendGroupChatInfo*>(
               &_MsgSendGroupChatInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(MsgSendGroupChatInfo* other);
  friend void swap(MsgSendGroupChatInfo& a, MsgSendGroupChatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSendGroupChatInfo* New() const final {
    return CreateMaybeMessage<MsgSendGroupChatInfo>(NULL);
  }

  MsgSendGroupChatInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendGroupChatInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSendGroupChatInfo& from);
  void MergeFrom(const MsgSendGroupChatInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendGroupChatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes chatinfo = 1;
  void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  const ::std::string& chatinfo() const;
  void set_chatinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_chatinfo(::std::string&& value);
  #endif
  void set_chatinfo(const char* value);
  void set_chatinfo(const void* value, size_t size);
  ::std::string* mutable_chatinfo();
  ::std::string* release_chatinfo();
  void set_allocated_chatinfo(::std::string* chatinfo);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 isvoice = 2;
  void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  ::google::protobuf::uint32 isvoice() const;
  void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendGroupChatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatinfo_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 isvoice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgBuyStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgBuyStoreReq) */ {
 public:
  MsgBuyStoreReq();
  virtual ~MsgBuyStoreReq();

  MsgBuyStoreReq(const MsgBuyStoreReq& from);

  inline MsgBuyStoreReq& operator=(const MsgBuyStoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgBuyStoreReq(MsgBuyStoreReq&& from) noexcept
    : MsgBuyStoreReq() {
    *this = ::std::move(from);
  }

  inline MsgBuyStoreReq& operator=(MsgBuyStoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBuyStoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgBuyStoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgBuyStoreReq*>(
               &_MsgBuyStoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(MsgBuyStoreReq* other);
  friend void swap(MsgBuyStoreReq& a, MsgBuyStoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgBuyStoreReq* New() const final {
    return CreateMaybeMessage<MsgBuyStoreReq>(NULL);
  }

  MsgBuyStoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgBuyStoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgBuyStoreReq& from);
  void MergeFrom(const MsgBuyStoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBuyStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes buytype = 1;
  void clear_buytype();
  static const int kBuytypeFieldNumber = 1;
  const ::std::string& buytype() const;
  void set_buytype(const ::std::string& value);
  #if LANG_CXX11
  void set_buytype(::std::string&& value);
  #endif
  void set_buytype(const char* value);
  void set_buytype(const void* value, size_t size);
  ::std::string* mutable_buytype();
  ::std::string* release_buytype();
  void set_allocated_buytype(::std::string* buytype);

  // uint32 shopid = 2;
  void clear_shopid();
  static const int kShopidFieldNumber = 2;
  ::google::protobuf::uint32 shopid() const;
  void set_shopid(::google::protobuf::uint32 value);

  // uint32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgBuyStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr buytype_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgGiveStoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgGiveStoreReq) */ {
 public:
  MsgGiveStoreReq();
  virtual ~MsgGiveStoreReq();

  MsgGiveStoreReq(const MsgGiveStoreReq& from);

  inline MsgGiveStoreReq& operator=(const MsgGiveStoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgGiveStoreReq(MsgGiveStoreReq&& from) noexcept
    : MsgGiveStoreReq() {
    *this = ::std::move(from);
  }

  inline MsgGiveStoreReq& operator=(MsgGiveStoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGiveStoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGiveStoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgGiveStoreReq*>(
               &_MsgGiveStoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(MsgGiveStoreReq* other);
  friend void swap(MsgGiveStoreReq& a, MsgGiveStoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgGiveStoreReq* New() const final {
    return CreateMaybeMessage<MsgGiveStoreReq>(NULL);
  }

  MsgGiveStoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgGiveStoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgGiveStoreReq& from);
  void MergeFrom(const MsgGiveStoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGiveStoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 toplayerid = 1;
  void clear_toplayerid();
  static const int kToplayeridFieldNumber = 1;
  ::google::protobuf::uint64 toplayerid() const;
  void set_toplayerid(::google::protobuf::uint64 value);

  // uint32 shopid = 2;
  void clear_shopid();
  static const int kShopidFieldNumber = 2;
  ::google::protobuf::uint32 shopid() const;
  void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgGiveStoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 toplayerid_;
  ::google::protobuf::uint32 shopid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgPlayerToastReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgPlayerToastReq) */ {
 public:
  MsgPlayerToastReq();
  virtual ~MsgPlayerToastReq();

  MsgPlayerToastReq(const MsgPlayerToastReq& from);

  inline MsgPlayerToastReq& operator=(const MsgPlayerToastReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgPlayerToastReq(MsgPlayerToastReq&& from) noexcept
    : MsgPlayerToastReq() {
    *this = ::std::move(from);
  }

  inline MsgPlayerToastReq& operator=(MsgPlayerToastReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerToastReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgPlayerToastReq* internal_default_instance() {
    return reinterpret_cast<const MsgPlayerToastReq*>(
               &_MsgPlayerToastReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(MsgPlayerToastReq* other);
  friend void swap(MsgPlayerToastReq& a, MsgPlayerToastReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgPlayerToastReq* New() const final {
    return CreateMaybeMessage<MsgPlayerToastReq>(NULL);
  }

  MsgPlayerToastReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgPlayerToastReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgPlayerToastReq& from);
  void MergeFrom(const MsgPlayerToastReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPlayerToastReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgPlayerToastReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryToastCountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryToastCountReq) */ {
 public:
  MsgQueryToastCountReq();
  virtual ~MsgQueryToastCountReq();

  MsgQueryToastCountReq(const MsgQueryToastCountReq& from);

  inline MsgQueryToastCountReq& operator=(const MsgQueryToastCountReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryToastCountReq(MsgQueryToastCountReq&& from) noexcept
    : MsgQueryToastCountReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryToastCountReq& operator=(MsgQueryToastCountReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryToastCountReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryToastCountReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryToastCountReq*>(
               &_MsgQueryToastCountReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(MsgQueryToastCountReq* other);
  friend void swap(MsgQueryToastCountReq& a, MsgQueryToastCountReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryToastCountReq* New() const final {
    return CreateMaybeMessage<MsgQueryToastCountReq>(NULL);
  }

  MsgQueryToastCountReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryToastCountReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryToastCountReq& from);
  void MergeFrom(const MsgQueryToastCountReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryToastCountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryToastCountReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryToastCountAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryToastCountAck) */ {
 public:
  MsgQueryToastCountAck();
  virtual ~MsgQueryToastCountAck();

  MsgQueryToastCountAck(const MsgQueryToastCountAck& from);

  inline MsgQueryToastCountAck& operator=(const MsgQueryToastCountAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryToastCountAck(MsgQueryToastCountAck&& from) noexcept
    : MsgQueryToastCountAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryToastCountAck& operator=(MsgQueryToastCountAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryToastCountAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryToastCountAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryToastCountAck*>(
               &_MsgQueryToastCountAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(MsgQueryToastCountAck* other);
  friend void swap(MsgQueryToastCountAck& a, MsgQueryToastCountAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryToastCountAck* New() const final {
    return CreateMaybeMessage<MsgQueryToastCountAck>(NULL);
  }

  MsgQueryToastCountAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryToastCountAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryToastCountAck& from);
  void MergeFrom(const MsgQueryToastCountAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryToastCountAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 toastcount = 2;
  void clear_toastcount();
  static const int kToastcountFieldNumber = 2;
  ::google::protobuf::uint32 toastcount() const;
  void set_toastcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryToastCountAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 toastcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRemoveDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRemoveDataReq) */ {
 public:
  MsgRemoveDataReq();
  virtual ~MsgRemoveDataReq();

  MsgRemoveDataReq(const MsgRemoveDataReq& from);

  inline MsgRemoveDataReq& operator=(const MsgRemoveDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRemoveDataReq(MsgRemoveDataReq&& from) noexcept
    : MsgRemoveDataReq() {
    *this = ::std::move(from);
  }

  inline MsgRemoveDataReq& operator=(MsgRemoveDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRemoveDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRemoveDataReq* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveDataReq*>(
               &_MsgRemoveDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(MsgRemoveDataReq* other);
  friend void swap(MsgRemoveDataReq& a, MsgRemoveDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRemoveDataReq* New() const final {
    return CreateMaybeMessage<MsgRemoveDataReq>(NULL);
  }

  MsgRemoveDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRemoveDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRemoveDataReq& from);
  void MergeFrom(const MsgRemoveDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRemoveDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint64 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // uint32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRemoveDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeModelReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgChangeModelReq) */ {
 public:
  MsgChangeModelReq();
  virtual ~MsgChangeModelReq();

  MsgChangeModelReq(const MsgChangeModelReq& from);

  inline MsgChangeModelReq& operator=(const MsgChangeModelReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeModelReq(MsgChangeModelReq&& from) noexcept
    : MsgChangeModelReq() {
    *this = ::std::move(from);
  }

  inline MsgChangeModelReq& operator=(MsgChangeModelReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeModelReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeModelReq* internal_default_instance() {
    return reinterpret_cast<const MsgChangeModelReq*>(
               &_MsgChangeModelReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(MsgChangeModelReq* other);
  friend void swap(MsgChangeModelReq& a, MsgChangeModelReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeModelReq* New() const final {
    return CreateMaybeMessage<MsgChangeModelReq>(NULL);
  }

  MsgChangeModelReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeModelReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeModelReq& from);
  void MergeFrom(const MsgChangeModelReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeModelReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 modelid = 1;
  void clear_modelid();
  static const int kModelidFieldNumber = 1;
  ::google::protobuf::uint32 modelid() const;
  void set_modelid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeModelReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 modelid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetModelDefaultClothesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetModelDefaultClothesReq) */ {
 public:
  MsgSetModelDefaultClothesReq();
  virtual ~MsgSetModelDefaultClothesReq();

  MsgSetModelDefaultClothesReq(const MsgSetModelDefaultClothesReq& from);

  inline MsgSetModelDefaultClothesReq& operator=(const MsgSetModelDefaultClothesReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetModelDefaultClothesReq(MsgSetModelDefaultClothesReq&& from) noexcept
    : MsgSetModelDefaultClothesReq() {
    *this = ::std::move(from);
  }

  inline MsgSetModelDefaultClothesReq& operator=(MsgSetModelDefaultClothesReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetModelDefaultClothesReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetModelDefaultClothesReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetModelDefaultClothesReq*>(
               &_MsgSetModelDefaultClothesReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(MsgSetModelDefaultClothesReq* other);
  friend void swap(MsgSetModelDefaultClothesReq& a, MsgSetModelDefaultClothesReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetModelDefaultClothesReq* New() const final {
    return CreateMaybeMessage<MsgSetModelDefaultClothesReq>(NULL);
  }

  MsgSetModelDefaultClothesReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetModelDefaultClothesReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetModelDefaultClothesReq& from);
  void MergeFrom(const MsgSetModelDefaultClothesReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetModelDefaultClothesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 modelid = 1;
  void clear_modelid();
  static const int kModelidFieldNumber = 1;
  ::google::protobuf::uint32 modelid() const;
  void set_modelid(::google::protobuf::uint32 value);

  // uint32 clothesid = 2;
  void clear_clothesid();
  static const int kClothesidFieldNumber = 2;
  ::google::protobuf::uint32 clothesid() const;
  void set_clothesid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetModelDefaultClothesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 modelid_;
  ::google::protobuf::uint32 clothesid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDressClothesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDressClothesReq) */ {
 public:
  MsgDressClothesReq();
  virtual ~MsgDressClothesReq();

  MsgDressClothesReq(const MsgDressClothesReq& from);

  inline MsgDressClothesReq& operator=(const MsgDressClothesReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDressClothesReq(MsgDressClothesReq&& from) noexcept
    : MsgDressClothesReq() {
    *this = ::std::move(from);
  }

  inline MsgDressClothesReq& operator=(MsgDressClothesReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDressClothesReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDressClothesReq* internal_default_instance() {
    return reinterpret_cast<const MsgDressClothesReq*>(
               &_MsgDressClothesReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(MsgDressClothesReq* other);
  friend void swap(MsgDressClothesReq& a, MsgDressClothesReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDressClothesReq* New() const final {
    return CreateMaybeMessage<MsgDressClothesReq>(NULL);
  }

  MsgDressClothesReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDressClothesReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDressClothesReq& from);
  void MergeFrom(const MsgDressClothesReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDressClothesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 clothesid = 1;
  void clear_clothesid();
  static const int kClothesidFieldNumber = 1;
  ::google::protobuf::uint32 clothesid() const;
  void set_clothesid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDressClothesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 clothesid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgInviteMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgInviteMatchGroupReq) */ {
 public:
  MsgInviteMatchGroupReq();
  virtual ~MsgInviteMatchGroupReq();

  MsgInviteMatchGroupReq(const MsgInviteMatchGroupReq& from);

  inline MsgInviteMatchGroupReq& operator=(const MsgInviteMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgInviteMatchGroupReq(MsgInviteMatchGroupReq&& from) noexcept
    : MsgInviteMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline MsgInviteMatchGroupReq& operator=(MsgInviteMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInviteMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgInviteMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const MsgInviteMatchGroupReq*>(
               &_MsgInviteMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(MsgInviteMatchGroupReq* other);
  friend void swap(MsgInviteMatchGroupReq& a, MsgInviteMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgInviteMatchGroupReq* New() const final {
    return CreateMaybeMessage<MsgInviteMatchGroupReq>(NULL);
  }

  MsgInviteMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgInviteMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgInviteMatchGroupReq& from);
  void MergeFrom(const MsgInviteMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInviteMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const void* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // bytes playername = 5;
  void clear_playername();
  static const int kPlayernameFieldNumber = 5;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 matchid = 4;
  void clear_matchid();
  static const int kMatchidFieldNumber = 4;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgInviteMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyInviteMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReplyInviteMatchGroupReq) */ {
 public:
  MsgReplyInviteMatchGroupReq();
  virtual ~MsgReplyInviteMatchGroupReq();

  MsgReplyInviteMatchGroupReq(const MsgReplyInviteMatchGroupReq& from);

  inline MsgReplyInviteMatchGroupReq& operator=(const MsgReplyInviteMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReplyInviteMatchGroupReq(MsgReplyInviteMatchGroupReq&& from) noexcept
    : MsgReplyInviteMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline MsgReplyInviteMatchGroupReq& operator=(MsgReplyInviteMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyInviteMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReplyInviteMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const MsgReplyInviteMatchGroupReq*>(
               &_MsgReplyInviteMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(MsgReplyInviteMatchGroupReq* other);
  friend void swap(MsgReplyInviteMatchGroupReq& a, MsgReplyInviteMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReplyInviteMatchGroupReq* New() const final {
    return CreateMaybeMessage<MsgReplyInviteMatchGroupReq>(NULL);
  }

  MsgReplyInviteMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReplyInviteMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReplyInviteMatchGroupReq& from);
  void MergeFrom(const MsgReplyInviteMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReplyInviteMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint64 inviterid = 2;
  void clear_inviterid();
  static const int kInviteridFieldNumber = 2;
  ::google::protobuf::uint64 inviterid() const;
  void set_inviterid(::google::protobuf::uint64 value);

  // uint32 operate = 3;
  void clear_operate();
  static const int kOperateFieldNumber = 3;
  ::google::protobuf::uint32 operate() const;
  void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyInviteMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint64 inviterid_;
  ::google::protobuf::uint32 operate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLeaveMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLeaveMatchGroupReq) */ {
 public:
  MsgLeaveMatchGroupReq();
  virtual ~MsgLeaveMatchGroupReq();

  MsgLeaveMatchGroupReq(const MsgLeaveMatchGroupReq& from);

  inline MsgLeaveMatchGroupReq& operator=(const MsgLeaveMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLeaveMatchGroupReq(MsgLeaveMatchGroupReq&& from) noexcept
    : MsgLeaveMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline MsgLeaveMatchGroupReq& operator=(MsgLeaveMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLeaveMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLeaveMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const MsgLeaveMatchGroupReq*>(
               &_MsgLeaveMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(MsgLeaveMatchGroupReq* other);
  friend void swap(MsgLeaveMatchGroupReq& a, MsgLeaveMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLeaveMatchGroupReq* New() const final {
    return CreateMaybeMessage<MsgLeaveMatchGroupReq>(NULL);
  }

  MsgLeaveMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLeaveMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLeaveMatchGroupReq& from);
  void MergeFrom(const MsgLeaveMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLeaveMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLeaveMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgKickMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgKickMatchGroupReq) */ {
 public:
  MsgKickMatchGroupReq();
  virtual ~MsgKickMatchGroupReq();

  MsgKickMatchGroupReq(const MsgKickMatchGroupReq& from);

  inline MsgKickMatchGroupReq& operator=(const MsgKickMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgKickMatchGroupReq(MsgKickMatchGroupReq&& from) noexcept
    : MsgKickMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline MsgKickMatchGroupReq& operator=(MsgKickMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKickMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgKickMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const MsgKickMatchGroupReq*>(
               &_MsgKickMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(MsgKickMatchGroupReq* other);
  friend void swap(MsgKickMatchGroupReq& a, MsgKickMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgKickMatchGroupReq* New() const final {
    return CreateMaybeMessage<MsgKickMatchGroupReq>(NULL);
  }

  MsgKickMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgKickMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgKickMatchGroupReq& from);
  void MergeFrom(const MsgKickMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgKickMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 memberid = 1;
  void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgKickMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgApplyMatchGroupReq) */ {
 public:
  MsgApplyMatchGroupReq();
  virtual ~MsgApplyMatchGroupReq();

  MsgApplyMatchGroupReq(const MsgApplyMatchGroupReq& from);

  inline MsgApplyMatchGroupReq& operator=(const MsgApplyMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgApplyMatchGroupReq(MsgApplyMatchGroupReq&& from) noexcept
    : MsgApplyMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline MsgApplyMatchGroupReq& operator=(MsgApplyMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgApplyMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const MsgApplyMatchGroupReq*>(
               &_MsgApplyMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(MsgApplyMatchGroupReq* other);
  friend void swap(MsgApplyMatchGroupReq& a, MsgApplyMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyMatchGroupReq* New() const final {
    return CreateMaybeMessage<MsgApplyMatchGroupReq>(NULL);
  }

  MsgApplyMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgApplyMatchGroupReq& from);
  void MergeFrom(const MsgApplyMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyApplyMatchGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReplyApplyMatchGroupReq) */ {
 public:
  MsgReplyApplyMatchGroupReq();
  virtual ~MsgReplyApplyMatchGroupReq();

  MsgReplyApplyMatchGroupReq(const MsgReplyApplyMatchGroupReq& from);

  inline MsgReplyApplyMatchGroupReq& operator=(const MsgReplyApplyMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReplyApplyMatchGroupReq(MsgReplyApplyMatchGroupReq&& from) noexcept
    : MsgReplyApplyMatchGroupReq() {
    *this = ::std::move(from);
  }

  inline MsgReplyApplyMatchGroupReq& operator=(MsgReplyApplyMatchGroupReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyApplyMatchGroupReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReplyApplyMatchGroupReq* internal_default_instance() {
    return reinterpret_cast<const MsgReplyApplyMatchGroupReq*>(
               &_MsgReplyApplyMatchGroupReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(MsgReplyApplyMatchGroupReq* other);
  friend void swap(MsgReplyApplyMatchGroupReq& a, MsgReplyApplyMatchGroupReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReplyApplyMatchGroupReq* New() const final {
    return CreateMaybeMessage<MsgReplyApplyMatchGroupReq>(NULL);
  }

  MsgReplyApplyMatchGroupReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReplyApplyMatchGroupReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReplyApplyMatchGroupReq& from);
  void MergeFrom(const MsgReplyApplyMatchGroupReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReplyApplyMatchGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 applyid = 1;
  void clear_applyid();
  static const int kApplyidFieldNumber = 1;
  ::google::protobuf::uint64 applyid() const;
  void set_applyid(::google::protobuf::uint64 value);

  // uint32 operate = 3;
  void clear_operate();
  static const int kOperateFieldNumber = 3;
  ::google::protobuf::uint32 operate() const;
  void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyApplyMatchGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 applyid_;
  ::google::protobuf::uint32 operate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMatchGroupPrepareReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgMatchGroupPrepareReq) */ {
 public:
  MsgMatchGroupPrepareReq();
  virtual ~MsgMatchGroupPrepareReq();

  MsgMatchGroupPrepareReq(const MsgMatchGroupPrepareReq& from);

  inline MsgMatchGroupPrepareReq& operator=(const MsgMatchGroupPrepareReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMatchGroupPrepareReq(MsgMatchGroupPrepareReq&& from) noexcept
    : MsgMatchGroupPrepareReq() {
    *this = ::std::move(from);
  }

  inline MsgMatchGroupPrepareReq& operator=(MsgMatchGroupPrepareReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMatchGroupPrepareReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMatchGroupPrepareReq* internal_default_instance() {
    return reinterpret_cast<const MsgMatchGroupPrepareReq*>(
               &_MsgMatchGroupPrepareReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(MsgMatchGroupPrepareReq* other);
  friend void swap(MsgMatchGroupPrepareReq& a, MsgMatchGroupPrepareReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMatchGroupPrepareReq* New() const final {
    return CreateMaybeMessage<MsgMatchGroupPrepareReq>(NULL);
  }

  MsgMatchGroupPrepareReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMatchGroupPrepareReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMatchGroupPrepareReq& from);
  void MergeFrom(const MsgMatchGroupPrepareReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMatchGroupPrepareReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 prepare = 1;
  void clear_prepare();
  static const int kPrepareFieldNumber = 1;
  ::google::protobuf::uint32 prepare() const;
  void set_prepare(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMatchGroupPrepareReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 prepare_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpdateGroupMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUpdateGroupMatchReq) */ {
 public:
  MsgUpdateGroupMatchReq();
  virtual ~MsgUpdateGroupMatchReq();

  MsgUpdateGroupMatchReq(const MsgUpdateGroupMatchReq& from);

  inline MsgUpdateGroupMatchReq& operator=(const MsgUpdateGroupMatchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUpdateGroupMatchReq(MsgUpdateGroupMatchReq&& from) noexcept
    : MsgUpdateGroupMatchReq() {
    *this = ::std::move(from);
  }

  inline MsgUpdateGroupMatchReq& operator=(MsgUpdateGroupMatchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpdateGroupMatchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUpdateGroupMatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateGroupMatchReq*>(
               &_MsgUpdateGroupMatchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(MsgUpdateGroupMatchReq* other);
  friend void swap(MsgUpdateGroupMatchReq& a, MsgUpdateGroupMatchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateGroupMatchReq* New() const final {
    return CreateMaybeMessage<MsgUpdateGroupMatchReq>(NULL);
  }

  MsgUpdateGroupMatchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateGroupMatchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUpdateGroupMatchReq& from);
  void MergeFrom(const MsgUpdateGroupMatchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateGroupMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpdateGroupMatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 matchid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuestReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryGuestReq) */ {
 public:
  MsgQueryGuestReq();
  virtual ~MsgQueryGuestReq();

  MsgQueryGuestReq(const MsgQueryGuestReq& from);

  inline MsgQueryGuestReq& operator=(const MsgQueryGuestReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryGuestReq(MsgQueryGuestReq&& from) noexcept
    : MsgQueryGuestReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryGuestReq& operator=(MsgQueryGuestReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuestReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryGuestReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryGuestReq*>(
               &_MsgQueryGuestReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(MsgQueryGuestReq* other);
  friend void swap(MsgQueryGuestReq& a, MsgQueryGuestReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryGuestReq* New() const final {
    return CreateMaybeMessage<MsgQueryGuestReq>(NULL);
  }

  MsgQueryGuestReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryGuestReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryGuestReq& from);
  void MergeFrom(const MsgQueryGuestReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryGuestReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuestReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryGuestAck) */ {
 public:
  MsgQueryGuestAck();
  virtual ~MsgQueryGuestAck();

  MsgQueryGuestAck(const MsgQueryGuestAck& from);

  inline MsgQueryGuestAck& operator=(const MsgQueryGuestAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryGuestAck(MsgQueryGuestAck&& from) noexcept
    : MsgQueryGuestAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryGuestAck& operator=(MsgQueryGuestAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuestAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryGuestAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryGuestAck*>(
               &_MsgQueryGuestAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(MsgQueryGuestAck* other);
  friend void swap(MsgQueryGuestAck& a, MsgQueryGuestAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryGuestAck* New() const final {
    return CreateMaybeMessage<MsgQueryGuestAck>(NULL);
  }

  MsgQueryGuestAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryGuestAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryGuestAck& from);
  void MergeFrom(const MsgQueryGuestAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryGuestAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBGuestData guestdata = 3;
  int guestdata_size() const;
  void clear_guestdata();
  static const int kGuestdataFieldNumber = 3;
  ::KFMsg::PBGuestData* mutable_guestdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >*
      mutable_guestdata();
  const ::KFMsg::PBGuestData& guestdata(int index) const;
  ::KFMsg::PBGuestData* add_guestdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >&
      guestdata() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 guestcount = 2;
  void clear_guestcount();
  static const int kGuestcountFieldNumber = 2;
  ::google::protobuf::uint32 guestcount() const;
  void set_guestcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData > guestdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 guestcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUseItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUseItemReq) */ {
 public:
  MsgUseItemReq();
  virtual ~MsgUseItemReq();

  MsgUseItemReq(const MsgUseItemReq& from);

  inline MsgUseItemReq& operator=(const MsgUseItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUseItemReq(MsgUseItemReq&& from) noexcept
    : MsgUseItemReq() {
    *this = ::std::move(from);
  }

  inline MsgUseItemReq& operator=(MsgUseItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUseItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUseItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgUseItemReq*>(
               &_MsgUseItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(MsgUseItemReq* other);
  friend void swap(MsgUseItemReq& a, MsgUseItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUseItemReq* New() const final {
    return CreateMaybeMessage<MsgUseItemReq>(NULL);
  }

  MsgUseItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUseItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUseItemReq& from);
  void MergeFrom(const MsgUseItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUseItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 itemguid = 1;
  void clear_itemguid();
  static const int kItemguidFieldNumber = 1;
  ::google::protobuf::uint64 itemguid() const;
  void set_itemguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUseItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 itemguid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBStores_StoreEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBStores_StoreEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBStores_StoreEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBStores_StoreEntry_DoNotUse();
  PBStores_StoreEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBStores_StoreEntry_DoNotUse& other);
  static const PBStores_StoreEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBStores_StoreEntry_DoNotUse*>(&_PBStores_StoreEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBStores : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBStores) */ {
 public:
  PBStores();
  virtual ~PBStores();

  PBStores(const PBStores& from);

  inline PBStores& operator=(const PBStores& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBStores(PBStores&& from) noexcept
    : PBStores() {
    *this = ::std::move(from);
  }

  inline PBStores& operator=(PBStores&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStores& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBStores* internal_default_instance() {
    return reinterpret_cast<const PBStores*>(
               &_PBStores_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(PBStores* other);
  friend void swap(PBStores& a, PBStores& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBStores* New() const final {
    return CreateMaybeMessage<PBStores>(NULL);
  }

  PBStores* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBStores>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBStores& from);
  void MergeFrom(const PBStores& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBStores* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> store = 1;
  int store_size() const;
  void clear_store();
  static const int kStoreFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      store() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_store();

  // @@protoc_insertion_point(class_scope:KFMsg.PBStores)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBStores_StoreEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > store_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryStoreInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryStoreInfoReq) */ {
 public:
  MsgQueryStoreInfoReq();
  virtual ~MsgQueryStoreInfoReq();

  MsgQueryStoreInfoReq(const MsgQueryStoreInfoReq& from);

  inline MsgQueryStoreInfoReq& operator=(const MsgQueryStoreInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryStoreInfoReq(MsgQueryStoreInfoReq&& from) noexcept
    : MsgQueryStoreInfoReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryStoreInfoReq& operator=(MsgQueryStoreInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryStoreInfoReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryStoreInfoReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryStoreInfoReq*>(
               &_MsgQueryStoreInfoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(MsgQueryStoreInfoReq* other);
  friend void swap(MsgQueryStoreInfoReq& a, MsgQueryStoreInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryStoreInfoReq* New() const final {
    return CreateMaybeMessage<MsgQueryStoreInfoReq>(NULL);
  }

  MsgQueryStoreInfoReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryStoreInfoReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryStoreInfoReq& from);
  void MergeFrom(const MsgQueryStoreInfoReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryStoreInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryStoreInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryStoreInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryStoreInfoAck) */ {
 public:
  MsgQueryStoreInfoAck();
  virtual ~MsgQueryStoreInfoAck();

  MsgQueryStoreInfoAck(const MsgQueryStoreInfoAck& from);

  inline MsgQueryStoreInfoAck& operator=(const MsgQueryStoreInfoAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryStoreInfoAck(MsgQueryStoreInfoAck&& from) noexcept
    : MsgQueryStoreInfoAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryStoreInfoAck& operator=(MsgQueryStoreInfoAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryStoreInfoAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryStoreInfoAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryStoreInfoAck*>(
               &_MsgQueryStoreInfoAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(MsgQueryStoreInfoAck* other);
  friend void swap(MsgQueryStoreInfoAck& a, MsgQueryStoreInfoAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryStoreInfoAck* New() const final {
    return CreateMaybeMessage<MsgQueryStoreInfoAck>(NULL);
  }

  MsgQueryStoreInfoAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryStoreInfoAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryStoreInfoAck& from);
  void MergeFrom(const MsgQueryStoreInfoAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryStoreInfoAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBStores stores = 2;
  bool has_stores() const;
  void clear_stores();
  static const int kStoresFieldNumber = 2;
  private:
  const ::KFMsg::PBStores& _internal_stores() const;
  public:
  const ::KFMsg::PBStores& stores() const;
  ::KFMsg::PBStores* release_stores();
  ::KFMsg::PBStores* mutable_stores();
  void set_allocated_stores(::KFMsg::PBStores* stores);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryStoreInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBStores* stores_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgBuyStoreAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgBuyStoreAck) */ {
 public:
  MsgBuyStoreAck();
  virtual ~MsgBuyStoreAck();

  MsgBuyStoreAck(const MsgBuyStoreAck& from);

  inline MsgBuyStoreAck& operator=(const MsgBuyStoreAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgBuyStoreAck(MsgBuyStoreAck&& from) noexcept
    : MsgBuyStoreAck() {
    *this = ::std::move(from);
  }

  inline MsgBuyStoreAck& operator=(MsgBuyStoreAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBuyStoreAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgBuyStoreAck* internal_default_instance() {
    return reinterpret_cast<const MsgBuyStoreAck*>(
               &_MsgBuyStoreAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(MsgBuyStoreAck* other);
  friend void swap(MsgBuyStoreAck& a, MsgBuyStoreAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgBuyStoreAck* New() const final {
    return CreateMaybeMessage<MsgBuyStoreAck>(NULL);
  }

  MsgBuyStoreAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgBuyStoreAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgBuyStoreAck& from);
  void MergeFrom(const MsgBuyStoreAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBuyStoreAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 storeid = 1;
  void clear_storeid();
  static const int kStoreidFieldNumber = 1;
  ::google::protobuf::uint32 storeid() const;
  void set_storeid(::google::protobuf::uint32 value);

  // uint32 code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgBuyStoreAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::uint32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetWishOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetWishOrderReq) */ {
 public:
  MsgSetWishOrderReq();
  virtual ~MsgSetWishOrderReq();

  MsgSetWishOrderReq(const MsgSetWishOrderReq& from);

  inline MsgSetWishOrderReq& operator=(const MsgSetWishOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetWishOrderReq(MsgSetWishOrderReq&& from) noexcept
    : MsgSetWishOrderReq() {
    *this = ::std::move(from);
  }

  inline MsgSetWishOrderReq& operator=(MsgSetWishOrderReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetWishOrderReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetWishOrderReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetWishOrderReq*>(
               &_MsgSetWishOrderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(MsgSetWishOrderReq* other);
  friend void swap(MsgSetWishOrderReq& a, MsgSetWishOrderReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetWishOrderReq* New() const final {
    return CreateMaybeMessage<MsgSetWishOrderReq>(NULL);
  }

  MsgSetWishOrderReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetWishOrderReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetWishOrderReq& from);
  void MergeFrom(const MsgSetWishOrderReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetWishOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 storeid = 2;
  void clear_storeid();
  static const int kStoreidFieldNumber = 2;
  ::google::protobuf::uint32 storeid() const;
  void set_storeid(::google::protobuf::uint32 value);

  // uint32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetWishOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQuerySettingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQuerySettingReq) */ {
 public:
  MsgQuerySettingReq();
  virtual ~MsgQuerySettingReq();

  MsgQuerySettingReq(const MsgQuerySettingReq& from);

  inline MsgQuerySettingReq& operator=(const MsgQuerySettingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQuerySettingReq(MsgQuerySettingReq&& from) noexcept
    : MsgQuerySettingReq() {
    *this = ::std::move(from);
  }

  inline MsgQuerySettingReq& operator=(MsgQuerySettingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQuerySettingReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQuerySettingReq* internal_default_instance() {
    return reinterpret_cast<const MsgQuerySettingReq*>(
               &_MsgQuerySettingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(MsgQuerySettingReq* other);
  friend void swap(MsgQuerySettingReq& a, MsgQuerySettingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQuerySettingReq* New() const final {
    return CreateMaybeMessage<MsgQuerySettingReq>(NULL);
  }

  MsgQuerySettingReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQuerySettingReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQuerySettingReq& from);
  void MergeFrom(const MsgQuerySettingReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuerySettingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQuerySettingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQuerySettingAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQuerySettingAck) */ {
 public:
  MsgQuerySettingAck();
  virtual ~MsgQuerySettingAck();

  MsgQuerySettingAck(const MsgQuerySettingAck& from);

  inline MsgQuerySettingAck& operator=(const MsgQuerySettingAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQuerySettingAck(MsgQuerySettingAck&& from) noexcept
    : MsgQuerySettingAck() {
    *this = ::std::move(from);
  }

  inline MsgQuerySettingAck& operator=(MsgQuerySettingAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQuerySettingAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQuerySettingAck* internal_default_instance() {
    return reinterpret_cast<const MsgQuerySettingAck*>(
               &_MsgQuerySettingAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(MsgQuerySettingAck* other);
  friend void swap(MsgQuerySettingAck& a, MsgQuerySettingAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQuerySettingAck* New() const final {
    return CreateMaybeMessage<MsgQuerySettingAck>(NULL);
  }

  MsgQuerySettingAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQuerySettingAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQuerySettingAck& from);
  void MergeFrom(const MsgQuerySettingAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQuerySettingAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbsetting = 1;
  bool has_pbsetting() const;
  void clear_pbsetting();
  static const int kPbsettingFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbsetting() const;
  public:
  const ::KFMsg::PBObject& pbsetting() const;
  ::KFMsg::PBObject* release_pbsetting();
  ::KFMsg::PBObject* mutable_pbsetting();
  void set_allocated_pbsetting(::KFMsg::PBObject* pbsetting);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQuerySettingAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbsetting_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpdateSettingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUpdateSettingReq) */ {
 public:
  MsgUpdateSettingReq();
  virtual ~MsgUpdateSettingReq();

  MsgUpdateSettingReq(const MsgUpdateSettingReq& from);

  inline MsgUpdateSettingReq& operator=(const MsgUpdateSettingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUpdateSettingReq(MsgUpdateSettingReq&& from) noexcept
    : MsgUpdateSettingReq() {
    *this = ::std::move(from);
  }

  inline MsgUpdateSettingReq& operator=(MsgUpdateSettingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpdateSettingReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUpdateSettingReq* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateSettingReq*>(
               &_MsgUpdateSettingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(MsgUpdateSettingReq* other);
  friend void swap(MsgUpdateSettingReq& a, MsgUpdateSettingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateSettingReq* New() const final {
    return CreateMaybeMessage<MsgUpdateSettingReq>(NULL);
  }

  MsgUpdateSettingReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateSettingReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUpdateSettingReq& from);
  void MergeFrom(const MsgUpdateSettingReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateSettingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes settingkey = 1;
  void clear_settingkey();
  static const int kSettingkeyFieldNumber = 1;
  const ::std::string& settingkey() const;
  void set_settingkey(const ::std::string& value);
  #if LANG_CXX11
  void set_settingkey(::std::string&& value);
  #endif
  void set_settingkey(const char* value);
  void set_settingkey(const void* value, size_t size);
  ::std::string* mutable_settingkey();
  ::std::string* release_settingkey();
  void set_allocated_settingkey(::std::string* settingkey);

  // bytes settingvalue = 2;
  void clear_settingvalue();
  static const int kSettingvalueFieldNumber = 2;
  const ::std::string& settingvalue() const;
  void set_settingvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_settingvalue(::std::string&& value);
  #endif
  void set_settingvalue(const char* value);
  void set_settingvalue(const void* value, size_t size);
  ::std::string* mutable_settingvalue();
  ::std::string* release_settingvalue();
  void set_allocated_settingvalue(::std::string* settingvalue);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpdateSettingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr settingkey_;
  ::google::protobuf::internal::ArenaStringPtr settingvalue_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRecentListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRecentListReq) */ {
 public:
  MsgQueryRecentListReq();
  virtual ~MsgQueryRecentListReq();

  MsgQueryRecentListReq(const MsgQueryRecentListReq& from);

  inline MsgQueryRecentListReq& operator=(const MsgQueryRecentListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRecentListReq(MsgQueryRecentListReq&& from) noexcept
    : MsgQueryRecentListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryRecentListReq& operator=(MsgQueryRecentListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRecentListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRecentListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRecentListReq*>(
               &_MsgQueryRecentListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(MsgQueryRecentListReq* other);
  friend void swap(MsgQueryRecentListReq& a, MsgQueryRecentListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRecentListReq* New() const final {
    return CreateMaybeMessage<MsgQueryRecentListReq>(NULL);
  }

  MsgQueryRecentListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRecentListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRecentListReq& from);
  void MergeFrom(const MsgQueryRecentListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRecentListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRecentListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRecentListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRecentListAck) */ {
 public:
  MsgQueryRecentListAck();
  virtual ~MsgQueryRecentListAck();

  MsgQueryRecentListAck(const MsgQueryRecentListAck& from);

  inline MsgQueryRecentListAck& operator=(const MsgQueryRecentListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRecentListAck(MsgQueryRecentListAck&& from) noexcept
    : MsgQueryRecentListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryRecentListAck& operator=(MsgQueryRecentListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRecentListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRecentListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRecentListAck*>(
               &_MsgQueryRecentListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(MsgQueryRecentListAck* other);
  friend void swap(MsgQueryRecentListAck& a, MsgQueryRecentListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRecentListAck* New() const final {
    return CreateMaybeMessage<MsgQueryRecentListAck>(NULL);
  }

  MsgQueryRecentListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRecentListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRecentListAck& from);
  void MergeFrom(const MsgQueryRecentListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRecentListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRecord recentlist = 1;
  bool has_recentlist() const;
  void clear_recentlist();
  static const int kRecentlistFieldNumber = 1;
  private:
  const ::KFMsg::PBRecord& _internal_recentlist() const;
  public:
  const ::KFMsg::PBRecord& recentlist() const;
  ::KFMsg::PBRecord* release_recentlist();
  ::KFMsg::PBRecord* mutable_recentlist();
  void set_allocated_recentlist(::KFMsg::PBRecord* recentlist);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRecentListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRecord* recentlist_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCompoundDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCompoundDataReq) */ {
 public:
  MsgCompoundDataReq();
  virtual ~MsgCompoundDataReq();

  MsgCompoundDataReq(const MsgCompoundDataReq& from);

  inline MsgCompoundDataReq& operator=(const MsgCompoundDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCompoundDataReq(MsgCompoundDataReq&& from) noexcept
    : MsgCompoundDataReq() {
    *this = ::std::move(from);
  }

  inline MsgCompoundDataReq& operator=(MsgCompoundDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompoundDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCompoundDataReq* internal_default_instance() {
    return reinterpret_cast<const MsgCompoundDataReq*>(
               &_MsgCompoundDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(MsgCompoundDataReq* other);
  friend void swap(MsgCompoundDataReq& a, MsgCompoundDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCompoundDataReq* New() const final {
    return CreateMaybeMessage<MsgCompoundDataReq>(NULL);
  }

  MsgCompoundDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCompoundDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCompoundDataReq& from);
  void MergeFrom(const MsgCompoundDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCompoundDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dataname = 1;
  void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  const ::std::string& dataname() const;
  void set_dataname(const ::std::string& value);
  #if LANG_CXX11
  void set_dataname(::std::string&& value);
  #endif
  void set_dataname(const char* value);
  void set_dataname(const void* value, size_t size);
  ::std::string* mutable_dataname();
  ::std::string* release_dataname();
  void set_allocated_dataname(::std::string* dataname);

  // uint32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCompoundDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dataname_;
  ::google::protobuf::uint32 key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRankListReq) */ {
 public:
  MsgQueryRankListReq();
  virtual ~MsgQueryRankListReq();

  MsgQueryRankListReq(const MsgQueryRankListReq& from);

  inline MsgQueryRankListReq& operator=(const MsgQueryRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRankListReq(MsgQueryRankListReq&& from) noexcept
    : MsgQueryRankListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryRankListReq& operator=(MsgQueryRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRankListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRankListReq*>(
               &_MsgQueryRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(MsgQueryRankListReq* other);
  friend void swap(MsgQueryRankListReq& a, MsgQueryRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRankListReq* New() const final {
    return CreateMaybeMessage<MsgQueryRankListReq>(NULL);
  }

  MsgQueryRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRankListReq& from);
  void MergeFrom(const MsgQueryRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRankListAck) */ {
 public:
  MsgQueryRankListAck();
  virtual ~MsgQueryRankListAck();

  MsgQueryRankListAck(const MsgQueryRankListAck& from);

  inline MsgQueryRankListAck& operator=(const MsgQueryRankListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRankListAck(MsgQueryRankListAck&& from) noexcept
    : MsgQueryRankListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryRankListAck& operator=(MsgQueryRankListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRankListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRankListAck*>(
               &_MsgQueryRankListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(MsgQueryRankListAck* other);
  friend void swap(MsgQueryRankListAck& a, MsgQueryRankListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRankListAck* New() const final {
    return CreateMaybeMessage<MsgQueryRankListAck>(NULL);
  }

  MsgQueryRankListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRankListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRankListAck& from);
  void MergeFrom(const MsgQueryRankListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRankListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankDatas rankdatas = 2;
  bool has_rankdatas() const;
  void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  private:
  const ::KFMsg::PBRankDatas& _internal_rankdatas() const;
  public:
  const ::KFMsg::PBRankDatas& rankdatas() const;
  ::KFMsg::PBRankDatas* release_rankdatas();
  ::KFMsg::PBRankDatas* mutable_rankdatas();
  void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryFriendRankListReq) */ {
 public:
  MsgQueryFriendRankListReq();
  virtual ~MsgQueryFriendRankListReq();

  MsgQueryFriendRankListReq(const MsgQueryFriendRankListReq& from);

  inline MsgQueryFriendRankListReq& operator=(const MsgQueryFriendRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryFriendRankListReq(MsgQueryFriendRankListReq&& from) noexcept
    : MsgQueryFriendRankListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryFriendRankListReq& operator=(MsgQueryFriendRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryFriendRankListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryFriendRankListReq*>(
               &_MsgQueryFriendRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(MsgQueryFriendRankListReq* other);
  friend void swap(MsgQueryFriendRankListReq& a, MsgQueryFriendRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryFriendRankListReq* New() const final {
    return CreateMaybeMessage<MsgQueryFriendRankListReq>(NULL);
  }

  MsgQueryFriendRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryFriendRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryFriendRankListReq& from);
  void MergeFrom(const MsgQueryFriendRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryFriendRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryFriendRankListAck) */ {
 public:
  MsgQueryFriendRankListAck();
  virtual ~MsgQueryFriendRankListAck();

  MsgQueryFriendRankListAck(const MsgQueryFriendRankListAck& from);

  inline MsgQueryFriendRankListAck& operator=(const MsgQueryFriendRankListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryFriendRankListAck(MsgQueryFriendRankListAck&& from) noexcept
    : MsgQueryFriendRankListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryFriendRankListAck& operator=(MsgQueryFriendRankListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryFriendRankListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryFriendRankListAck*>(
               &_MsgQueryFriendRankListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(MsgQueryFriendRankListAck* other);
  friend void swap(MsgQueryFriendRankListAck& a, MsgQueryFriendRankListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryFriendRankListAck* New() const final {
    return CreateMaybeMessage<MsgQueryFriendRankListAck>(NULL);
  }

  MsgQueryFriendRankListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryFriendRankListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryFriendRankListAck& from);
  void MergeFrom(const MsgQueryFriendRankListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryFriendRankListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankDatas rankdatas = 2;
  bool has_rankdatas() const;
  void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  private:
  const ::KFMsg::PBRankDatas& _internal_rankdatas() const;
  public:
  const ::KFMsg::PBRankDatas& rankdatas() const;
  ::KFMsg::PBRankDatas* release_rankdatas();
  ::KFMsg::PBRankDatas* mutable_rankdatas();
  void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSevenSignInRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSevenSignInRewardReq) */ {
 public:
  MsgSevenSignInRewardReq();
  virtual ~MsgSevenSignInRewardReq();

  MsgSevenSignInRewardReq(const MsgSevenSignInRewardReq& from);

  inline MsgSevenSignInRewardReq& operator=(const MsgSevenSignInRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSevenSignInRewardReq(MsgSevenSignInRewardReq&& from) noexcept
    : MsgSevenSignInRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgSevenSignInRewardReq& operator=(MsgSevenSignInRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSevenSignInRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSevenSignInRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgSevenSignInRewardReq*>(
               &_MsgSevenSignInRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(MsgSevenSignInRewardReq* other);
  friend void swap(MsgSevenSignInRewardReq& a, MsgSevenSignInRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSevenSignInRewardReq* New() const final {
    return CreateMaybeMessage<MsgSevenSignInRewardReq>(NULL);
  }

  MsgSevenSignInRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSevenSignInRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSevenSignInRewardReq& from);
  void MergeFrom(const MsgSevenSignInRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSevenSignInRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 day = 1;
  void clear_day();
  static const int kDayFieldNumber = 1;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSevenSignInRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 day_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellSevenExtendReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellSevenExtendReward) */ {
 public:
  MsgTellSevenExtendReward();
  virtual ~MsgTellSevenExtendReward();

  MsgTellSevenExtendReward(const MsgTellSevenExtendReward& from);

  inline MsgTellSevenExtendReward& operator=(const MsgTellSevenExtendReward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellSevenExtendReward(MsgTellSevenExtendReward&& from) noexcept
    : MsgTellSevenExtendReward() {
    *this = ::std::move(from);
  }

  inline MsgTellSevenExtendReward& operator=(MsgTellSevenExtendReward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellSevenExtendReward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellSevenExtendReward* internal_default_instance() {
    return reinterpret_cast<const MsgTellSevenExtendReward*>(
               &_MsgTellSevenExtendReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(MsgTellSevenExtendReward* other);
  friend void swap(MsgTellSevenExtendReward& a, MsgTellSevenExtendReward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellSevenExtendReward* New() const final {
    return CreateMaybeMessage<MsgTellSevenExtendReward>(NULL);
  }

  MsgTellSevenExtendReward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellSevenExtendReward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellSevenExtendReward& from);
  void MergeFrom(const MsgTellSevenExtendReward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellSevenExtendReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes playername = 1;
  void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // bytes reward = 2;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellSevenExtendReward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCreateGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCreateGuildReq) */ {
 public:
  MsgCreateGuildReq();
  virtual ~MsgCreateGuildReq();

  MsgCreateGuildReq(const MsgCreateGuildReq& from);

  inline MsgCreateGuildReq& operator=(const MsgCreateGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCreateGuildReq(MsgCreateGuildReq&& from) noexcept
    : MsgCreateGuildReq() {
    *this = ::std::move(from);
  }

  inline MsgCreateGuildReq& operator=(MsgCreateGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCreateGuildReq* internal_default_instance() {
    return reinterpret_cast<const MsgCreateGuildReq*>(
               &_MsgCreateGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(MsgCreateGuildReq* other);
  friend void swap(MsgCreateGuildReq& a, MsgCreateGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCreateGuildReq* New() const final {
    return CreateMaybeMessage<MsgCreateGuildReq>(NULL);
  }

  MsgCreateGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCreateGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCreateGuildReq& from);
  void MergeFrom(const MsgCreateGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreateGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guildname = 1;
  void clear_guildname();
  static const int kGuildnameFieldNumber = 1;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const void* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // bytes manifesto = 3;
  void clear_manifesto();
  static const int kManifestoFieldNumber = 3;
  const ::std::string& manifesto() const;
  void set_manifesto(const ::std::string& value);
  #if LANG_CXX11
  void set_manifesto(::std::string&& value);
  #endif
  void set_manifesto(const char* value);
  void set_manifesto(const void* value, size_t size);
  ::std::string* mutable_manifesto();
  ::std::string* release_manifesto();
  void set_allocated_manifesto(::std::string* manifesto);

  // uint32 medal = 2;
  void clear_medal();
  static const int kMedalFieldNumber = 2;
  ::google::protobuf::uint32 medal() const;
  void set_medal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCreateGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr manifesto_;
  ::google::protobuf::uint32 medal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgInviteGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgInviteGuildReq) */ {
 public:
  MsgInviteGuildReq();
  virtual ~MsgInviteGuildReq();

  MsgInviteGuildReq(const MsgInviteGuildReq& from);

  inline MsgInviteGuildReq& operator=(const MsgInviteGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgInviteGuildReq(MsgInviteGuildReq&& from) noexcept
    : MsgInviteGuildReq() {
    *this = ::std::move(from);
  }

  inline MsgInviteGuildReq& operator=(MsgInviteGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInviteGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgInviteGuildReq* internal_default_instance() {
    return reinterpret_cast<const MsgInviteGuildReq*>(
               &_MsgInviteGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(MsgInviteGuildReq* other);
  friend void swap(MsgInviteGuildReq& a, MsgInviteGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgInviteGuildReq* New() const final {
    return CreateMaybeMessage<MsgInviteGuildReq>(NULL);
  }

  MsgInviteGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgInviteGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgInviteGuildReq& from);
  void MergeFrom(const MsgInviteGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInviteGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 inviterid = 1;
  void clear_inviterid();
  static const int kInviteridFieldNumber = 1;
  ::google::protobuf::uint64 inviterid() const;
  void set_inviterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgInviteGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 inviterid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgApplyGuildReq) */ {
 public:
  MsgApplyGuildReq();
  virtual ~MsgApplyGuildReq();

  MsgApplyGuildReq(const MsgApplyGuildReq& from);

  inline MsgApplyGuildReq& operator=(const MsgApplyGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgApplyGuildReq(MsgApplyGuildReq&& from) noexcept
    : MsgApplyGuildReq() {
    *this = ::std::move(from);
  }

  inline MsgApplyGuildReq& operator=(MsgApplyGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgApplyGuildReq* internal_default_instance() {
    return reinterpret_cast<const MsgApplyGuildReq*>(
               &_MsgApplyGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(MsgApplyGuildReq* other);
  friend void swap(MsgApplyGuildReq& a, MsgApplyGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyGuildReq* New() const final {
    return CreateMaybeMessage<MsgApplyGuildReq>(NULL);
  }

  MsgApplyGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgApplyGuildReq& from);
  void MergeFrom(const MsgApplyGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guildid = 1;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // uint64 invitor = 2;
  void clear_invitor();
  static const int kInvitorFieldNumber = 2;
  ::google::protobuf::uint64 invitor() const;
  void set_invitor(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::uint64 invitor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgExitGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgExitGuildReq) */ {
 public:
  MsgExitGuildReq();
  virtual ~MsgExitGuildReq();

  MsgExitGuildReq(const MsgExitGuildReq& from);

  inline MsgExitGuildReq& operator=(const MsgExitGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgExitGuildReq(MsgExitGuildReq&& from) noexcept
    : MsgExitGuildReq() {
    *this = ::std::move(from);
  }

  inline MsgExitGuildReq& operator=(MsgExitGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExitGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgExitGuildReq* internal_default_instance() {
    return reinterpret_cast<const MsgExitGuildReq*>(
               &_MsgExitGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(MsgExitGuildReq* other);
  friend void swap(MsgExitGuildReq& a, MsgExitGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgExitGuildReq* New() const final {
    return CreateMaybeMessage<MsgExitGuildReq>(NULL);
  }

  MsgExitGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgExitGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgExitGuildReq& from);
  void MergeFrom(const MsgExitGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExitGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgExitGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTransferMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTransferMasterReq) */ {
 public:
  MsgTransferMasterReq();
  virtual ~MsgTransferMasterReq();

  MsgTransferMasterReq(const MsgTransferMasterReq& from);

  inline MsgTransferMasterReq& operator=(const MsgTransferMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTransferMasterReq(MsgTransferMasterReq&& from) noexcept
    : MsgTransferMasterReq() {
    *this = ::std::move(from);
  }

  inline MsgTransferMasterReq& operator=(MsgTransferMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTransferMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTransferMasterReq* internal_default_instance() {
    return reinterpret_cast<const MsgTransferMasterReq*>(
               &_MsgTransferMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(MsgTransferMasterReq* other);
  friend void swap(MsgTransferMasterReq& a, MsgTransferMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTransferMasterReq* New() const final {
    return CreateMaybeMessage<MsgTransferMasterReq>(NULL);
  }

  MsgTransferMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTransferMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTransferMasterReq& from);
  void MergeFrom(const MsgTransferMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTransferMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 newmasterid = 1;
  void clear_newmasterid();
  static const int kNewmasteridFieldNumber = 1;
  ::google::protobuf::uint64 newmasterid() const;
  void set_newmasterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTransferMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 newmasterid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReviewApplyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReviewApplyReq) */ {
 public:
  MsgReviewApplyReq();
  virtual ~MsgReviewApplyReq();

  MsgReviewApplyReq(const MsgReviewApplyReq& from);

  inline MsgReviewApplyReq& operator=(const MsgReviewApplyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReviewApplyReq(MsgReviewApplyReq&& from) noexcept
    : MsgReviewApplyReq() {
    *this = ::std::move(from);
  }

  inline MsgReviewApplyReq& operator=(MsgReviewApplyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReviewApplyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReviewApplyReq* internal_default_instance() {
    return reinterpret_cast<const MsgReviewApplyReq*>(
               &_MsgReviewApplyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(MsgReviewApplyReq* other);
  friend void swap(MsgReviewApplyReq& a, MsgReviewApplyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReviewApplyReq* New() const final {
    return CreateMaybeMessage<MsgReviewApplyReq>(NULL);
  }

  MsgReviewApplyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReviewApplyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReviewApplyReq& from);
  void MergeFrom(const MsgReviewApplyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReviewApplyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 operatortype = 2;
  void clear_operatortype();
  static const int kOperatortypeFieldNumber = 2;
  ::google::protobuf::uint32 operatortype() const;
  void set_operatortype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReviewApplyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 operatortype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDissolveGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDissolveGuildReq) */ {
 public:
  MsgDissolveGuildReq();
  virtual ~MsgDissolveGuildReq();

  MsgDissolveGuildReq(const MsgDissolveGuildReq& from);

  inline MsgDissolveGuildReq& operator=(const MsgDissolveGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDissolveGuildReq(MsgDissolveGuildReq&& from) noexcept
    : MsgDissolveGuildReq() {
    *this = ::std::move(from);
  }

  inline MsgDissolveGuildReq& operator=(MsgDissolveGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDissolveGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDissolveGuildReq* internal_default_instance() {
    return reinterpret_cast<const MsgDissolveGuildReq*>(
               &_MsgDissolveGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(MsgDissolveGuildReq* other);
  friend void swap(MsgDissolveGuildReq& a, MsgDissolveGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDissolveGuildReq* New() const final {
    return CreateMaybeMessage<MsgDissolveGuildReq>(NULL);
  }

  MsgDissolveGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDissolveGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDissolveGuildReq& from);
  void MergeFrom(const MsgDissolveGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDissolveGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDissolveGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgModifyGuildMedalReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgModifyGuildMedalReq) */ {
 public:
  MsgModifyGuildMedalReq();
  virtual ~MsgModifyGuildMedalReq();

  MsgModifyGuildMedalReq(const MsgModifyGuildMedalReq& from);

  inline MsgModifyGuildMedalReq& operator=(const MsgModifyGuildMedalReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgModifyGuildMedalReq(MsgModifyGuildMedalReq&& from) noexcept
    : MsgModifyGuildMedalReq() {
    *this = ::std::move(from);
  }

  inline MsgModifyGuildMedalReq& operator=(MsgModifyGuildMedalReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgModifyGuildMedalReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgModifyGuildMedalReq* internal_default_instance() {
    return reinterpret_cast<const MsgModifyGuildMedalReq*>(
               &_MsgModifyGuildMedalReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(MsgModifyGuildMedalReq* other);
  friend void swap(MsgModifyGuildMedalReq& a, MsgModifyGuildMedalReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgModifyGuildMedalReq* New() const final {
    return CreateMaybeMessage<MsgModifyGuildMedalReq>(NULL);
  }

  MsgModifyGuildMedalReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgModifyGuildMedalReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgModifyGuildMedalReq& from);
  void MergeFrom(const MsgModifyGuildMedalReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgModifyGuildMedalReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 newmedal = 1;
  void clear_newmedal();
  static const int kNewmedalFieldNumber = 1;
  ::google::protobuf::uint32 newmedal() const;
  void set_newmedal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgModifyGuildMedalReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 newmedal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuildListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryGuildListReq) */ {
 public:
  MsgQueryGuildListReq();
  virtual ~MsgQueryGuildListReq();

  MsgQueryGuildListReq(const MsgQueryGuildListReq& from);

  inline MsgQueryGuildListReq& operator=(const MsgQueryGuildListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryGuildListReq(MsgQueryGuildListReq&& from) noexcept
    : MsgQueryGuildListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryGuildListReq& operator=(MsgQueryGuildListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuildListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryGuildListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryGuildListReq*>(
               &_MsgQueryGuildListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(MsgQueryGuildListReq* other);
  friend void swap(MsgQueryGuildListReq& a, MsgQueryGuildListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryGuildListReq* New() const final {
    return CreateMaybeMessage<MsgQueryGuildListReq>(NULL);
  }

  MsgQueryGuildListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryGuildListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryGuildListReq& from);
  void MergeFrom(const MsgQueryGuildListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryGuildListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guilds = 1;
  int guilds_size() const;
  void clear_guilds();
  static const int kGuildsFieldNumber = 1;
  ::google::protobuf::uint64 guilds(int index) const;
  void set_guilds(int index, ::google::protobuf::uint64 value);
  void add_guilds(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guilds() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guilds();

  // uint32 cursor = 2;
  void clear_cursor();
  static const int kCursorFieldNumber = 2;
  ::google::protobuf::uint32 cursor() const;
  void set_cursor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuildListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guilds_;
  mutable int _guilds_cached_byte_size_;
  ::google::protobuf::uint32 cursor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgQueryGuildListAck_GuilddatasEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MsgQueryGuildListAck_GuilddatasEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MsgQueryGuildListAck_GuilddatasEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  MsgQueryGuildListAck_GuilddatasEntry_DoNotUse();
  MsgQueryGuildListAck_GuilddatasEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MsgQueryGuildListAck_GuilddatasEntry_DoNotUse& other);
  static const MsgQueryGuildListAck_GuilddatasEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MsgQueryGuildListAck_GuilddatasEntry_DoNotUse*>(&_MsgQueryGuildListAck_GuilddatasEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuildListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryGuildListAck) */ {
 public:
  MsgQueryGuildListAck();
  virtual ~MsgQueryGuildListAck();

  MsgQueryGuildListAck(const MsgQueryGuildListAck& from);

  inline MsgQueryGuildListAck& operator=(const MsgQueryGuildListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryGuildListAck(MsgQueryGuildListAck&& from) noexcept
    : MsgQueryGuildListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryGuildListAck& operator=(MsgQueryGuildListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuildListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryGuildListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryGuildListAck*>(
               &_MsgQueryGuildListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(MsgQueryGuildListAck* other);
  friend void swap(MsgQueryGuildListAck& a, MsgQueryGuildListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryGuildListAck* New() const final {
    return CreateMaybeMessage<MsgQueryGuildListAck>(NULL);
  }

  MsgQueryGuildListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryGuildListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryGuildListAck& from);
  void MergeFrom(const MsgQueryGuildListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryGuildListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> guilddatas = 1;
  int guilddatas_size() const;
  void clear_guilddatas();
  static const int kGuilddatasFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      guilddatas() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_guilddatas();

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuildListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      MsgQueryGuildListAck_GuilddatasEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > guilddatas_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgKickMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgKickMemberReq) */ {
 public:
  MsgKickMemberReq();
  virtual ~MsgKickMemberReq();

  MsgKickMemberReq(const MsgKickMemberReq& from);

  inline MsgKickMemberReq& operator=(const MsgKickMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgKickMemberReq(MsgKickMemberReq&& from) noexcept
    : MsgKickMemberReq() {
    *this = ::std::move(from);
  }

  inline MsgKickMemberReq& operator=(MsgKickMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKickMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgKickMemberReq* internal_default_instance() {
    return reinterpret_cast<const MsgKickMemberReq*>(
               &_MsgKickMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(MsgKickMemberReq* other);
  friend void swap(MsgKickMemberReq& a, MsgKickMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgKickMemberReq* New() const final {
    return CreateMaybeMessage<MsgKickMemberReq>(NULL);
  }

  MsgKickMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgKickMemberReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgKickMemberReq& from);
  void MergeFrom(const MsgKickMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgKickMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 toplayerid = 1;
  void clear_toplayerid();
  static const int kToplayeridFieldNumber = 1;
  ::google::protobuf::uint64 toplayerid() const;
  void set_toplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgKickMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 toplayerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpgradeGuildReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUpgradeGuildReq) */ {
 public:
  MsgUpgradeGuildReq();
  virtual ~MsgUpgradeGuildReq();

  MsgUpgradeGuildReq(const MsgUpgradeGuildReq& from);

  inline MsgUpgradeGuildReq& operator=(const MsgUpgradeGuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUpgradeGuildReq(MsgUpgradeGuildReq&& from) noexcept
    : MsgUpgradeGuildReq() {
    *this = ::std::move(from);
  }

  inline MsgUpgradeGuildReq& operator=(MsgUpgradeGuildReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpgradeGuildReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUpgradeGuildReq* internal_default_instance() {
    return reinterpret_cast<const MsgUpgradeGuildReq*>(
               &_MsgUpgradeGuildReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(MsgUpgradeGuildReq* other);
  friend void swap(MsgUpgradeGuildReq& a, MsgUpgradeGuildReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUpgradeGuildReq* New() const final {
    return CreateMaybeMessage<MsgUpgradeGuildReq>(NULL);
  }

  MsgUpgradeGuildReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpgradeGuildReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUpgradeGuildReq& from);
  void MergeFrom(const MsgUpgradeGuildReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpgradeGuildReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpgradeGuildReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAppointGuildMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgAppointGuildMemberReq) */ {
 public:
  MsgAppointGuildMemberReq();
  virtual ~MsgAppointGuildMemberReq();

  MsgAppointGuildMemberReq(const MsgAppointGuildMemberReq& from);

  inline MsgAppointGuildMemberReq& operator=(const MsgAppointGuildMemberReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgAppointGuildMemberReq(MsgAppointGuildMemberReq&& from) noexcept
    : MsgAppointGuildMemberReq() {
    *this = ::std::move(from);
  }

  inline MsgAppointGuildMemberReq& operator=(MsgAppointGuildMemberReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAppointGuildMemberReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgAppointGuildMemberReq* internal_default_instance() {
    return reinterpret_cast<const MsgAppointGuildMemberReq*>(
               &_MsgAppointGuildMemberReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(MsgAppointGuildMemberReq* other);
  friend void swap(MsgAppointGuildMemberReq& a, MsgAppointGuildMemberReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgAppointGuildMemberReq* New() const final {
    return CreateMaybeMessage<MsgAppointGuildMemberReq>(NULL);
  }

  MsgAppointGuildMemberReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgAppointGuildMemberReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgAppointGuildMemberReq& from);
  void MergeFrom(const MsgAppointGuildMemberReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAppointGuildMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 toplayerid = 1;
  void clear_toplayerid();
  static const int kToplayeridFieldNumber = 1;
  ::google::protobuf::uint64 toplayerid() const;
  void set_toplayerid(::google::protobuf::uint64 value);

  // uint32 title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAppointGuildMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 toplayerid_;
  ::google::protobuf::uint32 title_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSearchGuildByNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSearchGuildByNameReq) */ {
 public:
  MsgSearchGuildByNameReq();
  virtual ~MsgSearchGuildByNameReq();

  MsgSearchGuildByNameReq(const MsgSearchGuildByNameReq& from);

  inline MsgSearchGuildByNameReq& operator=(const MsgSearchGuildByNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSearchGuildByNameReq(MsgSearchGuildByNameReq&& from) noexcept
    : MsgSearchGuildByNameReq() {
    *this = ::std::move(from);
  }

  inline MsgSearchGuildByNameReq& operator=(MsgSearchGuildByNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSearchGuildByNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSearchGuildByNameReq* internal_default_instance() {
    return reinterpret_cast<const MsgSearchGuildByNameReq*>(
               &_MsgSearchGuildByNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(MsgSearchGuildByNameReq* other);
  friend void swap(MsgSearchGuildByNameReq& a, MsgSearchGuildByNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSearchGuildByNameReq* New() const final {
    return CreateMaybeMessage<MsgSearchGuildByNameReq>(NULL);
  }

  MsgSearchGuildByNameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSearchGuildByNameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSearchGuildByNameReq& from);
  void MergeFrom(const MsgSearchGuildByNameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSearchGuildByNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guildname = 1;
  void clear_guildname();
  static const int kGuildnameFieldNumber = 1;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const void* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSearchGuildByNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetGuildSwitchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetGuildSwitchReq) */ {
 public:
  MsgSetGuildSwitchReq();
  virtual ~MsgSetGuildSwitchReq();

  MsgSetGuildSwitchReq(const MsgSetGuildSwitchReq& from);

  inline MsgSetGuildSwitchReq& operator=(const MsgSetGuildSwitchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetGuildSwitchReq(MsgSetGuildSwitchReq&& from) noexcept
    : MsgSetGuildSwitchReq() {
    *this = ::std::move(from);
  }

  inline MsgSetGuildSwitchReq& operator=(MsgSetGuildSwitchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetGuildSwitchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetGuildSwitchReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetGuildSwitchReq*>(
               &_MsgSetGuildSwitchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(MsgSetGuildSwitchReq* other);
  friend void swap(MsgSetGuildSwitchReq& a, MsgSetGuildSwitchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetGuildSwitchReq* New() const final {
    return CreateMaybeMessage<MsgSetGuildSwitchReq>(NULL);
  }

  MsgSetGuildSwitchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetGuildSwitchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetGuildSwitchReq& from);
  void MergeFrom(const MsgSetGuildSwitchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetGuildSwitchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // uint32 flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetGuildSwitchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuildLogReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryGuildLogReq) */ {
 public:
  MsgQueryGuildLogReq();
  virtual ~MsgQueryGuildLogReq();

  MsgQueryGuildLogReq(const MsgQueryGuildLogReq& from);

  inline MsgQueryGuildLogReq& operator=(const MsgQueryGuildLogReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryGuildLogReq(MsgQueryGuildLogReq&& from) noexcept
    : MsgQueryGuildLogReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryGuildLogReq& operator=(MsgQueryGuildLogReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuildLogReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryGuildLogReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryGuildLogReq*>(
               &_MsgQueryGuildLogReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(MsgQueryGuildLogReq* other);
  friend void swap(MsgQueryGuildLogReq& a, MsgQueryGuildLogReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryGuildLogReq* New() const final {
    return CreateMaybeMessage<MsgQueryGuildLogReq>(NULL);
  }

  MsgQueryGuildLogReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryGuildLogReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryGuildLogReq& from);
  void MergeFrom(const MsgQueryGuildLogReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryGuildLogReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 page = 1;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuildLogReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 page_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuildLogAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryGuildLogAck) */ {
 public:
  MsgQueryGuildLogAck();
  virtual ~MsgQueryGuildLogAck();

  MsgQueryGuildLogAck(const MsgQueryGuildLogAck& from);

  inline MsgQueryGuildLogAck& operator=(const MsgQueryGuildLogAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryGuildLogAck(MsgQueryGuildLogAck&& from) noexcept
    : MsgQueryGuildLogAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryGuildLogAck& operator=(MsgQueryGuildLogAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuildLogAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryGuildLogAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryGuildLogAck*>(
               &_MsgQueryGuildLogAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(MsgQueryGuildLogAck* other);
  friend void swap(MsgQueryGuildLogAck& a, MsgQueryGuildLogAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryGuildLogAck* New() const final {
    return CreateMaybeMessage<MsgQueryGuildLogAck>(NULL);
  }

  MsgQueryGuildLogAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryGuildLogAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryGuildLogAck& from);
  void MergeFrom(const MsgQueryGuildLogAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryGuildLogAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes guildlog = 2;
  int guildlog_size() const;
  void clear_guildlog();
  static const int kGuildlogFieldNumber = 2;
  const ::std::string& guildlog(int index) const;
  ::std::string* mutable_guildlog(int index);
  void set_guildlog(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_guildlog(int index, ::std::string&& value);
  #endif
  void set_guildlog(int index, const char* value);
  void set_guildlog(int index, const void* value, size_t size);
  ::std::string* add_guildlog();
  void add_guildlog(const ::std::string& value);
  #if LANG_CXX11
  void add_guildlog(::std::string&& value);
  #endif
  void add_guildlog(const char* value);
  void add_guildlog(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& guildlog() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guildlog();

  // uint32 page = 1;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuildLogAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guildlog_;
  ::google::protobuf::uint32 page_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellMarquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellMarquee) */ {
 public:
  MsgTellMarquee();
  virtual ~MsgTellMarquee();

  MsgTellMarquee(const MsgTellMarquee& from);

  inline MsgTellMarquee& operator=(const MsgTellMarquee& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellMarquee(MsgTellMarquee&& from) noexcept
    : MsgTellMarquee() {
    *this = ::std::move(from);
  }

  inline MsgTellMarquee& operator=(MsgTellMarquee&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellMarquee& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellMarquee* internal_default_instance() {
    return reinterpret_cast<const MsgTellMarquee*>(
               &_MsgTellMarquee_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(MsgTellMarquee* other);
  friend void swap(MsgTellMarquee& a, MsgTellMarquee& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellMarquee* New() const final {
    return CreateMaybeMessage<MsgTellMarquee>(NULL);
  }

  MsgTellMarquee* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellMarquee>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellMarquee& from);
  void MergeFrom(const MsgTellMarquee& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellMarquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellMarquee)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellSysNotcie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellSysNotcie) */ {
 public:
  MsgTellSysNotcie();
  virtual ~MsgTellSysNotcie();

  MsgTellSysNotcie(const MsgTellSysNotcie& from);

  inline MsgTellSysNotcie& operator=(const MsgTellSysNotcie& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellSysNotcie(MsgTellSysNotcie&& from) noexcept
    : MsgTellSysNotcie() {
    *this = ::std::move(from);
  }

  inline MsgTellSysNotcie& operator=(MsgTellSysNotcie&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellSysNotcie& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellSysNotcie* internal_default_instance() {
    return reinterpret_cast<const MsgTellSysNotcie*>(
               &_MsgTellSysNotcie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(MsgTellSysNotcie* other);
  friend void swap(MsgTellSysNotcie& a, MsgTellSysNotcie& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellSysNotcie* New() const final {
    return CreateMaybeMessage<MsgTellSysNotcie>(NULL);
  }

  MsgTellSysNotcie* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellSysNotcie>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellSysNotcie& from);
  void MergeFrom(const MsgTellSysNotcie& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellSysNotcie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellSysNotcie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgBindAlipayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgBindAlipayReq) */ {
 public:
  MsgBindAlipayReq();
  virtual ~MsgBindAlipayReq();

  MsgBindAlipayReq(const MsgBindAlipayReq& from);

  inline MsgBindAlipayReq& operator=(const MsgBindAlipayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgBindAlipayReq(MsgBindAlipayReq&& from) noexcept
    : MsgBindAlipayReq() {
    *this = ::std::move(from);
  }

  inline MsgBindAlipayReq& operator=(MsgBindAlipayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBindAlipayReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgBindAlipayReq* internal_default_instance() {
    return reinterpret_cast<const MsgBindAlipayReq*>(
               &_MsgBindAlipayReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(MsgBindAlipayReq* other);
  friend void swap(MsgBindAlipayReq& a, MsgBindAlipayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgBindAlipayReq* New() const final {
    return CreateMaybeMessage<MsgBindAlipayReq>(NULL);
  }

  MsgBindAlipayReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgBindAlipayReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgBindAlipayReq& from);
  void MergeFrom(const MsgBindAlipayReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBindAlipayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes alipay = 2;
  void clear_alipay();
  static const int kAlipayFieldNumber = 2;
  const ::std::string& alipay() const;
  void set_alipay(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay(::std::string&& value);
  #endif
  void set_alipay(const char* value);
  void set_alipay(const void* value, size_t size);
  ::std::string* mutable_alipay();
  ::std::string* release_alipay();
  void set_allocated_alipay(::std::string* alipay);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgBindAlipayReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr alipay_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgExChangeInviteScoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgExChangeInviteScoreReq) */ {
 public:
  MsgExChangeInviteScoreReq();
  virtual ~MsgExChangeInviteScoreReq();

  MsgExChangeInviteScoreReq(const MsgExChangeInviteScoreReq& from);

  inline MsgExChangeInviteScoreReq& operator=(const MsgExChangeInviteScoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgExChangeInviteScoreReq(MsgExChangeInviteScoreReq&& from) noexcept
    : MsgExChangeInviteScoreReq() {
    *this = ::std::move(from);
  }

  inline MsgExChangeInviteScoreReq& operator=(MsgExChangeInviteScoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExChangeInviteScoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgExChangeInviteScoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgExChangeInviteScoreReq*>(
               &_MsgExChangeInviteScoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(MsgExChangeInviteScoreReq* other);
  friend void swap(MsgExChangeInviteScoreReq& a, MsgExChangeInviteScoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgExChangeInviteScoreReq* New() const final {
    return CreateMaybeMessage<MsgExChangeInviteScoreReq>(NULL);
  }

  MsgExChangeInviteScoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgExChangeInviteScoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgExChangeInviteScoreReq& from);
  void MergeFrom(const MsgExChangeInviteScoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExChangeInviteScoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes alipay = 2;
  void clear_alipay();
  static const int kAlipayFieldNumber = 2;
  const ::std::string& alipay() const;
  void set_alipay(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay(::std::string&& value);
  #endif
  void set_alipay(const char* value);
  void set_alipay(const void* value, size_t size);
  ::std::string* mutable_alipay();
  ::std::string* release_alipay();
  void set_allocated_alipay(::std::string* alipay);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgExChangeInviteScoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr alipay_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgExChangeInviteScoreAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgExChangeInviteScoreAck) */ {
 public:
  MsgExChangeInviteScoreAck();
  virtual ~MsgExChangeInviteScoreAck();

  MsgExChangeInviteScoreAck(const MsgExChangeInviteScoreAck& from);

  inline MsgExChangeInviteScoreAck& operator=(const MsgExChangeInviteScoreAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgExChangeInviteScoreAck(MsgExChangeInviteScoreAck&& from) noexcept
    : MsgExChangeInviteScoreAck() {
    *this = ::std::move(from);
  }

  inline MsgExChangeInviteScoreAck& operator=(MsgExChangeInviteScoreAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExChangeInviteScoreAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgExChangeInviteScoreAck* internal_default_instance() {
    return reinterpret_cast<const MsgExChangeInviteScoreAck*>(
               &_MsgExChangeInviteScoreAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(MsgExChangeInviteScoreAck* other);
  friend void swap(MsgExChangeInviteScoreAck& a, MsgExChangeInviteScoreAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgExChangeInviteScoreAck* New() const final {
    return CreateMaybeMessage<MsgExChangeInviteScoreAck>(NULL);
  }

  MsgExChangeInviteScoreAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgExChangeInviteScoreAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgExChangeInviteScoreAck& from);
  void MergeFrom(const MsgExChangeInviteScoreAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExChangeInviteScoreAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 exchangescore = 1;
  void clear_exchangescore();
  static const int kExchangescoreFieldNumber = 1;
  ::google::protobuf::uint32 exchangescore() const;
  void set_exchangescore(::google::protobuf::uint32 value);

  // uint32 leftscore = 2;
  void clear_leftscore();
  static const int kLeftscoreFieldNumber = 2;
  ::google::protobuf::uint32 leftscore() const;
  void set_leftscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgExChangeInviteScoreAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 exchangescore_;
  ::google::protobuf::uint32 leftscore_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryInviteScoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryInviteScoreReq) */ {
 public:
  MsgQueryInviteScoreReq();
  virtual ~MsgQueryInviteScoreReq();

  MsgQueryInviteScoreReq(const MsgQueryInviteScoreReq& from);

  inline MsgQueryInviteScoreReq& operator=(const MsgQueryInviteScoreReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryInviteScoreReq(MsgQueryInviteScoreReq&& from) noexcept
    : MsgQueryInviteScoreReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryInviteScoreReq& operator=(MsgQueryInviteScoreReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryInviteScoreReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryInviteScoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryInviteScoreReq*>(
               &_MsgQueryInviteScoreReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(MsgQueryInviteScoreReq* other);
  friend void swap(MsgQueryInviteScoreReq& a, MsgQueryInviteScoreReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryInviteScoreReq* New() const final {
    return CreateMaybeMessage<MsgQueryInviteScoreReq>(NULL);
  }

  MsgQueryInviteScoreReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryInviteScoreReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryInviteScoreReq& from);
  void MergeFrom(const MsgQueryInviteScoreReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryInviteScoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryInviteScoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryInviteScoreAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryInviteScoreAck) */ {
 public:
  MsgQueryInviteScoreAck();
  virtual ~MsgQueryInviteScoreAck();

  MsgQueryInviteScoreAck(const MsgQueryInviteScoreAck& from);

  inline MsgQueryInviteScoreAck& operator=(const MsgQueryInviteScoreAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryInviteScoreAck(MsgQueryInviteScoreAck&& from) noexcept
    : MsgQueryInviteScoreAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryInviteScoreAck& operator=(MsgQueryInviteScoreAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryInviteScoreAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryInviteScoreAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryInviteScoreAck*>(
               &_MsgQueryInviteScoreAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(MsgQueryInviteScoreAck* other);
  friend void swap(MsgQueryInviteScoreAck& a, MsgQueryInviteScoreAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryInviteScoreAck* New() const final {
    return CreateMaybeMessage<MsgQueryInviteScoreAck>(NULL);
  }

  MsgQueryInviteScoreAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryInviteScoreAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryInviteScoreAck& from);
  void MergeFrom(const MsgQueryInviteScoreAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryInviteScoreAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 exchangescore = 1;
  void clear_exchangescore();
  static const int kExchangescoreFieldNumber = 1;
  ::google::protobuf::uint32 exchangescore() const;
  void set_exchangescore(::google::protobuf::uint32 value);

  // uint32 leftscore = 2;
  void clear_leftscore();
  static const int kLeftscoreFieldNumber = 2;
  ::google::protobuf::uint32 leftscore() const;
  void set_leftscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryInviteScoreAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 exchangescore_;
  ::google::protobuf::uint32 leftscore_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgExChangeInviteRecordReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgExChangeInviteRecordReq) */ {
 public:
  MsgExChangeInviteRecordReq();
  virtual ~MsgExChangeInviteRecordReq();

  MsgExChangeInviteRecordReq(const MsgExChangeInviteRecordReq& from);

  inline MsgExChangeInviteRecordReq& operator=(const MsgExChangeInviteRecordReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgExChangeInviteRecordReq(MsgExChangeInviteRecordReq&& from) noexcept
    : MsgExChangeInviteRecordReq() {
    *this = ::std::move(from);
  }

  inline MsgExChangeInviteRecordReq& operator=(MsgExChangeInviteRecordReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExChangeInviteRecordReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgExChangeInviteRecordReq* internal_default_instance() {
    return reinterpret_cast<const MsgExChangeInviteRecordReq*>(
               &_MsgExChangeInviteRecordReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(MsgExChangeInviteRecordReq* other);
  friend void swap(MsgExChangeInviteRecordReq& a, MsgExChangeInviteRecordReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgExChangeInviteRecordReq* New() const final {
    return CreateMaybeMessage<MsgExChangeInviteRecordReq>(NULL);
  }

  MsgExChangeInviteRecordReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgExChangeInviteRecordReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgExChangeInviteRecordReq& from);
  void MergeFrom(const MsgExChangeInviteRecordReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExChangeInviteRecordReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgExChangeInviteRecordReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBExChangeInviteRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBExChangeInviteRecord) */ {
 public:
  PBExChangeInviteRecord();
  virtual ~PBExChangeInviteRecord();

  PBExChangeInviteRecord(const PBExChangeInviteRecord& from);

  inline PBExChangeInviteRecord& operator=(const PBExChangeInviteRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBExChangeInviteRecord(PBExChangeInviteRecord&& from) noexcept
    : PBExChangeInviteRecord() {
    *this = ::std::move(from);
  }

  inline PBExChangeInviteRecord& operator=(PBExChangeInviteRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBExChangeInviteRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBExChangeInviteRecord* internal_default_instance() {
    return reinterpret_cast<const PBExChangeInviteRecord*>(
               &_PBExChangeInviteRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(PBExChangeInviteRecord* other);
  friend void swap(PBExChangeInviteRecord& a, PBExChangeInviteRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBExChangeInviteRecord* New() const final {
    return CreateMaybeMessage<PBExChangeInviteRecord>(NULL);
  }

  PBExChangeInviteRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBExChangeInviteRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBExChangeInviteRecord& from);
  void MergeFrom(const PBExChangeInviteRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBExChangeInviteRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes alipay = 2;
  void clear_alipay();
  static const int kAlipayFieldNumber = 2;
  const ::std::string& alipay() const;
  void set_alipay(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay(::std::string&& value);
  #endif
  void set_alipay(const char* value);
  void set_alipay(const void* value, size_t size);
  ::std::string* mutable_alipay();
  ::std::string* release_alipay();
  void set_allocated_alipay(::std::string* alipay);

  // uint64 time = 4;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // uint32 score = 3;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBExChangeInviteRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr alipay_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint32 score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgExChangeInviteRecordAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgExChangeInviteRecordAck) */ {
 public:
  MsgExChangeInviteRecordAck();
  virtual ~MsgExChangeInviteRecordAck();

  MsgExChangeInviteRecordAck(const MsgExChangeInviteRecordAck& from);

  inline MsgExChangeInviteRecordAck& operator=(const MsgExChangeInviteRecordAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgExChangeInviteRecordAck(MsgExChangeInviteRecordAck&& from) noexcept
    : MsgExChangeInviteRecordAck() {
    *this = ::std::move(from);
  }

  inline MsgExChangeInviteRecordAck& operator=(MsgExChangeInviteRecordAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExChangeInviteRecordAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgExChangeInviteRecordAck* internal_default_instance() {
    return reinterpret_cast<const MsgExChangeInviteRecordAck*>(
               &_MsgExChangeInviteRecordAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(MsgExChangeInviteRecordAck* other);
  friend void swap(MsgExChangeInviteRecordAck& a, MsgExChangeInviteRecordAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgExChangeInviteRecordAck* New() const final {
    return CreateMaybeMessage<MsgExChangeInviteRecordAck>(NULL);
  }

  MsgExChangeInviteRecordAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgExChangeInviteRecordAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgExChangeInviteRecordAck& from);
  void MergeFrom(const MsgExChangeInviteRecordAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgExChangeInviteRecordAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBExChangeInviteRecord record = 1;
  int record_size() const;
  void clear_record();
  static const int kRecordFieldNumber = 1;
  ::KFMsg::PBExChangeInviteRecord* mutable_record(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBExChangeInviteRecord >*
      mutable_record();
  const ::KFMsg::PBExChangeInviteRecord& record(int index) const;
  ::KFMsg::PBExChangeInviteRecord* add_record();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBExChangeInviteRecord >&
      record() const;

  // @@protoc_insertion_point(class_scope:KFMsg.MsgExChangeInviteRecordAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBExChangeInviteRecord > record_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTitleChangeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTitleChangeReq) */ {
 public:
  MsgTitleChangeReq();
  virtual ~MsgTitleChangeReq();

  MsgTitleChangeReq(const MsgTitleChangeReq& from);

  inline MsgTitleChangeReq& operator=(const MsgTitleChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTitleChangeReq(MsgTitleChangeReq&& from) noexcept
    : MsgTitleChangeReq() {
    *this = ::std::move(from);
  }

  inline MsgTitleChangeReq& operator=(MsgTitleChangeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTitleChangeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTitleChangeReq* internal_default_instance() {
    return reinterpret_cast<const MsgTitleChangeReq*>(
               &_MsgTitleChangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(MsgTitleChangeReq* other);
  friend void swap(MsgTitleChangeReq& a, MsgTitleChangeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTitleChangeReq* New() const final {
    return CreateMaybeMessage<MsgTitleChangeReq>(NULL);
  }

  MsgTitleChangeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTitleChangeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTitleChangeReq& from);
  void MergeFrom(const MsgTitleChangeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTitleChangeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 titleid = 1;
  void clear_titleid();
  static const int kTitleidFieldNumber = 1;
  ::google::protobuf::uint32 titleid() const;
  void set_titleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTitleChangeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 titleid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFClientMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgResultDisplay

// uint32 result = 1;
inline void MsgResultDisplay::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 MsgResultDisplay::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.result)
  return result_;
}
inline void MsgResultDisplay::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.result)
}

// repeated bytes param = 2;
inline int MsgResultDisplay::param_size() const {
  return param_.size();
}
inline void MsgResultDisplay::clear_param() {
  param_.Clear();
}
inline const ::std::string& MsgResultDisplay::param(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.param)
  return param_.Get(index);
}
inline ::std::string* MsgResultDisplay::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Mutable(index);
}
inline void MsgResultDisplay::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgResultDisplay::set_param(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgResultDisplay::set_param(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::set_param(int index, const void* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgResultDisplay.param)
}
inline ::std::string* MsgResultDisplay::add_param() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Add();
}
inline void MsgResultDisplay::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#if LANG_CXX11
inline void MsgResultDisplay::add_param(::std::string&& value) {
  param_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#endif
inline void MsgResultDisplay::add_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::add_param(const void* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgResultDisplay.param)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgResultDisplay::param() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgResultDisplay.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgResultDisplay::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgResultDisplay.param)
  return &param_;
}

// -------------------------------------------------------------------

// MsgEnterGame

// .KFMsg.PBObject playerdata = 1;
inline bool MsgEnterGame::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgEnterGame::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& MsgEnterGame::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgEnterGame.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgEnterGame::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgEnterGame.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgEnterGame::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgEnterGame.playerdata)
  return playerdata_;
}
inline void MsgEnterGame::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgEnterGame.playerdata)
}

// uint64 servertime = 2;
inline void MsgEnterGame::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgEnterGame::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgEnterGame.servertime)
  return servertime_;
}
inline void MsgEnterGame::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgEnterGame.servertime)
}

// -------------------------------------------------------------------

// MsgSyncUpdateData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncUpdateData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncUpdateData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncUpdateData.pbdata)
  return pbdata_;
}
inline void MsgSyncUpdateData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncUpdateData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncAddData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncAddData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncAddData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncAddData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncAddData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncAddData.pbdata)
  return pbdata_;
}
inline void MsgSyncAddData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncAddData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncRemoveData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncRemoveData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncRemoveData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncRemoveData.pbdata)
  return pbdata_;
}
inline void MsgSyncRemoveData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncRemoveData.pbdata)
}

// -------------------------------------------------------------------

// MsgTellQueryBasic

// .KFMsg.PBObject player = 1;
inline bool MsgTellQueryBasic::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTellQueryBasic::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgTellQueryBasic::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellQueryBasic.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTellQueryBasic::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellQueryBasic.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTellQueryBasic::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellQueryBasic.player)
  return player_;
}
inline void MsgTellQueryBasic::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellQueryBasic.player)
}

// -------------------------------------------------------------------

// MsgTellBeKick

// uint32 type = 1;
inline void MsgTellBeKick::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgTellBeKick::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellBeKick.type)
  return type_;
}
inline void MsgTellBeKick::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellBeKick.type)
}

// -------------------------------------------------------------------

// MsgLoginVerifyReq

// uint64 accountid = 1;
inline void MsgLoginVerifyReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginVerifyReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyReq.accountid)
  return accountid_;
}
inline void MsgLoginVerifyReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyReq.accountid)
}

// bytes token = 2;
inline void MsgLoginVerifyReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginVerifyReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyReq.token)
  return token_.GetNoArena();
}
inline void MsgLoginVerifyReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyReq.token)
}
#if LANG_CXX11
inline void MsgLoginVerifyReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginVerifyReq.token)
}
#endif
inline void MsgLoginVerifyReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginVerifyReq.token)
}
inline void MsgLoginVerifyReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginVerifyReq.token)
}
inline ::std::string* MsgLoginVerifyReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginVerifyReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginVerifyReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginVerifyReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginVerifyReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginVerifyReq.token)
}

// bytes version = 3;
inline void MsgLoginVerifyReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginVerifyReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyReq.version)
  return version_.GetNoArena();
}
inline void MsgLoginVerifyReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyReq.version)
}
#if LANG_CXX11
inline void MsgLoginVerifyReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginVerifyReq.version)
}
#endif
inline void MsgLoginVerifyReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginVerifyReq.version)
}
inline void MsgLoginVerifyReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginVerifyReq.version)
}
inline ::std::string* MsgLoginVerifyReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginVerifyReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginVerifyReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginVerifyReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginVerifyReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginVerifyReq.version)
}

// -------------------------------------------------------------------

// MsgLoginVerifyAck

// uint64 playerid = 1;
inline void MsgLoginVerifyAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginVerifyAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyAck.playerid)
  return playerid_;
}
inline void MsgLoginVerifyAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyAck.playerid)
}

// bytes token = 2;
inline void MsgLoginVerifyAck::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginVerifyAck::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyAck.token)
  return token_.GetNoArena();
}
inline void MsgLoginVerifyAck::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyAck.token)
}
#if LANG_CXX11
inline void MsgLoginVerifyAck::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginVerifyAck.token)
}
#endif
inline void MsgLoginVerifyAck::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginVerifyAck.token)
}
inline void MsgLoginVerifyAck::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginVerifyAck.token)
}
inline ::std::string* MsgLoginVerifyAck::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginVerifyAck.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginVerifyAck::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginVerifyAck.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginVerifyAck::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginVerifyAck.token)
}

// bytes ip = 3;
inline void MsgLoginVerifyAck::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginVerifyAck::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyAck.ip)
  return ip_.GetNoArena();
}
inline void MsgLoginVerifyAck::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyAck.ip)
}
#if LANG_CXX11
inline void MsgLoginVerifyAck::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginVerifyAck.ip)
}
#endif
inline void MsgLoginVerifyAck::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginVerifyAck.ip)
}
inline void MsgLoginVerifyAck::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginVerifyAck.ip)
}
inline ::std::string* MsgLoginVerifyAck::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginVerifyAck.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginVerifyAck::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginVerifyAck.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginVerifyAck::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginVerifyAck.ip)
}

// uint32 port = 4;
inline void MsgLoginVerifyAck::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 MsgLoginVerifyAck::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginVerifyAck.port)
  return port_;
}
inline void MsgLoginVerifyAck::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginVerifyAck.port)
}

// -------------------------------------------------------------------

// MsgLoginGameReq

// uint64 playerid = 1;
inline void MsgLoginGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginGameReq.playerid)
  return playerid_;
}
inline void MsgLoginGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginGameReq.playerid)
}

// bytes token = 2;
inline void MsgLoginGameReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginGameReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginGameReq.token)
  return token_.GetNoArena();
}
inline void MsgLoginGameReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginGameReq.token)
}
#if LANG_CXX11
inline void MsgLoginGameReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginGameReq.token)
}
#endif
inline void MsgLoginGameReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginGameReq.token)
}
inline void MsgLoginGameReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginGameReq.token)
}
inline ::std::string* MsgLoginGameReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginGameReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginGameReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginGameReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginGameReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginGameReq.token)
}

// -------------------------------------------------------------------

// MsgLoginOutReq

// -------------------------------------------------------------------

// MsgCreateRoleReq

// bytes name = 1;
inline void MsgCreateRoleReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCreateRoleReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateRoleReq.name)
  return name_.GetNoArena();
}
inline void MsgCreateRoleReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateRoleReq.name)
}
#if LANG_CXX11
inline void MsgCreateRoleReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCreateRoleReq.name)
}
#endif
inline void MsgCreateRoleReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCreateRoleReq.name)
}
inline void MsgCreateRoleReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCreateRoleReq.name)
}
inline ::std::string* MsgCreateRoleReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCreateRoleReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCreateRoleReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCreateRoleReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCreateRoleReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCreateRoleReq.name)
}

// uint32 sex = 2;
inline void MsgCreateRoleReq::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 MsgCreateRoleReq::sex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateRoleReq.sex)
  return sex_;
}
inline void MsgCreateRoleReq::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateRoleReq.sex)
}

// uint32 model = 3;
inline void MsgCreateRoleReq::clear_model() {
  model_ = 0u;
}
inline ::google::protobuf::uint32 MsgCreateRoleReq::model() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateRoleReq.model)
  return model_;
}
inline void MsgCreateRoleReq::set_model(::google::protobuf::uint32 value) {
  
  model_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateRoleReq.model)
}

// uint64 inviterid = 4;
inline void MsgCreateRoleReq::clear_inviterid() {
  inviterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgCreateRoleReq::inviterid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateRoleReq.inviterid)
  return inviterid_;
}
inline void MsgCreateRoleReq::set_inviterid(::google::protobuf::uint64 value) {
  
  inviterid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateRoleReq.inviterid)
}

// -------------------------------------------------------------------

// MsgChangeNameReq

// bytes name = 1;
inline void MsgChangeNameReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeNameReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgChangeNameReq.name)
  return name_.GetNoArena();
}
inline void MsgChangeNameReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgChangeNameReq.name)
}
#if LANG_CXX11
inline void MsgChangeNameReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgChangeNameReq.name)
}
#endif
inline void MsgChangeNameReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgChangeNameReq.name)
}
inline void MsgChangeNameReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgChangeNameReq.name)
}
inline ::std::string* MsgChangeNameReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgChangeNameReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeNameReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgChangeNameReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeNameReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgChangeNameReq.name)
}

// -------------------------------------------------------------------

// MsgChangeSexReq

// uint32 sex = 1;
inline void MsgChangeSexReq::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 MsgChangeSexReq::sex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgChangeSexReq.sex)
  return sex_;
}
inline void MsgChangeSexReq::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgChangeSexReq.sex)
}

// -------------------------------------------------------------------

// MsgChangeIconReq

// bytes icon = 1;
inline void MsgChangeIconReq::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeIconReq::icon() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgChangeIconReq.icon)
  return icon_.GetNoArena();
}
inline void MsgChangeIconReq::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgChangeIconReq.icon)
}
#if LANG_CXX11
inline void MsgChangeIconReq::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgChangeIconReq.icon)
}
#endif
inline void MsgChangeIconReq::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgChangeIconReq.icon)
}
inline void MsgChangeIconReq::set_icon(const void* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgChangeIconReq.icon)
}
inline ::std::string* MsgChangeIconReq::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgChangeIconReq.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeIconReq::release_icon() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgChangeIconReq.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeIconReq::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgChangeIconReq.icon)
}

// -------------------------------------------------------------------

// MsgChangeIconBoxReq

// bytes iconbox = 1;
inline void MsgChangeIconBoxReq::clear_iconbox() {
  iconbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeIconBoxReq::iconbox() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgChangeIconBoxReq.iconbox)
  return iconbox_.GetNoArena();
}
inline void MsgChangeIconBoxReq::set_iconbox(const ::std::string& value) {
  
  iconbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgChangeIconBoxReq.iconbox)
}
#if LANG_CXX11
inline void MsgChangeIconBoxReq::set_iconbox(::std::string&& value) {
  
  iconbox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgChangeIconBoxReq.iconbox)
}
#endif
inline void MsgChangeIconBoxReq::set_iconbox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  iconbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgChangeIconBoxReq.iconbox)
}
inline void MsgChangeIconBoxReq::set_iconbox(const void* value, size_t size) {
  
  iconbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgChangeIconBoxReq.iconbox)
}
inline ::std::string* MsgChangeIconBoxReq::mutable_iconbox() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgChangeIconBoxReq.iconbox)
  return iconbox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeIconBoxReq::release_iconbox() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgChangeIconBoxReq.iconbox)
  
  return iconbox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeIconBoxReq::set_allocated_iconbox(::std::string* iconbox) {
  if (iconbox != NULL) {
    
  } else {
    
  }
  iconbox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconbox);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgChangeIconBoxReq.iconbox)
}

// -------------------------------------------------------------------

// MsgChangeMottoReq

// bytes motto = 1;
inline void MsgChangeMottoReq::clear_motto() {
  motto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeMottoReq::motto() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgChangeMottoReq.motto)
  return motto_.GetNoArena();
}
inline void MsgChangeMottoReq::set_motto(const ::std::string& value) {
  
  motto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgChangeMottoReq.motto)
}
#if LANG_CXX11
inline void MsgChangeMottoReq::set_motto(::std::string&& value) {
  
  motto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgChangeMottoReq.motto)
}
#endif
inline void MsgChangeMottoReq::set_motto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  motto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgChangeMottoReq.motto)
}
inline void MsgChangeMottoReq::set_motto(const void* value, size_t size) {
  
  motto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgChangeMottoReq.motto)
}
inline ::std::string* MsgChangeMottoReq::mutable_motto() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgChangeMottoReq.motto)
  return motto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeMottoReq::release_motto() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgChangeMottoReq.motto)
  
  return motto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeMottoReq::set_allocated_motto(::std::string* motto) {
  if (motto != NULL) {
    
  } else {
    
  }
  motto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), motto);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgChangeMottoReq.motto)
}

// -------------------------------------------------------------------

// MsgQueryBasicReq

// bytes name = 1;
inline void MsgQueryBasicReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryBasicReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicReq.name)
  return name_.GetNoArena();
}
inline void MsgQueryBasicReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryBasicReq.name)
}
#if LANG_CXX11
inline void MsgQueryBasicReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryBasicReq.name)
}
#endif
inline void MsgQueryBasicReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryBasicReq.name)
}
inline void MsgQueryBasicReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryBasicReq.name)
}
inline ::std::string* MsgQueryBasicReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryBasicReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryBasicReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicReq.name)
}

// -------------------------------------------------------------------

// MsgQueryPlayerReq

// uint64 playerid = 1;
inline void MsgQueryPlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryPlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerReq.playerid)
  return playerid_;
}
inline void MsgQueryPlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryPlayerReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryPlayerAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryPlayerAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryPlayerAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryPlayerAck.player)
  return player_;
}
inline void MsgQueryPlayerAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryPlayerAck.player)
}

// -------------------------------------------------------------------

// MsgReceiveTaskRewardReq

// uint32 taskid = 1;
inline void MsgReceiveTaskRewardReq::clear_taskid() {
  taskid_ = 0u;
}
inline ::google::protobuf::uint32 MsgReceiveTaskRewardReq::taskid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReceiveTaskRewardReq.taskid)
  return taskid_;
}
inline void MsgReceiveTaskRewardReq::set_taskid(::google::protobuf::uint32 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReceiveTaskRewardReq.taskid)
}

// -------------------------------------------------------------------

// MsgReceiveActivityRewardReq

// uint32 type = 1;
inline void MsgReceiveActivityRewardReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgReceiveActivityRewardReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReceiveActivityRewardReq.type)
  return type_;
}
inline void MsgReceiveActivityRewardReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReceiveActivityRewardReq.type)
}

// uint32 id = 2;
inline void MsgReceiveActivityRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgReceiveActivityRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReceiveActivityRewardReq.id)
  return id_;
}
inline void MsgReceiveActivityRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReceiveActivityRewardReq.id)
}

// -------------------------------------------------------------------

// MsgReceiveAchieveRewardReq

// uint32 achieveid = 1;
inline void MsgReceiveAchieveRewardReq::clear_achieveid() {
  achieveid_ = 0u;
}
inline ::google::protobuf::uint32 MsgReceiveAchieveRewardReq::achieveid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReceiveAchieveRewardReq.achieveid)
  return achieveid_;
}
inline void MsgReceiveAchieveRewardReq::set_achieveid(::google::protobuf::uint32 value) {
  
  achieveid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReceiveAchieveRewardReq.achieveid)
}

// -------------------------------------------------------------------

// MsgReceiveGiftRewardReq

// bytes giftkey = 1;
inline void MsgReceiveGiftRewardReq::clear_giftkey() {
  giftkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReceiveGiftRewardReq::giftkey() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReceiveGiftRewardReq.giftkey)
  return giftkey_.GetNoArena();
}
inline void MsgReceiveGiftRewardReq::set_giftkey(const ::std::string& value) {
  
  giftkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgReceiveGiftRewardReq.giftkey)
}
#if LANG_CXX11
inline void MsgReceiveGiftRewardReq::set_giftkey(::std::string&& value) {
  
  giftkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgReceiveGiftRewardReq.giftkey)
}
#endif
inline void MsgReceiveGiftRewardReq::set_giftkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  giftkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgReceiveGiftRewardReq.giftkey)
}
inline void MsgReceiveGiftRewardReq::set_giftkey(const void* value, size_t size) {
  
  giftkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgReceiveGiftRewardReq.giftkey)
}
inline ::std::string* MsgReceiveGiftRewardReq::mutable_giftkey() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgReceiveGiftRewardReq.giftkey)
  return giftkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReceiveGiftRewardReq::release_giftkey() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgReceiveGiftRewardReq.giftkey)
  
  return giftkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReceiveGiftRewardReq::set_allocated_giftkey(::std::string* giftkey) {
  if (giftkey != NULL) {
    
  } else {
    
  }
  giftkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftkey);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgReceiveGiftRewardReq.giftkey)
}

// -------------------------------------------------------------------

// MsgReceiveMailRewardReq

// uint64 mailid = 1;
inline void MsgReceiveMailRewardReq::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReceiveMailRewardReq::mailid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReceiveMailRewardReq.mailid)
  return mailid_;
}
inline void MsgReceiveMailRewardReq::set_mailid(::google::protobuf::uint64 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReceiveMailRewardReq.mailid)
}

// -------------------------------------------------------------------

// MsgViewMailReq

// uint64 mailid = 1;
inline void MsgViewMailReq::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgViewMailReq::mailid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgViewMailReq.mailid)
  return mailid_;
}
inline void MsgViewMailReq::set_mailid(::google::protobuf::uint64 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgViewMailReq.mailid)
}

// -------------------------------------------------------------------

// MsgDeleteMailReq

// uint64 mailid = 1;
inline void MsgDeleteMailReq::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDeleteMailReq::mailid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDeleteMailReq.mailid)
  return mailid_;
}
inline void MsgDeleteMailReq::set_mailid(::google::protobuf::uint64 value) {
  
  mailid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDeleteMailReq.mailid)
}

// -------------------------------------------------------------------

// MsgQueryMailReq

// uint32 mailtype = 1;
inline void MsgQueryMailReq::clear_mailtype() {
  mailtype_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryMailReq::mailtype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryMailReq.mailtype)
  return mailtype_;
}
inline void MsgQueryMailReq::set_mailtype(::google::protobuf::uint32 value) {
  
  mailtype_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryMailReq.mailtype)
}

// -------------------------------------------------------------------

// MsgStartMatchReq

// uint32 matchid = 1;
inline void MsgStartMatchReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStartMatchReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.matchid)
  return matchid_;
}
inline void MsgStartMatchReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.matchid)
}

// bool allowgroup = 2;
inline void MsgStartMatchReq::clear_allowgroup() {
  allowgroup_ = false;
}
inline bool MsgStartMatchReq::allowgroup() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.allowgroup)
  return allowgroup_;
}
inline void MsgStartMatchReq::set_allowgroup(bool value) {
  
  allowgroup_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.allowgroup)
}

// uint32 battleserverid = 3;
inline void MsgStartMatchReq::clear_battleserverid() {
  battleserverid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStartMatchReq::battleserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.battleserverid)
  return battleserverid_;
}
inline void MsgStartMatchReq::set_battleserverid(::google::protobuf::uint32 value) {
  
  battleserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.battleserverid)
}

// bytes version = 4;
inline void MsgStartMatchReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgStartMatchReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchReq.version)
  return version_.GetNoArena();
}
inline void MsgStartMatchReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchReq.version)
}
#if LANG_CXX11
inline void MsgStartMatchReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgStartMatchReq.version)
}
#endif
inline void MsgStartMatchReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgStartMatchReq.version)
}
inline void MsgStartMatchReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgStartMatchReq.version)
}
inline ::std::string* MsgStartMatchReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgStartMatchReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgStartMatchReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgStartMatchReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgStartMatchReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgStartMatchReq.version)
}

// -------------------------------------------------------------------

// MsgStartMatchAck

// uint32 matchid = 1;
inline void MsgStartMatchAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStartMatchAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStartMatchAck.matchid)
  return matchid_;
}
inline void MsgStartMatchAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStartMatchAck.matchid)
}

// -------------------------------------------------------------------

// MsgCancelMatchReq

// -------------------------------------------------------------------

// MsgCancelMatchAck

// uint32 matchid = 1;
inline void MsgCancelMatchAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgCancelMatchAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCancelMatchAck.matchid)
  return matchid_;
}
inline void MsgCancelMatchAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCancelMatchAck.matchid)
}

// -------------------------------------------------------------------

// MsgMatchResultAck

// uint32 matchid = 1;
inline void MsgMatchResultAck::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgMatchResultAck::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchResultAck.matchid)
  return matchid_;
}
inline void MsgMatchResultAck::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchResultAck.matchid)
}

// uint64 roomid = 2;
inline void MsgMatchResultAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgMatchResultAck::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchResultAck.roomid)
  return roomid_;
}
inline void MsgMatchResultAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchResultAck.roomid)
}

// uint32 serverid = 3;
inline void MsgMatchResultAck::clear_serverid() {
  serverid_ = 0u;
}
inline ::google::protobuf::uint32 MsgMatchResultAck::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchResultAck.serverid)
  return serverid_;
}
inline void MsgMatchResultAck::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchResultAck.serverid)
}

// bytes ip = 4;
inline void MsgMatchResultAck::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMatchResultAck::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchResultAck.ip)
  return ip_.GetNoArena();
}
inline void MsgMatchResultAck::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchResultAck.ip)
}
#if LANG_CXX11
inline void MsgMatchResultAck::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMatchResultAck.ip)
}
#endif
inline void MsgMatchResultAck::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMatchResultAck.ip)
}
inline void MsgMatchResultAck::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMatchResultAck.ip)
}
inline ::std::string* MsgMatchResultAck::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMatchResultAck.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMatchResultAck::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMatchResultAck.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMatchResultAck::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMatchResultAck.ip)
}

// uint32 port = 5;
inline void MsgMatchResultAck::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 MsgMatchResultAck::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchResultAck.port)
  return port_;
}
inline void MsgMatchResultAck::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchResultAck.port)
}

// bytes token = 6;
inline void MsgMatchResultAck::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMatchResultAck::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchResultAck.token)
  return token_.GetNoArena();
}
inline void MsgMatchResultAck::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchResultAck.token)
}
#if LANG_CXX11
inline void MsgMatchResultAck::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMatchResultAck.token)
}
#endif
inline void MsgMatchResultAck::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMatchResultAck.token)
}
inline void MsgMatchResultAck::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMatchResultAck.token)
}
inline ::std::string* MsgMatchResultAck::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMatchResultAck.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMatchResultAck::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMatchResultAck.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMatchResultAck::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMatchResultAck.token)
}

// -------------------------------------------------------------------

// MsgTellMatchWaitTime

// uint32 waittime = 1;
inline void MsgTellMatchWaitTime::clear_waittime() {
  waittime_ = 0u;
}
inline ::google::protobuf::uint32 MsgTellMatchWaitTime::waittime() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellMatchWaitTime.waittime)
  return waittime_;
}
inline void MsgTellMatchWaitTime::set_waittime(::google::protobuf::uint32 value) {
  
  waittime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellMatchWaitTime.waittime)
}

// -------------------------------------------------------------------

// MsgTellMatchPlayerCount

// uint32 count = 1;
inline void MsgTellMatchPlayerCount::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgTellMatchPlayerCount::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellMatchPlayerCount.count)
  return count_;
}
inline void MsgTellMatchPlayerCount::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellMatchPlayerCount.count)
}

// -------------------------------------------------------------------

// MsgAddFriendInviteReq

// uint64 playerid = 1;
inline void MsgAddFriendInviteReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgAddFriendInviteReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddFriendInviteReq.playerid)
  return playerid_;
}
inline void MsgAddFriendInviteReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddFriendInviteReq.playerid)
}

// bytes message = 2;
inline void MsgAddFriendInviteReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddFriendInviteReq::message() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddFriendInviteReq.message)
  return message_.GetNoArena();
}
inline void MsgAddFriendInviteReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddFriendInviteReq.message)
}
#if LANG_CXX11
inline void MsgAddFriendInviteReq::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddFriendInviteReq.message)
}
#endif
inline void MsgAddFriendInviteReq::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddFriendInviteReq.message)
}
inline void MsgAddFriendInviteReq::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddFriendInviteReq.message)
}
inline ::std::string* MsgAddFriendInviteReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddFriendInviteReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddFriendInviteReq::release_message() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddFriendInviteReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddFriendInviteReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddFriendInviteReq.message)
}

// bytes name = 3;
inline void MsgAddFriendInviteReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddFriendInviteReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddFriendInviteReq.name)
  return name_.GetNoArena();
}
inline void MsgAddFriendInviteReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddFriendInviteReq.name)
}
#if LANG_CXX11
inline void MsgAddFriendInviteReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddFriendInviteReq.name)
}
#endif
inline void MsgAddFriendInviteReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddFriendInviteReq.name)
}
inline void MsgAddFriendInviteReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddFriendInviteReq.name)
}
inline ::std::string* MsgAddFriendInviteReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddFriendInviteReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddFriendInviteReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddFriendInviteReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddFriendInviteReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddFriendInviteReq.name)
}

// -------------------------------------------------------------------

// MsgReplyFriendInviteReq

// uint64 playerid = 1;
inline void MsgReplyFriendInviteReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReplyFriendInviteReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyFriendInviteReq.playerid)
  return playerid_;
}
inline void MsgReplyFriendInviteReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyFriendInviteReq.playerid)
}

// uint32 operate = 2;
inline void MsgReplyFriendInviteReq::clear_operate() {
  operate_ = 0u;
}
inline ::google::protobuf::uint32 MsgReplyFriendInviteReq::operate() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyFriendInviteReq.operate)
  return operate_;
}
inline void MsgReplyFriendInviteReq::set_operate(::google::protobuf::uint32 value) {
  
  operate_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyFriendInviteReq.operate)
}

// -------------------------------------------------------------------

// MsgDelFriendReq

// uint64 playerid = 1;
inline void MsgDelFriendReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDelFriendReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDelFriendReq.playerid)
  return playerid_;
}
inline void MsgDelFriendReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDelFriendReq.playerid)
}

// -------------------------------------------------------------------

// MsgSetRefuseFriendInviteReq

// uint32 refuse = 1;
inline void MsgSetRefuseFriendInviteReq::clear_refuse() {
  refuse_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetRefuseFriendInviteReq::refuse() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetRefuseFriendInviteReq.refuse)
  return refuse_;
}
inline void MsgSetRefuseFriendInviteReq::set_refuse(::google::protobuf::uint32 value) {
  
  refuse_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetRefuseFriendInviteReq.refuse)
}

// -------------------------------------------------------------------

// MsgEnterChatReq

// -------------------------------------------------------------------

// MsgSendChatReq

// bytes chatinfo = 1;
inline void MsgSendChatReq::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendChatReq::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatReq.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void MsgSendChatReq::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatReq.chatinfo)
}
#if LANG_CXX11
inline void MsgSendChatReq::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendChatReq.chatinfo)
}
#endif
inline void MsgSendChatReq::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendChatReq.chatinfo)
}
inline void MsgSendChatReq::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendChatReq.chatinfo)
}
inline ::std::string* MsgSendChatReq::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendChatReq.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendChatReq::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendChatReq.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendChatReq::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendChatReq.chatinfo)
}

// uint32 isvoice = 2;
inline void MsgSendChatReq::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendChatReq::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatReq.isvoice)
  return isvoice_;
}
inline void MsgSendChatReq::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatReq.isvoice)
}

// -------------------------------------------------------------------

// MsgSendChatInfo

// bytes chatinfo = 1;
inline void MsgSendChatInfo::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendChatInfo::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void MsgSendChatInfo::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.chatinfo)
}
#if LANG_CXX11
inline void MsgSendChatInfo::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendChatInfo.chatinfo)
}
#endif
inline void MsgSendChatInfo::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendChatInfo.chatinfo)
}
inline void MsgSendChatInfo::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendChatInfo.chatinfo)
}
inline ::std::string* MsgSendChatInfo::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendChatInfo.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendChatInfo::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendChatInfo.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendChatInfo::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendChatInfo.chatinfo)
}

// uint32 isvoice = 2;
inline void MsgSendChatInfo::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendChatInfo::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.isvoice)
  return isvoice_;
}
inline void MsgSendChatInfo::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.isvoice)
}

// bytes playername = 3;
inline void MsgSendChatInfo::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendChatInfo::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playername)
  return playername_.GetNoArena();
}
inline void MsgSendChatInfo::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playername)
}
#if LANG_CXX11
inline void MsgSendChatInfo::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendChatInfo.playername)
}
#endif
inline void MsgSendChatInfo::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendChatInfo.playername)
}
inline void MsgSendChatInfo::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendChatInfo.playername)
}
inline ::std::string* MsgSendChatInfo::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendChatInfo.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendChatInfo::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendChatInfo.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendChatInfo::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendChatInfo.playername)
}

// uint64 playerid = 4;
inline void MsgSendChatInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendChatInfo::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playerid)
  return playerid_;
}
inline void MsgSendChatInfo::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playerid)
}

// bytes playericon = 5;
inline void MsgSendChatInfo::clear_playericon() {
  playericon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendChatInfo::playericon() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playericon)
  return playericon_.GetNoArena();
}
inline void MsgSendChatInfo::set_playericon(const ::std::string& value) {
  
  playericon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playericon)
}
#if LANG_CXX11
inline void MsgSendChatInfo::set_playericon(::std::string&& value) {
  
  playericon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendChatInfo.playericon)
}
#endif
inline void MsgSendChatInfo::set_playericon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playericon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendChatInfo.playericon)
}
inline void MsgSendChatInfo::set_playericon(const void* value, size_t size) {
  
  playericon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendChatInfo.playericon)
}
inline ::std::string* MsgSendChatInfo::mutable_playericon() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendChatInfo.playericon)
  return playericon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendChatInfo::release_playericon() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendChatInfo.playericon)
  
  return playericon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendChatInfo::set_allocated_playericon(::std::string* playericon) {
  if (playericon != NULL) {
    
  } else {
    
  }
  playericon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playericon);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendChatInfo.playericon)
}

// uint32 playergrade = 6;
inline void MsgSendChatInfo::clear_playergrade() {
  playergrade_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendChatInfo::playergrade() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playergrade)
  return playergrade_;
}
inline void MsgSendChatInfo::set_playergrade(::google::protobuf::uint32 value) {
  
  playergrade_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playergrade)
}

// uint32 playersex = 7;
inline void MsgSendChatInfo::clear_playersex() {
  playersex_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendChatInfo::playersex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playersex)
  return playersex_;
}
inline void MsgSendChatInfo::set_playersex(::google::protobuf::uint32 value) {
  
  playersex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playersex)
}

// bytes playericonbox = 8;
inline void MsgSendChatInfo::clear_playericonbox() {
  playericonbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendChatInfo::playericonbox() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playericonbox)
  return playericonbox_.GetNoArena();
}
inline void MsgSendChatInfo::set_playericonbox(const ::std::string& value) {
  
  playericonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playericonbox)
}
#if LANG_CXX11
inline void MsgSendChatInfo::set_playericonbox(::std::string&& value) {
  
  playericonbox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendChatInfo.playericonbox)
}
#endif
inline void MsgSendChatInfo::set_playericonbox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playericonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendChatInfo.playericonbox)
}
inline void MsgSendChatInfo::set_playericonbox(const void* value, size_t size) {
  
  playericonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendChatInfo.playericonbox)
}
inline ::std::string* MsgSendChatInfo::mutable_playericonbox() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendChatInfo.playericonbox)
  return playericonbox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendChatInfo::release_playericonbox() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendChatInfo.playericonbox)
  
  return playericonbox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendChatInfo::set_allocated_playericonbox(::std::string* playericonbox) {
  if (playericonbox != NULL) {
    
  } else {
    
  }
  playericonbox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playericonbox);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendChatInfo.playericonbox)
}

// uint64 playerserverid = 9;
inline void MsgSendChatInfo::clear_playerserverid() {
  playerserverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendChatInfo::playerserverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendChatInfo.playerserverid)
  return playerserverid_;
}
inline void MsgSendChatInfo::set_playerserverid(::google::protobuf::uint64 value) {
  
  playerserverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendChatInfo.playerserverid)
}

// -------------------------------------------------------------------

// MsgLeaveChatReq

// -------------------------------------------------------------------

// MsgSendOneByOneChatReq

// bytes chatinfo = 1;
inline void MsgSendOneByOneChatReq::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendOneByOneChatReq::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatReq.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void MsgSendOneByOneChatReq::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatReq.chatinfo)
}
#if LANG_CXX11
inline void MsgSendOneByOneChatReq::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendOneByOneChatReq.chatinfo)
}
#endif
inline void MsgSendOneByOneChatReq::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendOneByOneChatReq.chatinfo)
}
inline void MsgSendOneByOneChatReq::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendOneByOneChatReq.chatinfo)
}
inline ::std::string* MsgSendOneByOneChatReq::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendOneByOneChatReq.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendOneByOneChatReq::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendOneByOneChatReq.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendOneByOneChatReq::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendOneByOneChatReq.chatinfo)
}

// uint32 isvoice = 2;
inline void MsgSendOneByOneChatReq::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatReq::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatReq.isvoice)
  return isvoice_;
}
inline void MsgSendOneByOneChatReq::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatReq.isvoice)
}

// uint64 playerid = 3;
inline void MsgSendOneByOneChatReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendOneByOneChatReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatReq.playerid)
  return playerid_;
}
inline void MsgSendOneByOneChatReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatReq.playerid)
}

// bytes chattype = 4;
inline void MsgSendOneByOneChatReq::clear_chattype() {
  chattype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendOneByOneChatReq::chattype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatReq.chattype)
  return chattype_.GetNoArena();
}
inline void MsgSendOneByOneChatReq::set_chattype(const ::std::string& value) {
  
  chattype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatReq.chattype)
}
#if LANG_CXX11
inline void MsgSendOneByOneChatReq::set_chattype(::std::string&& value) {
  
  chattype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendOneByOneChatReq.chattype)
}
#endif
inline void MsgSendOneByOneChatReq::set_chattype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chattype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendOneByOneChatReq.chattype)
}
inline void MsgSendOneByOneChatReq::set_chattype(const void* value, size_t size) {
  
  chattype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendOneByOneChatReq.chattype)
}
inline ::std::string* MsgSendOneByOneChatReq::mutable_chattype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendOneByOneChatReq.chattype)
  return chattype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendOneByOneChatReq::release_chattype() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendOneByOneChatReq.chattype)
  
  return chattype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendOneByOneChatReq::set_allocated_chattype(::std::string* chattype) {
  if (chattype != NULL) {
    
  } else {
    
  }
  chattype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chattype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendOneByOneChatReq.chattype)
}

// bytes selfinfo = 5;
inline void MsgSendOneByOneChatReq::clear_selfinfo() {
  selfinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendOneByOneChatReq::selfinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatReq.selfinfo)
  return selfinfo_.GetNoArena();
}
inline void MsgSendOneByOneChatReq::set_selfinfo(const ::std::string& value) {
  
  selfinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatReq.selfinfo)
}
#if LANG_CXX11
inline void MsgSendOneByOneChatReq::set_selfinfo(::std::string&& value) {
  
  selfinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendOneByOneChatReq.selfinfo)
}
#endif
inline void MsgSendOneByOneChatReq::set_selfinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  selfinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendOneByOneChatReq.selfinfo)
}
inline void MsgSendOneByOneChatReq::set_selfinfo(const void* value, size_t size) {
  
  selfinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendOneByOneChatReq.selfinfo)
}
inline ::std::string* MsgSendOneByOneChatReq::mutable_selfinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendOneByOneChatReq.selfinfo)
  return selfinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendOneByOneChatReq::release_selfinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendOneByOneChatReq.selfinfo)
  
  return selfinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendOneByOneChatReq::set_allocated_selfinfo(::std::string* selfinfo) {
  if (selfinfo != NULL) {
    
  } else {
    
  }
  selfinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendOneByOneChatReq.selfinfo)
}

// uint64 serverid = 6;
inline void MsgSendOneByOneChatReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendOneByOneChatReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatReq.serverid)
  return serverid_;
}
inline void MsgSendOneByOneChatReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatReq.serverid)
}

// -------------------------------------------------------------------

// MsgSendOneByOneChatInfo

// bytes chatinfo = 1;
inline void MsgSendOneByOneChatInfo::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendOneByOneChatInfo::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void MsgSendOneByOneChatInfo::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
}
#if LANG_CXX11
inline void MsgSendOneByOneChatInfo::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
}
#endif
inline void MsgSendOneByOneChatInfo::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
}
inline void MsgSendOneByOneChatInfo::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
}
inline ::std::string* MsgSendOneByOneChatInfo::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendOneByOneChatInfo::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendOneByOneChatInfo::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendOneByOneChatInfo.chatinfo)
}

// uint32 isvoice = 2;
inline void MsgSendOneByOneChatInfo::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatInfo::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatInfo.isvoice)
  return isvoice_;
}
inline void MsgSendOneByOneChatInfo::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatInfo.isvoice)
}

// uint64 playerid = 3;
inline void MsgSendOneByOneChatInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendOneByOneChatInfo::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatInfo.playerid)
  return playerid_;
}
inline void MsgSendOneByOneChatInfo::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatInfo.playerid)
}

// bytes chattype = 4;
inline void MsgSendOneByOneChatInfo::clear_chattype() {
  chattype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendOneByOneChatInfo::chattype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatInfo.chattype)
  return chattype_.GetNoArena();
}
inline void MsgSendOneByOneChatInfo::set_chattype(const ::std::string& value) {
  
  chattype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatInfo.chattype)
}
#if LANG_CXX11
inline void MsgSendOneByOneChatInfo::set_chattype(::std::string&& value) {
  
  chattype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendOneByOneChatInfo.chattype)
}
#endif
inline void MsgSendOneByOneChatInfo::set_chattype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chattype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendOneByOneChatInfo.chattype)
}
inline void MsgSendOneByOneChatInfo::set_chattype(const void* value, size_t size) {
  
  chattype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendOneByOneChatInfo.chattype)
}
inline ::std::string* MsgSendOneByOneChatInfo::mutable_chattype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendOneByOneChatInfo.chattype)
  return chattype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendOneByOneChatInfo::release_chattype() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendOneByOneChatInfo.chattype)
  
  return chattype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendOneByOneChatInfo::set_allocated_chattype(::std::string* chattype) {
  if (chattype != NULL) {
    
  } else {
    
  }
  chattype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chattype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendOneByOneChatInfo.chattype)
}

// bytes playerinfo = 5;
inline void MsgSendOneByOneChatInfo::clear_playerinfo() {
  playerinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendOneByOneChatInfo::playerinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
  return playerinfo_.GetNoArena();
}
inline void MsgSendOneByOneChatInfo::set_playerinfo(const ::std::string& value) {
  
  playerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
}
#if LANG_CXX11
inline void MsgSendOneByOneChatInfo::set_playerinfo(::std::string&& value) {
  
  playerinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
}
#endif
inline void MsgSendOneByOneChatInfo::set_playerinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
}
inline void MsgSendOneByOneChatInfo::set_playerinfo(const void* value, size_t size) {
  
  playerinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
}
inline ::std::string* MsgSendOneByOneChatInfo::mutable_playerinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
  return playerinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendOneByOneChatInfo::release_playerinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
  
  return playerinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendOneByOneChatInfo::set_allocated_playerinfo(::std::string* playerinfo) {
  if (playerinfo != NULL) {
    
  } else {
    
  }
  playerinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playerinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendOneByOneChatInfo.playerinfo)
}

// uint64 serverid = 6;
inline void MsgSendOneByOneChatInfo::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendOneByOneChatInfo::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendOneByOneChatInfo.serverid)
  return serverid_;
}
inline void MsgSendOneByOneChatInfo::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendOneByOneChatInfo.serverid)
}

// -------------------------------------------------------------------

// MsgDebugCommandReq

// bytes command = 1;
inline void MsgDebugCommandReq::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDebugCommandReq::command() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDebugCommandReq.command)
  return command_.GetNoArena();
}
inline void MsgDebugCommandReq::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgDebugCommandReq.command)
}
#if LANG_CXX11
inline void MsgDebugCommandReq::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgDebugCommandReq.command)
}
#endif
inline void MsgDebugCommandReq::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgDebugCommandReq.command)
}
inline void MsgDebugCommandReq::set_command(const void* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgDebugCommandReq.command)
}
inline ::std::string* MsgDebugCommandReq::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgDebugCommandReq.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDebugCommandReq::release_command() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgDebugCommandReq.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDebugCommandReq::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgDebugCommandReq.command)
}

// repeated bytes params = 2;
inline int MsgDebugCommandReq::params_size() const {
  return params_.size();
}
inline void MsgDebugCommandReq::clear_params() {
  params_.Clear();
}
inline const ::std::string& MsgDebugCommandReq::params(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDebugCommandReq.params)
  return params_.Get(index);
}
inline ::std::string* MsgDebugCommandReq::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgDebugCommandReq.params)
  return params_.Mutable(index);
}
inline void MsgDebugCommandReq::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgDebugCommandReq.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgDebugCommandReq::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgDebugCommandReq.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgDebugCommandReq::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgDebugCommandReq.params)
}
inline void MsgDebugCommandReq::set_params(int index, const void* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgDebugCommandReq.params)
}
inline ::std::string* MsgDebugCommandReq::add_params() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgDebugCommandReq.params)
  return params_.Add();
}
inline void MsgDebugCommandReq::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgDebugCommandReq.params)
}
#if LANG_CXX11
inline void MsgDebugCommandReq::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgDebugCommandReq.params)
}
#endif
inline void MsgDebugCommandReq::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgDebugCommandReq.params)
}
inline void MsgDebugCommandReq::add_params(const void* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgDebugCommandReq.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgDebugCommandReq::params() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgDebugCommandReq.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgDebugCommandReq::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgDebugCommandReq.params)
  return &params_;
}

// -------------------------------------------------------------------

// MsgShowRewardElement

// bytes reward = 1;
inline void MsgShowRewardElement::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgShowRewardElement::reward() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgShowRewardElement.reward)
  return reward_.GetNoArena();
}
inline void MsgShowRewardElement::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgShowRewardElement.reward)
}
#if LANG_CXX11
inline void MsgShowRewardElement::set_reward(::std::string&& value) {
  
  reward_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgShowRewardElement.reward)
}
#endif
inline void MsgShowRewardElement::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgShowRewardElement.reward)
}
inline void MsgShowRewardElement::set_reward(const void* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgShowRewardElement.reward)
}
inline ::std::string* MsgShowRewardElement::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgShowRewardElement.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgShowRewardElement::release_reward() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgShowRewardElement.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgShowRewardElement::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgShowRewardElement.reward)
}

// -------------------------------------------------------------------

// MsgSendGroupChatReq

// bytes chatinfo = 1;
inline void MsgSendGroupChatReq::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendGroupChatReq::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendGroupChatReq.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void MsgSendGroupChatReq::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendGroupChatReq.chatinfo)
}
#if LANG_CXX11
inline void MsgSendGroupChatReq::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendGroupChatReq.chatinfo)
}
#endif
inline void MsgSendGroupChatReq::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendGroupChatReq.chatinfo)
}
inline void MsgSendGroupChatReq::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendGroupChatReq.chatinfo)
}
inline ::std::string* MsgSendGroupChatReq::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendGroupChatReq.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendGroupChatReq::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendGroupChatReq.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendGroupChatReq::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendGroupChatReq.chatinfo)
}

// uint32 isvoice = 2;
inline void MsgSendGroupChatReq::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendGroupChatReq::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendGroupChatReq.isvoice)
  return isvoice_;
}
inline void MsgSendGroupChatReq::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendGroupChatReq.isvoice)
}

// -------------------------------------------------------------------

// MsgSendGroupChatInfo

// bytes chatinfo = 1;
inline void MsgSendGroupChatInfo::clear_chatinfo() {
  chatinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSendGroupChatInfo::chatinfo() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendGroupChatInfo.chatinfo)
  return chatinfo_.GetNoArena();
}
inline void MsgSendGroupChatInfo::set_chatinfo(const ::std::string& value) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendGroupChatInfo.chatinfo)
}
#if LANG_CXX11
inline void MsgSendGroupChatInfo::set_chatinfo(::std::string&& value) {
  
  chatinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSendGroupChatInfo.chatinfo)
}
#endif
inline void MsgSendGroupChatInfo::set_chatinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSendGroupChatInfo.chatinfo)
}
inline void MsgSendGroupChatInfo::set_chatinfo(const void* value, size_t size) {
  
  chatinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSendGroupChatInfo.chatinfo)
}
inline ::std::string* MsgSendGroupChatInfo::mutable_chatinfo() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSendGroupChatInfo.chatinfo)
  return chatinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSendGroupChatInfo::release_chatinfo() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSendGroupChatInfo.chatinfo)
  
  return chatinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSendGroupChatInfo::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo != NULL) {
    
  } else {
    
  }
  chatinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatinfo);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSendGroupChatInfo.chatinfo)
}

// uint32 isvoice = 2;
inline void MsgSendGroupChatInfo::clear_isvoice() {
  isvoice_ = 0u;
}
inline ::google::protobuf::uint32 MsgSendGroupChatInfo::isvoice() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendGroupChatInfo.isvoice)
  return isvoice_;
}
inline void MsgSendGroupChatInfo::set_isvoice(::google::protobuf::uint32 value) {
  
  isvoice_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendGroupChatInfo.isvoice)
}

// uint64 playerid = 3;
inline void MsgSendGroupChatInfo::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSendGroupChatInfo::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSendGroupChatInfo.playerid)
  return playerid_;
}
inline void MsgSendGroupChatInfo::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSendGroupChatInfo.playerid)
}

// -------------------------------------------------------------------

// MsgBuyStoreReq

// bytes buytype = 1;
inline void MsgBuyStoreReq::clear_buytype() {
  buytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBuyStoreReq::buytype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.buytype)
  return buytype_.GetNoArena();
}
inline void MsgBuyStoreReq::set_buytype(const ::std::string& value) {
  
  buytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.buytype)
}
#if LANG_CXX11
inline void MsgBuyStoreReq::set_buytype(::std::string&& value) {
  
  buytype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgBuyStoreReq.buytype)
}
#endif
inline void MsgBuyStoreReq::set_buytype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  buytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgBuyStoreReq.buytype)
}
inline void MsgBuyStoreReq::set_buytype(const void* value, size_t size) {
  
  buytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgBuyStoreReq.buytype)
}
inline ::std::string* MsgBuyStoreReq::mutable_buytype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgBuyStoreReq.buytype)
  return buytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBuyStoreReq::release_buytype() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgBuyStoreReq.buytype)
  
  return buytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBuyStoreReq::set_allocated_buytype(::std::string* buytype) {
  if (buytype != NULL) {
    
  } else {
    
  }
  buytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buytype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgBuyStoreReq.buytype)
}

// uint32 shopid = 2;
inline void MsgBuyStoreReq::clear_shopid() {
  shopid_ = 0u;
}
inline ::google::protobuf::uint32 MsgBuyStoreReq::shopid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.shopid)
  return shopid_;
}
inline void MsgBuyStoreReq::set_shopid(::google::protobuf::uint32 value) {
  
  shopid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.shopid)
}

// uint32 num = 3;
inline void MsgBuyStoreReq::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 MsgBuyStoreReq::num() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreReq.num)
  return num_;
}
inline void MsgBuyStoreReq::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreReq.num)
}

// -------------------------------------------------------------------

// MsgGiveStoreReq

// uint64 toplayerid = 1;
inline void MsgGiveStoreReq::clear_toplayerid() {
  toplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgGiveStoreReq::toplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgGiveStoreReq.toplayerid)
  return toplayerid_;
}
inline void MsgGiveStoreReq::set_toplayerid(::google::protobuf::uint64 value) {
  
  toplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgGiveStoreReq.toplayerid)
}

// uint32 shopid = 2;
inline void MsgGiveStoreReq::clear_shopid() {
  shopid_ = 0u;
}
inline ::google::protobuf::uint32 MsgGiveStoreReq::shopid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgGiveStoreReq.shopid)
  return shopid_;
}
inline void MsgGiveStoreReq::set_shopid(::google::protobuf::uint32 value) {
  
  shopid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgGiveStoreReq.shopid)
}

// -------------------------------------------------------------------

// MsgPlayerToastReq

// uint64 playerid = 1;
inline void MsgPlayerToastReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgPlayerToastReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPlayerToastReq.playerid)
  return playerid_;
}
inline void MsgPlayerToastReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgPlayerToastReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryToastCountReq

// uint64 playerid = 1;
inline void MsgQueryToastCountReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryToastCountReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryToastCountReq.playerid)
  return playerid_;
}
inline void MsgQueryToastCountReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryToastCountReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryToastCountAck

// uint64 playerid = 1;
inline void MsgQueryToastCountAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryToastCountAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryToastCountAck.playerid)
  return playerid_;
}
inline void MsgQueryToastCountAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryToastCountAck.playerid)
}

// uint32 toastcount = 2;
inline void MsgQueryToastCountAck::clear_toastcount() {
  toastcount_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryToastCountAck::toastcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryToastCountAck.toastcount)
  return toastcount_;
}
inline void MsgQueryToastCountAck::set_toastcount(::google::protobuf::uint32 value) {
  
  toastcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryToastCountAck.toastcount)
}

// -------------------------------------------------------------------

// MsgRemoveDataReq

// bytes dataname = 1;
inline void MsgRemoveDataReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRemoveDataReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgRemoveDataReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.dataname)
}
#if LANG_CXX11
inline void MsgRemoveDataReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgRemoveDataReq.dataname)
}
#endif
inline void MsgRemoveDataReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgRemoveDataReq.dataname)
}
inline void MsgRemoveDataReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgRemoveDataReq.dataname)
}
inline ::std::string* MsgRemoveDataReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgRemoveDataReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRemoveDataReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgRemoveDataReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRemoveDataReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgRemoveDataReq.dataname)
}

// uint64 key = 2;
inline void MsgRemoveDataReq::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgRemoveDataReq::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.key)
  return key_;
}
inline void MsgRemoveDataReq::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.key)
}

// uint32 count = 3;
inline void MsgRemoveDataReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgRemoveDataReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.count)
  return count_;
}
inline void MsgRemoveDataReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.count)
}

// -------------------------------------------------------------------

// MsgChangeModelReq

// uint32 modelid = 1;
inline void MsgChangeModelReq::clear_modelid() {
  modelid_ = 0u;
}
inline ::google::protobuf::uint32 MsgChangeModelReq::modelid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgChangeModelReq.modelid)
  return modelid_;
}
inline void MsgChangeModelReq::set_modelid(::google::protobuf::uint32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgChangeModelReq.modelid)
}

// -------------------------------------------------------------------

// MsgSetModelDefaultClothesReq

// uint32 modelid = 1;
inline void MsgSetModelDefaultClothesReq::clear_modelid() {
  modelid_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetModelDefaultClothesReq::modelid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetModelDefaultClothesReq.modelid)
  return modelid_;
}
inline void MsgSetModelDefaultClothesReq::set_modelid(::google::protobuf::uint32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetModelDefaultClothesReq.modelid)
}

// uint32 clothesid = 2;
inline void MsgSetModelDefaultClothesReq::clear_clothesid() {
  clothesid_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetModelDefaultClothesReq::clothesid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetModelDefaultClothesReq.clothesid)
  return clothesid_;
}
inline void MsgSetModelDefaultClothesReq::set_clothesid(::google::protobuf::uint32 value) {
  
  clothesid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetModelDefaultClothesReq.clothesid)
}

// -------------------------------------------------------------------

// MsgDressClothesReq

// uint32 clothesid = 1;
inline void MsgDressClothesReq::clear_clothesid() {
  clothesid_ = 0u;
}
inline ::google::protobuf::uint32 MsgDressClothesReq::clothesid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDressClothesReq.clothesid)
  return clothesid_;
}
inline void MsgDressClothesReq::set_clothesid(::google::protobuf::uint32 value) {
  
  clothesid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDressClothesReq.clothesid)
}

// -------------------------------------------------------------------

// MsgInviteMatchGroupReq

// uint64 serverid = 1;
inline void MsgInviteMatchGroupReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgInviteMatchGroupReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInviteMatchGroupReq.serverid)
  return serverid_;
}
inline void MsgInviteMatchGroupReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInviteMatchGroupReq.serverid)
}

// uint64 playerid = 2;
inline void MsgInviteMatchGroupReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgInviteMatchGroupReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInviteMatchGroupReq.playerid)
  return playerid_;
}
inline void MsgInviteMatchGroupReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInviteMatchGroupReq.playerid)
}

// bytes source = 3;
inline void MsgInviteMatchGroupReq::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgInviteMatchGroupReq::source() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInviteMatchGroupReq.source)
  return source_.GetNoArena();
}
inline void MsgInviteMatchGroupReq::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgInviteMatchGroupReq.source)
}
#if LANG_CXX11
inline void MsgInviteMatchGroupReq::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgInviteMatchGroupReq.source)
}
#endif
inline void MsgInviteMatchGroupReq::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgInviteMatchGroupReq.source)
}
inline void MsgInviteMatchGroupReq::set_source(const void* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgInviteMatchGroupReq.source)
}
inline ::std::string* MsgInviteMatchGroupReq::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgInviteMatchGroupReq.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgInviteMatchGroupReq::release_source() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgInviteMatchGroupReq.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgInviteMatchGroupReq::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgInviteMatchGroupReq.source)
}

// uint32 matchid = 4;
inline void MsgInviteMatchGroupReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgInviteMatchGroupReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInviteMatchGroupReq.matchid)
  return matchid_;
}
inline void MsgInviteMatchGroupReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInviteMatchGroupReq.matchid)
}

// bytes playername = 5;
inline void MsgInviteMatchGroupReq::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgInviteMatchGroupReq::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInviteMatchGroupReq.playername)
  return playername_.GetNoArena();
}
inline void MsgInviteMatchGroupReq::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgInviteMatchGroupReq.playername)
}
#if LANG_CXX11
inline void MsgInviteMatchGroupReq::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgInviteMatchGroupReq.playername)
}
#endif
inline void MsgInviteMatchGroupReq::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgInviteMatchGroupReq.playername)
}
inline void MsgInviteMatchGroupReq::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgInviteMatchGroupReq.playername)
}
inline ::std::string* MsgInviteMatchGroupReq::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgInviteMatchGroupReq.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgInviteMatchGroupReq::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgInviteMatchGroupReq.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgInviteMatchGroupReq::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgInviteMatchGroupReq.playername)
}

// -------------------------------------------------------------------

// MsgReplyInviteMatchGroupReq

// uint64 groupid = 1;
inline void MsgReplyInviteMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReplyInviteMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyInviteMatchGroupReq.groupid)
  return groupid_;
}
inline void MsgReplyInviteMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyInviteMatchGroupReq.groupid)
}

// uint64 inviterid = 2;
inline void MsgReplyInviteMatchGroupReq::clear_inviterid() {
  inviterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReplyInviteMatchGroupReq::inviterid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyInviteMatchGroupReq.inviterid)
  return inviterid_;
}
inline void MsgReplyInviteMatchGroupReq::set_inviterid(::google::protobuf::uint64 value) {
  
  inviterid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyInviteMatchGroupReq.inviterid)
}

// uint32 operate = 3;
inline void MsgReplyInviteMatchGroupReq::clear_operate() {
  operate_ = 0u;
}
inline ::google::protobuf::uint32 MsgReplyInviteMatchGroupReq::operate() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyInviteMatchGroupReq.operate)
  return operate_;
}
inline void MsgReplyInviteMatchGroupReq::set_operate(::google::protobuf::uint32 value) {
  
  operate_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyInviteMatchGroupReq.operate)
}

// -------------------------------------------------------------------

// MsgLeaveMatchGroupReq

// -------------------------------------------------------------------

// MsgKickMatchGroupReq

// uint64 memberid = 1;
inline void MsgKickMatchGroupReq::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgKickMatchGroupReq::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgKickMatchGroupReq.memberid)
  return memberid_;
}
inline void MsgKickMatchGroupReq::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgKickMatchGroupReq.memberid)
}

// -------------------------------------------------------------------

// MsgApplyMatchGroupReq

// uint64 groupid = 1;
inline void MsgApplyMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgApplyMatchGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyMatchGroupReq.groupid)
  return groupid_;
}
inline void MsgApplyMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyMatchGroupReq.groupid)
}

// -------------------------------------------------------------------

// MsgReplyApplyMatchGroupReq

// uint64 applyid = 1;
inline void MsgReplyApplyMatchGroupReq::clear_applyid() {
  applyid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReplyApplyMatchGroupReq::applyid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyApplyMatchGroupReq.applyid)
  return applyid_;
}
inline void MsgReplyApplyMatchGroupReq::set_applyid(::google::protobuf::uint64 value) {
  
  applyid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyApplyMatchGroupReq.applyid)
}

// uint32 operate = 3;
inline void MsgReplyApplyMatchGroupReq::clear_operate() {
  operate_ = 0u;
}
inline ::google::protobuf::uint32 MsgReplyApplyMatchGroupReq::operate() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyApplyMatchGroupReq.operate)
  return operate_;
}
inline void MsgReplyApplyMatchGroupReq::set_operate(::google::protobuf::uint32 value) {
  
  operate_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyApplyMatchGroupReq.operate)
}

// -------------------------------------------------------------------

// MsgMatchGroupPrepareReq

// uint32 prepare = 1;
inline void MsgMatchGroupPrepareReq::clear_prepare() {
  prepare_ = 0u;
}
inline ::google::protobuf::uint32 MsgMatchGroupPrepareReq::prepare() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMatchGroupPrepareReq.prepare)
  return prepare_;
}
inline void MsgMatchGroupPrepareReq::set_prepare(::google::protobuf::uint32 value) {
  
  prepare_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMatchGroupPrepareReq.prepare)
}

// -------------------------------------------------------------------

// MsgUpdateGroupMatchReq

// uint32 matchid = 1;
inline void MsgUpdateGroupMatchReq::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 MsgUpdateGroupMatchReq::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateGroupMatchReq.matchid)
  return matchid_;
}
inline void MsgUpdateGroupMatchReq::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateGroupMatchReq.matchid)
}

// -------------------------------------------------------------------

// MsgQueryGuestReq

// uint64 playerid = 1;
inline void MsgQueryGuestReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryGuestReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuestReq.playerid)
  return playerid_;
}
inline void MsgQueryGuestReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuestReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryGuestAck

// uint64 playerid = 1;
inline void MsgQueryGuestAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryGuestAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuestAck.playerid)
  return playerid_;
}
inline void MsgQueryGuestAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuestAck.playerid)
}

// uint32 guestcount = 2;
inline void MsgQueryGuestAck::clear_guestcount() {
  guestcount_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryGuestAck::guestcount() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuestAck.guestcount)
  return guestcount_;
}
inline void MsgQueryGuestAck::set_guestcount(::google::protobuf::uint32 value) {
  
  guestcount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuestAck.guestcount)
}

// repeated .KFMsg.PBGuestData guestdata = 3;
inline int MsgQueryGuestAck::guestdata_size() const {
  return guestdata_.size();
}
inline ::KFMsg::PBGuestData* MsgQueryGuestAck::mutable_guestdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryGuestAck.guestdata)
  return guestdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >*
MsgQueryGuestAck::mutable_guestdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgQueryGuestAck.guestdata)
  return &guestdata_;
}
inline const ::KFMsg::PBGuestData& MsgQueryGuestAck::guestdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuestAck.guestdata)
  return guestdata_.Get(index);
}
inline ::KFMsg::PBGuestData* MsgQueryGuestAck::add_guestdata() {
  // @@protoc_insertion_point(field_add:KFMsg.MsgQueryGuestAck.guestdata)
  return guestdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >&
MsgQueryGuestAck::guestdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgQueryGuestAck.guestdata)
  return guestdata_;
}

// -------------------------------------------------------------------

// MsgUseItemReq

// uint64 itemguid = 1;
inline void MsgUseItemReq::clear_itemguid() {
  itemguid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgUseItemReq::itemguid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUseItemReq.itemguid)
  return itemguid_;
}
inline void MsgUseItemReq::set_itemguid(::google::protobuf::uint64 value) {
  
  itemguid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUseItemReq.itemguid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBStores

// map<string, bytes> store = 1;
inline int PBStores::store_size() const {
  return store_.size();
}
inline void PBStores::clear_store() {
  store_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBStores::store() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBStores.store)
  return store_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBStores::mutable_store() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBStores.store)
  return store_.MutableMap();
}

// -------------------------------------------------------------------

// MsgQueryStoreInfoReq

// uint32 version = 1;
inline void MsgQueryStoreInfoReq::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryStoreInfoReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryStoreInfoReq.version)
  return version_;
}
inline void MsgQueryStoreInfoReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryStoreInfoReq.version)
}

// -------------------------------------------------------------------

// MsgQueryStoreInfoAck

// uint32 version = 1;
inline void MsgQueryStoreInfoAck::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryStoreInfoAck::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryStoreInfoAck.version)
  return version_;
}
inline void MsgQueryStoreInfoAck::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryStoreInfoAck.version)
}

// .KFMsg.PBStores stores = 2;
inline bool MsgQueryStoreInfoAck::has_stores() const {
  return this != internal_default_instance() && stores_ != NULL;
}
inline void MsgQueryStoreInfoAck::clear_stores() {
  if (GetArenaNoVirtual() == NULL && stores_ != NULL) {
    delete stores_;
  }
  stores_ = NULL;
}
inline const ::KFMsg::PBStores& MsgQueryStoreInfoAck::_internal_stores() const {
  return *stores_;
}
inline const ::KFMsg::PBStores& MsgQueryStoreInfoAck::stores() const {
  const ::KFMsg::PBStores* p = stores_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryStoreInfoAck.stores)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBStores*>(
      &::KFMsg::_PBStores_default_instance_);
}
inline ::KFMsg::PBStores* MsgQueryStoreInfoAck::release_stores() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryStoreInfoAck.stores)
  
  ::KFMsg::PBStores* temp = stores_;
  stores_ = NULL;
  return temp;
}
inline ::KFMsg::PBStores* MsgQueryStoreInfoAck::mutable_stores() {
  
  if (stores_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBStores>(GetArenaNoVirtual());
    stores_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryStoreInfoAck.stores)
  return stores_;
}
inline void MsgQueryStoreInfoAck::set_allocated_stores(::KFMsg::PBStores* stores) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stores_;
  }
  if (stores) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stores = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stores, submessage_arena);
    }
    
  } else {
    
  }
  stores_ = stores;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryStoreInfoAck.stores)
}

// -------------------------------------------------------------------

// MsgBuyStoreAck

// uint32 storeid = 1;
inline void MsgBuyStoreAck::clear_storeid() {
  storeid_ = 0u;
}
inline ::google::protobuf::uint32 MsgBuyStoreAck::storeid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreAck.storeid)
  return storeid_;
}
inline void MsgBuyStoreAck::set_storeid(::google::protobuf::uint32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreAck.storeid)
}

// uint32 code = 2;
inline void MsgBuyStoreAck::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 MsgBuyStoreAck::code() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBuyStoreAck.code)
  return code_;
}
inline void MsgBuyStoreAck::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgBuyStoreAck.code)
}

// -------------------------------------------------------------------

// MsgSetWishOrderReq

// uint32 type = 1;
inline void MsgSetWishOrderReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetWishOrderReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetWishOrderReq.type)
  return type_;
}
inline void MsgSetWishOrderReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetWishOrderReq.type)
}

// uint32 storeid = 2;
inline void MsgSetWishOrderReq::clear_storeid() {
  storeid_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetWishOrderReq::storeid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetWishOrderReq.storeid)
  return storeid_;
}
inline void MsgSetWishOrderReq::set_storeid(::google::protobuf::uint32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetWishOrderReq.storeid)
}

// uint32 status = 3;
inline void MsgSetWishOrderReq::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetWishOrderReq::status() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetWishOrderReq.status)
  return status_;
}
inline void MsgSetWishOrderReq::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetWishOrderReq.status)
}

// -------------------------------------------------------------------

// MsgQuerySettingReq

// -------------------------------------------------------------------

// MsgQuerySettingAck

// .KFMsg.PBObject pbsetting = 1;
inline bool MsgQuerySettingAck::has_pbsetting() const {
  return this != internal_default_instance() && pbsetting_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQuerySettingAck::_internal_pbsetting() const {
  return *pbsetting_;
}
inline const ::KFMsg::PBObject& MsgQuerySettingAck::pbsetting() const {
  const ::KFMsg::PBObject* p = pbsetting_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQuerySettingAck.pbsetting)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQuerySettingAck::release_pbsetting() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQuerySettingAck.pbsetting)
  
  ::KFMsg::PBObject* temp = pbsetting_;
  pbsetting_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQuerySettingAck::mutable_pbsetting() {
  
  if (pbsetting_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbsetting_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQuerySettingAck.pbsetting)
  return pbsetting_;
}
inline void MsgQuerySettingAck::set_allocated_pbsetting(::KFMsg::PBObject* pbsetting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbsetting_);
  }
  if (pbsetting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbsetting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbsetting, submessage_arena);
    }
    
  } else {
    
  }
  pbsetting_ = pbsetting;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQuerySettingAck.pbsetting)
}

// -------------------------------------------------------------------

// MsgUpdateSettingReq

// bytes settingkey = 1;
inline void MsgUpdateSettingReq::clear_settingkey() {
  settingkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateSettingReq::settingkey() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateSettingReq.settingkey)
  return settingkey_.GetNoArena();
}
inline void MsgUpdateSettingReq::set_settingkey(const ::std::string& value) {
  
  settingkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateSettingReq.settingkey)
}
#if LANG_CXX11
inline void MsgUpdateSettingReq::set_settingkey(::std::string&& value) {
  
  settingkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateSettingReq.settingkey)
}
#endif
inline void MsgUpdateSettingReq::set_settingkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  settingkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateSettingReq.settingkey)
}
inline void MsgUpdateSettingReq::set_settingkey(const void* value, size_t size) {
  
  settingkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateSettingReq.settingkey)
}
inline ::std::string* MsgUpdateSettingReq::mutable_settingkey() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateSettingReq.settingkey)
  return settingkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateSettingReq::release_settingkey() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateSettingReq.settingkey)
  
  return settingkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateSettingReq::set_allocated_settingkey(::std::string* settingkey) {
  if (settingkey != NULL) {
    
  } else {
    
  }
  settingkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settingkey);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateSettingReq.settingkey)
}

// bytes settingvalue = 2;
inline void MsgUpdateSettingReq::clear_settingvalue() {
  settingvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateSettingReq::settingvalue() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateSettingReq.settingvalue)
  return settingvalue_.GetNoArena();
}
inline void MsgUpdateSettingReq::set_settingvalue(const ::std::string& value) {
  
  settingvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateSettingReq.settingvalue)
}
#if LANG_CXX11
inline void MsgUpdateSettingReq::set_settingvalue(::std::string&& value) {
  
  settingvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateSettingReq.settingvalue)
}
#endif
inline void MsgUpdateSettingReq::set_settingvalue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  settingvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateSettingReq.settingvalue)
}
inline void MsgUpdateSettingReq::set_settingvalue(const void* value, size_t size) {
  
  settingvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateSettingReq.settingvalue)
}
inline ::std::string* MsgUpdateSettingReq::mutable_settingvalue() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateSettingReq.settingvalue)
  return settingvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateSettingReq::release_settingvalue() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateSettingReq.settingvalue)
  
  return settingvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateSettingReq::set_allocated_settingvalue(::std::string* settingvalue) {
  if (settingvalue != NULL) {
    
  } else {
    
  }
  settingvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), settingvalue);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateSettingReq.settingvalue)
}

// -------------------------------------------------------------------

// MsgQueryRecentListReq

// -------------------------------------------------------------------

// MsgQueryRecentListAck

// .KFMsg.PBRecord recentlist = 1;
inline bool MsgQueryRecentListAck::has_recentlist() const {
  return this != internal_default_instance() && recentlist_ != NULL;
}
inline const ::KFMsg::PBRecord& MsgQueryRecentListAck::_internal_recentlist() const {
  return *recentlist_;
}
inline const ::KFMsg::PBRecord& MsgQueryRecentListAck::recentlist() const {
  const ::KFMsg::PBRecord* p = recentlist_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRecentListAck.recentlist)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRecord*>(
      &::KFMsg::_PBRecord_default_instance_);
}
inline ::KFMsg::PBRecord* MsgQueryRecentListAck::release_recentlist() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryRecentListAck.recentlist)
  
  ::KFMsg::PBRecord* temp = recentlist_;
  recentlist_ = NULL;
  return temp;
}
inline ::KFMsg::PBRecord* MsgQueryRecentListAck::mutable_recentlist() {
  
  if (recentlist_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRecord>(GetArenaNoVirtual());
    recentlist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryRecentListAck.recentlist)
  return recentlist_;
}
inline void MsgQueryRecentListAck::set_allocated_recentlist(::KFMsg::PBRecord* recentlist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recentlist_);
  }
  if (recentlist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      recentlist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recentlist, submessage_arena);
    }
    
  } else {
    
  }
  recentlist_ = recentlist;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryRecentListAck.recentlist)
}

// -------------------------------------------------------------------

// MsgCompoundDataReq

// bytes dataname = 1;
inline void MsgCompoundDataReq::clear_dataname() {
  dataname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCompoundDataReq::dataname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCompoundDataReq.dataname)
  return dataname_.GetNoArena();
}
inline void MsgCompoundDataReq::set_dataname(const ::std::string& value) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCompoundDataReq.dataname)
}
#if LANG_CXX11
inline void MsgCompoundDataReq::set_dataname(::std::string&& value) {
  
  dataname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCompoundDataReq.dataname)
}
#endif
inline void MsgCompoundDataReq::set_dataname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCompoundDataReq.dataname)
}
inline void MsgCompoundDataReq::set_dataname(const void* value, size_t size) {
  
  dataname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCompoundDataReq.dataname)
}
inline ::std::string* MsgCompoundDataReq::mutable_dataname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCompoundDataReq.dataname)
  return dataname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCompoundDataReq::release_dataname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCompoundDataReq.dataname)
  
  return dataname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCompoundDataReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname != NULL) {
    
  } else {
    
  }
  dataname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCompoundDataReq.dataname)
}

// uint32 key = 2;
inline void MsgCompoundDataReq::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 MsgCompoundDataReq::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCompoundDataReq.key)
  return key_;
}
inline void MsgCompoundDataReq::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCompoundDataReq.key)
}

// -------------------------------------------------------------------

// MsgQueryRankListReq

// uint32 rankid = 1;
inline void MsgQueryRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListReq.rankid)
  return rankid_;
}
inline void MsgQueryRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListReq.rankid)
}

// -------------------------------------------------------------------

// MsgQueryRankListAck

// uint32 rankid = 1;
inline void MsgQueryRankListAck::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListAck::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.rankid)
  return rankid_;
}
inline void MsgQueryRankListAck::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListAck.rankid)
}

// .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryRankListAck::has_rankdatas() const {
  return this != internal_default_instance() && rankdatas_ != NULL;
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::_internal_rankdatas() const {
  return *rankdatas_;
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::rankdatas() const {
  const ::KFMsg::PBRankDatas* p = rankdatas_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.rankdatas)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankDatas*>(
      &::KFMsg::_PBRankDatas_default_instance_);
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::release_rankdatas() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryRankListAck.rankdatas)
  
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::mutable_rankdatas() {
  
  if (rankdatas_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankDatas>(GetArenaNoVirtual());
    rankdatas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryRankListAck.rankdatas)
  return rankdatas_;
}
inline void MsgQueryRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rankdatas_);
  }
  if (rankdatas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rankdatas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rankdatas, submessage_arena);
    }
    
  } else {
    
  }
  rankdatas_ = rankdatas;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryRankListAck.rankdatas)
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListReq

// uint32 rankid = 1;
inline void MsgQueryFriendRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListReq.rankid)
  return rankid_;
}
inline void MsgQueryFriendRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryFriendRankListReq.rankid)
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListAck

// uint32 rankid = 1;
inline void MsgQueryFriendRankListAck::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListAck::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListAck.rankid)
  return rankid_;
}
inline void MsgQueryFriendRankListAck::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryFriendRankListAck.rankid)
}

// .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryFriendRankListAck::has_rankdatas() const {
  return this != internal_default_instance() && rankdatas_ != NULL;
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::_internal_rankdatas() const {
  return *rankdatas_;
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::rankdatas() const {
  const ::KFMsg::PBRankDatas* p = rankdatas_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankDatas*>(
      &::KFMsg::_PBRankDatas_default_instance_);
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::release_rankdatas() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::mutable_rankdatas() {
  
  if (rankdatas_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankDatas>(GetArenaNoVirtual());
    rankdatas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  return rankdatas_;
}
inline void MsgQueryFriendRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rankdatas_);
  }
  if (rankdatas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rankdatas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rankdatas, submessage_arena);
    }
    
  } else {
    
  }
  rankdatas_ = rankdatas;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryFriendRankListAck.rankdatas)
}

// -------------------------------------------------------------------

// MsgSevenSignInRewardReq

// uint32 day = 1;
inline void MsgSevenSignInRewardReq::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 MsgSevenSignInRewardReq::day() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSevenSignInRewardReq.day)
  return day_;
}
inline void MsgSevenSignInRewardReq::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSevenSignInRewardReq.day)
}

// -------------------------------------------------------------------

// MsgTellSevenExtendReward

// bytes playername = 1;
inline void MsgTellSevenExtendReward::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTellSevenExtendReward::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellSevenExtendReward.playername)
  return playername_.GetNoArena();
}
inline void MsgTellSevenExtendReward::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellSevenExtendReward.playername)
}
#if LANG_CXX11
inline void MsgTellSevenExtendReward::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTellSevenExtendReward.playername)
}
#endif
inline void MsgTellSevenExtendReward::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTellSevenExtendReward.playername)
}
inline void MsgTellSevenExtendReward::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTellSevenExtendReward.playername)
}
inline ::std::string* MsgTellSevenExtendReward::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellSevenExtendReward.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTellSevenExtendReward::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellSevenExtendReward.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTellSevenExtendReward::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellSevenExtendReward.playername)
}

// bytes reward = 2;
inline void MsgTellSevenExtendReward::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTellSevenExtendReward::reward() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellSevenExtendReward.reward)
  return reward_.GetNoArena();
}
inline void MsgTellSevenExtendReward::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellSevenExtendReward.reward)
}
#if LANG_CXX11
inline void MsgTellSevenExtendReward::set_reward(::std::string&& value) {
  
  reward_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTellSevenExtendReward.reward)
}
#endif
inline void MsgTellSevenExtendReward::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTellSevenExtendReward.reward)
}
inline void MsgTellSevenExtendReward::set_reward(const void* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTellSevenExtendReward.reward)
}
inline ::std::string* MsgTellSevenExtendReward::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellSevenExtendReward.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTellSevenExtendReward::release_reward() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellSevenExtendReward.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTellSevenExtendReward::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellSevenExtendReward.reward)
}

// -------------------------------------------------------------------

// MsgCreateGuildReq

// bytes guildname = 1;
inline void MsgCreateGuildReq::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCreateGuildReq::guildname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateGuildReq.guildname)
  return guildname_.GetNoArena();
}
inline void MsgCreateGuildReq::set_guildname(const ::std::string& value) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateGuildReq.guildname)
}
#if LANG_CXX11
inline void MsgCreateGuildReq::set_guildname(::std::string&& value) {
  
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCreateGuildReq.guildname)
}
#endif
inline void MsgCreateGuildReq::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCreateGuildReq.guildname)
}
inline void MsgCreateGuildReq::set_guildname(const void* value, size_t size) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCreateGuildReq.guildname)
}
inline ::std::string* MsgCreateGuildReq::mutable_guildname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCreateGuildReq.guildname)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCreateGuildReq::release_guildname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCreateGuildReq.guildname)
  
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCreateGuildReq::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    
  } else {
    
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCreateGuildReq.guildname)
}

// uint32 medal = 2;
inline void MsgCreateGuildReq::clear_medal() {
  medal_ = 0u;
}
inline ::google::protobuf::uint32 MsgCreateGuildReq::medal() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateGuildReq.medal)
  return medal_;
}
inline void MsgCreateGuildReq::set_medal(::google::protobuf::uint32 value) {
  
  medal_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateGuildReq.medal)
}

// bytes manifesto = 3;
inline void MsgCreateGuildReq::clear_manifesto() {
  manifesto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCreateGuildReq::manifesto() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCreateGuildReq.manifesto)
  return manifesto_.GetNoArena();
}
inline void MsgCreateGuildReq::set_manifesto(const ::std::string& value) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCreateGuildReq.manifesto)
}
#if LANG_CXX11
inline void MsgCreateGuildReq::set_manifesto(::std::string&& value) {
  
  manifesto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCreateGuildReq.manifesto)
}
#endif
inline void MsgCreateGuildReq::set_manifesto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCreateGuildReq.manifesto)
}
inline void MsgCreateGuildReq::set_manifesto(const void* value, size_t size) {
  
  manifesto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCreateGuildReq.manifesto)
}
inline ::std::string* MsgCreateGuildReq::mutable_manifesto() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCreateGuildReq.manifesto)
  return manifesto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCreateGuildReq::release_manifesto() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCreateGuildReq.manifesto)
  
  return manifesto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCreateGuildReq::set_allocated_manifesto(::std::string* manifesto) {
  if (manifesto != NULL) {
    
  } else {
    
  }
  manifesto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manifesto);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCreateGuildReq.manifesto)
}

// -------------------------------------------------------------------

// MsgInviteGuildReq

// uint64 inviterid = 1;
inline void MsgInviteGuildReq::clear_inviterid() {
  inviterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgInviteGuildReq::inviterid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgInviteGuildReq.inviterid)
  return inviterid_;
}
inline void MsgInviteGuildReq::set_inviterid(::google::protobuf::uint64 value) {
  
  inviterid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgInviteGuildReq.inviterid)
}

// -------------------------------------------------------------------

// MsgApplyGuildReq

// uint64 guildid = 1;
inline void MsgApplyGuildReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgApplyGuildReq::guildid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyGuildReq.guildid)
  return guildid_;
}
inline void MsgApplyGuildReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyGuildReq.guildid)
}

// uint64 invitor = 2;
inline void MsgApplyGuildReq::clear_invitor() {
  invitor_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgApplyGuildReq::invitor() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyGuildReq.invitor)
  return invitor_;
}
inline void MsgApplyGuildReq::set_invitor(::google::protobuf::uint64 value) {
  
  invitor_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyGuildReq.invitor)
}

// -------------------------------------------------------------------

// MsgExitGuildReq

// -------------------------------------------------------------------

// MsgTransferMasterReq

// uint64 newmasterid = 1;
inline void MsgTransferMasterReq::clear_newmasterid() {
  newmasterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTransferMasterReq::newmasterid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTransferMasterReq.newmasterid)
  return newmasterid_;
}
inline void MsgTransferMasterReq::set_newmasterid(::google::protobuf::uint64 value) {
  
  newmasterid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTransferMasterReq.newmasterid)
}

// -------------------------------------------------------------------

// MsgReviewApplyReq

// uint64 playerid = 1;
inline void MsgReviewApplyReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReviewApplyReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReviewApplyReq.playerid)
  return playerid_;
}
inline void MsgReviewApplyReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReviewApplyReq.playerid)
}

// uint32 operatortype = 2;
inline void MsgReviewApplyReq::clear_operatortype() {
  operatortype_ = 0u;
}
inline ::google::protobuf::uint32 MsgReviewApplyReq::operatortype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReviewApplyReq.operatortype)
  return operatortype_;
}
inline void MsgReviewApplyReq::set_operatortype(::google::protobuf::uint32 value) {
  
  operatortype_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReviewApplyReq.operatortype)
}

// -------------------------------------------------------------------

// MsgDissolveGuildReq

// -------------------------------------------------------------------

// MsgModifyGuildMedalReq

// uint32 newmedal = 1;
inline void MsgModifyGuildMedalReq::clear_newmedal() {
  newmedal_ = 0u;
}
inline ::google::protobuf::uint32 MsgModifyGuildMedalReq::newmedal() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgModifyGuildMedalReq.newmedal)
  return newmedal_;
}
inline void MsgModifyGuildMedalReq::set_newmedal(::google::protobuf::uint32 value) {
  
  newmedal_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgModifyGuildMedalReq.newmedal)
}

// -------------------------------------------------------------------

// MsgQueryGuildListReq

// repeated uint64 guilds = 1;
inline int MsgQueryGuildListReq::guilds_size() const {
  return guilds_.size();
}
inline void MsgQueryGuildListReq::clear_guilds() {
  guilds_.Clear();
}
inline ::google::protobuf::uint64 MsgQueryGuildListReq::guilds(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuildListReq.guilds)
  return guilds_.Get(index);
}
inline void MsgQueryGuildListReq::set_guilds(int index, ::google::protobuf::uint64 value) {
  guilds_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuildListReq.guilds)
}
inline void MsgQueryGuildListReq::add_guilds(::google::protobuf::uint64 value) {
  guilds_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgQueryGuildListReq.guilds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MsgQueryGuildListReq::guilds() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgQueryGuildListReq.guilds)
  return guilds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MsgQueryGuildListReq::mutable_guilds() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgQueryGuildListReq.guilds)
  return &guilds_;
}

// uint32 cursor = 2;
inline void MsgQueryGuildListReq::clear_cursor() {
  cursor_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryGuildListReq::cursor() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuildListReq.cursor)
  return cursor_;
}
inline void MsgQueryGuildListReq::set_cursor(::google::protobuf::uint32 value) {
  
  cursor_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuildListReq.cursor)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MsgQueryGuildListAck

// map<string, bytes> guilddatas = 1;
inline int MsgQueryGuildListAck::guilddatas_size() const {
  return guilddatas_.size();
}
inline void MsgQueryGuildListAck::clear_guilddatas() {
  guilddatas_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
MsgQueryGuildListAck::guilddatas() const {
  // @@protoc_insertion_point(field_map:KFMsg.MsgQueryGuildListAck.guilddatas)
  return guilddatas_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
MsgQueryGuildListAck::mutable_guilddatas() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.MsgQueryGuildListAck.guilddatas)
  return guilddatas_.MutableMap();
}

// -------------------------------------------------------------------

// MsgKickMemberReq

// uint64 toplayerid = 1;
inline void MsgKickMemberReq::clear_toplayerid() {
  toplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgKickMemberReq::toplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgKickMemberReq.toplayerid)
  return toplayerid_;
}
inline void MsgKickMemberReq::set_toplayerid(::google::protobuf::uint64 value) {
  
  toplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgKickMemberReq.toplayerid)
}

// -------------------------------------------------------------------

// MsgUpgradeGuildReq

// -------------------------------------------------------------------

// MsgAppointGuildMemberReq

// uint64 toplayerid = 1;
inline void MsgAppointGuildMemberReq::clear_toplayerid() {
  toplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgAppointGuildMemberReq::toplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAppointGuildMemberReq.toplayerid)
  return toplayerid_;
}
inline void MsgAppointGuildMemberReq::set_toplayerid(::google::protobuf::uint64 value) {
  
  toplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAppointGuildMemberReq.toplayerid)
}

// uint32 title = 2;
inline void MsgAppointGuildMemberReq::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 MsgAppointGuildMemberReq::title() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAppointGuildMemberReq.title)
  return title_;
}
inline void MsgAppointGuildMemberReq::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAppointGuildMemberReq.title)
}

// -------------------------------------------------------------------

// MsgSearchGuildByNameReq

// bytes guildname = 1;
inline void MsgSearchGuildByNameReq::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchGuildByNameReq::guildname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSearchGuildByNameReq.guildname)
  return guildname_.GetNoArena();
}
inline void MsgSearchGuildByNameReq::set_guildname(const ::std::string& value) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSearchGuildByNameReq.guildname)
}
#if LANG_CXX11
inline void MsgSearchGuildByNameReq::set_guildname(::std::string&& value) {
  
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSearchGuildByNameReq.guildname)
}
#endif
inline void MsgSearchGuildByNameReq::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSearchGuildByNameReq.guildname)
}
inline void MsgSearchGuildByNameReq::set_guildname(const void* value, size_t size) {
  
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSearchGuildByNameReq.guildname)
}
inline ::std::string* MsgSearchGuildByNameReq::mutable_guildname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSearchGuildByNameReq.guildname)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchGuildByNameReq::release_guildname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSearchGuildByNameReq.guildname)
  
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchGuildByNameReq::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    
  } else {
    
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSearchGuildByNameReq.guildname)
}

// -------------------------------------------------------------------

// MsgSetGuildSwitchReq

// bytes type = 1;
inline void MsgSetGuildSwitchReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetGuildSwitchReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetGuildSwitchReq.type)
  return type_.GetNoArena();
}
inline void MsgSetGuildSwitchReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetGuildSwitchReq.type)
}
#if LANG_CXX11
inline void MsgSetGuildSwitchReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSetGuildSwitchReq.type)
}
#endif
inline void MsgSetGuildSwitchReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSetGuildSwitchReq.type)
}
inline void MsgSetGuildSwitchReq::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSetGuildSwitchReq.type)
}
inline ::std::string* MsgSetGuildSwitchReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSetGuildSwitchReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetGuildSwitchReq::release_type() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSetGuildSwitchReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetGuildSwitchReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSetGuildSwitchReq.type)
}

// uint32 flag = 2;
inline void MsgSetGuildSwitchReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetGuildSwitchReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetGuildSwitchReq.flag)
  return flag_;
}
inline void MsgSetGuildSwitchReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetGuildSwitchReq.flag)
}

// -------------------------------------------------------------------

// MsgQueryGuildLogReq

// uint32 page = 1;
inline void MsgQueryGuildLogReq::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryGuildLogReq::page() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuildLogReq.page)
  return page_;
}
inline void MsgQueryGuildLogReq::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuildLogReq.page)
}

// -------------------------------------------------------------------

// MsgQueryGuildLogAck

// uint32 page = 1;
inline void MsgQueryGuildLogAck::clear_page() {
  page_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryGuildLogAck::page() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuildLogAck.page)
  return page_;
}
inline void MsgQueryGuildLogAck::set_page(::google::protobuf::uint32 value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuildLogAck.page)
}

// repeated bytes guildlog = 2;
inline int MsgQueryGuildLogAck::guildlog_size() const {
  return guildlog_.size();
}
inline void MsgQueryGuildLogAck::clear_guildlog() {
  guildlog_.Clear();
}
inline const ::std::string& MsgQueryGuildLogAck::guildlog(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryGuildLogAck.guildlog)
  return guildlog_.Get(index);
}
inline ::std::string* MsgQueryGuildLogAck::mutable_guildlog(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryGuildLogAck.guildlog)
  return guildlog_.Mutable(index);
}
inline void MsgQueryGuildLogAck::set_guildlog(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuildLogAck.guildlog)
  guildlog_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgQueryGuildLogAck::set_guildlog(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryGuildLogAck.guildlog)
  guildlog_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgQueryGuildLogAck::set_guildlog(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  guildlog_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryGuildLogAck.guildlog)
}
inline void MsgQueryGuildLogAck::set_guildlog(int index, const void* value, size_t size) {
  guildlog_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryGuildLogAck.guildlog)
}
inline ::std::string* MsgQueryGuildLogAck::add_guildlog() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgQueryGuildLogAck.guildlog)
  return guildlog_.Add();
}
inline void MsgQueryGuildLogAck::add_guildlog(const ::std::string& value) {
  guildlog_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgQueryGuildLogAck.guildlog)
}
#if LANG_CXX11
inline void MsgQueryGuildLogAck::add_guildlog(::std::string&& value) {
  guildlog_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgQueryGuildLogAck.guildlog)
}
#endif
inline void MsgQueryGuildLogAck::add_guildlog(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  guildlog_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgQueryGuildLogAck.guildlog)
}
inline void MsgQueryGuildLogAck::add_guildlog(const void* value, size_t size) {
  guildlog_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgQueryGuildLogAck.guildlog)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgQueryGuildLogAck::guildlog() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgQueryGuildLogAck.guildlog)
  return guildlog_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgQueryGuildLogAck::mutable_guildlog() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgQueryGuildLogAck.guildlog)
  return &guildlog_;
}

// -------------------------------------------------------------------

// MsgTellMarquee

// bytes content = 1;
inline void MsgTellMarquee::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTellMarquee::content() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellMarquee.content)
  return content_.GetNoArena();
}
inline void MsgTellMarquee::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellMarquee.content)
}
#if LANG_CXX11
inline void MsgTellMarquee::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTellMarquee.content)
}
#endif
inline void MsgTellMarquee::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTellMarquee.content)
}
inline void MsgTellMarquee::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTellMarquee.content)
}
inline ::std::string* MsgTellMarquee::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellMarquee.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTellMarquee::release_content() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellMarquee.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTellMarquee::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellMarquee.content)
}

// -------------------------------------------------------------------

// MsgTellSysNotcie

// bytes content = 1;
inline void MsgTellSysNotcie::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTellSysNotcie::content() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellSysNotcie.content)
  return content_.GetNoArena();
}
inline void MsgTellSysNotcie::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellSysNotcie.content)
}
#if LANG_CXX11
inline void MsgTellSysNotcie::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTellSysNotcie.content)
}
#endif
inline void MsgTellSysNotcie::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTellSysNotcie.content)
}
inline void MsgTellSysNotcie::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTellSysNotcie.content)
}
inline ::std::string* MsgTellSysNotcie::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellSysNotcie.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTellSysNotcie::release_content() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellSysNotcie.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTellSysNotcie::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellSysNotcie.content)
}

// -------------------------------------------------------------------

// MsgBindAlipayReq

// bytes name = 1;
inline void MsgBindAlipayReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBindAlipayReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBindAlipayReq.name)
  return name_.GetNoArena();
}
inline void MsgBindAlipayReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgBindAlipayReq.name)
}
#if LANG_CXX11
inline void MsgBindAlipayReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgBindAlipayReq.name)
}
#endif
inline void MsgBindAlipayReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgBindAlipayReq.name)
}
inline void MsgBindAlipayReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgBindAlipayReq.name)
}
inline ::std::string* MsgBindAlipayReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgBindAlipayReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBindAlipayReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgBindAlipayReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBindAlipayReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgBindAlipayReq.name)
}

// bytes alipay = 2;
inline void MsgBindAlipayReq::clear_alipay() {
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBindAlipayReq::alipay() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgBindAlipayReq.alipay)
  return alipay_.GetNoArena();
}
inline void MsgBindAlipayReq::set_alipay(const ::std::string& value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgBindAlipayReq.alipay)
}
#if LANG_CXX11
inline void MsgBindAlipayReq::set_alipay(::std::string&& value) {
  
  alipay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgBindAlipayReq.alipay)
}
#endif
inline void MsgBindAlipayReq::set_alipay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgBindAlipayReq.alipay)
}
inline void MsgBindAlipayReq::set_alipay(const void* value, size_t size) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgBindAlipayReq.alipay)
}
inline ::std::string* MsgBindAlipayReq::mutable_alipay() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgBindAlipayReq.alipay)
  return alipay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBindAlipayReq::release_alipay() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgBindAlipayReq.alipay)
  
  return alipay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBindAlipayReq::set_allocated_alipay(::std::string* alipay) {
  if (alipay != NULL) {
    
  } else {
    
  }
  alipay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgBindAlipayReq.alipay)
}

// -------------------------------------------------------------------

// MsgExChangeInviteScoreReq

// bytes name = 1;
inline void MsgExChangeInviteScoreReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgExChangeInviteScoreReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgExChangeInviteScoreReq.name)
  return name_.GetNoArena();
}
inline void MsgExChangeInviteScoreReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgExChangeInviteScoreReq.name)
}
#if LANG_CXX11
inline void MsgExChangeInviteScoreReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgExChangeInviteScoreReq.name)
}
#endif
inline void MsgExChangeInviteScoreReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgExChangeInviteScoreReq.name)
}
inline void MsgExChangeInviteScoreReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgExChangeInviteScoreReq.name)
}
inline ::std::string* MsgExChangeInviteScoreReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgExChangeInviteScoreReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgExChangeInviteScoreReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgExChangeInviteScoreReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgExChangeInviteScoreReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgExChangeInviteScoreReq.name)
}

// bytes alipay = 2;
inline void MsgExChangeInviteScoreReq::clear_alipay() {
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgExChangeInviteScoreReq::alipay() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgExChangeInviteScoreReq.alipay)
  return alipay_.GetNoArena();
}
inline void MsgExChangeInviteScoreReq::set_alipay(const ::std::string& value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgExChangeInviteScoreReq.alipay)
}
#if LANG_CXX11
inline void MsgExChangeInviteScoreReq::set_alipay(::std::string&& value) {
  
  alipay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgExChangeInviteScoreReq.alipay)
}
#endif
inline void MsgExChangeInviteScoreReq::set_alipay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgExChangeInviteScoreReq.alipay)
}
inline void MsgExChangeInviteScoreReq::set_alipay(const void* value, size_t size) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgExChangeInviteScoreReq.alipay)
}
inline ::std::string* MsgExChangeInviteScoreReq::mutable_alipay() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgExChangeInviteScoreReq.alipay)
  return alipay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgExChangeInviteScoreReq::release_alipay() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgExChangeInviteScoreReq.alipay)
  
  return alipay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgExChangeInviteScoreReq::set_allocated_alipay(::std::string* alipay) {
  if (alipay != NULL) {
    
  } else {
    
  }
  alipay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgExChangeInviteScoreReq.alipay)
}

// -------------------------------------------------------------------

// MsgExChangeInviteScoreAck

// uint32 exchangescore = 1;
inline void MsgExChangeInviteScoreAck::clear_exchangescore() {
  exchangescore_ = 0u;
}
inline ::google::protobuf::uint32 MsgExChangeInviteScoreAck::exchangescore() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgExChangeInviteScoreAck.exchangescore)
  return exchangescore_;
}
inline void MsgExChangeInviteScoreAck::set_exchangescore(::google::protobuf::uint32 value) {
  
  exchangescore_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgExChangeInviteScoreAck.exchangescore)
}

// uint32 leftscore = 2;
inline void MsgExChangeInviteScoreAck::clear_leftscore() {
  leftscore_ = 0u;
}
inline ::google::protobuf::uint32 MsgExChangeInviteScoreAck::leftscore() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgExChangeInviteScoreAck.leftscore)
  return leftscore_;
}
inline void MsgExChangeInviteScoreAck::set_leftscore(::google::protobuf::uint32 value) {
  
  leftscore_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgExChangeInviteScoreAck.leftscore)
}

// -------------------------------------------------------------------

// MsgQueryInviteScoreReq

// -------------------------------------------------------------------

// MsgQueryInviteScoreAck

// uint32 exchangescore = 1;
inline void MsgQueryInviteScoreAck::clear_exchangescore() {
  exchangescore_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryInviteScoreAck::exchangescore() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryInviteScoreAck.exchangescore)
  return exchangescore_;
}
inline void MsgQueryInviteScoreAck::set_exchangescore(::google::protobuf::uint32 value) {
  
  exchangescore_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryInviteScoreAck.exchangescore)
}

// uint32 leftscore = 2;
inline void MsgQueryInviteScoreAck::clear_leftscore() {
  leftscore_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryInviteScoreAck::leftscore() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryInviteScoreAck.leftscore)
  return leftscore_;
}
inline void MsgQueryInviteScoreAck::set_leftscore(::google::protobuf::uint32 value) {
  
  leftscore_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryInviteScoreAck.leftscore)
}

// -------------------------------------------------------------------

// MsgExChangeInviteRecordReq

// -------------------------------------------------------------------

// PBExChangeInviteRecord

// bytes name = 1;
inline void PBExChangeInviteRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBExChangeInviteRecord::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBExChangeInviteRecord.name)
  return name_.GetNoArena();
}
inline void PBExChangeInviteRecord::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBExChangeInviteRecord.name)
}
#if LANG_CXX11
inline void PBExChangeInviteRecord::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBExChangeInviteRecord.name)
}
#endif
inline void PBExChangeInviteRecord::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBExChangeInviteRecord.name)
}
inline void PBExChangeInviteRecord::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBExChangeInviteRecord.name)
}
inline ::std::string* PBExChangeInviteRecord::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBExChangeInviteRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBExChangeInviteRecord::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBExChangeInviteRecord.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBExChangeInviteRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBExChangeInviteRecord.name)
}

// bytes alipay = 2;
inline void PBExChangeInviteRecord::clear_alipay() {
  alipay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBExChangeInviteRecord::alipay() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBExChangeInviteRecord.alipay)
  return alipay_.GetNoArena();
}
inline void PBExChangeInviteRecord::set_alipay(const ::std::string& value) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBExChangeInviteRecord.alipay)
}
#if LANG_CXX11
inline void PBExChangeInviteRecord::set_alipay(::std::string&& value) {
  
  alipay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBExChangeInviteRecord.alipay)
}
#endif
inline void PBExChangeInviteRecord::set_alipay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBExChangeInviteRecord.alipay)
}
inline void PBExChangeInviteRecord::set_alipay(const void* value, size_t size) {
  
  alipay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBExChangeInviteRecord.alipay)
}
inline ::std::string* PBExChangeInviteRecord::mutable_alipay() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBExChangeInviteRecord.alipay)
  return alipay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBExChangeInviteRecord::release_alipay() {
  // @@protoc_insertion_point(field_release:KFMsg.PBExChangeInviteRecord.alipay)
  
  return alipay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBExChangeInviteRecord::set_allocated_alipay(::std::string* alipay) {
  if (alipay != NULL) {
    
  } else {
    
  }
  alipay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBExChangeInviteRecord.alipay)
}

// uint32 score = 3;
inline void PBExChangeInviteRecord::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 PBExChangeInviteRecord::score() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBExChangeInviteRecord.score)
  return score_;
}
inline void PBExChangeInviteRecord::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBExChangeInviteRecord.score)
}

// uint64 time = 4;
inline void PBExChangeInviteRecord::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBExChangeInviteRecord::time() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBExChangeInviteRecord.time)
  return time_;
}
inline void PBExChangeInviteRecord::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBExChangeInviteRecord.time)
}

// -------------------------------------------------------------------

// MsgExChangeInviteRecordAck

// repeated .KFMsg.PBExChangeInviteRecord record = 1;
inline int MsgExChangeInviteRecordAck::record_size() const {
  return record_.size();
}
inline void MsgExChangeInviteRecordAck::clear_record() {
  record_.Clear();
}
inline ::KFMsg::PBExChangeInviteRecord* MsgExChangeInviteRecordAck::mutable_record(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgExChangeInviteRecordAck.record)
  return record_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBExChangeInviteRecord >*
MsgExChangeInviteRecordAck::mutable_record() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgExChangeInviteRecordAck.record)
  return &record_;
}
inline const ::KFMsg::PBExChangeInviteRecord& MsgExChangeInviteRecordAck::record(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgExChangeInviteRecordAck.record)
  return record_.Get(index);
}
inline ::KFMsg::PBExChangeInviteRecord* MsgExChangeInviteRecordAck::add_record() {
  // @@protoc_insertion_point(field_add:KFMsg.MsgExChangeInviteRecordAck.record)
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBExChangeInviteRecord >&
MsgExChangeInviteRecordAck::record() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgExChangeInviteRecordAck.record)
  return record_;
}

// -------------------------------------------------------------------

// MsgTitleChangeReq

// uint32 titleid = 1;
inline void MsgTitleChangeReq::clear_titleid() {
  titleid_ = 0u;
}
inline ::google::protobuf::uint32 MsgTitleChangeReq::titleid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTitleChangeReq.titleid)
  return titleid_;
}
inline void MsgTitleChangeReq::set_titleid(::google::protobuf::uint32 value) {
  
  titleid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTitleChangeReq.titleid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::ClientProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::ClientProtocol>() {
  return ::KFMsg::ClientProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFClientMessage_2eproto
