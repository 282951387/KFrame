// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFClientMessage.proto

#ifndef PROTOBUF_KFClientMessage_2eproto__INCLUDED
#define PROTOBUF_KFClientMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "KFCommonMessage.pb.h"
// @@protoc_insertion_point(includes)

namespace KFMsg {

// Internal implementation detail -- do not call these.
void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
void protobuf_AssignDesc_KFClientMessage_2eproto();
void protobuf_ShutdownFile_KFClientMessage_2eproto();

class MsgResultDisplay;
class MsgTellBeKick;
class MsgLoginVerifyReq;
class MsgLoginVerifyAck;
class MsgLoginGameReq;
class MsgLoginOutReq;
class MsgCreateRoleReq;
class MsgChangeNameReq;
class MsgChangeSexReq;
class MsgChangeIconReq;
class MsgChangeIconBoxReq;
class MsgChangeMottoReq;
class MsgQueryBasicReq;
class MsgQueryPlayerReq;
class MsgReceiveTaskRewardReq;
class MsgReceiveActivityRewardReq;
class MsgReceiveAchieveRewardReq;
class MsgReceiveGiftRewardReq;
class MsgReceiveMailRewardReq;
class MsgViewMailReq;
class MsgDeleteMailReq;
class MsgQueryMailReq;
class MsgStartMatchReq;
class MsgStartMatchAck;
class MsgCancelMatchReq;
class MsgCancelMatchAck;
class MsgMatchResultAck;
class MsgAddFriendInviteReq;
class MsgReplyFriendInviteReq;
class MsgDelFriendReq;
class MsgSetRefuseFriendInviteReq;
class MsgEnterChatReq;
class MsgSendChatReq;
class MsgSendChatInfo;
class MsgLeaveChatReq;
class MsgSendOneByOneChatReq;
class MsgSendOneByOneChatInfo;
class MsgDebugCommandReq;
class MsgShowRewardAgent;
class MsgSendGroupChatReq;
class MsgSendGroupChatInfo;
class MsgBuyStoreReq;
class MsgGiveStoreReq;
class MsgPlayerToastReq;
class MsgQueryToastCountReq;
class MsgQueryToastCountAck;
class MsgRemoveDataReq;
class MsgChangeModelReq;
class MsgSetModelDefaultClothesReq;
class MsgDressClothesReq;
class MsgInviteMatchGroupReq;
class MsgReplyInviteMatchGroupReq;
class MsgLeaveMatchGroupReq;
class MsgKickMatchGroupReq;
class MsgApplyMatchGroupReq;
class MsgReplyApplyMatchGroupReq;
class MsgMatchGroupPrepareReq;
class MsgUpdateGroupMatchReq;
class MsgQueryGuestReq;
class MsgQueryGuestAck;
class MsgUseItemReq;
class PBStore;
class PBStores;
class MsgQueryStoreInfoReq;
class MsgQueryStoreInfoAck;
class MsgBuyStoreAck;
class MsgSetWishOrderReq;
class MsgQuerySettingReq;
class MsgQuerySettingAck;
class MsgUpdateSettingReq;
class MsgQueryRecentListReq;
class MsgQueryRecentListAck;
class MsgCompoundDataReq;
class MsgQueryRankListReq;
class MsgQueryRankListAck;
class MsgQueryFriendRankListReq;
class MsgQueryFriendRankListAck;
class MsgSevenSignInRewardReq;
class MsgTellSevenExtendReward;

enum ClientProtocol {
  MSG_TELL_BE_KICK = 100,
  MSG_LOGIN_VERIFY_REQ = 101,
  MSG_LOGIN_VERIFY_ACK = 102,
  MSG_LOGIN_GAME_REQ = 103,
  MSG_LOGIN_OUT_REQ = 105,
  MSG_RESULT_DISPLAY = 106,
  MSG_CREATE_ROLE_REQ = 107,
  MSG_CHANGE_NAME_REQ = 108,
  MSG_CHANGE_SEX_REQ = 109,
  MSG_RECEIVE_ACTIVITY_REWARD_REQ = 110,
  MSG_RECEIVE_TASK_REWARD_REQ = 111,
  MSG_RECEIVE_ACHIEVE_REWARD_REQ = 112,
  MSG_RECEIVE_GIFT_REWARD_REQ = 113,
  MSG_RECEIVE_MAIL_REWARD_REQ = 114,
  MSG_VIEW_MAIL_REQ = 115,
  MSG_DELETE_MAIL_REQ = 116,
  MSG_QUERY_MAIL_REQ = 117,
  MSG_START_MATCH_REQ = 118,
  MSG_START_MATCH_ACK = 119,
  MSG_CANCEL_MATCH_REQ = 120,
  MSG_MATCH_RESULT_ACK = 121,
  MSG_ADD_FRIEND_INVITE_REQ = 122,
  MSG_REPLY_FRIEND_INVITE_REQ = 123,
  MSG_DEL_FRIEND_REQ = 124,
  MSG_ENTER_CHAT_REQ = 126,
  MSG_SEND_CHAT_REQ = 127,
  MSG_SEND_CHAT_INFO = 128,
  MSG_LEAVE_CHAT_REQ = 129,
  MSG_SET_REFUSE_FRIEND_INVITE_REQ = 130,
  MSG_QUERY_BASIC_REQ = 131,
  MSG_QUERY_PLAYER_REQ = 132,
  MSG_BUY_STORE_REQ = 133,
  MSG_GIVE_STORE_REQ = 134,
  MSG_SEND_ONEBYONE_CHAT_REQ = 135,
  MSG_SEND_ONEBYONE_CHAT_INFO = 136,
  MSG_CHANGE_ICON_REQ = 137,
  MSG_DEBUG_COMMAND_REQ = 143,
  MSG_CHANGE_MOTTO_REQ = 144,
  MSG_SET_MODEL_DEFAULT_CLOTHES_REQ = 145,
  MSG_PLAYER_TOAST_REQ = 146,
  MSG_REMOVE_DATA_REQ = 147,
  MSG_DRESS_CLOTHES_REQ = 148,
  MSG_CHANGE_MODEL_REQ = 149,
  MSG_SHOW_REWARD_AGENT = 150,
  MSG_INVITE_MATCH_GROUP_REQ = 151,
  MSG_REPLY_INVITE_MATCH_GROUP_REQ = 153,
  MSG_LEAVE_MATCH_GROUP_REQ = 154,
  MSG_KICK_MATCH_GROUP_REQ = 155,
  MSG_APPLY_MATCH_GROUP_REQ = 156,
  MSG_REPLY_APPLY_MATCH_GROUP_REQ = 157,
  MSG_MATCH_GROUP_PREPARE_REQ = 160,
  MSG_CHANGE_ICON_BOX_REQ = 161,
  MSG_QUERY_GUEST_REQ = 162,
  MSG_QUERY_GUEST_ACK = 163,
  MSG_CANCEL_MATCH_ACK = 164,
  MSG_USE_ITEM_REQ = 165,
  MSG_QUERY_TOAST_COUNT_REQ = 166,
  MSG_QUERY_TOAST_COUNT_ACK = 167,
  MSG_QUERY_STORE_INFO_REQ = 170,
  MSG_QUERY_STORE_INFO_ACK = 171,
  MSG_BUY_STORE_ACK = 173,
  MSG_UPDATE_GROUP_MATCH_REQ = 174,
  MSG_SEND_GROUPCHAT_REQ = 175,
  MSG_SEND_GROUPCHAT_INFO = 176,
  MSG_SET_WISH_ORDER_REQ = 177,
  MSG_QUERY_SETTING_REQ = 178,
  MSG_QUERY_SETTING_ACK = 179,
  MSG_UPDATE_SETTING_REQ = 180,
  MSG_QUERY_RECENT_LIST_REQ = 181,
  MSG_QUERY_RECENT_LIST_ACK = 182,
  MSG_QUERY_RANK_LIST_REQ = 183,
  MSG_QUERY_RANK_LIST_ACK = 184,
  MSG_QUERY_FRIEND_RANK_LIST_REQ = 185,
  MSG_QUERY_FRIEND_RANK_LIST_ACK = 186,
  MSG_COMPOUND_DATA_REQ = 187,
  MSG_SEVEN_SIGNIN_REWARD_REQ = 198,
  MSG_TELL_SEVEN_EXTEND_REWARD = 199
};
LIBPROTOC_EXPORT bool ClientProtocol_IsValid(int value);
const ClientProtocol ClientProtocol_MIN = MSG_TELL_BE_KICK;
const ClientProtocol ClientProtocol_MAX = MSG_TELL_SEVEN_EXTEND_REWARD;
const int ClientProtocol_ARRAYSIZE = ClientProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* ClientProtocol_descriptor();
inline const ::std::string& ClientProtocol_Name(ClientProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientProtocol_descriptor(), value);
}
inline bool ClientProtocol_Parse(
    const ::std::string& name, ClientProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientProtocol>(
    ClientProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgResultDisplay : public ::google::protobuf::Message {
 public:
  MsgResultDisplay();
  virtual ~MsgResultDisplay();

  MsgResultDisplay(const MsgResultDisplay& from);

  inline MsgResultDisplay& operator=(const MsgResultDisplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResultDisplay& default_instance();

  void Swap(MsgResultDisplay* other);

  // implements Message ----------------------------------------------

  MsgResultDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgResultDisplay& from);
  void MergeFrom(const MsgResultDisplay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // repeated string param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // @@protoc_insertion_point(class_scope:KFMsg.MsgResultDisplay)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgResultDisplay* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellBeKick : public ::google::protobuf::Message {
 public:
  MsgTellBeKick();
  virtual ~MsgTellBeKick();

  MsgTellBeKick(const MsgTellBeKick& from);

  inline MsgTellBeKick& operator=(const MsgTellBeKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellBeKick& default_instance();

  void Swap(MsgTellBeKick* other);

  // implements Message ----------------------------------------------

  MsgTellBeKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTellBeKick& from);
  void MergeFrom(const MsgTellBeKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellBeKick)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgTellBeKick* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginVerifyReq : public ::google::protobuf::Message {
 public:
  MsgLoginVerifyReq();
  virtual ~MsgLoginVerifyReq();

  MsgLoginVerifyReq(const MsgLoginVerifyReq& from);

  inline MsgLoginVerifyReq& operator=(const MsgLoginVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginVerifyReq& default_instance();

  void Swap(MsgLoginVerifyReq* other);

  // implements Message ----------------------------------------------

  MsgLoginVerifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginVerifyReq& from);
  void MergeFrom(const MsgLoginVerifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // required string token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginVerifyReq)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::google::protobuf::uint32 accountid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginVerifyReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginVerifyAck : public ::google::protobuf::Message {
 public:
  MsgLoginVerifyAck();
  virtual ~MsgLoginVerifyAck();

  MsgLoginVerifyAck(const MsgLoginVerifyAck& from);

  inline MsgLoginVerifyAck& operator=(const MsgLoginVerifyAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginVerifyAck& default_instance();

  void Swap(MsgLoginVerifyAck* other);

  // implements Message ----------------------------------------------

  MsgLoginVerifyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginVerifyAck& from);
  void MergeFrom(const MsgLoginVerifyAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // required string ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required uint32 port = 4;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginVerifyAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 port_;
  ::std::string* ip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginVerifyAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginGameReq : public ::google::protobuf::Message {
 public:
  MsgLoginGameReq();
  virtual ~MsgLoginGameReq();

  MsgLoginGameReq(const MsgLoginGameReq& from);

  inline MsgLoginGameReq& operator=(const MsgLoginGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginGameReq& default_instance();

  void Swap(MsgLoginGameReq* other);

  // implements Message ----------------------------------------------

  MsgLoginGameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginGameReq& from);
  void MergeFrom(const MsgLoginGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginGameReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginGameReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginOutReq : public ::google::protobuf::Message {
 public:
  MsgLoginOutReq();
  virtual ~MsgLoginOutReq();

  MsgLoginOutReq(const MsgLoginOutReq& from);

  inline MsgLoginOutReq& operator=(const MsgLoginOutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginOutReq& default_instance();

  void Swap(MsgLoginOutReq* other);

  // implements Message ----------------------------------------------

  MsgLoginOutReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginOutReq& from);
  void MergeFrom(const MsgLoginOutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginOutReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgLoginOutReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCreateRoleReq : public ::google::protobuf::Message {
 public:
  MsgCreateRoleReq();
  virtual ~MsgCreateRoleReq();

  MsgCreateRoleReq(const MsgCreateRoleReq& from);

  inline MsgCreateRoleReq& operator=(const MsgCreateRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateRoleReq& default_instance();

  void Swap(MsgCreateRoleReq* other);

  // implements Message ----------------------------------------------

  MsgCreateRoleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCreateRoleReq& from);
  void MergeFrom(const MsgCreateRoleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 sex = 2;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 2;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // required uint32 model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline ::google::protobuf::uint32 model() const;
  inline void set_model(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCreateRoleReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_model();
  inline void clear_has_model();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 model_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgCreateRoleReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeNameReq : public ::google::protobuf::Message {
 public:
  MsgChangeNameReq();
  virtual ~MsgChangeNameReq();

  MsgChangeNameReq(const MsgChangeNameReq& from);

  inline MsgChangeNameReq& operator=(const MsgChangeNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeNameReq& default_instance();

  void Swap(MsgChangeNameReq* other);

  // implements Message ----------------------------------------------

  MsgChangeNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeNameReq& from);
  void MergeFrom(const MsgChangeNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeNameReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgChangeNameReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeSexReq : public ::google::protobuf::Message {
 public:
  MsgChangeSexReq();
  virtual ~MsgChangeSexReq();

  MsgChangeSexReq(const MsgChangeSexReq& from);

  inline MsgChangeSexReq& operator=(const MsgChangeSexReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeSexReq& default_instance();

  void Swap(MsgChangeSexReq* other);

  // implements Message ----------------------------------------------

  MsgChangeSexReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeSexReq& from);
  void MergeFrom(const MsgChangeSexReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sex = 1;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 1;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeSexReq)
 private:
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgChangeSexReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeIconReq : public ::google::protobuf::Message {
 public:
  MsgChangeIconReq();
  virtual ~MsgChangeIconReq();

  MsgChangeIconReq(const MsgChangeIconReq& from);

  inline MsgChangeIconReq& operator=(const MsgChangeIconReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeIconReq& default_instance();

  void Swap(MsgChangeIconReq* other);

  // implements Message ----------------------------------------------

  MsgChangeIconReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeIconReq& from);
  void MergeFrom(const MsgChangeIconReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string icon = 1;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 1;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeIconReq)
 private:
  inline void set_has_icon();
  inline void clear_has_icon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* icon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgChangeIconReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeIconBoxReq : public ::google::protobuf::Message {
 public:
  MsgChangeIconBoxReq();
  virtual ~MsgChangeIconBoxReq();

  MsgChangeIconBoxReq(const MsgChangeIconBoxReq& from);

  inline MsgChangeIconBoxReq& operator=(const MsgChangeIconBoxReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeIconBoxReq& default_instance();

  void Swap(MsgChangeIconBoxReq* other);

  // implements Message ----------------------------------------------

  MsgChangeIconBoxReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeIconBoxReq& from);
  void MergeFrom(const MsgChangeIconBoxReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string iconbox = 1;
  inline bool has_iconbox() const;
  inline void clear_iconbox();
  static const int kIconboxFieldNumber = 1;
  inline const ::std::string& iconbox() const;
  inline void set_iconbox(const ::std::string& value);
  inline void set_iconbox(const char* value);
  inline void set_iconbox(const char* value, size_t size);
  inline ::std::string* mutable_iconbox();
  inline ::std::string* release_iconbox();
  inline void set_allocated_iconbox(::std::string* iconbox);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeIconBoxReq)
 private:
  inline void set_has_iconbox();
  inline void clear_has_iconbox();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* iconbox_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgChangeIconBoxReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeMottoReq : public ::google::protobuf::Message {
 public:
  MsgChangeMottoReq();
  virtual ~MsgChangeMottoReq();

  MsgChangeMottoReq(const MsgChangeMottoReq& from);

  inline MsgChangeMottoReq& operator=(const MsgChangeMottoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeMottoReq& default_instance();

  void Swap(MsgChangeMottoReq* other);

  // implements Message ----------------------------------------------

  MsgChangeMottoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeMottoReq& from);
  void MergeFrom(const MsgChangeMottoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string motto = 1;
  inline bool has_motto() const;
  inline void clear_motto();
  static const int kMottoFieldNumber = 1;
  inline const ::std::string& motto() const;
  inline void set_motto(const ::std::string& value);
  inline void set_motto(const char* value);
  inline void set_motto(const char* value, size_t size);
  inline ::std::string* mutable_motto();
  inline ::std::string* release_motto();
  inline void set_allocated_motto(::std::string* motto);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeMottoReq)
 private:
  inline void set_has_motto();
  inline void clear_has_motto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* motto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgChangeMottoReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicReq : public ::google::protobuf::Message {
 public:
  MsgQueryBasicReq();
  virtual ~MsgQueryBasicReq();

  MsgQueryBasicReq(const MsgQueryBasicReq& from);

  inline MsgQueryBasicReq& operator=(const MsgQueryBasicReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicReq& default_instance();

  void Swap(MsgQueryBasicReq* other);

  // implements Message ----------------------------------------------

  MsgQueryBasicReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryBasicReq& from);
  void MergeFrom(const MsgQueryBasicReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryBasicReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerReq : public ::google::protobuf::Message {
 public:
  MsgQueryPlayerReq();
  virtual ~MsgQueryPlayerReq();

  MsgQueryPlayerReq(const MsgQueryPlayerReq& from);

  inline MsgQueryPlayerReq& operator=(const MsgQueryPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerReq& default_instance();

  void Swap(MsgQueryPlayerReq* other);

  // implements Message ----------------------------------------------

  MsgQueryPlayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryPlayerReq& from);
  void MergeFrom(const MsgQueryPlayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryPlayerReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveTaskRewardReq : public ::google::protobuf::Message {
 public:
  MsgReceiveTaskRewardReq();
  virtual ~MsgReceiveTaskRewardReq();

  MsgReceiveTaskRewardReq(const MsgReceiveTaskRewardReq& from);

  inline MsgReceiveTaskRewardReq& operator=(const MsgReceiveTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveTaskRewardReq& default_instance();

  void Swap(MsgReceiveTaskRewardReq* other);

  // implements Message ----------------------------------------------

  MsgReceiveTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReceiveTaskRewardReq& from);
  void MergeFrom(const MsgReceiveTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveTaskRewardReq)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 taskid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReceiveTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveActivityRewardReq : public ::google::protobuf::Message {
 public:
  MsgReceiveActivityRewardReq();
  virtual ~MsgReceiveActivityRewardReq();

  MsgReceiveActivityRewardReq(const MsgReceiveActivityRewardReq& from);

  inline MsgReceiveActivityRewardReq& operator=(const MsgReceiveActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveActivityRewardReq& default_instance();

  void Swap(MsgReceiveActivityRewardReq* other);

  // implements Message ----------------------------------------------

  MsgReceiveActivityRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReceiveActivityRewardReq& from);
  void MergeFrom(const MsgReceiveActivityRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveActivityRewardReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReceiveActivityRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveAchieveRewardReq : public ::google::protobuf::Message {
 public:
  MsgReceiveAchieveRewardReq();
  virtual ~MsgReceiveAchieveRewardReq();

  MsgReceiveAchieveRewardReq(const MsgReceiveAchieveRewardReq& from);

  inline MsgReceiveAchieveRewardReq& operator=(const MsgReceiveAchieveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveAchieveRewardReq& default_instance();

  void Swap(MsgReceiveAchieveRewardReq* other);

  // implements Message ----------------------------------------------

  MsgReceiveAchieveRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReceiveAchieveRewardReq& from);
  void MergeFrom(const MsgReceiveAchieveRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 achieveid = 1;
  inline bool has_achieveid() const;
  inline void clear_achieveid();
  static const int kAchieveidFieldNumber = 1;
  inline ::google::protobuf::uint32 achieveid() const;
  inline void set_achieveid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveAchieveRewardReq)
 private:
  inline void set_has_achieveid();
  inline void clear_has_achieveid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 achieveid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReceiveAchieveRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveGiftRewardReq : public ::google::protobuf::Message {
 public:
  MsgReceiveGiftRewardReq();
  virtual ~MsgReceiveGiftRewardReq();

  MsgReceiveGiftRewardReq(const MsgReceiveGiftRewardReq& from);

  inline MsgReceiveGiftRewardReq& operator=(const MsgReceiveGiftRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveGiftRewardReq& default_instance();

  void Swap(MsgReceiveGiftRewardReq* other);

  // implements Message ----------------------------------------------

  MsgReceiveGiftRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReceiveGiftRewardReq& from);
  void MergeFrom(const MsgReceiveGiftRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string giftkey = 1;
  inline bool has_giftkey() const;
  inline void clear_giftkey();
  static const int kGiftkeyFieldNumber = 1;
  inline const ::std::string& giftkey() const;
  inline void set_giftkey(const ::std::string& value);
  inline void set_giftkey(const char* value);
  inline void set_giftkey(const char* value, size_t size);
  inline ::std::string* mutable_giftkey();
  inline ::std::string* release_giftkey();
  inline void set_allocated_giftkey(::std::string* giftkey);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveGiftRewardReq)
 private:
  inline void set_has_giftkey();
  inline void clear_has_giftkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* giftkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReceiveGiftRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReceiveMailRewardReq : public ::google::protobuf::Message {
 public:
  MsgReceiveMailRewardReq();
  virtual ~MsgReceiveMailRewardReq();

  MsgReceiveMailRewardReq(const MsgReceiveMailRewardReq& from);

  inline MsgReceiveMailRewardReq& operator=(const MsgReceiveMailRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReceiveMailRewardReq& default_instance();

  void Swap(MsgReceiveMailRewardReq* other);

  // implements Message ----------------------------------------------

  MsgReceiveMailRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReceiveMailRewardReq& from);
  void MergeFrom(const MsgReceiveMailRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReceiveMailRewardReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReceiveMailRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgViewMailReq : public ::google::protobuf::Message {
 public:
  MsgViewMailReq();
  virtual ~MsgViewMailReq();

  MsgViewMailReq(const MsgViewMailReq& from);

  inline MsgViewMailReq& operator=(const MsgViewMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgViewMailReq& default_instance();

  void Swap(MsgViewMailReq* other);

  // implements Message ----------------------------------------------

  MsgViewMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgViewMailReq& from);
  void MergeFrom(const MsgViewMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgViewMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgViewMailReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDeleteMailReq : public ::google::protobuf::Message {
 public:
  MsgDeleteMailReq();
  virtual ~MsgDeleteMailReq();

  MsgDeleteMailReq(const MsgDeleteMailReq& from);

  inline MsgDeleteMailReq& operator=(const MsgDeleteMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeleteMailReq& default_instance();

  void Swap(MsgDeleteMailReq* other);

  // implements Message ----------------------------------------------

  MsgDeleteMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDeleteMailReq& from);
  void MergeFrom(const MsgDeleteMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint64 mailid() const;
  inline void set_mailid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDeleteMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mailid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgDeleteMailReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryMailReq : public ::google::protobuf::Message {
 public:
  MsgQueryMailReq();
  virtual ~MsgQueryMailReq();

  MsgQueryMailReq(const MsgQueryMailReq& from);

  inline MsgQueryMailReq& operator=(const MsgQueryMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryMailReq& default_instance();

  void Swap(MsgQueryMailReq* other);

  // implements Message ----------------------------------------------

  MsgQueryMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryMailReq& from);
  void MergeFrom(const MsgQueryMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mailtype = 1;
  inline bool has_mailtype() const;
  inline void clear_mailtype();
  static const int kMailtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 mailtype() const;
  inline void set_mailtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryMailReq)
 private:
  inline void set_has_mailtype();
  inline void clear_has_mailtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mailtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryMailReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStartMatchReq : public ::google::protobuf::Message {
 public:
  MsgStartMatchReq();
  virtual ~MsgStartMatchReq();

  MsgStartMatchReq(const MsgStartMatchReq& from);

  inline MsgStartMatchReq& operator=(const MsgStartMatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStartMatchReq& default_instance();

  void Swap(MsgStartMatchReq* other);

  // implements Message ----------------------------------------------

  MsgStartMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgStartMatchReq& from);
  void MergeFrom(const MsgStartMatchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // optional bool allowgroup = 2;
  inline bool has_allowgroup() const;
  inline void clear_allowgroup();
  static const int kAllowgroupFieldNumber = 2;
  inline bool allowgroup() const;
  inline void set_allowgroup(bool value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStartMatchReq)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_allowgroup();
  inline void clear_has_allowgroup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 matchid_;
  bool allowgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgStartMatchReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStartMatchAck : public ::google::protobuf::Message {
 public:
  MsgStartMatchAck();
  virtual ~MsgStartMatchAck();

  MsgStartMatchAck(const MsgStartMatchAck& from);

  inline MsgStartMatchAck& operator=(const MsgStartMatchAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStartMatchAck& default_instance();

  void Swap(MsgStartMatchAck* other);

  // implements Message ----------------------------------------------

  MsgStartMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgStartMatchAck& from);
  void MergeFrom(const MsgStartMatchAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStartMatchAck)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgStartMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelMatchReq : public ::google::protobuf::Message {
 public:
  MsgCancelMatchReq();
  virtual ~MsgCancelMatchReq();

  MsgCancelMatchReq(const MsgCancelMatchReq& from);

  inline MsgCancelMatchReq& operator=(const MsgCancelMatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelMatchReq& default_instance();

  void Swap(MsgCancelMatchReq* other);

  // implements Message ----------------------------------------------

  MsgCancelMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCancelMatchReq& from);
  void MergeFrom(const MsgCancelMatchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelMatchReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgCancelMatchReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelMatchAck : public ::google::protobuf::Message {
 public:
  MsgCancelMatchAck();
  virtual ~MsgCancelMatchAck();

  MsgCancelMatchAck(const MsgCancelMatchAck& from);

  inline MsgCancelMatchAck& operator=(const MsgCancelMatchAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelMatchAck& default_instance();

  void Swap(MsgCancelMatchAck* other);

  // implements Message ----------------------------------------------

  MsgCancelMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCancelMatchAck& from);
  void MergeFrom(const MsgCancelMatchAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelMatchAck)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgCancelMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMatchResultAck : public ::google::protobuf::Message {
 public:
  MsgMatchResultAck();
  virtual ~MsgMatchResultAck();

  MsgMatchResultAck(const MsgMatchResultAck& from);

  inline MsgMatchResultAck& operator=(const MsgMatchResultAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMatchResultAck& default_instance();

  void Swap(MsgMatchResultAck* other);

  // implements Message ----------------------------------------------

  MsgMatchResultAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMatchResultAck& from);
  void MergeFrom(const MsgMatchResultAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // required uint64 roomid = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  inline ::google::protobuf::uint64 roomid() const;
  inline void set_roomid(::google::protobuf::uint64 value);

  // required uint32 serverid = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 3;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // required string ip = 4;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 4;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required uint32 port = 5;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 5;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // required string token = 6;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 6;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMatchResultAck)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 serverid_;
  ::std::string* ip_;
  ::std::string* token_;
  ::google::protobuf::uint32 port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgMatchResultAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAddFriendInviteReq : public ::google::protobuf::Message {
 public:
  MsgAddFriendInviteReq();
  virtual ~MsgAddFriendInviteReq();

  MsgAddFriendInviteReq(const MsgAddFriendInviteReq& from);

  inline MsgAddFriendInviteReq& operator=(const MsgAddFriendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAddFriendInviteReq& default_instance();

  void Swap(MsgAddFriendInviteReq* other);

  // implements Message ----------------------------------------------

  MsgAddFriendInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAddFriendInviteReq& from);
  void MergeFrom(const MsgAddFriendInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAddFriendInviteReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* message_;
  ::std::string* name_;
  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgAddFriendInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyFriendInviteReq : public ::google::protobuf::Message {
 public:
  MsgReplyFriendInviteReq();
  virtual ~MsgReplyFriendInviteReq();

  MsgReplyFriendInviteReq(const MsgReplyFriendInviteReq& from);

  inline MsgReplyFriendInviteReq& operator=(const MsgReplyFriendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyFriendInviteReq& default_instance();

  void Swap(MsgReplyFriendInviteReq* other);

  // implements Message ----------------------------------------------

  MsgReplyFriendInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReplyFriendInviteReq& from);
  void MergeFrom(const MsgReplyFriendInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required uint32 operate = 2;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 2;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyFriendInviteReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 operate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReplyFriendInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDelFriendReq : public ::google::protobuf::Message {
 public:
  MsgDelFriendReq();
  virtual ~MsgDelFriendReq();

  MsgDelFriendReq(const MsgDelFriendReq& from);

  inline MsgDelFriendReq& operator=(const MsgDelFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDelFriendReq& default_instance();

  void Swap(MsgDelFriendReq* other);

  // implements Message ----------------------------------------------

  MsgDelFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDelFriendReq& from);
  void MergeFrom(const MsgDelFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDelFriendReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgDelFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetRefuseFriendInviteReq : public ::google::protobuf::Message {
 public:
  MsgSetRefuseFriendInviteReq();
  virtual ~MsgSetRefuseFriendInviteReq();

  MsgSetRefuseFriendInviteReq(const MsgSetRefuseFriendInviteReq& from);

  inline MsgSetRefuseFriendInviteReq& operator=(const MsgSetRefuseFriendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetRefuseFriendInviteReq& default_instance();

  void Swap(MsgSetRefuseFriendInviteReq* other);

  // implements Message ----------------------------------------------

  MsgSetRefuseFriendInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSetRefuseFriendInviteReq& from);
  void MergeFrom(const MsgSetRefuseFriendInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 refuse = 1;
  inline bool has_refuse() const;
  inline void clear_refuse();
  static const int kRefuseFieldNumber = 1;
  inline ::google::protobuf::uint32 refuse() const;
  inline void set_refuse(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetRefuseFriendInviteReq)
 private:
  inline void set_has_refuse();
  inline void clear_has_refuse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 refuse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSetRefuseFriendInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgEnterChatReq : public ::google::protobuf::Message {
 public:
  MsgEnterChatReq();
  virtual ~MsgEnterChatReq();

  MsgEnterChatReq(const MsgEnterChatReq& from);

  inline MsgEnterChatReq& operator=(const MsgEnterChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterChatReq& default_instance();

  void Swap(MsgEnterChatReq* other);

  // implements Message ----------------------------------------------

  MsgEnterChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterChatReq& from);
  void MergeFrom(const MsgEnterChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgEnterChatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgEnterChatReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendChatReq : public ::google::protobuf::Message {
 public:
  MsgSendChatReq();
  virtual ~MsgSendChatReq();

  MsgSendChatReq(const MsgSendChatReq& from);

  inline MsgSendChatReq& operator=(const MsgSendChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendChatReq& default_instance();

  void Swap(MsgSendChatReq* other);

  // implements Message ----------------------------------------------

  MsgSendChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSendChatReq& from);
  void MergeFrom(const MsgSendChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatinfo = 1;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // required uint32 isvoice = 2;
  inline bool has_isvoice() const;
  inline void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  inline ::google::protobuf::uint32 isvoice() const;
  inline void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendChatReq)
 private:
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_isvoice();
  inline void clear_has_isvoice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint32 isvoice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSendChatReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendChatInfo : public ::google::protobuf::Message {
 public:
  MsgSendChatInfo();
  virtual ~MsgSendChatInfo();

  MsgSendChatInfo(const MsgSendChatInfo& from);

  inline MsgSendChatInfo& operator=(const MsgSendChatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendChatInfo& default_instance();

  void Swap(MsgSendChatInfo* other);

  // implements Message ----------------------------------------------

  MsgSendChatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSendChatInfo& from);
  void MergeFrom(const MsgSendChatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatinfo = 1;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // required uint32 isvoice = 2;
  inline bool has_isvoice() const;
  inline void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  inline ::google::protobuf::uint32 isvoice() const;
  inline void set_isvoice(::google::protobuf::uint32 value);

  // required string playername = 3;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 3;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required uint32 playerid = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string playericon = 5;
  inline bool has_playericon() const;
  inline void clear_playericon();
  static const int kPlayericonFieldNumber = 5;
  inline const ::std::string& playericon() const;
  inline void set_playericon(const ::std::string& value);
  inline void set_playericon(const char* value);
  inline void set_playericon(const char* value, size_t size);
  inline ::std::string* mutable_playericon();
  inline ::std::string* release_playericon();
  inline void set_allocated_playericon(::std::string* playericon);

  // required uint32 playergrading = 6;
  inline bool has_playergrading() const;
  inline void clear_playergrading();
  static const int kPlayergradingFieldNumber = 6;
  inline ::google::protobuf::uint32 playergrading() const;
  inline void set_playergrading(::google::protobuf::uint32 value);

  // required uint32 playersex = 7;
  inline bool has_playersex() const;
  inline void clear_playersex();
  static const int kPlayersexFieldNumber = 7;
  inline ::google::protobuf::uint32 playersex() const;
  inline void set_playersex(::google::protobuf::uint32 value);

  // required string playericonbox = 8;
  inline bool has_playericonbox() const;
  inline void clear_playericonbox();
  static const int kPlayericonboxFieldNumber = 8;
  inline const ::std::string& playericonbox() const;
  inline void set_playericonbox(const ::std::string& value);
  inline void set_playericonbox(const char* value);
  inline void set_playericonbox(const char* value, size_t size);
  inline ::std::string* mutable_playericonbox();
  inline ::std::string* release_playericonbox();
  inline void set_allocated_playericonbox(::std::string* playericonbox);

  // required uint32 playerserverid = 9;
  inline bool has_playerserverid() const;
  inline void clear_playerserverid();
  static const int kPlayerserveridFieldNumber = 9;
  inline ::google::protobuf::uint32 playerserverid() const;
  inline void set_playerserverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendChatInfo)
 private:
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_isvoice();
  inline void clear_has_isvoice();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playericon();
  inline void clear_has_playericon();
  inline void set_has_playergrading();
  inline void clear_has_playergrading();
  inline void set_has_playersex();
  inline void clear_has_playersex();
  inline void set_has_playericonbox();
  inline void clear_has_playericonbox();
  inline void set_has_playerserverid();
  inline void clear_has_playerserverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::std::string* playername_;
  ::google::protobuf::uint32 isvoice_;
  ::google::protobuf::uint32 playerid_;
  ::std::string* playericon_;
  ::google::protobuf::uint32 playergrading_;
  ::google::protobuf::uint32 playersex_;
  ::std::string* playericonbox_;
  ::google::protobuf::uint32 playerserverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSendChatInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLeaveChatReq : public ::google::protobuf::Message {
 public:
  MsgLeaveChatReq();
  virtual ~MsgLeaveChatReq();

  MsgLeaveChatReq(const MsgLeaveChatReq& from);

  inline MsgLeaveChatReq& operator=(const MsgLeaveChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLeaveChatReq& default_instance();

  void Swap(MsgLeaveChatReq* other);

  // implements Message ----------------------------------------------

  MsgLeaveChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLeaveChatReq& from);
  void MergeFrom(const MsgLeaveChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLeaveChatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgLeaveChatReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendOneByOneChatReq : public ::google::protobuf::Message {
 public:
  MsgSendOneByOneChatReq();
  virtual ~MsgSendOneByOneChatReq();

  MsgSendOneByOneChatReq(const MsgSendOneByOneChatReq& from);

  inline MsgSendOneByOneChatReq& operator=(const MsgSendOneByOneChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendOneByOneChatReq& default_instance();

  void Swap(MsgSendOneByOneChatReq* other);

  // implements Message ----------------------------------------------

  MsgSendOneByOneChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSendOneByOneChatReq& from);
  void MergeFrom(const MsgSendOneByOneChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatinfo = 1;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // required uint32 isvoice = 2;
  inline bool has_isvoice() const;
  inline void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  inline ::google::protobuf::uint32 isvoice() const;
  inline void set_isvoice(::google::protobuf::uint32 value);

  // required uint32 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string chattype = 4;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChattypeFieldNumber = 4;
  inline const ::std::string& chattype() const;
  inline void set_chattype(const ::std::string& value);
  inline void set_chattype(const char* value);
  inline void set_chattype(const char* value, size_t size);
  inline ::std::string* mutable_chattype();
  inline ::std::string* release_chattype();
  inline void set_allocated_chattype(::std::string* chattype);

  // required string selfinfo = 5;
  inline bool has_selfinfo() const;
  inline void clear_selfinfo();
  static const int kSelfinfoFieldNumber = 5;
  inline const ::std::string& selfinfo() const;
  inline void set_selfinfo(const ::std::string& value);
  inline void set_selfinfo(const char* value);
  inline void set_selfinfo(const char* value, size_t size);
  inline ::std::string* mutable_selfinfo();
  inline ::std::string* release_selfinfo();
  inline void set_allocated_selfinfo(::std::string* selfinfo);

  // required uint32 serverid = 6;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 6;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendOneByOneChatReq)
 private:
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_isvoice();
  inline void clear_has_isvoice();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_selfinfo();
  inline void clear_has_selfinfo();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint32 isvoice_;
  ::google::protobuf::uint32 playerid_;
  ::std::string* chattype_;
  ::std::string* selfinfo_;
  ::google::protobuf::uint32 serverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSendOneByOneChatReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendOneByOneChatInfo : public ::google::protobuf::Message {
 public:
  MsgSendOneByOneChatInfo();
  virtual ~MsgSendOneByOneChatInfo();

  MsgSendOneByOneChatInfo(const MsgSendOneByOneChatInfo& from);

  inline MsgSendOneByOneChatInfo& operator=(const MsgSendOneByOneChatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendOneByOneChatInfo& default_instance();

  void Swap(MsgSendOneByOneChatInfo* other);

  // implements Message ----------------------------------------------

  MsgSendOneByOneChatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSendOneByOneChatInfo& from);
  void MergeFrom(const MsgSendOneByOneChatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatinfo = 1;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // required uint32 isvoice = 2;
  inline bool has_isvoice() const;
  inline void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  inline ::google::protobuf::uint32 isvoice() const;
  inline void set_isvoice(::google::protobuf::uint32 value);

  // required uint32 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string chattype = 4;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChattypeFieldNumber = 4;
  inline const ::std::string& chattype() const;
  inline void set_chattype(const ::std::string& value);
  inline void set_chattype(const char* value);
  inline void set_chattype(const char* value, size_t size);
  inline ::std::string* mutable_chattype();
  inline ::std::string* release_chattype();
  inline void set_allocated_chattype(::std::string* chattype);

  // required string playerinfo = 5;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerinfoFieldNumber = 5;
  inline const ::std::string& playerinfo() const;
  inline void set_playerinfo(const ::std::string& value);
  inline void set_playerinfo(const char* value);
  inline void set_playerinfo(const char* value, size_t size);
  inline ::std::string* mutable_playerinfo();
  inline ::std::string* release_playerinfo();
  inline void set_allocated_playerinfo(::std::string* playerinfo);

  // required uint32 serverid = 6;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 6;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendOneByOneChatInfo)
 private:
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_isvoice();
  inline void clear_has_isvoice();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint32 isvoice_;
  ::google::protobuf::uint32 playerid_;
  ::std::string* chattype_;
  ::std::string* playerinfo_;
  ::google::protobuf::uint32 serverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSendOneByOneChatInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDebugCommandReq : public ::google::protobuf::Message {
 public:
  MsgDebugCommandReq();
  virtual ~MsgDebugCommandReq();

  MsgDebugCommandReq(const MsgDebugCommandReq& from);

  inline MsgDebugCommandReq& operator=(const MsgDebugCommandReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDebugCommandReq& default_instance();

  void Swap(MsgDebugCommandReq* other);

  // implements Message ----------------------------------------------

  MsgDebugCommandReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDebugCommandReq& from);
  void MergeFrom(const MsgDebugCommandReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline const ::std::string& command() const;
  inline void set_command(const ::std::string& value);
  inline void set_command(const char* value);
  inline void set_command(const char* value, size_t size);
  inline ::std::string* mutable_command();
  inline ::std::string* release_command();
  inline void set_allocated_command(::std::string* command);

  // repeated string params = 2;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 2;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDebugCommandReq)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* command_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgDebugCommandReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgShowRewardAgent : public ::google::protobuf::Message {
 public:
  MsgShowRewardAgent();
  virtual ~MsgShowRewardAgent();

  MsgShowRewardAgent(const MsgShowRewardAgent& from);

  inline MsgShowRewardAgent& operator=(const MsgShowRewardAgent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShowRewardAgent& default_instance();

  void Swap(MsgShowRewardAgent* other);

  // implements Message ----------------------------------------------

  MsgShowRewardAgent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgShowRewardAgent& from);
  void MergeFrom(const MsgShowRewardAgent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::std::string& reward() const;
  inline void set_reward(const ::std::string& value);
  inline void set_reward(const char* value);
  inline void set_reward(const char* value, size_t size);
  inline ::std::string* mutable_reward();
  inline ::std::string* release_reward();
  inline void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgShowRewardAgent)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgShowRewardAgent* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendGroupChatReq : public ::google::protobuf::Message {
 public:
  MsgSendGroupChatReq();
  virtual ~MsgSendGroupChatReq();

  MsgSendGroupChatReq(const MsgSendGroupChatReq& from);

  inline MsgSendGroupChatReq& operator=(const MsgSendGroupChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendGroupChatReq& default_instance();

  void Swap(MsgSendGroupChatReq* other);

  // implements Message ----------------------------------------------

  MsgSendGroupChatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSendGroupChatReq& from);
  void MergeFrom(const MsgSendGroupChatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatinfo = 1;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // required uint32 isvoice = 2;
  inline bool has_isvoice() const;
  inline void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  inline ::google::protobuf::uint32 isvoice() const;
  inline void set_isvoice(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendGroupChatReq)
 private:
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_isvoice();
  inline void clear_has_isvoice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint32 isvoice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSendGroupChatReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSendGroupChatInfo : public ::google::protobuf::Message {
 public:
  MsgSendGroupChatInfo();
  virtual ~MsgSendGroupChatInfo();

  MsgSendGroupChatInfo(const MsgSendGroupChatInfo& from);

  inline MsgSendGroupChatInfo& operator=(const MsgSendGroupChatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSendGroupChatInfo& default_instance();

  void Swap(MsgSendGroupChatInfo* other);

  // implements Message ----------------------------------------------

  MsgSendGroupChatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSendGroupChatInfo& from);
  void MergeFrom(const MsgSendGroupChatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatinfo = 1;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 1;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // required uint32 isvoice = 2;
  inline bool has_isvoice() const;
  inline void clear_isvoice();
  static const int kIsvoiceFieldNumber = 2;
  inline ::google::protobuf::uint32 isvoice() const;
  inline void set_isvoice(::google::protobuf::uint32 value);

  // required uint32 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSendGroupChatInfo)
 private:
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_isvoice();
  inline void clear_has_isvoice();
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint32 isvoice_;
  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSendGroupChatInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgBuyStoreReq : public ::google::protobuf::Message {
 public:
  MsgBuyStoreReq();
  virtual ~MsgBuyStoreReq();

  MsgBuyStoreReq(const MsgBuyStoreReq& from);

  inline MsgBuyStoreReq& operator=(const MsgBuyStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBuyStoreReq& default_instance();

  void Swap(MsgBuyStoreReq* other);

  // implements Message ----------------------------------------------

  MsgBuyStoreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBuyStoreReq& from);
  void MergeFrom(const MsgBuyStoreReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string buytype = 1;
  inline bool has_buytype() const;
  inline void clear_buytype();
  static const int kBuytypeFieldNumber = 1;
  inline const ::std::string& buytype() const;
  inline void set_buytype(const ::std::string& value);
  inline void set_buytype(const char* value);
  inline void set_buytype(const char* value, size_t size);
  inline ::std::string* mutable_buytype();
  inline ::std::string* release_buytype();
  inline void set_allocated_buytype(::std::string* buytype);

  // required uint32 shopid = 2;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 2;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // required uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgBuyStoreReq)
 private:
  inline void set_has_buytype();
  inline void clear_has_buytype();
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* buytype_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgBuyStoreReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgGiveStoreReq : public ::google::protobuf::Message {
 public:
  MsgGiveStoreReq();
  virtual ~MsgGiveStoreReq();

  MsgGiveStoreReq(const MsgGiveStoreReq& from);

  inline MsgGiveStoreReq& operator=(const MsgGiveStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGiveStoreReq& default_instance();

  void Swap(MsgGiveStoreReq* other);

  // implements Message ----------------------------------------------

  MsgGiveStoreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGiveStoreReq& from);
  void MergeFrom(const MsgGiveStoreReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 toplayerid = 1;
  inline bool has_toplayerid() const;
  inline void clear_toplayerid();
  static const int kToplayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 toplayerid() const;
  inline void set_toplayerid(::google::protobuf::uint32 value);

  // required uint32 shopid = 2;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 2;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgGiveStoreReq)
 private:
  inline void set_has_toplayerid();
  inline void clear_has_toplayerid();
  inline void set_has_shopid();
  inline void clear_has_shopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 toplayerid_;
  ::google::protobuf::uint32 shopid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgGiveStoreReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgPlayerToastReq : public ::google::protobuf::Message {
 public:
  MsgPlayerToastReq();
  virtual ~MsgPlayerToastReq();

  MsgPlayerToastReq(const MsgPlayerToastReq& from);

  inline MsgPlayerToastReq& operator=(const MsgPlayerToastReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerToastReq& default_instance();

  void Swap(MsgPlayerToastReq* other);

  // implements Message ----------------------------------------------

  MsgPlayerToastReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerToastReq& from);
  void MergeFrom(const MsgPlayerToastReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgPlayerToastReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgPlayerToastReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryToastCountReq : public ::google::protobuf::Message {
 public:
  MsgQueryToastCountReq();
  virtual ~MsgQueryToastCountReq();

  MsgQueryToastCountReq(const MsgQueryToastCountReq& from);

  inline MsgQueryToastCountReq& operator=(const MsgQueryToastCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryToastCountReq& default_instance();

  void Swap(MsgQueryToastCountReq* other);

  // implements Message ----------------------------------------------

  MsgQueryToastCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryToastCountReq& from);
  void MergeFrom(const MsgQueryToastCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryToastCountReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryToastCountReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryToastCountAck : public ::google::protobuf::Message {
 public:
  MsgQueryToastCountAck();
  virtual ~MsgQueryToastCountAck();

  MsgQueryToastCountAck(const MsgQueryToastCountAck& from);

  inline MsgQueryToastCountAck& operator=(const MsgQueryToastCountAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryToastCountAck& default_instance();

  void Swap(MsgQueryToastCountAck* other);

  // implements Message ----------------------------------------------

  MsgQueryToastCountAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryToastCountAck& from);
  void MergeFrom(const MsgQueryToastCountAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required uint32 toastcount = 2;
  inline bool has_toastcount() const;
  inline void clear_toastcount();
  static const int kToastcountFieldNumber = 2;
  inline ::google::protobuf::uint32 toastcount() const;
  inline void set_toastcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryToastCountAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_toastcount();
  inline void clear_has_toastcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 toastcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryToastCountAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRemoveDataReq : public ::google::protobuf::Message {
 public:
  MsgRemoveDataReq();
  virtual ~MsgRemoveDataReq();

  MsgRemoveDataReq(const MsgRemoveDataReq& from);

  inline MsgRemoveDataReq& operator=(const MsgRemoveDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRemoveDataReq& default_instance();

  void Swap(MsgRemoveDataReq* other);

  // implements Message ----------------------------------------------

  MsgRemoveDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRemoveDataReq& from);
  void MergeFrom(const MsgRemoveDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string dataname = 1;
  inline bool has_dataname() const;
  inline void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  inline const ::std::string& dataname() const;
  inline void set_dataname(const ::std::string& value);
  inline void set_dataname(const char* value);
  inline void set_dataname(const char* value, size_t size);
  inline ::std::string* mutable_dataname();
  inline ::std::string* release_dataname();
  inline void set_allocated_dataname(::std::string* dataname);

  // required uint64 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);

  // required uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRemoveDataReq)
 private:
  inline void set_has_dataname();
  inline void clear_has_dataname();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* dataname_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgRemoveDataReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgChangeModelReq : public ::google::protobuf::Message {
 public:
  MsgChangeModelReq();
  virtual ~MsgChangeModelReq();

  MsgChangeModelReq(const MsgChangeModelReq& from);

  inline MsgChangeModelReq& operator=(const MsgChangeModelReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeModelReq& default_instance();

  void Swap(MsgChangeModelReq* other);

  // implements Message ----------------------------------------------

  MsgChangeModelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeModelReq& from);
  void MergeFrom(const MsgChangeModelReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 modelid = 1;
  inline bool has_modelid() const;
  inline void clear_modelid();
  static const int kModelidFieldNumber = 1;
  inline ::google::protobuf::uint32 modelid() const;
  inline void set_modelid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgChangeModelReq)
 private:
  inline void set_has_modelid();
  inline void clear_has_modelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 modelid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgChangeModelReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetModelDefaultClothesReq : public ::google::protobuf::Message {
 public:
  MsgSetModelDefaultClothesReq();
  virtual ~MsgSetModelDefaultClothesReq();

  MsgSetModelDefaultClothesReq(const MsgSetModelDefaultClothesReq& from);

  inline MsgSetModelDefaultClothesReq& operator=(const MsgSetModelDefaultClothesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetModelDefaultClothesReq& default_instance();

  void Swap(MsgSetModelDefaultClothesReq* other);

  // implements Message ----------------------------------------------

  MsgSetModelDefaultClothesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSetModelDefaultClothesReq& from);
  void MergeFrom(const MsgSetModelDefaultClothesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 modelid = 1;
  inline bool has_modelid() const;
  inline void clear_modelid();
  static const int kModelidFieldNumber = 1;
  inline ::google::protobuf::uint32 modelid() const;
  inline void set_modelid(::google::protobuf::uint32 value);

  // required uint32 clothesid = 2;
  inline bool has_clothesid() const;
  inline void clear_clothesid();
  static const int kClothesidFieldNumber = 2;
  inline ::google::protobuf::uint32 clothesid() const;
  inline void set_clothesid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetModelDefaultClothesReq)
 private:
  inline void set_has_modelid();
  inline void clear_has_modelid();
  inline void set_has_clothesid();
  inline void clear_has_clothesid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 modelid_;
  ::google::protobuf::uint32 clothesid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSetModelDefaultClothesReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDressClothesReq : public ::google::protobuf::Message {
 public:
  MsgDressClothesReq();
  virtual ~MsgDressClothesReq();

  MsgDressClothesReq(const MsgDressClothesReq& from);

  inline MsgDressClothesReq& operator=(const MsgDressClothesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDressClothesReq& default_instance();

  void Swap(MsgDressClothesReq* other);

  // implements Message ----------------------------------------------

  MsgDressClothesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDressClothesReq& from);
  void MergeFrom(const MsgDressClothesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 clothesid = 1;
  inline bool has_clothesid() const;
  inline void clear_clothesid();
  static const int kClothesidFieldNumber = 1;
  inline ::google::protobuf::uint32 clothesid() const;
  inline void set_clothesid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDressClothesReq)
 private:
  inline void set_has_clothesid();
  inline void clear_has_clothesid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 clothesid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgDressClothesReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgInviteMatchGroupReq : public ::google::protobuf::Message {
 public:
  MsgInviteMatchGroupReq();
  virtual ~MsgInviteMatchGroupReq();

  MsgInviteMatchGroupReq(const MsgInviteMatchGroupReq& from);

  inline MsgInviteMatchGroupReq& operator=(const MsgInviteMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInviteMatchGroupReq& default_instance();

  void Swap(MsgInviteMatchGroupReq* other);

  // implements Message ----------------------------------------------

  MsgInviteMatchGroupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgInviteMatchGroupReq& from);
  void MergeFrom(const MsgInviteMatchGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // required uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string source = 3;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 3;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // required uint32 matchid = 4;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 4;
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // required string playername = 5;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 5;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgInviteMatchGroupReq)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_matchid();
  inline void clear_has_matchid();
  inline void set_has_playername();
  inline void clear_has_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 playerid_;
  ::std::string* source_;
  ::std::string* playername_;
  ::google::protobuf::uint32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgInviteMatchGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyInviteMatchGroupReq : public ::google::protobuf::Message {
 public:
  MsgReplyInviteMatchGroupReq();
  virtual ~MsgReplyInviteMatchGroupReq();

  MsgReplyInviteMatchGroupReq(const MsgReplyInviteMatchGroupReq& from);

  inline MsgReplyInviteMatchGroupReq& operator=(const MsgReplyInviteMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyInviteMatchGroupReq& default_instance();

  void Swap(MsgReplyInviteMatchGroupReq* other);

  // implements Message ----------------------------------------------

  MsgReplyInviteMatchGroupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReplyInviteMatchGroupReq& from);
  void MergeFrom(const MsgReplyInviteMatchGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 groupid = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  inline ::google::protobuf::uint64 groupid() const;
  inline void set_groupid(::google::protobuf::uint64 value);

  // required uint32 inviterid = 2;
  inline bool has_inviterid() const;
  inline void clear_inviterid();
  static const int kInviteridFieldNumber = 2;
  inline ::google::protobuf::uint32 inviterid() const;
  inline void set_inviterid(::google::protobuf::uint32 value);

  // required uint32 operate = 3;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 3;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyInviteMatchGroupReq)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_inviterid();
  inline void clear_has_inviterid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 inviterid_;
  ::google::protobuf::uint32 operate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReplyInviteMatchGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLeaveMatchGroupReq : public ::google::protobuf::Message {
 public:
  MsgLeaveMatchGroupReq();
  virtual ~MsgLeaveMatchGroupReq();

  MsgLeaveMatchGroupReq(const MsgLeaveMatchGroupReq& from);

  inline MsgLeaveMatchGroupReq& operator=(const MsgLeaveMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLeaveMatchGroupReq& default_instance();

  void Swap(MsgLeaveMatchGroupReq* other);

  // implements Message ----------------------------------------------

  MsgLeaveMatchGroupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLeaveMatchGroupReq& from);
  void MergeFrom(const MsgLeaveMatchGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLeaveMatchGroupReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgLeaveMatchGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgKickMatchGroupReq : public ::google::protobuf::Message {
 public:
  MsgKickMatchGroupReq();
  virtual ~MsgKickMatchGroupReq();

  MsgKickMatchGroupReq(const MsgKickMatchGroupReq& from);

  inline MsgKickMatchGroupReq& operator=(const MsgKickMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKickMatchGroupReq& default_instance();

  void Swap(MsgKickMatchGroupReq* other);

  // implements Message ----------------------------------------------

  MsgKickMatchGroupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgKickMatchGroupReq& from);
  void MergeFrom(const MsgKickMatchGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 memberid = 1;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgKickMatchGroupReq)
 private:
  inline void set_has_memberid();
  inline void clear_has_memberid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 memberid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgKickMatchGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyMatchGroupReq : public ::google::protobuf::Message {
 public:
  MsgApplyMatchGroupReq();
  virtual ~MsgApplyMatchGroupReq();

  MsgApplyMatchGroupReq(const MsgApplyMatchGroupReq& from);

  inline MsgApplyMatchGroupReq& operator=(const MsgApplyMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyMatchGroupReq& default_instance();

  void Swap(MsgApplyMatchGroupReq* other);

  // implements Message ----------------------------------------------

  MsgApplyMatchGroupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgApplyMatchGroupReq& from);
  void MergeFrom(const MsgApplyMatchGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 groupid = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  inline ::google::protobuf::uint64 groupid() const;
  inline void set_groupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyMatchGroupReq)
 private:
  inline void set_has_groupid();
  inline void clear_has_groupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 groupid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgApplyMatchGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyApplyMatchGroupReq : public ::google::protobuf::Message {
 public:
  MsgReplyApplyMatchGroupReq();
  virtual ~MsgReplyApplyMatchGroupReq();

  MsgReplyApplyMatchGroupReq(const MsgReplyApplyMatchGroupReq& from);

  inline MsgReplyApplyMatchGroupReq& operator=(const MsgReplyApplyMatchGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyApplyMatchGroupReq& default_instance();

  void Swap(MsgReplyApplyMatchGroupReq* other);

  // implements Message ----------------------------------------------

  MsgReplyApplyMatchGroupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReplyApplyMatchGroupReq& from);
  void MergeFrom(const MsgReplyApplyMatchGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 applyid = 1;
  inline bool has_applyid() const;
  inline void clear_applyid();
  static const int kApplyidFieldNumber = 1;
  inline ::google::protobuf::uint32 applyid() const;
  inline void set_applyid(::google::protobuf::uint32 value);

  // required uint32 operate = 3;
  inline bool has_operate() const;
  inline void clear_operate();
  static const int kOperateFieldNumber = 3;
  inline ::google::protobuf::uint32 operate() const;
  inline void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyApplyMatchGroupReq)
 private:
  inline void set_has_applyid();
  inline void clear_has_applyid();
  inline void set_has_operate();
  inline void clear_has_operate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 applyid_;
  ::google::protobuf::uint32 operate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgReplyApplyMatchGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMatchGroupPrepareReq : public ::google::protobuf::Message {
 public:
  MsgMatchGroupPrepareReq();
  virtual ~MsgMatchGroupPrepareReq();

  MsgMatchGroupPrepareReq(const MsgMatchGroupPrepareReq& from);

  inline MsgMatchGroupPrepareReq& operator=(const MsgMatchGroupPrepareReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMatchGroupPrepareReq& default_instance();

  void Swap(MsgMatchGroupPrepareReq* other);

  // implements Message ----------------------------------------------

  MsgMatchGroupPrepareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMatchGroupPrepareReq& from);
  void MergeFrom(const MsgMatchGroupPrepareReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 prepare = 1;
  inline bool has_prepare() const;
  inline void clear_prepare();
  static const int kPrepareFieldNumber = 1;
  inline ::google::protobuf::uint32 prepare() const;
  inline void set_prepare(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMatchGroupPrepareReq)
 private:
  inline void set_has_prepare();
  inline void clear_has_prepare();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 prepare_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgMatchGroupPrepareReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpdateGroupMatchReq : public ::google::protobuf::Message {
 public:
  MsgUpdateGroupMatchReq();
  virtual ~MsgUpdateGroupMatchReq();

  MsgUpdateGroupMatchReq(const MsgUpdateGroupMatchReq& from);

  inline MsgUpdateGroupMatchReq& operator=(const MsgUpdateGroupMatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpdateGroupMatchReq& default_instance();

  void Swap(MsgUpdateGroupMatchReq* other);

  // implements Message ----------------------------------------------

  MsgUpdateGroupMatchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUpdateGroupMatchReq& from);
  void MergeFrom(const MsgUpdateGroupMatchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 matchid = 1;
  inline bool has_matchid() const;
  inline void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  inline ::google::protobuf::uint32 matchid() const;
  inline void set_matchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpdateGroupMatchReq)
 private:
  inline void set_has_matchid();
  inline void clear_has_matchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 matchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgUpdateGroupMatchReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuestReq : public ::google::protobuf::Message {
 public:
  MsgQueryGuestReq();
  virtual ~MsgQueryGuestReq();

  MsgQueryGuestReq(const MsgQueryGuestReq& from);

  inline MsgQueryGuestReq& operator=(const MsgQueryGuestReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuestReq& default_instance();

  void Swap(MsgQueryGuestReq* other);

  // implements Message ----------------------------------------------

  MsgQueryGuestReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryGuestReq& from);
  void MergeFrom(const MsgQueryGuestReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuestReq)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryGuestReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryGuestAck : public ::google::protobuf::Message {
 public:
  MsgQueryGuestAck();
  virtual ~MsgQueryGuestAck();

  MsgQueryGuestAck(const MsgQueryGuestAck& from);

  inline MsgQueryGuestAck& operator=(const MsgQueryGuestAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryGuestAck& default_instance();

  void Swap(MsgQueryGuestAck* other);

  // implements Message ----------------------------------------------

  MsgQueryGuestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryGuestAck& from);
  void MergeFrom(const MsgQueryGuestAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required uint32 guestcount = 2;
  inline bool has_guestcount() const;
  inline void clear_guestcount();
  static const int kGuestcountFieldNumber = 2;
  inline ::google::protobuf::uint32 guestcount() const;
  inline void set_guestcount(::google::protobuf::uint32 value);

  // repeated .KFMsg.PBGuestData guestdata = 3;
  inline int guestdata_size() const;
  inline void clear_guestdata();
  static const int kGuestdataFieldNumber = 3;
  inline const ::KFMsg::PBGuestData& guestdata(int index) const;
  inline ::KFMsg::PBGuestData* mutable_guestdata(int index);
  inline ::KFMsg::PBGuestData* add_guestdata();
  inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >&
      guestdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >*
      mutable_guestdata();

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryGuestAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_guestcount();
  inline void clear_has_guestcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 guestcount_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData > guestdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryGuestAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUseItemReq : public ::google::protobuf::Message {
 public:
  MsgUseItemReq();
  virtual ~MsgUseItemReq();

  MsgUseItemReq(const MsgUseItemReq& from);

  inline MsgUseItemReq& operator=(const MsgUseItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUseItemReq& default_instance();

  void Swap(MsgUseItemReq* other);

  // implements Message ----------------------------------------------

  MsgUseItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUseItemReq& from);
  void MergeFrom(const MsgUseItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 itemguid = 1;
  inline bool has_itemguid() const;
  inline void clear_itemguid();
  static const int kItemguidFieldNumber = 1;
  inline ::google::protobuf::uint64 itemguid() const;
  inline void set_itemguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUseItemReq)
 private:
  inline void set_has_itemguid();
  inline void clear_has_itemguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemguid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgUseItemReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBStore : public ::google::protobuf::Message {
 public:
  PBStore();
  virtual ~PBStore();

  PBStore(const PBStore& from);

  inline PBStore& operator=(const PBStore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStore& default_instance();

  void Swap(PBStore* other);

  // implements Message ----------------------------------------------

  PBStore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStore& from);
  void MergeFrom(const PBStore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBString data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::KFMsg::PBString& data(int index) const;
  inline ::KFMsg::PBString* mutable_data(int index);
  inline ::KFMsg::PBString* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:KFMsg.PBStore)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static PBStore* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBStores : public ::google::protobuf::Message {
 public:
  PBStores();
  virtual ~PBStores();

  PBStores(const PBStores& from);

  inline PBStores& operator=(const PBStores& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStores& default_instance();

  void Swap(PBStores* other);

  // implements Message ----------------------------------------------

  PBStores* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStores& from);
  void MergeFrom(const PBStores& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBStore store = 1;
  inline int store_size() const;
  inline void clear_store();
  static const int kStoreFieldNumber = 1;
  inline const ::KFMsg::PBStore& store(int index) const;
  inline ::KFMsg::PBStore* mutable_store(int index);
  inline ::KFMsg::PBStore* add_store();
  inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBStore >&
      store() const;
  inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBStore >*
      mutable_store();

  // @@protoc_insertion_point(class_scope:KFMsg.PBStores)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBStore > store_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static PBStores* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryStoreInfoReq : public ::google::protobuf::Message {
 public:
  MsgQueryStoreInfoReq();
  virtual ~MsgQueryStoreInfoReq();

  MsgQueryStoreInfoReq(const MsgQueryStoreInfoReq& from);

  inline MsgQueryStoreInfoReq& operator=(const MsgQueryStoreInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryStoreInfoReq& default_instance();

  void Swap(MsgQueryStoreInfoReq* other);

  // implements Message ----------------------------------------------

  MsgQueryStoreInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryStoreInfoReq& from);
  void MergeFrom(const MsgQueryStoreInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryStoreInfoReq)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryStoreInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryStoreInfoAck : public ::google::protobuf::Message {
 public:
  MsgQueryStoreInfoAck();
  virtual ~MsgQueryStoreInfoAck();

  MsgQueryStoreInfoAck(const MsgQueryStoreInfoAck& from);

  inline MsgQueryStoreInfoAck& operator=(const MsgQueryStoreInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryStoreInfoAck& default_instance();

  void Swap(MsgQueryStoreInfoAck* other);

  // implements Message ----------------------------------------------

  MsgQueryStoreInfoAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryStoreInfoAck& from);
  void MergeFrom(const MsgQueryStoreInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional .KFMsg.PBStores stores = 2;
  inline bool has_stores() const;
  inline void clear_stores();
  static const int kStoresFieldNumber = 2;
  inline const ::KFMsg::PBStores& stores() const;
  inline ::KFMsg::PBStores* mutable_stores();
  inline ::KFMsg::PBStores* release_stores();
  inline void set_allocated_stores(::KFMsg::PBStores* stores);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryStoreInfoAck)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_stores();
  inline void clear_has_stores();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::KFMsg::PBStores* stores_;
  ::google::protobuf::uint32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryStoreInfoAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgBuyStoreAck : public ::google::protobuf::Message {
 public:
  MsgBuyStoreAck();
  virtual ~MsgBuyStoreAck();

  MsgBuyStoreAck(const MsgBuyStoreAck& from);

  inline MsgBuyStoreAck& operator=(const MsgBuyStoreAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBuyStoreAck& default_instance();

  void Swap(MsgBuyStoreAck* other);

  // implements Message ----------------------------------------------

  MsgBuyStoreAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBuyStoreAck& from);
  void MergeFrom(const MsgBuyStoreAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 storeid = 1;
  inline bool has_storeid() const;
  inline void clear_storeid();
  static const int kStoreidFieldNumber = 1;
  inline ::google::protobuf::uint32 storeid() const;
  inline void set_storeid(::google::protobuf::uint32 value);

  // required uint32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgBuyStoreAck)
 private:
  inline void set_has_storeid();
  inline void clear_has_storeid();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::uint32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgBuyStoreAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetWishOrderReq : public ::google::protobuf::Message {
 public:
  MsgSetWishOrderReq();
  virtual ~MsgSetWishOrderReq();

  MsgSetWishOrderReq(const MsgSetWishOrderReq& from);

  inline MsgSetWishOrderReq& operator=(const MsgSetWishOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetWishOrderReq& default_instance();

  void Swap(MsgSetWishOrderReq* other);

  // implements Message ----------------------------------------------

  MsgSetWishOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSetWishOrderReq& from);
  void MergeFrom(const MsgSetWishOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 storeid = 2;
  inline bool has_storeid() const;
  inline void clear_storeid();
  static const int kStoreidFieldNumber = 2;
  inline ::google::protobuf::uint32 storeid() const;
  inline void set_storeid(::google::protobuf::uint32 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetWishOrderReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_storeid();
  inline void clear_has_storeid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::uint32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSetWishOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQuerySettingReq : public ::google::protobuf::Message {
 public:
  MsgQuerySettingReq();
  virtual ~MsgQuerySettingReq();

  MsgQuerySettingReq(const MsgQuerySettingReq& from);

  inline MsgQuerySettingReq& operator=(const MsgQuerySettingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQuerySettingReq& default_instance();

  void Swap(MsgQuerySettingReq* other);

  // implements Message ----------------------------------------------

  MsgQuerySettingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQuerySettingReq& from);
  void MergeFrom(const MsgQuerySettingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQuerySettingReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQuerySettingReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQuerySettingAck : public ::google::protobuf::Message {
 public:
  MsgQuerySettingAck();
  virtual ~MsgQuerySettingAck();

  MsgQuerySettingAck(const MsgQuerySettingAck& from);

  inline MsgQuerySettingAck& operator=(const MsgQuerySettingAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQuerySettingAck& default_instance();

  void Swap(MsgQuerySettingAck* other);

  // implements Message ----------------------------------------------

  MsgQuerySettingAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQuerySettingAck& from);
  void MergeFrom(const MsgQuerySettingAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .KFMsg.PBObject pbsetting = 1;
  inline bool has_pbsetting() const;
  inline void clear_pbsetting();
  static const int kPbsettingFieldNumber = 1;
  inline const ::KFMsg::PBObject& pbsetting() const;
  inline ::KFMsg::PBObject* mutable_pbsetting();
  inline ::KFMsg::PBObject* release_pbsetting();
  inline void set_allocated_pbsetting(::KFMsg::PBObject* pbsetting);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQuerySettingAck)
 private:
  inline void set_has_pbsetting();
  inline void clear_has_pbsetting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::KFMsg::PBObject* pbsetting_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQuerySettingAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpdateSettingReq : public ::google::protobuf::Message {
 public:
  MsgUpdateSettingReq();
  virtual ~MsgUpdateSettingReq();

  MsgUpdateSettingReq(const MsgUpdateSettingReq& from);

  inline MsgUpdateSettingReq& operator=(const MsgUpdateSettingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpdateSettingReq& default_instance();

  void Swap(MsgUpdateSettingReq* other);

  // implements Message ----------------------------------------------

  MsgUpdateSettingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUpdateSettingReq& from);
  void MergeFrom(const MsgUpdateSettingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBString strsetting = 1;
  inline int strsetting_size() const;
  inline void clear_strsetting();
  static const int kStrsettingFieldNumber = 1;
  inline const ::KFMsg::PBString& strsetting(int index) const;
  inline ::KFMsg::PBString* mutable_strsetting(int index);
  inline ::KFMsg::PBString* add_strsetting();
  inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
      strsetting() const;
  inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
      mutable_strsetting();

  // repeated .KFMsg.PBUInt32 intsetting = 2;
  inline int intsetting_size() const;
  inline void clear_intsetting();
  static const int kIntsettingFieldNumber = 2;
  inline const ::KFMsg::PBUInt32& intsetting(int index) const;
  inline ::KFMsg::PBUInt32* mutable_intsetting(int index);
  inline ::KFMsg::PBUInt32* add_intsetting();
  inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >&
      intsetting() const;
  inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >*
      mutable_intsetting();

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpdateSettingReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString > strsetting_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 > intsetting_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgUpdateSettingReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRecentListReq : public ::google::protobuf::Message {
 public:
  MsgQueryRecentListReq();
  virtual ~MsgQueryRecentListReq();

  MsgQueryRecentListReq(const MsgQueryRecentListReq& from);

  inline MsgQueryRecentListReq& operator=(const MsgQueryRecentListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRecentListReq& default_instance();

  void Swap(MsgQueryRecentListReq* other);

  // implements Message ----------------------------------------------

  MsgQueryRecentListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryRecentListReq& from);
  void MergeFrom(const MsgQueryRecentListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRecentListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryRecentListReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRecentListAck : public ::google::protobuf::Message {
 public:
  MsgQueryRecentListAck();
  virtual ~MsgQueryRecentListAck();

  MsgQueryRecentListAck(const MsgQueryRecentListAck& from);

  inline MsgQueryRecentListAck& operator=(const MsgQueryRecentListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRecentListAck& default_instance();

  void Swap(MsgQueryRecentListAck* other);

  // implements Message ----------------------------------------------

  MsgQueryRecentListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryRecentListAck& from);
  void MergeFrom(const MsgQueryRecentListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .KFMsg.PBRecord recentlist = 1;
  inline bool has_recentlist() const;
  inline void clear_recentlist();
  static const int kRecentlistFieldNumber = 1;
  inline const ::KFMsg::PBRecord& recentlist() const;
  inline ::KFMsg::PBRecord* mutable_recentlist();
  inline ::KFMsg::PBRecord* release_recentlist();
  inline void set_allocated_recentlist(::KFMsg::PBRecord* recentlist);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRecentListAck)
 private:
  inline void set_has_recentlist();
  inline void clear_has_recentlist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::KFMsg::PBRecord* recentlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryRecentListAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCompoundDataReq : public ::google::protobuf::Message {
 public:
  MsgCompoundDataReq();
  virtual ~MsgCompoundDataReq();

  MsgCompoundDataReq(const MsgCompoundDataReq& from);

  inline MsgCompoundDataReq& operator=(const MsgCompoundDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompoundDataReq& default_instance();

  void Swap(MsgCompoundDataReq* other);

  // implements Message ----------------------------------------------

  MsgCompoundDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCompoundDataReq& from);
  void MergeFrom(const MsgCompoundDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string dataname = 1;
  inline bool has_dataname() const;
  inline void clear_dataname();
  static const int kDatanameFieldNumber = 1;
  inline const ::std::string& dataname() const;
  inline void set_dataname(const ::std::string& value);
  inline void set_dataname(const char* value);
  inline void set_dataname(const char* value, size_t size);
  inline ::std::string* mutable_dataname();
  inline ::std::string* release_dataname();
  inline void set_allocated_dataname(::std::string* dataname);

  // required uint32 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCompoundDataReq)
 private:
  inline void set_has_dataname();
  inline void clear_has_dataname();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* dataname_;
  ::google::protobuf::uint32 key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgCompoundDataReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListReq : public ::google::protobuf::Message {
 public:
  MsgQueryRankListReq();
  virtual ~MsgQueryRankListReq();

  MsgQueryRankListReq(const MsgQueryRankListReq& from);

  inline MsgQueryRankListReq& operator=(const MsgQueryRankListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListReq& default_instance();

  void Swap(MsgQueryRankListReq* other);

  // implements Message ----------------------------------------------

  MsgQueryRankListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryRankListReq& from);
  void MergeFrom(const MsgQueryRankListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankid = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankidFieldNumber = 1;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListReq)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rankid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryRankListReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListAck : public ::google::protobuf::Message {
 public:
  MsgQueryRankListAck();
  virtual ~MsgQueryRankListAck();

  MsgQueryRankListAck(const MsgQueryRankListAck& from);

  inline MsgQueryRankListAck& operator=(const MsgQueryRankListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListAck& default_instance();

  void Swap(MsgQueryRankListAck* other);

  // implements Message ----------------------------------------------

  MsgQueryRankListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryRankListAck& from);
  void MergeFrom(const MsgQueryRankListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankid = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankidFieldNumber = 1;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // required .KFMsg.PBRankDatas rankdatas = 2;
  inline bool has_rankdatas() const;
  inline void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  inline const ::KFMsg::PBRankDatas& rankdatas() const;
  inline ::KFMsg::PBRankDatas* mutable_rankdatas();
  inline ::KFMsg::PBRankDatas* release_rankdatas();
  inline void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListAck)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_rankdatas();
  inline void clear_has_rankdatas();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryRankListAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListReq : public ::google::protobuf::Message {
 public:
  MsgQueryFriendRankListReq();
  virtual ~MsgQueryFriendRankListReq();

  MsgQueryFriendRankListReq(const MsgQueryFriendRankListReq& from);

  inline MsgQueryFriendRankListReq& operator=(const MsgQueryFriendRankListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListReq& default_instance();

  void Swap(MsgQueryFriendRankListReq* other);

  // implements Message ----------------------------------------------

  MsgQueryFriendRankListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryFriendRankListReq& from);
  void MergeFrom(const MsgQueryFriendRankListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankid = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankidFieldNumber = 1;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListReq)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rankid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryFriendRankListReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListAck : public ::google::protobuf::Message {
 public:
  MsgQueryFriendRankListAck();
  virtual ~MsgQueryFriendRankListAck();

  MsgQueryFriendRankListAck(const MsgQueryFriendRankListAck& from);

  inline MsgQueryFriendRankListAck& operator=(const MsgQueryFriendRankListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListAck& default_instance();

  void Swap(MsgQueryFriendRankListAck* other);

  // implements Message ----------------------------------------------

  MsgQueryFriendRankListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryFriendRankListAck& from);
  void MergeFrom(const MsgQueryFriendRankListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rankid = 1;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankidFieldNumber = 1;
  inline ::google::protobuf::uint32 rankid() const;
  inline void set_rankid(::google::protobuf::uint32 value);

  // required .KFMsg.PBRankDatas rankdatas = 2;
  inline bool has_rankdatas() const;
  inline void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  inline const ::KFMsg::PBRankDatas& rankdatas() const;
  inline ::KFMsg::PBRankDatas* mutable_rankdatas();
  inline ::KFMsg::PBRankDatas* release_rankdatas();
  inline void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListAck)
 private:
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_rankdatas();
  inline void clear_has_rankdatas();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgQueryFriendRankListAck* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSevenSignInRewardReq : public ::google::protobuf::Message {
 public:
  MsgSevenSignInRewardReq();
  virtual ~MsgSevenSignInRewardReq();

  MsgSevenSignInRewardReq(const MsgSevenSignInRewardReq& from);

  inline MsgSevenSignInRewardReq& operator=(const MsgSevenSignInRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSevenSignInRewardReq& default_instance();

  void Swap(MsgSevenSignInRewardReq* other);

  // implements Message ----------------------------------------------

  MsgSevenSignInRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSevenSignInRewardReq& from);
  void MergeFrom(const MsgSevenSignInRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSevenSignInRewardReq)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgSevenSignInRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellSevenExtendReward : public ::google::protobuf::Message {
 public:
  MsgTellSevenExtendReward();
  virtual ~MsgTellSevenExtendReward();

  MsgTellSevenExtendReward(const MsgTellSevenExtendReward& from);

  inline MsgTellSevenExtendReward& operator=(const MsgTellSevenExtendReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellSevenExtendReward& default_instance();

  void Swap(MsgTellSevenExtendReward* other);

  // implements Message ----------------------------------------------

  MsgTellSevenExtendReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTellSevenExtendReward& from);
  void MergeFrom(const MsgTellSevenExtendReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required string reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::std::string& reward() const;
  inline void set_reward(const ::std::string& value);
  inline void set_reward(const char* value);
  inline void set_reward(const char* value, size_t size);
  inline ::std::string* mutable_reward();
  inline ::std::string* release_reward();
  inline void set_allocated_reward(::std::string* reward);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellSevenExtendReward)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* playername_;
  ::std::string* reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_KFClientMessage_2eproto();
  friend void protobuf_AssignDesc_KFClientMessage_2eproto();
  friend void protobuf_ShutdownFile_KFClientMessage_2eproto();

  void InitAsDefaultInstance();
  static MsgTellSevenExtendReward* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgResultDisplay

// required uint32 result = 1;
inline bool MsgResultDisplay::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgResultDisplay::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgResultDisplay::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgResultDisplay::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 MsgResultDisplay::result() const {
  return result_;
}
inline void MsgResultDisplay::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// repeated string param = 2;
inline int MsgResultDisplay::param_size() const {
  return param_.size();
}
inline void MsgResultDisplay::clear_param() {
  param_.Clear();
}
inline const ::std::string& MsgResultDisplay::param(int index) const {
  return param_.Get(index);
}
inline ::std::string* MsgResultDisplay::mutable_param(int index) {
  return param_.Mutable(index);
}
inline void MsgResultDisplay::set_param(int index, const ::std::string& value) {
  param_.Mutable(index)->assign(value);
}
inline void MsgResultDisplay::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
}
inline void MsgResultDisplay::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgResultDisplay::add_param() {
  return param_.Add();
}
inline void MsgResultDisplay::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
}
inline void MsgResultDisplay::add_param(const char* value) {
  param_.Add()->assign(value);
}
inline void MsgResultDisplay::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgResultDisplay::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgResultDisplay::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// MsgTellBeKick

// required uint32 type = 1;
inline bool MsgTellBeKick::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTellBeKick::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTellBeKick::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTellBeKick::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MsgTellBeKick::type() const {
  return type_;
}
inline void MsgTellBeKick::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MsgLoginVerifyReq

// required uint32 accountid = 1;
inline bool MsgLoginVerifyReq::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginVerifyReq::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginVerifyReq::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginVerifyReq::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 MsgLoginVerifyReq::accountid() const {
  return accountid_;
}
inline void MsgLoginVerifyReq::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// required string token = 2;
inline bool MsgLoginVerifyReq::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginVerifyReq::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginVerifyReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginVerifyReq::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& MsgLoginVerifyReq::token() const {
  return *token_;
}
inline void MsgLoginVerifyReq::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgLoginVerifyReq::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgLoginVerifyReq::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgLoginVerifyReq::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* MsgLoginVerifyReq::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgLoginVerifyReq::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgLoginVerifyAck

// required uint32 playerid = 1;
inline bool MsgLoginVerifyAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginVerifyAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginVerifyAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginVerifyAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgLoginVerifyAck::playerid() const {
  return playerid_;
}
inline void MsgLoginVerifyAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string token = 2;
inline bool MsgLoginVerifyAck::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginVerifyAck::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginVerifyAck::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginVerifyAck::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& MsgLoginVerifyAck::token() const {
  return *token_;
}
inline void MsgLoginVerifyAck::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgLoginVerifyAck::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgLoginVerifyAck::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgLoginVerifyAck::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* MsgLoginVerifyAck::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgLoginVerifyAck::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string ip = 3;
inline bool MsgLoginVerifyAck::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgLoginVerifyAck::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgLoginVerifyAck::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgLoginVerifyAck::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& MsgLoginVerifyAck::ip() const {
  return *ip_;
}
inline void MsgLoginVerifyAck::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void MsgLoginVerifyAck::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void MsgLoginVerifyAck::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgLoginVerifyAck::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* MsgLoginVerifyAck::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgLoginVerifyAck::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 port = 4;
inline bool MsgLoginVerifyAck::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgLoginVerifyAck::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgLoginVerifyAck::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgLoginVerifyAck::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 MsgLoginVerifyAck::port() const {
  return port_;
}
inline void MsgLoginVerifyAck::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// MsgLoginGameReq

// required uint32 playerid = 1;
inline bool MsgLoginGameReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgLoginGameReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgLoginGameReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgLoginGameReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgLoginGameReq::playerid() const {
  return playerid_;
}
inline void MsgLoginGameReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string token = 2;
inline bool MsgLoginGameReq::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgLoginGameReq::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgLoginGameReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgLoginGameReq::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& MsgLoginGameReq::token() const {
  return *token_;
}
inline void MsgLoginGameReq::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgLoginGameReq::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgLoginGameReq::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgLoginGameReq::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* MsgLoginGameReq::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgLoginGameReq::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgLoginOutReq

// -------------------------------------------------------------------

// MsgCreateRoleReq

// required string name = 1;
inline bool MsgCreateRoleReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCreateRoleReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCreateRoleReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCreateRoleReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgCreateRoleReq::name() const {
  return *name_;
}
inline void MsgCreateRoleReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgCreateRoleReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgCreateRoleReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCreateRoleReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgCreateRoleReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgCreateRoleReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 sex = 2;
inline bool MsgCreateRoleReq::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCreateRoleReq::set_has_sex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCreateRoleReq::clear_has_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCreateRoleReq::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 MsgCreateRoleReq::sex() const {
  return sex_;
}
inline void MsgCreateRoleReq::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// required uint32 model = 3;
inline bool MsgCreateRoleReq::has_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgCreateRoleReq::set_has_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgCreateRoleReq::clear_has_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgCreateRoleReq::clear_model() {
  model_ = 0u;
  clear_has_model();
}
inline ::google::protobuf::uint32 MsgCreateRoleReq::model() const {
  return model_;
}
inline void MsgCreateRoleReq::set_model(::google::protobuf::uint32 value) {
  set_has_model();
  model_ = value;
}

// -------------------------------------------------------------------

// MsgChangeNameReq

// required string name = 1;
inline bool MsgChangeNameReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgChangeNameReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgChangeNameReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgChangeNameReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgChangeNameReq::name() const {
  return *name_;
}
inline void MsgChangeNameReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgChangeNameReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgChangeNameReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgChangeNameReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgChangeNameReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgChangeNameReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgChangeSexReq

// required uint32 sex = 1;
inline bool MsgChangeSexReq::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgChangeSexReq::set_has_sex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgChangeSexReq::clear_has_sex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgChangeSexReq::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 MsgChangeSexReq::sex() const {
  return sex_;
}
inline void MsgChangeSexReq::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// MsgChangeIconReq

// required string icon = 1;
inline bool MsgChangeIconReq::has_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgChangeIconReq::set_has_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgChangeIconReq::clear_has_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgChangeIconReq::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& MsgChangeIconReq::icon() const {
  return *icon_;
}
inline void MsgChangeIconReq::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void MsgChangeIconReq::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void MsgChangeIconReq::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgChangeIconReq::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* MsgChangeIconReq::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgChangeIconReq::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgChangeIconBoxReq

// required string iconbox = 1;
inline bool MsgChangeIconBoxReq::has_iconbox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgChangeIconBoxReq::set_has_iconbox() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgChangeIconBoxReq::clear_has_iconbox() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgChangeIconBoxReq::clear_iconbox() {
  if (iconbox_ != &::google::protobuf::internal::kEmptyString) {
    iconbox_->clear();
  }
  clear_has_iconbox();
}
inline const ::std::string& MsgChangeIconBoxReq::iconbox() const {
  return *iconbox_;
}
inline void MsgChangeIconBoxReq::set_iconbox(const ::std::string& value) {
  set_has_iconbox();
  if (iconbox_ == &::google::protobuf::internal::kEmptyString) {
    iconbox_ = new ::std::string;
  }
  iconbox_->assign(value);
}
inline void MsgChangeIconBoxReq::set_iconbox(const char* value) {
  set_has_iconbox();
  if (iconbox_ == &::google::protobuf::internal::kEmptyString) {
    iconbox_ = new ::std::string;
  }
  iconbox_->assign(value);
}
inline void MsgChangeIconBoxReq::set_iconbox(const char* value, size_t size) {
  set_has_iconbox();
  if (iconbox_ == &::google::protobuf::internal::kEmptyString) {
    iconbox_ = new ::std::string;
  }
  iconbox_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgChangeIconBoxReq::mutable_iconbox() {
  set_has_iconbox();
  if (iconbox_ == &::google::protobuf::internal::kEmptyString) {
    iconbox_ = new ::std::string;
  }
  return iconbox_;
}
inline ::std::string* MsgChangeIconBoxReq::release_iconbox() {
  clear_has_iconbox();
  if (iconbox_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = iconbox_;
    iconbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgChangeIconBoxReq::set_allocated_iconbox(::std::string* iconbox) {
  if (iconbox_ != &::google::protobuf::internal::kEmptyString) {
    delete iconbox_;
  }
  if (iconbox) {
    set_has_iconbox();
    iconbox_ = iconbox;
  } else {
    clear_has_iconbox();
    iconbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgChangeMottoReq

// required string motto = 1;
inline bool MsgChangeMottoReq::has_motto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgChangeMottoReq::set_has_motto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgChangeMottoReq::clear_has_motto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgChangeMottoReq::clear_motto() {
  if (motto_ != &::google::protobuf::internal::kEmptyString) {
    motto_->clear();
  }
  clear_has_motto();
}
inline const ::std::string& MsgChangeMottoReq::motto() const {
  return *motto_;
}
inline void MsgChangeMottoReq::set_motto(const ::std::string& value) {
  set_has_motto();
  if (motto_ == &::google::protobuf::internal::kEmptyString) {
    motto_ = new ::std::string;
  }
  motto_->assign(value);
}
inline void MsgChangeMottoReq::set_motto(const char* value) {
  set_has_motto();
  if (motto_ == &::google::protobuf::internal::kEmptyString) {
    motto_ = new ::std::string;
  }
  motto_->assign(value);
}
inline void MsgChangeMottoReq::set_motto(const char* value, size_t size) {
  set_has_motto();
  if (motto_ == &::google::protobuf::internal::kEmptyString) {
    motto_ = new ::std::string;
  }
  motto_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgChangeMottoReq::mutable_motto() {
  set_has_motto();
  if (motto_ == &::google::protobuf::internal::kEmptyString) {
    motto_ = new ::std::string;
  }
  return motto_;
}
inline ::std::string* MsgChangeMottoReq::release_motto() {
  clear_has_motto();
  if (motto_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = motto_;
    motto_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgChangeMottoReq::set_allocated_motto(::std::string* motto) {
  if (motto_ != &::google::protobuf::internal::kEmptyString) {
    delete motto_;
  }
  if (motto) {
    set_has_motto();
    motto_ = motto;
  } else {
    clear_has_motto();
    motto_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgQueryBasicReq

// required string name = 1;
inline bool MsgQueryBasicReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryBasicReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryBasicReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryBasicReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgQueryBasicReq::name() const {
  return *name_;
}
inline void MsgQueryBasicReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgQueryBasicReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgQueryBasicReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgQueryBasicReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgQueryBasicReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgQueryBasicReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgQueryPlayerReq

// required uint32 playerid = 1;
inline bool MsgQueryPlayerReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryPlayerReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryPlayerReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryPlayerReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgQueryPlayerReq::playerid() const {
  return playerid_;
}
inline void MsgQueryPlayerReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// MsgReceiveTaskRewardReq

// required uint32 taskid = 1;
inline bool MsgReceiveTaskRewardReq::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReceiveTaskRewardReq::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReceiveTaskRewardReq::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReceiveTaskRewardReq::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 MsgReceiveTaskRewardReq::taskid() const {
  return taskid_;
}
inline void MsgReceiveTaskRewardReq::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
}

// -------------------------------------------------------------------

// MsgReceiveActivityRewardReq

// required uint32 type = 1;
inline bool MsgReceiveActivityRewardReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReceiveActivityRewardReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReceiveActivityRewardReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReceiveActivityRewardReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MsgReceiveActivityRewardReq::type() const {
  return type_;
}
inline void MsgReceiveActivityRewardReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 id = 2;
inline bool MsgReceiveActivityRewardReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReceiveActivityRewardReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReceiveActivityRewardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReceiveActivityRewardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MsgReceiveActivityRewardReq::id() const {
  return id_;
}
inline void MsgReceiveActivityRewardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MsgReceiveAchieveRewardReq

// required uint32 achieveid = 1;
inline bool MsgReceiveAchieveRewardReq::has_achieveid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReceiveAchieveRewardReq::set_has_achieveid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReceiveAchieveRewardReq::clear_has_achieveid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReceiveAchieveRewardReq::clear_achieveid() {
  achieveid_ = 0u;
  clear_has_achieveid();
}
inline ::google::protobuf::uint32 MsgReceiveAchieveRewardReq::achieveid() const {
  return achieveid_;
}
inline void MsgReceiveAchieveRewardReq::set_achieveid(::google::protobuf::uint32 value) {
  set_has_achieveid();
  achieveid_ = value;
}

// -------------------------------------------------------------------

// MsgReceiveGiftRewardReq

// required string giftkey = 1;
inline bool MsgReceiveGiftRewardReq::has_giftkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReceiveGiftRewardReq::set_has_giftkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReceiveGiftRewardReq::clear_has_giftkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReceiveGiftRewardReq::clear_giftkey() {
  if (giftkey_ != &::google::protobuf::internal::kEmptyString) {
    giftkey_->clear();
  }
  clear_has_giftkey();
}
inline const ::std::string& MsgReceiveGiftRewardReq::giftkey() const {
  return *giftkey_;
}
inline void MsgReceiveGiftRewardReq::set_giftkey(const ::std::string& value) {
  set_has_giftkey();
  if (giftkey_ == &::google::protobuf::internal::kEmptyString) {
    giftkey_ = new ::std::string;
  }
  giftkey_->assign(value);
}
inline void MsgReceiveGiftRewardReq::set_giftkey(const char* value) {
  set_has_giftkey();
  if (giftkey_ == &::google::protobuf::internal::kEmptyString) {
    giftkey_ = new ::std::string;
  }
  giftkey_->assign(value);
}
inline void MsgReceiveGiftRewardReq::set_giftkey(const char* value, size_t size) {
  set_has_giftkey();
  if (giftkey_ == &::google::protobuf::internal::kEmptyString) {
    giftkey_ = new ::std::string;
  }
  giftkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgReceiveGiftRewardReq::mutable_giftkey() {
  set_has_giftkey();
  if (giftkey_ == &::google::protobuf::internal::kEmptyString) {
    giftkey_ = new ::std::string;
  }
  return giftkey_;
}
inline ::std::string* MsgReceiveGiftRewardReq::release_giftkey() {
  clear_has_giftkey();
  if (giftkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = giftkey_;
    giftkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgReceiveGiftRewardReq::set_allocated_giftkey(::std::string* giftkey) {
  if (giftkey_ != &::google::protobuf::internal::kEmptyString) {
    delete giftkey_;
  }
  if (giftkey) {
    set_has_giftkey();
    giftkey_ = giftkey;
  } else {
    clear_has_giftkey();
    giftkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgReceiveMailRewardReq

// required uint64 mailid = 1;
inline bool MsgReceiveMailRewardReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReceiveMailRewardReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReceiveMailRewardReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReceiveMailRewardReq::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MsgReceiveMailRewardReq::mailid() const {
  return mailid_;
}
inline void MsgReceiveMailRewardReq::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// MsgViewMailReq

// required uint64 mailid = 1;
inline bool MsgViewMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgViewMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgViewMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgViewMailReq::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MsgViewMailReq::mailid() const {
  return mailid_;
}
inline void MsgViewMailReq::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// MsgDeleteMailReq

// required uint64 mailid = 1;
inline bool MsgDeleteMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDeleteMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDeleteMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDeleteMailReq::clear_mailid() {
  mailid_ = GOOGLE_ULONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::uint64 MsgDeleteMailReq::mailid() const {
  return mailid_;
}
inline void MsgDeleteMailReq::set_mailid(::google::protobuf::uint64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryMailReq

// required uint32 mailtype = 1;
inline bool MsgQueryMailReq::has_mailtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryMailReq::set_has_mailtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryMailReq::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryMailReq::clear_mailtype() {
  mailtype_ = 0u;
  clear_has_mailtype();
}
inline ::google::protobuf::uint32 MsgQueryMailReq::mailtype() const {
  return mailtype_;
}
inline void MsgQueryMailReq::set_mailtype(::google::protobuf::uint32 value) {
  set_has_mailtype();
  mailtype_ = value;
}

// -------------------------------------------------------------------

// MsgStartMatchReq

// required uint32 matchid = 1;
inline bool MsgStartMatchReq::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgStartMatchReq::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgStartMatchReq::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgStartMatchReq::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 MsgStartMatchReq::matchid() const {
  return matchid_;
}
inline void MsgStartMatchReq::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
}

// optional bool allowgroup = 2;
inline bool MsgStartMatchReq::has_allowgroup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgStartMatchReq::set_has_allowgroup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgStartMatchReq::clear_has_allowgroup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgStartMatchReq::clear_allowgroup() {
  allowgroup_ = false;
  clear_has_allowgroup();
}
inline bool MsgStartMatchReq::allowgroup() const {
  return allowgroup_;
}
inline void MsgStartMatchReq::set_allowgroup(bool value) {
  set_has_allowgroup();
  allowgroup_ = value;
}

// -------------------------------------------------------------------

// MsgStartMatchAck

// required uint32 matchid = 1;
inline bool MsgStartMatchAck::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgStartMatchAck::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgStartMatchAck::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgStartMatchAck::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 MsgStartMatchAck::matchid() const {
  return matchid_;
}
inline void MsgStartMatchAck::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
}

// -------------------------------------------------------------------

// MsgCancelMatchReq

// -------------------------------------------------------------------

// MsgCancelMatchAck

// required uint32 matchid = 1;
inline bool MsgCancelMatchAck::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCancelMatchAck::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCancelMatchAck::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCancelMatchAck::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 MsgCancelMatchAck::matchid() const {
  return matchid_;
}
inline void MsgCancelMatchAck::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
}

// -------------------------------------------------------------------

// MsgMatchResultAck

// required uint32 matchid = 1;
inline bool MsgMatchResultAck::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMatchResultAck::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMatchResultAck::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMatchResultAck::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 MsgMatchResultAck::matchid() const {
  return matchid_;
}
inline void MsgMatchResultAck::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
}

// required uint64 roomid = 2;
inline bool MsgMatchResultAck::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMatchResultAck::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMatchResultAck::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMatchResultAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
  clear_has_roomid();
}
inline ::google::protobuf::uint64 MsgMatchResultAck::roomid() const {
  return roomid_;
}
inline void MsgMatchResultAck::set_roomid(::google::protobuf::uint64 value) {
  set_has_roomid();
  roomid_ = value;
}

// required uint32 serverid = 3;
inline bool MsgMatchResultAck::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMatchResultAck::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMatchResultAck::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMatchResultAck::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 MsgMatchResultAck::serverid() const {
  return serverid_;
}
inline void MsgMatchResultAck::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required string ip = 4;
inline bool MsgMatchResultAck::has_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgMatchResultAck::set_has_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgMatchResultAck::clear_has_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgMatchResultAck::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& MsgMatchResultAck::ip() const {
  return *ip_;
}
inline void MsgMatchResultAck::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void MsgMatchResultAck::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void MsgMatchResultAck::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgMatchResultAck::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* MsgMatchResultAck::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgMatchResultAck::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 port = 5;
inline bool MsgMatchResultAck::has_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgMatchResultAck::set_has_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgMatchResultAck::clear_has_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgMatchResultAck::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 MsgMatchResultAck::port() const {
  return port_;
}
inline void MsgMatchResultAck::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// required string token = 6;
inline bool MsgMatchResultAck::has_token() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgMatchResultAck::set_has_token() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgMatchResultAck::clear_has_token() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgMatchResultAck::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& MsgMatchResultAck::token() const {
  return *token_;
}
inline void MsgMatchResultAck::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgMatchResultAck::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void MsgMatchResultAck::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgMatchResultAck::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* MsgMatchResultAck::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgMatchResultAck::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgAddFriendInviteReq

// required uint32 playerid = 1;
inline bool MsgAddFriendInviteReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgAddFriendInviteReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgAddFriendInviteReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgAddFriendInviteReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgAddFriendInviteReq::playerid() const {
  return playerid_;
}
inline void MsgAddFriendInviteReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string message = 2;
inline bool MsgAddFriendInviteReq::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgAddFriendInviteReq::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgAddFriendInviteReq::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgAddFriendInviteReq::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& MsgAddFriendInviteReq::message() const {
  return *message_;
}
inline void MsgAddFriendInviteReq::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void MsgAddFriendInviteReq::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void MsgAddFriendInviteReq::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgAddFriendInviteReq::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* MsgAddFriendInviteReq::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgAddFriendInviteReq::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string name = 3;
inline bool MsgAddFriendInviteReq::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgAddFriendInviteReq::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgAddFriendInviteReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgAddFriendInviteReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgAddFriendInviteReq::name() const {
  return *name_;
}
inline void MsgAddFriendInviteReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgAddFriendInviteReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgAddFriendInviteReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgAddFriendInviteReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgAddFriendInviteReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgAddFriendInviteReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgReplyFriendInviteReq

// required uint32 playerid = 1;
inline bool MsgReplyFriendInviteReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReplyFriendInviteReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReplyFriendInviteReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReplyFriendInviteReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgReplyFriendInviteReq::playerid() const {
  return playerid_;
}
inline void MsgReplyFriendInviteReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required uint32 operate = 2;
inline bool MsgReplyFriendInviteReq::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReplyFriendInviteReq::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReplyFriendInviteReq::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReplyFriendInviteReq::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 MsgReplyFriendInviteReq::operate() const {
  return operate_;
}
inline void MsgReplyFriendInviteReq::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
}

// -------------------------------------------------------------------

// MsgDelFriendReq

// required uint32 playerid = 1;
inline bool MsgDelFriendReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDelFriendReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDelFriendReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDelFriendReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgDelFriendReq::playerid() const {
  return playerid_;
}
inline void MsgDelFriendReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// MsgSetRefuseFriendInviteReq

// required uint32 refuse = 1;
inline bool MsgSetRefuseFriendInviteReq::has_refuse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSetRefuseFriendInviteReq::set_has_refuse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSetRefuseFriendInviteReq::clear_has_refuse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSetRefuseFriendInviteReq::clear_refuse() {
  refuse_ = 0u;
  clear_has_refuse();
}
inline ::google::protobuf::uint32 MsgSetRefuseFriendInviteReq::refuse() const {
  return refuse_;
}
inline void MsgSetRefuseFriendInviteReq::set_refuse(::google::protobuf::uint32 value) {
  set_has_refuse();
  refuse_ = value;
}

// -------------------------------------------------------------------

// MsgEnterChatReq

// -------------------------------------------------------------------

// MsgSendChatReq

// required string chatinfo = 1;
inline bool MsgSendChatReq::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSendChatReq::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSendChatReq::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSendChatReq::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& MsgSendChatReq::chatinfo() const {
  return *chatinfo_;
}
inline void MsgSendChatReq::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendChatReq::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendChatReq::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendChatReq::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* MsgSendChatReq::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendChatReq::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 isvoice = 2;
inline bool MsgSendChatReq::has_isvoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSendChatReq::set_has_isvoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSendChatReq::clear_has_isvoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSendChatReq::clear_isvoice() {
  isvoice_ = 0u;
  clear_has_isvoice();
}
inline ::google::protobuf::uint32 MsgSendChatReq::isvoice() const {
  return isvoice_;
}
inline void MsgSendChatReq::set_isvoice(::google::protobuf::uint32 value) {
  set_has_isvoice();
  isvoice_ = value;
}

// -------------------------------------------------------------------

// MsgSendChatInfo

// required string chatinfo = 1;
inline bool MsgSendChatInfo::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSendChatInfo::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSendChatInfo::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSendChatInfo::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& MsgSendChatInfo::chatinfo() const {
  return *chatinfo_;
}
inline void MsgSendChatInfo::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendChatInfo::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendChatInfo::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendChatInfo::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* MsgSendChatInfo::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendChatInfo::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 isvoice = 2;
inline bool MsgSendChatInfo::has_isvoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSendChatInfo::set_has_isvoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSendChatInfo::clear_has_isvoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSendChatInfo::clear_isvoice() {
  isvoice_ = 0u;
  clear_has_isvoice();
}
inline ::google::protobuf::uint32 MsgSendChatInfo::isvoice() const {
  return isvoice_;
}
inline void MsgSendChatInfo::set_isvoice(::google::protobuf::uint32 value) {
  set_has_isvoice();
  isvoice_ = value;
}

// required string playername = 3;
inline bool MsgSendChatInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSendChatInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSendChatInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSendChatInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& MsgSendChatInfo::playername() const {
  return *playername_;
}
inline void MsgSendChatInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void MsgSendChatInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void MsgSendChatInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendChatInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* MsgSendChatInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendChatInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 playerid = 4;
inline bool MsgSendChatInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSendChatInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSendChatInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSendChatInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgSendChatInfo::playerid() const {
  return playerid_;
}
inline void MsgSendChatInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string playericon = 5;
inline bool MsgSendChatInfo::has_playericon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgSendChatInfo::set_has_playericon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgSendChatInfo::clear_has_playericon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgSendChatInfo::clear_playericon() {
  if (playericon_ != &::google::protobuf::internal::kEmptyString) {
    playericon_->clear();
  }
  clear_has_playericon();
}
inline const ::std::string& MsgSendChatInfo::playericon() const {
  return *playericon_;
}
inline void MsgSendChatInfo::set_playericon(const ::std::string& value) {
  set_has_playericon();
  if (playericon_ == &::google::protobuf::internal::kEmptyString) {
    playericon_ = new ::std::string;
  }
  playericon_->assign(value);
}
inline void MsgSendChatInfo::set_playericon(const char* value) {
  set_has_playericon();
  if (playericon_ == &::google::protobuf::internal::kEmptyString) {
    playericon_ = new ::std::string;
  }
  playericon_->assign(value);
}
inline void MsgSendChatInfo::set_playericon(const char* value, size_t size) {
  set_has_playericon();
  if (playericon_ == &::google::protobuf::internal::kEmptyString) {
    playericon_ = new ::std::string;
  }
  playericon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendChatInfo::mutable_playericon() {
  set_has_playericon();
  if (playericon_ == &::google::protobuf::internal::kEmptyString) {
    playericon_ = new ::std::string;
  }
  return playericon_;
}
inline ::std::string* MsgSendChatInfo::release_playericon() {
  clear_has_playericon();
  if (playericon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playericon_;
    playericon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendChatInfo::set_allocated_playericon(::std::string* playericon) {
  if (playericon_ != &::google::protobuf::internal::kEmptyString) {
    delete playericon_;
  }
  if (playericon) {
    set_has_playericon();
    playericon_ = playericon;
  } else {
    clear_has_playericon();
    playericon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 playergrading = 6;
inline bool MsgSendChatInfo::has_playergrading() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgSendChatInfo::set_has_playergrading() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgSendChatInfo::clear_has_playergrading() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgSendChatInfo::clear_playergrading() {
  playergrading_ = 0u;
  clear_has_playergrading();
}
inline ::google::protobuf::uint32 MsgSendChatInfo::playergrading() const {
  return playergrading_;
}
inline void MsgSendChatInfo::set_playergrading(::google::protobuf::uint32 value) {
  set_has_playergrading();
  playergrading_ = value;
}

// required uint32 playersex = 7;
inline bool MsgSendChatInfo::has_playersex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgSendChatInfo::set_has_playersex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgSendChatInfo::clear_has_playersex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgSendChatInfo::clear_playersex() {
  playersex_ = 0u;
  clear_has_playersex();
}
inline ::google::protobuf::uint32 MsgSendChatInfo::playersex() const {
  return playersex_;
}
inline void MsgSendChatInfo::set_playersex(::google::protobuf::uint32 value) {
  set_has_playersex();
  playersex_ = value;
}

// required string playericonbox = 8;
inline bool MsgSendChatInfo::has_playericonbox() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgSendChatInfo::set_has_playericonbox() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgSendChatInfo::clear_has_playericonbox() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgSendChatInfo::clear_playericonbox() {
  if (playericonbox_ != &::google::protobuf::internal::kEmptyString) {
    playericonbox_->clear();
  }
  clear_has_playericonbox();
}
inline const ::std::string& MsgSendChatInfo::playericonbox() const {
  return *playericonbox_;
}
inline void MsgSendChatInfo::set_playericonbox(const ::std::string& value) {
  set_has_playericonbox();
  if (playericonbox_ == &::google::protobuf::internal::kEmptyString) {
    playericonbox_ = new ::std::string;
  }
  playericonbox_->assign(value);
}
inline void MsgSendChatInfo::set_playericonbox(const char* value) {
  set_has_playericonbox();
  if (playericonbox_ == &::google::protobuf::internal::kEmptyString) {
    playericonbox_ = new ::std::string;
  }
  playericonbox_->assign(value);
}
inline void MsgSendChatInfo::set_playericonbox(const char* value, size_t size) {
  set_has_playericonbox();
  if (playericonbox_ == &::google::protobuf::internal::kEmptyString) {
    playericonbox_ = new ::std::string;
  }
  playericonbox_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendChatInfo::mutable_playericonbox() {
  set_has_playericonbox();
  if (playericonbox_ == &::google::protobuf::internal::kEmptyString) {
    playericonbox_ = new ::std::string;
  }
  return playericonbox_;
}
inline ::std::string* MsgSendChatInfo::release_playericonbox() {
  clear_has_playericonbox();
  if (playericonbox_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playericonbox_;
    playericonbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendChatInfo::set_allocated_playericonbox(::std::string* playericonbox) {
  if (playericonbox_ != &::google::protobuf::internal::kEmptyString) {
    delete playericonbox_;
  }
  if (playericonbox) {
    set_has_playericonbox();
    playericonbox_ = playericonbox;
  } else {
    clear_has_playericonbox();
    playericonbox_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 playerserverid = 9;
inline bool MsgSendChatInfo::has_playerserverid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MsgSendChatInfo::set_has_playerserverid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MsgSendChatInfo::clear_has_playerserverid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MsgSendChatInfo::clear_playerserverid() {
  playerserverid_ = 0u;
  clear_has_playerserverid();
}
inline ::google::protobuf::uint32 MsgSendChatInfo::playerserverid() const {
  return playerserverid_;
}
inline void MsgSendChatInfo::set_playerserverid(::google::protobuf::uint32 value) {
  set_has_playerserverid();
  playerserverid_ = value;
}

// -------------------------------------------------------------------

// MsgLeaveChatReq

// -------------------------------------------------------------------

// MsgSendOneByOneChatReq

// required string chatinfo = 1;
inline bool MsgSendOneByOneChatReq::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSendOneByOneChatReq::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSendOneByOneChatReq::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSendOneByOneChatReq::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& MsgSendOneByOneChatReq::chatinfo() const {
  return *chatinfo_;
}
inline void MsgSendOneByOneChatReq::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendOneByOneChatReq::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendOneByOneChatReq::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendOneByOneChatReq::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* MsgSendOneByOneChatReq::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendOneByOneChatReq::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 isvoice = 2;
inline bool MsgSendOneByOneChatReq::has_isvoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSendOneByOneChatReq::set_has_isvoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSendOneByOneChatReq::clear_has_isvoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSendOneByOneChatReq::clear_isvoice() {
  isvoice_ = 0u;
  clear_has_isvoice();
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatReq::isvoice() const {
  return isvoice_;
}
inline void MsgSendOneByOneChatReq::set_isvoice(::google::protobuf::uint32 value) {
  set_has_isvoice();
  isvoice_ = value;
}

// required uint32 playerid = 3;
inline bool MsgSendOneByOneChatReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSendOneByOneChatReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSendOneByOneChatReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSendOneByOneChatReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatReq::playerid() const {
  return playerid_;
}
inline void MsgSendOneByOneChatReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string chattype = 4;
inline bool MsgSendOneByOneChatReq::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSendOneByOneChatReq::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSendOneByOneChatReq::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSendOneByOneChatReq::clear_chattype() {
  if (chattype_ != &::google::protobuf::internal::kEmptyString) {
    chattype_->clear();
  }
  clear_has_chattype();
}
inline const ::std::string& MsgSendOneByOneChatReq::chattype() const {
  return *chattype_;
}
inline void MsgSendOneByOneChatReq::set_chattype(const ::std::string& value) {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  chattype_->assign(value);
}
inline void MsgSendOneByOneChatReq::set_chattype(const char* value) {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  chattype_->assign(value);
}
inline void MsgSendOneByOneChatReq::set_chattype(const char* value, size_t size) {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  chattype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendOneByOneChatReq::mutable_chattype() {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  return chattype_;
}
inline ::std::string* MsgSendOneByOneChatReq::release_chattype() {
  clear_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chattype_;
    chattype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendOneByOneChatReq::set_allocated_chattype(::std::string* chattype) {
  if (chattype_ != &::google::protobuf::internal::kEmptyString) {
    delete chattype_;
  }
  if (chattype) {
    set_has_chattype();
    chattype_ = chattype;
  } else {
    clear_has_chattype();
    chattype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string selfinfo = 5;
inline bool MsgSendOneByOneChatReq::has_selfinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgSendOneByOneChatReq::set_has_selfinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgSendOneByOneChatReq::clear_has_selfinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgSendOneByOneChatReq::clear_selfinfo() {
  if (selfinfo_ != &::google::protobuf::internal::kEmptyString) {
    selfinfo_->clear();
  }
  clear_has_selfinfo();
}
inline const ::std::string& MsgSendOneByOneChatReq::selfinfo() const {
  return *selfinfo_;
}
inline void MsgSendOneByOneChatReq::set_selfinfo(const ::std::string& value) {
  set_has_selfinfo();
  if (selfinfo_ == &::google::protobuf::internal::kEmptyString) {
    selfinfo_ = new ::std::string;
  }
  selfinfo_->assign(value);
}
inline void MsgSendOneByOneChatReq::set_selfinfo(const char* value) {
  set_has_selfinfo();
  if (selfinfo_ == &::google::protobuf::internal::kEmptyString) {
    selfinfo_ = new ::std::string;
  }
  selfinfo_->assign(value);
}
inline void MsgSendOneByOneChatReq::set_selfinfo(const char* value, size_t size) {
  set_has_selfinfo();
  if (selfinfo_ == &::google::protobuf::internal::kEmptyString) {
    selfinfo_ = new ::std::string;
  }
  selfinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendOneByOneChatReq::mutable_selfinfo() {
  set_has_selfinfo();
  if (selfinfo_ == &::google::protobuf::internal::kEmptyString) {
    selfinfo_ = new ::std::string;
  }
  return selfinfo_;
}
inline ::std::string* MsgSendOneByOneChatReq::release_selfinfo() {
  clear_has_selfinfo();
  if (selfinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = selfinfo_;
    selfinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendOneByOneChatReq::set_allocated_selfinfo(::std::string* selfinfo) {
  if (selfinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete selfinfo_;
  }
  if (selfinfo) {
    set_has_selfinfo();
    selfinfo_ = selfinfo;
  } else {
    clear_has_selfinfo();
    selfinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 serverid = 6;
inline bool MsgSendOneByOneChatReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgSendOneByOneChatReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgSendOneByOneChatReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgSendOneByOneChatReq::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatReq::serverid() const {
  return serverid_;
}
inline void MsgSendOneByOneChatReq::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
}

// -------------------------------------------------------------------

// MsgSendOneByOneChatInfo

// required string chatinfo = 1;
inline bool MsgSendOneByOneChatInfo::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSendOneByOneChatInfo::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSendOneByOneChatInfo::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSendOneByOneChatInfo::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& MsgSendOneByOneChatInfo::chatinfo() const {
  return *chatinfo_;
}
inline void MsgSendOneByOneChatInfo::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendOneByOneChatInfo::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendOneByOneChatInfo::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendOneByOneChatInfo::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* MsgSendOneByOneChatInfo::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendOneByOneChatInfo::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 isvoice = 2;
inline bool MsgSendOneByOneChatInfo::has_isvoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSendOneByOneChatInfo::set_has_isvoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSendOneByOneChatInfo::clear_has_isvoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSendOneByOneChatInfo::clear_isvoice() {
  isvoice_ = 0u;
  clear_has_isvoice();
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatInfo::isvoice() const {
  return isvoice_;
}
inline void MsgSendOneByOneChatInfo::set_isvoice(::google::protobuf::uint32 value) {
  set_has_isvoice();
  isvoice_ = value;
}

// required uint32 playerid = 3;
inline bool MsgSendOneByOneChatInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSendOneByOneChatInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSendOneByOneChatInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSendOneByOneChatInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatInfo::playerid() const {
  return playerid_;
}
inline void MsgSendOneByOneChatInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string chattype = 4;
inline bool MsgSendOneByOneChatInfo::has_chattype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgSendOneByOneChatInfo::set_has_chattype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgSendOneByOneChatInfo::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgSendOneByOneChatInfo::clear_chattype() {
  if (chattype_ != &::google::protobuf::internal::kEmptyString) {
    chattype_->clear();
  }
  clear_has_chattype();
}
inline const ::std::string& MsgSendOneByOneChatInfo::chattype() const {
  return *chattype_;
}
inline void MsgSendOneByOneChatInfo::set_chattype(const ::std::string& value) {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  chattype_->assign(value);
}
inline void MsgSendOneByOneChatInfo::set_chattype(const char* value) {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  chattype_->assign(value);
}
inline void MsgSendOneByOneChatInfo::set_chattype(const char* value, size_t size) {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  chattype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendOneByOneChatInfo::mutable_chattype() {
  set_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    chattype_ = new ::std::string;
  }
  return chattype_;
}
inline ::std::string* MsgSendOneByOneChatInfo::release_chattype() {
  clear_has_chattype();
  if (chattype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chattype_;
    chattype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendOneByOneChatInfo::set_allocated_chattype(::std::string* chattype) {
  if (chattype_ != &::google::protobuf::internal::kEmptyString) {
    delete chattype_;
  }
  if (chattype) {
    set_has_chattype();
    chattype_ = chattype;
  } else {
    clear_has_chattype();
    chattype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string playerinfo = 5;
inline bool MsgSendOneByOneChatInfo::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgSendOneByOneChatInfo::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgSendOneByOneChatInfo::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgSendOneByOneChatInfo::clear_playerinfo() {
  if (playerinfo_ != &::google::protobuf::internal::kEmptyString) {
    playerinfo_->clear();
  }
  clear_has_playerinfo();
}
inline const ::std::string& MsgSendOneByOneChatInfo::playerinfo() const {
  return *playerinfo_;
}
inline void MsgSendOneByOneChatInfo::set_playerinfo(const ::std::string& value) {
  set_has_playerinfo();
  if (playerinfo_ == &::google::protobuf::internal::kEmptyString) {
    playerinfo_ = new ::std::string;
  }
  playerinfo_->assign(value);
}
inline void MsgSendOneByOneChatInfo::set_playerinfo(const char* value) {
  set_has_playerinfo();
  if (playerinfo_ == &::google::protobuf::internal::kEmptyString) {
    playerinfo_ = new ::std::string;
  }
  playerinfo_->assign(value);
}
inline void MsgSendOneByOneChatInfo::set_playerinfo(const char* value, size_t size) {
  set_has_playerinfo();
  if (playerinfo_ == &::google::protobuf::internal::kEmptyString) {
    playerinfo_ = new ::std::string;
  }
  playerinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendOneByOneChatInfo::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == &::google::protobuf::internal::kEmptyString) {
    playerinfo_ = new ::std::string;
  }
  return playerinfo_;
}
inline ::std::string* MsgSendOneByOneChatInfo::release_playerinfo() {
  clear_has_playerinfo();
  if (playerinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playerinfo_;
    playerinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendOneByOneChatInfo::set_allocated_playerinfo(::std::string* playerinfo) {
  if (playerinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete playerinfo_;
  }
  if (playerinfo) {
    set_has_playerinfo();
    playerinfo_ = playerinfo;
  } else {
    clear_has_playerinfo();
    playerinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 serverid = 6;
inline bool MsgSendOneByOneChatInfo::has_serverid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgSendOneByOneChatInfo::set_has_serverid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgSendOneByOneChatInfo::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgSendOneByOneChatInfo::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 MsgSendOneByOneChatInfo::serverid() const {
  return serverid_;
}
inline void MsgSendOneByOneChatInfo::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
}

// -------------------------------------------------------------------

// MsgDebugCommandReq

// required string command = 1;
inline bool MsgDebugCommandReq::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDebugCommandReq::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDebugCommandReq::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDebugCommandReq::clear_command() {
  if (command_ != &::google::protobuf::internal::kEmptyString) {
    command_->clear();
  }
  clear_has_command();
}
inline const ::std::string& MsgDebugCommandReq::command() const {
  return *command_;
}
inline void MsgDebugCommandReq::set_command(const ::std::string& value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(value);
}
inline void MsgDebugCommandReq::set_command(const char* value) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(value);
}
inline void MsgDebugCommandReq::set_command(const char* value, size_t size) {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  command_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgDebugCommandReq::mutable_command() {
  set_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    command_ = new ::std::string;
  }
  return command_;
}
inline ::std::string* MsgDebugCommandReq::release_command() {
  clear_has_command();
  if (command_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = command_;
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgDebugCommandReq::set_allocated_command(::std::string* command) {
  if (command_ != &::google::protobuf::internal::kEmptyString) {
    delete command_;
  }
  if (command) {
    set_has_command();
    command_ = command;
  } else {
    clear_has_command();
    command_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string params = 2;
inline int MsgDebugCommandReq::params_size() const {
  return params_.size();
}
inline void MsgDebugCommandReq::clear_params() {
  params_.Clear();
}
inline const ::std::string& MsgDebugCommandReq::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* MsgDebugCommandReq::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void MsgDebugCommandReq::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void MsgDebugCommandReq::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void MsgDebugCommandReq::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgDebugCommandReq::add_params() {
  return params_.Add();
}
inline void MsgDebugCommandReq::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void MsgDebugCommandReq::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void MsgDebugCommandReq::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgDebugCommandReq::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgDebugCommandReq::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// MsgShowRewardAgent

// required string reward = 1;
inline bool MsgShowRewardAgent::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgShowRewardAgent::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgShowRewardAgent::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgShowRewardAgent::clear_reward() {
  if (reward_ != &::google::protobuf::internal::kEmptyString) {
    reward_->clear();
  }
  clear_has_reward();
}
inline const ::std::string& MsgShowRewardAgent::reward() const {
  return *reward_;
}
inline void MsgShowRewardAgent::set_reward(const ::std::string& value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
}
inline void MsgShowRewardAgent::set_reward(const char* value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
}
inline void MsgShowRewardAgent::set_reward(const char* value, size_t size) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  reward_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgShowRewardAgent::mutable_reward() {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  return reward_;
}
inline ::std::string* MsgShowRewardAgent::release_reward() {
  clear_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reward_;
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgShowRewardAgent::set_allocated_reward(::std::string* reward) {
  if (reward_ != &::google::protobuf::internal::kEmptyString) {
    delete reward_;
  }
  if (reward) {
    set_has_reward();
    reward_ = reward;
  } else {
    clear_has_reward();
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgSendGroupChatReq

// required string chatinfo = 1;
inline bool MsgSendGroupChatReq::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSendGroupChatReq::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSendGroupChatReq::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSendGroupChatReq::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& MsgSendGroupChatReq::chatinfo() const {
  return *chatinfo_;
}
inline void MsgSendGroupChatReq::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendGroupChatReq::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendGroupChatReq::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendGroupChatReq::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* MsgSendGroupChatReq::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendGroupChatReq::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 isvoice = 2;
inline bool MsgSendGroupChatReq::has_isvoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSendGroupChatReq::set_has_isvoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSendGroupChatReq::clear_has_isvoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSendGroupChatReq::clear_isvoice() {
  isvoice_ = 0u;
  clear_has_isvoice();
}
inline ::google::protobuf::uint32 MsgSendGroupChatReq::isvoice() const {
  return isvoice_;
}
inline void MsgSendGroupChatReq::set_isvoice(::google::protobuf::uint32 value) {
  set_has_isvoice();
  isvoice_ = value;
}

// -------------------------------------------------------------------

// MsgSendGroupChatInfo

// required string chatinfo = 1;
inline bool MsgSendGroupChatInfo::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSendGroupChatInfo::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSendGroupChatInfo::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSendGroupChatInfo::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& MsgSendGroupChatInfo::chatinfo() const {
  return *chatinfo_;
}
inline void MsgSendGroupChatInfo::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendGroupChatInfo::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void MsgSendGroupChatInfo::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSendGroupChatInfo::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* MsgSendGroupChatInfo::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgSendGroupChatInfo::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 isvoice = 2;
inline bool MsgSendGroupChatInfo::has_isvoice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSendGroupChatInfo::set_has_isvoice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSendGroupChatInfo::clear_has_isvoice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSendGroupChatInfo::clear_isvoice() {
  isvoice_ = 0u;
  clear_has_isvoice();
}
inline ::google::protobuf::uint32 MsgSendGroupChatInfo::isvoice() const {
  return isvoice_;
}
inline void MsgSendGroupChatInfo::set_isvoice(::google::protobuf::uint32 value) {
  set_has_isvoice();
  isvoice_ = value;
}

// required uint32 playerid = 3;
inline bool MsgSendGroupChatInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSendGroupChatInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSendGroupChatInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSendGroupChatInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgSendGroupChatInfo::playerid() const {
  return playerid_;
}
inline void MsgSendGroupChatInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// MsgBuyStoreReq

// required string buytype = 1;
inline bool MsgBuyStoreReq::has_buytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgBuyStoreReq::set_has_buytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgBuyStoreReq::clear_has_buytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgBuyStoreReq::clear_buytype() {
  if (buytype_ != &::google::protobuf::internal::kEmptyString) {
    buytype_->clear();
  }
  clear_has_buytype();
}
inline const ::std::string& MsgBuyStoreReq::buytype() const {
  return *buytype_;
}
inline void MsgBuyStoreReq::set_buytype(const ::std::string& value) {
  set_has_buytype();
  if (buytype_ == &::google::protobuf::internal::kEmptyString) {
    buytype_ = new ::std::string;
  }
  buytype_->assign(value);
}
inline void MsgBuyStoreReq::set_buytype(const char* value) {
  set_has_buytype();
  if (buytype_ == &::google::protobuf::internal::kEmptyString) {
    buytype_ = new ::std::string;
  }
  buytype_->assign(value);
}
inline void MsgBuyStoreReq::set_buytype(const char* value, size_t size) {
  set_has_buytype();
  if (buytype_ == &::google::protobuf::internal::kEmptyString) {
    buytype_ = new ::std::string;
  }
  buytype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgBuyStoreReq::mutable_buytype() {
  set_has_buytype();
  if (buytype_ == &::google::protobuf::internal::kEmptyString) {
    buytype_ = new ::std::string;
  }
  return buytype_;
}
inline ::std::string* MsgBuyStoreReq::release_buytype() {
  clear_has_buytype();
  if (buytype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buytype_;
    buytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgBuyStoreReq::set_allocated_buytype(::std::string* buytype) {
  if (buytype_ != &::google::protobuf::internal::kEmptyString) {
    delete buytype_;
  }
  if (buytype) {
    set_has_buytype();
    buytype_ = buytype;
  } else {
    clear_has_buytype();
    buytype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 shopid = 2;
inline bool MsgBuyStoreReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgBuyStoreReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgBuyStoreReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgBuyStoreReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 MsgBuyStoreReq::shopid() const {
  return shopid_;
}
inline void MsgBuyStoreReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// required uint32 num = 3;
inline bool MsgBuyStoreReq::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgBuyStoreReq::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgBuyStoreReq::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgBuyStoreReq::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 MsgBuyStoreReq::num() const {
  return num_;
}
inline void MsgBuyStoreReq::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// MsgGiveStoreReq

// required uint32 toplayerid = 1;
inline bool MsgGiveStoreReq::has_toplayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgGiveStoreReq::set_has_toplayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgGiveStoreReq::clear_has_toplayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgGiveStoreReq::clear_toplayerid() {
  toplayerid_ = 0u;
  clear_has_toplayerid();
}
inline ::google::protobuf::uint32 MsgGiveStoreReq::toplayerid() const {
  return toplayerid_;
}
inline void MsgGiveStoreReq::set_toplayerid(::google::protobuf::uint32 value) {
  set_has_toplayerid();
  toplayerid_ = value;
}

// required uint32 shopid = 2;
inline bool MsgGiveStoreReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgGiveStoreReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgGiveStoreReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgGiveStoreReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 MsgGiveStoreReq::shopid() const {
  return shopid_;
}
inline void MsgGiveStoreReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerToastReq

// required uint32 playerid = 1;
inline bool MsgPlayerToastReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPlayerToastReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPlayerToastReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPlayerToastReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgPlayerToastReq::playerid() const {
  return playerid_;
}
inline void MsgPlayerToastReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryToastCountReq

// required uint32 playerid = 1;
inline bool MsgQueryToastCountReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryToastCountReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryToastCountReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryToastCountReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgQueryToastCountReq::playerid() const {
  return playerid_;
}
inline void MsgQueryToastCountReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryToastCountAck

// required uint32 playerid = 1;
inline bool MsgQueryToastCountAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryToastCountAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryToastCountAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryToastCountAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgQueryToastCountAck::playerid() const {
  return playerid_;
}
inline void MsgQueryToastCountAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required uint32 toastcount = 2;
inline bool MsgQueryToastCountAck::has_toastcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgQueryToastCountAck::set_has_toastcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgQueryToastCountAck::clear_has_toastcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgQueryToastCountAck::clear_toastcount() {
  toastcount_ = 0u;
  clear_has_toastcount();
}
inline ::google::protobuf::uint32 MsgQueryToastCountAck::toastcount() const {
  return toastcount_;
}
inline void MsgQueryToastCountAck::set_toastcount(::google::protobuf::uint32 value) {
  set_has_toastcount();
  toastcount_ = value;
}

// -------------------------------------------------------------------

// MsgRemoveDataReq

// required string dataname = 1;
inline bool MsgRemoveDataReq::has_dataname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgRemoveDataReq::set_has_dataname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgRemoveDataReq::clear_has_dataname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgRemoveDataReq::clear_dataname() {
  if (dataname_ != &::google::protobuf::internal::kEmptyString) {
    dataname_->clear();
  }
  clear_has_dataname();
}
inline const ::std::string& MsgRemoveDataReq::dataname() const {
  return *dataname_;
}
inline void MsgRemoveDataReq::set_dataname(const ::std::string& value) {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  dataname_->assign(value);
}
inline void MsgRemoveDataReq::set_dataname(const char* value) {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  dataname_->assign(value);
}
inline void MsgRemoveDataReq::set_dataname(const char* value, size_t size) {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  dataname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgRemoveDataReq::mutable_dataname() {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  return dataname_;
}
inline ::std::string* MsgRemoveDataReq::release_dataname() {
  clear_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dataname_;
    dataname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgRemoveDataReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname_ != &::google::protobuf::internal::kEmptyString) {
    delete dataname_;
  }
  if (dataname) {
    set_has_dataname();
    dataname_ = dataname;
  } else {
    clear_has_dataname();
    dataname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint64 key = 2;
inline bool MsgRemoveDataReq::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgRemoveDataReq::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgRemoveDataReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgRemoveDataReq::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 MsgRemoveDataReq::key() const {
  return key_;
}
inline void MsgRemoveDataReq::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
}

// required uint32 count = 3;
inline bool MsgRemoveDataReq::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgRemoveDataReq::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgRemoveDataReq::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgRemoveDataReq::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 MsgRemoveDataReq::count() const {
  return count_;
}
inline void MsgRemoveDataReq::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// MsgChangeModelReq

// required uint32 modelid = 1;
inline bool MsgChangeModelReq::has_modelid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgChangeModelReq::set_has_modelid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgChangeModelReq::clear_has_modelid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgChangeModelReq::clear_modelid() {
  modelid_ = 0u;
  clear_has_modelid();
}
inline ::google::protobuf::uint32 MsgChangeModelReq::modelid() const {
  return modelid_;
}
inline void MsgChangeModelReq::set_modelid(::google::protobuf::uint32 value) {
  set_has_modelid();
  modelid_ = value;
}

// -------------------------------------------------------------------

// MsgSetModelDefaultClothesReq

// required uint32 modelid = 1;
inline bool MsgSetModelDefaultClothesReq::has_modelid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSetModelDefaultClothesReq::set_has_modelid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSetModelDefaultClothesReq::clear_has_modelid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSetModelDefaultClothesReq::clear_modelid() {
  modelid_ = 0u;
  clear_has_modelid();
}
inline ::google::protobuf::uint32 MsgSetModelDefaultClothesReq::modelid() const {
  return modelid_;
}
inline void MsgSetModelDefaultClothesReq::set_modelid(::google::protobuf::uint32 value) {
  set_has_modelid();
  modelid_ = value;
}

// required uint32 clothesid = 2;
inline bool MsgSetModelDefaultClothesReq::has_clothesid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSetModelDefaultClothesReq::set_has_clothesid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSetModelDefaultClothesReq::clear_has_clothesid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSetModelDefaultClothesReq::clear_clothesid() {
  clothesid_ = 0u;
  clear_has_clothesid();
}
inline ::google::protobuf::uint32 MsgSetModelDefaultClothesReq::clothesid() const {
  return clothesid_;
}
inline void MsgSetModelDefaultClothesReq::set_clothesid(::google::protobuf::uint32 value) {
  set_has_clothesid();
  clothesid_ = value;
}

// -------------------------------------------------------------------

// MsgDressClothesReq

// required uint32 clothesid = 1;
inline bool MsgDressClothesReq::has_clothesid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgDressClothesReq::set_has_clothesid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgDressClothesReq::clear_has_clothesid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgDressClothesReq::clear_clothesid() {
  clothesid_ = 0u;
  clear_has_clothesid();
}
inline ::google::protobuf::uint32 MsgDressClothesReq::clothesid() const {
  return clothesid_;
}
inline void MsgDressClothesReq::set_clothesid(::google::protobuf::uint32 value) {
  set_has_clothesid();
  clothesid_ = value;
}

// -------------------------------------------------------------------

// MsgInviteMatchGroupReq

// required uint32 serverid = 1;
inline bool MsgInviteMatchGroupReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgInviteMatchGroupReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgInviteMatchGroupReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgInviteMatchGroupReq::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 MsgInviteMatchGroupReq::serverid() const {
  return serverid_;
}
inline void MsgInviteMatchGroupReq::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required uint32 playerid = 2;
inline bool MsgInviteMatchGroupReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgInviteMatchGroupReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgInviteMatchGroupReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgInviteMatchGroupReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgInviteMatchGroupReq::playerid() const {
  return playerid_;
}
inline void MsgInviteMatchGroupReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string source = 3;
inline bool MsgInviteMatchGroupReq::has_source() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgInviteMatchGroupReq::set_has_source() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgInviteMatchGroupReq::clear_has_source() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgInviteMatchGroupReq::clear_source() {
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    source_->clear();
  }
  clear_has_source();
}
inline const ::std::string& MsgInviteMatchGroupReq::source() const {
  return *source_;
}
inline void MsgInviteMatchGroupReq::set_source(const ::std::string& value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(value);
}
inline void MsgInviteMatchGroupReq::set_source(const char* value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(value);
}
inline void MsgInviteMatchGroupReq::set_source(const char* value, size_t size) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgInviteMatchGroupReq::mutable_source() {
  set_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    source_ = new ::std::string;
  }
  return source_;
}
inline ::std::string* MsgInviteMatchGroupReq::release_source() {
  clear_has_source();
  if (source_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgInviteMatchGroupReq::set_allocated_source(::std::string* source) {
  if (source_ != &::google::protobuf::internal::kEmptyString) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 matchid = 4;
inline bool MsgInviteMatchGroupReq::has_matchid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgInviteMatchGroupReq::set_has_matchid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgInviteMatchGroupReq::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgInviteMatchGroupReq::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 MsgInviteMatchGroupReq::matchid() const {
  return matchid_;
}
inline void MsgInviteMatchGroupReq::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
}

// required string playername = 5;
inline bool MsgInviteMatchGroupReq::has_playername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgInviteMatchGroupReq::set_has_playername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgInviteMatchGroupReq::clear_has_playername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgInviteMatchGroupReq::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& MsgInviteMatchGroupReq::playername() const {
  return *playername_;
}
inline void MsgInviteMatchGroupReq::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void MsgInviteMatchGroupReq::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void MsgInviteMatchGroupReq::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgInviteMatchGroupReq::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* MsgInviteMatchGroupReq::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgInviteMatchGroupReq::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MsgReplyInviteMatchGroupReq

// required uint64 groupid = 1;
inline bool MsgReplyInviteMatchGroupReq::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReplyInviteMatchGroupReq::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReplyInviteMatchGroupReq::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReplyInviteMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
  clear_has_groupid();
}
inline ::google::protobuf::uint64 MsgReplyInviteMatchGroupReq::groupid() const {
  return groupid_;
}
inline void MsgReplyInviteMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  set_has_groupid();
  groupid_ = value;
}

// required uint32 inviterid = 2;
inline bool MsgReplyInviteMatchGroupReq::has_inviterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReplyInviteMatchGroupReq::set_has_inviterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReplyInviteMatchGroupReq::clear_has_inviterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReplyInviteMatchGroupReq::clear_inviterid() {
  inviterid_ = 0u;
  clear_has_inviterid();
}
inline ::google::protobuf::uint32 MsgReplyInviteMatchGroupReq::inviterid() const {
  return inviterid_;
}
inline void MsgReplyInviteMatchGroupReq::set_inviterid(::google::protobuf::uint32 value) {
  set_has_inviterid();
  inviterid_ = value;
}

// required uint32 operate = 3;
inline bool MsgReplyInviteMatchGroupReq::has_operate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgReplyInviteMatchGroupReq::set_has_operate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgReplyInviteMatchGroupReq::clear_has_operate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgReplyInviteMatchGroupReq::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 MsgReplyInviteMatchGroupReq::operate() const {
  return operate_;
}
inline void MsgReplyInviteMatchGroupReq::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
}

// -------------------------------------------------------------------

// MsgLeaveMatchGroupReq

// -------------------------------------------------------------------

// MsgKickMatchGroupReq

// required uint32 memberid = 1;
inline bool MsgKickMatchGroupReq::has_memberid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgKickMatchGroupReq::set_has_memberid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgKickMatchGroupReq::clear_has_memberid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgKickMatchGroupReq::clear_memberid() {
  memberid_ = 0u;
  clear_has_memberid();
}
inline ::google::protobuf::uint32 MsgKickMatchGroupReq::memberid() const {
  return memberid_;
}
inline void MsgKickMatchGroupReq::set_memberid(::google::protobuf::uint32 value) {
  set_has_memberid();
  memberid_ = value;
}

// -------------------------------------------------------------------

// MsgApplyMatchGroupReq

// required uint64 groupid = 1;
inline bool MsgApplyMatchGroupReq::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgApplyMatchGroupReq::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgApplyMatchGroupReq::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgApplyMatchGroupReq::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
  clear_has_groupid();
}
inline ::google::protobuf::uint64 MsgApplyMatchGroupReq::groupid() const {
  return groupid_;
}
inline void MsgApplyMatchGroupReq::set_groupid(::google::protobuf::uint64 value) {
  set_has_groupid();
  groupid_ = value;
}

// -------------------------------------------------------------------

// MsgReplyApplyMatchGroupReq

// required uint32 applyid = 1;
inline bool MsgReplyApplyMatchGroupReq::has_applyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgReplyApplyMatchGroupReq::set_has_applyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgReplyApplyMatchGroupReq::clear_has_applyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgReplyApplyMatchGroupReq::clear_applyid() {
  applyid_ = 0u;
  clear_has_applyid();
}
inline ::google::protobuf::uint32 MsgReplyApplyMatchGroupReq::applyid() const {
  return applyid_;
}
inline void MsgReplyApplyMatchGroupReq::set_applyid(::google::protobuf::uint32 value) {
  set_has_applyid();
  applyid_ = value;
}

// required uint32 operate = 3;
inline bool MsgReplyApplyMatchGroupReq::has_operate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgReplyApplyMatchGroupReq::set_has_operate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgReplyApplyMatchGroupReq::clear_has_operate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgReplyApplyMatchGroupReq::clear_operate() {
  operate_ = 0u;
  clear_has_operate();
}
inline ::google::protobuf::uint32 MsgReplyApplyMatchGroupReq::operate() const {
  return operate_;
}
inline void MsgReplyApplyMatchGroupReq::set_operate(::google::protobuf::uint32 value) {
  set_has_operate();
  operate_ = value;
}

// -------------------------------------------------------------------

// MsgMatchGroupPrepareReq

// required uint32 prepare = 1;
inline bool MsgMatchGroupPrepareReq::has_prepare() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMatchGroupPrepareReq::set_has_prepare() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMatchGroupPrepareReq::clear_has_prepare() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMatchGroupPrepareReq::clear_prepare() {
  prepare_ = 0u;
  clear_has_prepare();
}
inline ::google::protobuf::uint32 MsgMatchGroupPrepareReq::prepare() const {
  return prepare_;
}
inline void MsgMatchGroupPrepareReq::set_prepare(::google::protobuf::uint32 value) {
  set_has_prepare();
  prepare_ = value;
}

// -------------------------------------------------------------------

// MsgUpdateGroupMatchReq

// required uint32 matchid = 1;
inline bool MsgUpdateGroupMatchReq::has_matchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgUpdateGroupMatchReq::set_has_matchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgUpdateGroupMatchReq::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgUpdateGroupMatchReq::clear_matchid() {
  matchid_ = 0u;
  clear_has_matchid();
}
inline ::google::protobuf::uint32 MsgUpdateGroupMatchReq::matchid() const {
  return matchid_;
}
inline void MsgUpdateGroupMatchReq::set_matchid(::google::protobuf::uint32 value) {
  set_has_matchid();
  matchid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryGuestReq

// required uint32 playerid = 1;
inline bool MsgQueryGuestReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryGuestReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryGuestReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryGuestReq::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgQueryGuestReq::playerid() const {
  return playerid_;
}
inline void MsgQueryGuestReq::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryGuestAck

// required uint32 playerid = 1;
inline bool MsgQueryGuestAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryGuestAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryGuestAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryGuestAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 MsgQueryGuestAck::playerid() const {
  return playerid_;
}
inline void MsgQueryGuestAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required uint32 guestcount = 2;
inline bool MsgQueryGuestAck::has_guestcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgQueryGuestAck::set_has_guestcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgQueryGuestAck::clear_has_guestcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgQueryGuestAck::clear_guestcount() {
  guestcount_ = 0u;
  clear_has_guestcount();
}
inline ::google::protobuf::uint32 MsgQueryGuestAck::guestcount() const {
  return guestcount_;
}
inline void MsgQueryGuestAck::set_guestcount(::google::protobuf::uint32 value) {
  set_has_guestcount();
  guestcount_ = value;
}

// repeated .KFMsg.PBGuestData guestdata = 3;
inline int MsgQueryGuestAck::guestdata_size() const {
  return guestdata_.size();
}
inline void MsgQueryGuestAck::clear_guestdata() {
  guestdata_.Clear();
}
inline const ::KFMsg::PBGuestData& MsgQueryGuestAck::guestdata(int index) const {
  return guestdata_.Get(index);
}
inline ::KFMsg::PBGuestData* MsgQueryGuestAck::mutable_guestdata(int index) {
  return guestdata_.Mutable(index);
}
inline ::KFMsg::PBGuestData* MsgQueryGuestAck::add_guestdata() {
  return guestdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >&
MsgQueryGuestAck::guestdata() const {
  return guestdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBGuestData >*
MsgQueryGuestAck::mutable_guestdata() {
  return &guestdata_;
}

// -------------------------------------------------------------------

// MsgUseItemReq

// required uint64 itemguid = 1;
inline bool MsgUseItemReq::has_itemguid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgUseItemReq::set_has_itemguid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgUseItemReq::clear_has_itemguid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgUseItemReq::clear_itemguid() {
  itemguid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemguid();
}
inline ::google::protobuf::uint64 MsgUseItemReq::itemguid() const {
  return itemguid_;
}
inline void MsgUseItemReq::set_itemguid(::google::protobuf::uint64 value) {
  set_has_itemguid();
  itemguid_ = value;
}

// -------------------------------------------------------------------

// PBStore

// repeated .KFMsg.PBString data = 1;
inline int PBStore::data_size() const {
  return data_.size();
}
inline void PBStore::clear_data() {
  data_.Clear();
}
inline const ::KFMsg::PBString& PBStore::data(int index) const {
  return data_.Get(index);
}
inline ::KFMsg::PBString* PBStore::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::KFMsg::PBString* PBStore::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
PBStore::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
PBStore::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// PBStores

// repeated .KFMsg.PBStore store = 1;
inline int PBStores::store_size() const {
  return store_.size();
}
inline void PBStores::clear_store() {
  store_.Clear();
}
inline const ::KFMsg::PBStore& PBStores::store(int index) const {
  return store_.Get(index);
}
inline ::KFMsg::PBStore* PBStores::mutable_store(int index) {
  return store_.Mutable(index);
}
inline ::KFMsg::PBStore* PBStores::add_store() {
  return store_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBStore >&
PBStores::store() const {
  return store_;
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBStore >*
PBStores::mutable_store() {
  return &store_;
}

// -------------------------------------------------------------------

// MsgQueryStoreInfoReq

// required uint32 version = 1;
inline bool MsgQueryStoreInfoReq::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryStoreInfoReq::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryStoreInfoReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryStoreInfoReq::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 MsgQueryStoreInfoReq::version() const {
  return version_;
}
inline void MsgQueryStoreInfoReq::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// MsgQueryStoreInfoAck

// required uint32 version = 1;
inline bool MsgQueryStoreInfoAck::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryStoreInfoAck::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryStoreInfoAck::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryStoreInfoAck::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 MsgQueryStoreInfoAck::version() const {
  return version_;
}
inline void MsgQueryStoreInfoAck::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// optional .KFMsg.PBStores stores = 2;
inline bool MsgQueryStoreInfoAck::has_stores() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgQueryStoreInfoAck::set_has_stores() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgQueryStoreInfoAck::clear_has_stores() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgQueryStoreInfoAck::clear_stores() {
  if (stores_ != NULL) stores_->::KFMsg::PBStores::Clear();
  clear_has_stores();
}
inline const ::KFMsg::PBStores& MsgQueryStoreInfoAck::stores() const {
  return stores_ != NULL ? *stores_ : *default_instance_->stores_;
}
inline ::KFMsg::PBStores* MsgQueryStoreInfoAck::mutable_stores() {
  set_has_stores();
  if (stores_ == NULL) stores_ = new ::KFMsg::PBStores;
  return stores_;
}
inline ::KFMsg::PBStores* MsgQueryStoreInfoAck::release_stores() {
  clear_has_stores();
  ::KFMsg::PBStores* temp = stores_;
  stores_ = NULL;
  return temp;
}
inline void MsgQueryStoreInfoAck::set_allocated_stores(::KFMsg::PBStores* stores) {
  delete stores_;
  stores_ = stores;
  if (stores) {
    set_has_stores();
  } else {
    clear_has_stores();
  }
}

// -------------------------------------------------------------------

// MsgBuyStoreAck

// required uint32 storeid = 1;
inline bool MsgBuyStoreAck::has_storeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgBuyStoreAck::set_has_storeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgBuyStoreAck::clear_has_storeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgBuyStoreAck::clear_storeid() {
  storeid_ = 0u;
  clear_has_storeid();
}
inline ::google::protobuf::uint32 MsgBuyStoreAck::storeid() const {
  return storeid_;
}
inline void MsgBuyStoreAck::set_storeid(::google::protobuf::uint32 value) {
  set_has_storeid();
  storeid_ = value;
}

// required uint32 code = 2;
inline bool MsgBuyStoreAck::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgBuyStoreAck::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgBuyStoreAck::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgBuyStoreAck::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 MsgBuyStoreAck::code() const {
  return code_;
}
inline void MsgBuyStoreAck::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// MsgSetWishOrderReq

// required uint32 type = 1;
inline bool MsgSetWishOrderReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSetWishOrderReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSetWishOrderReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSetWishOrderReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MsgSetWishOrderReq::type() const {
  return type_;
}
inline void MsgSetWishOrderReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 storeid = 2;
inline bool MsgSetWishOrderReq::has_storeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgSetWishOrderReq::set_has_storeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgSetWishOrderReq::clear_has_storeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgSetWishOrderReq::clear_storeid() {
  storeid_ = 0u;
  clear_has_storeid();
}
inline ::google::protobuf::uint32 MsgSetWishOrderReq::storeid() const {
  return storeid_;
}
inline void MsgSetWishOrderReq::set_storeid(::google::protobuf::uint32 value) {
  set_has_storeid();
  storeid_ = value;
}

// optional uint32 status = 3;
inline bool MsgSetWishOrderReq::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgSetWishOrderReq::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgSetWishOrderReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgSetWishOrderReq::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MsgSetWishOrderReq::status() const {
  return status_;
}
inline void MsgSetWishOrderReq::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// MsgQuerySettingReq

// -------------------------------------------------------------------

// MsgQuerySettingAck

// required .KFMsg.PBObject pbsetting = 1;
inline bool MsgQuerySettingAck::has_pbsetting() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQuerySettingAck::set_has_pbsetting() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQuerySettingAck::clear_has_pbsetting() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQuerySettingAck::clear_pbsetting() {
  if (pbsetting_ != NULL) pbsetting_->::KFMsg::PBObject::Clear();
  clear_has_pbsetting();
}
inline const ::KFMsg::PBObject& MsgQuerySettingAck::pbsetting() const {
  return pbsetting_ != NULL ? *pbsetting_ : *default_instance_->pbsetting_;
}
inline ::KFMsg::PBObject* MsgQuerySettingAck::mutable_pbsetting() {
  set_has_pbsetting();
  if (pbsetting_ == NULL) pbsetting_ = new ::KFMsg::PBObject;
  return pbsetting_;
}
inline ::KFMsg::PBObject* MsgQuerySettingAck::release_pbsetting() {
  clear_has_pbsetting();
  ::KFMsg::PBObject* temp = pbsetting_;
  pbsetting_ = NULL;
  return temp;
}
inline void MsgQuerySettingAck::set_allocated_pbsetting(::KFMsg::PBObject* pbsetting) {
  delete pbsetting_;
  pbsetting_ = pbsetting;
  if (pbsetting) {
    set_has_pbsetting();
  } else {
    clear_has_pbsetting();
  }
}

// -------------------------------------------------------------------

// MsgUpdateSettingReq

// repeated .KFMsg.PBString strsetting = 1;
inline int MsgUpdateSettingReq::strsetting_size() const {
  return strsetting_.size();
}
inline void MsgUpdateSettingReq::clear_strsetting() {
  strsetting_.Clear();
}
inline const ::KFMsg::PBString& MsgUpdateSettingReq::strsetting(int index) const {
  return strsetting_.Get(index);
}
inline ::KFMsg::PBString* MsgUpdateSettingReq::mutable_strsetting(int index) {
  return strsetting_.Mutable(index);
}
inline ::KFMsg::PBString* MsgUpdateSettingReq::add_strsetting() {
  return strsetting_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
MsgUpdateSettingReq::strsetting() const {
  return strsetting_;
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
MsgUpdateSettingReq::mutable_strsetting() {
  return &strsetting_;
}

// repeated .KFMsg.PBUInt32 intsetting = 2;
inline int MsgUpdateSettingReq::intsetting_size() const {
  return intsetting_.size();
}
inline void MsgUpdateSettingReq::clear_intsetting() {
  intsetting_.Clear();
}
inline const ::KFMsg::PBUInt32& MsgUpdateSettingReq::intsetting(int index) const {
  return intsetting_.Get(index);
}
inline ::KFMsg::PBUInt32* MsgUpdateSettingReq::mutable_intsetting(int index) {
  return intsetting_.Mutable(index);
}
inline ::KFMsg::PBUInt32* MsgUpdateSettingReq::add_intsetting() {
  return intsetting_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >&
MsgUpdateSettingReq::intsetting() const {
  return intsetting_;
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >*
MsgUpdateSettingReq::mutable_intsetting() {
  return &intsetting_;
}

// -------------------------------------------------------------------

// MsgQueryRecentListReq

// -------------------------------------------------------------------

// MsgQueryRecentListAck

// required .KFMsg.PBRecord recentlist = 1;
inline bool MsgQueryRecentListAck::has_recentlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryRecentListAck::set_has_recentlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryRecentListAck::clear_has_recentlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryRecentListAck::clear_recentlist() {
  if (recentlist_ != NULL) recentlist_->::KFMsg::PBRecord::Clear();
  clear_has_recentlist();
}
inline const ::KFMsg::PBRecord& MsgQueryRecentListAck::recentlist() const {
  return recentlist_ != NULL ? *recentlist_ : *default_instance_->recentlist_;
}
inline ::KFMsg::PBRecord* MsgQueryRecentListAck::mutable_recentlist() {
  set_has_recentlist();
  if (recentlist_ == NULL) recentlist_ = new ::KFMsg::PBRecord;
  return recentlist_;
}
inline ::KFMsg::PBRecord* MsgQueryRecentListAck::release_recentlist() {
  clear_has_recentlist();
  ::KFMsg::PBRecord* temp = recentlist_;
  recentlist_ = NULL;
  return temp;
}
inline void MsgQueryRecentListAck::set_allocated_recentlist(::KFMsg::PBRecord* recentlist) {
  delete recentlist_;
  recentlist_ = recentlist;
  if (recentlist) {
    set_has_recentlist();
  } else {
    clear_has_recentlist();
  }
}

// -------------------------------------------------------------------

// MsgCompoundDataReq

// required string dataname = 1;
inline bool MsgCompoundDataReq::has_dataname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCompoundDataReq::set_has_dataname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCompoundDataReq::clear_has_dataname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCompoundDataReq::clear_dataname() {
  if (dataname_ != &::google::protobuf::internal::kEmptyString) {
    dataname_->clear();
  }
  clear_has_dataname();
}
inline const ::std::string& MsgCompoundDataReq::dataname() const {
  return *dataname_;
}
inline void MsgCompoundDataReq::set_dataname(const ::std::string& value) {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  dataname_->assign(value);
}
inline void MsgCompoundDataReq::set_dataname(const char* value) {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  dataname_->assign(value);
}
inline void MsgCompoundDataReq::set_dataname(const char* value, size_t size) {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  dataname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCompoundDataReq::mutable_dataname() {
  set_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    dataname_ = new ::std::string;
  }
  return dataname_;
}
inline ::std::string* MsgCompoundDataReq::release_dataname() {
  clear_has_dataname();
  if (dataname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dataname_;
    dataname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgCompoundDataReq::set_allocated_dataname(::std::string* dataname) {
  if (dataname_ != &::google::protobuf::internal::kEmptyString) {
    delete dataname_;
  }
  if (dataname) {
    set_has_dataname();
    dataname_ = dataname;
  } else {
    clear_has_dataname();
    dataname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 key = 2;
inline bool MsgCompoundDataReq::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCompoundDataReq::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCompoundDataReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCompoundDataReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 MsgCompoundDataReq::key() const {
  return key_;
}
inline void MsgCompoundDataReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// MsgQueryRankListReq

// required uint32 rankid = 1;
inline bool MsgQueryRankListReq::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryRankListReq::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryRankListReq::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryRankListReq::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 MsgQueryRankListReq::rankid() const {
  return rankid_;
}
inline void MsgQueryRankListReq::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryRankListAck

// required uint32 rankid = 1;
inline bool MsgQueryRankListAck::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryRankListAck::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryRankListAck::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryRankListAck::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 MsgQueryRankListAck::rankid() const {
  return rankid_;
}
inline void MsgQueryRankListAck::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// required .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryRankListAck::has_rankdatas() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgQueryRankListAck::set_has_rankdatas() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgQueryRankListAck::clear_has_rankdatas() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgQueryRankListAck::clear_rankdatas() {
  if (rankdatas_ != NULL) rankdatas_->::KFMsg::PBRankDatas::Clear();
  clear_has_rankdatas();
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::rankdatas() const {
  return rankdatas_ != NULL ? *rankdatas_ : *default_instance_->rankdatas_;
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::mutable_rankdatas() {
  set_has_rankdatas();
  if (rankdatas_ == NULL) rankdatas_ = new ::KFMsg::PBRankDatas;
  return rankdatas_;
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::release_rankdatas() {
  clear_has_rankdatas();
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline void MsgQueryRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  delete rankdatas_;
  rankdatas_ = rankdatas;
  if (rankdatas) {
    set_has_rankdatas();
  } else {
    clear_has_rankdatas();
  }
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListReq

// required uint32 rankid = 1;
inline bool MsgQueryFriendRankListReq::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryFriendRankListReq::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryFriendRankListReq::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryFriendRankListReq::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListReq::rankid() const {
  return rankid_;
}
inline void MsgQueryFriendRankListReq::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListAck

// required uint32 rankid = 1;
inline bool MsgQueryFriendRankListAck::has_rankid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgQueryFriendRankListAck::set_has_rankid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgQueryFriendRankListAck::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgQueryFriendRankListAck::clear_rankid() {
  rankid_ = 0u;
  clear_has_rankid();
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListAck::rankid() const {
  return rankid_;
}
inline void MsgQueryFriendRankListAck::set_rankid(::google::protobuf::uint32 value) {
  set_has_rankid();
  rankid_ = value;
}

// required .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryFriendRankListAck::has_rankdatas() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgQueryFriendRankListAck::set_has_rankdatas() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgQueryFriendRankListAck::clear_has_rankdatas() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgQueryFriendRankListAck::clear_rankdatas() {
  if (rankdatas_ != NULL) rankdatas_->::KFMsg::PBRankDatas::Clear();
  clear_has_rankdatas();
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::rankdatas() const {
  return rankdatas_ != NULL ? *rankdatas_ : *default_instance_->rankdatas_;
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::mutable_rankdatas() {
  set_has_rankdatas();
  if (rankdatas_ == NULL) rankdatas_ = new ::KFMsg::PBRankDatas;
  return rankdatas_;
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::release_rankdatas() {
  clear_has_rankdatas();
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline void MsgQueryFriendRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  delete rankdatas_;
  rankdatas_ = rankdatas;
  if (rankdatas) {
    set_has_rankdatas();
  } else {
    clear_has_rankdatas();
  }
}

// -------------------------------------------------------------------

// MsgSevenSignInRewardReq

// required uint32 day = 1;
inline bool MsgSevenSignInRewardReq::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgSevenSignInRewardReq::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgSevenSignInRewardReq::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgSevenSignInRewardReq::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 MsgSevenSignInRewardReq::day() const {
  return day_;
}
inline void MsgSevenSignInRewardReq::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// -------------------------------------------------------------------

// MsgTellSevenExtendReward

// required string playername = 1;
inline bool MsgTellSevenExtendReward::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgTellSevenExtendReward::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgTellSevenExtendReward::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgTellSevenExtendReward::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& MsgTellSevenExtendReward::playername() const {
  return *playername_;
}
inline void MsgTellSevenExtendReward::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void MsgTellSevenExtendReward::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void MsgTellSevenExtendReward::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTellSevenExtendReward::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* MsgTellSevenExtendReward::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgTellSevenExtendReward::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reward = 2;
inline bool MsgTellSevenExtendReward::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgTellSevenExtendReward::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgTellSevenExtendReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgTellSevenExtendReward::clear_reward() {
  if (reward_ != &::google::protobuf::internal::kEmptyString) {
    reward_->clear();
  }
  clear_has_reward();
}
inline const ::std::string& MsgTellSevenExtendReward::reward() const {
  return *reward_;
}
inline void MsgTellSevenExtendReward::set_reward(const ::std::string& value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
}
inline void MsgTellSevenExtendReward::set_reward(const char* value) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  reward_->assign(value);
}
inline void MsgTellSevenExtendReward::set_reward(const char* value, size_t size) {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  reward_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgTellSevenExtendReward::mutable_reward() {
  set_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    reward_ = new ::std::string;
  }
  return reward_;
}
inline ::std::string* MsgTellSevenExtendReward::release_reward() {
  clear_has_reward();
  if (reward_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reward_;
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgTellSevenExtendReward::set_allocated_reward(::std::string* reward) {
  if (reward_ != &::google::protobuf::internal::kEmptyString) {
    delete reward_;
  }
  if (reward) {
    set_has_reward();
    reward_ = reward;
  } else {
    clear_has_reward();
    reward_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::ClientProtocol>() {
  return ::KFMsg::ClientProtocol_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KFClientMessage_2eproto__INCLUDED
