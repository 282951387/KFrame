// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFBattleMessage.proto

#include "KFBattleMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_KFDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBBattleCamp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBBattlePlayer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PBBattleScore;
}  // namespace protobuf_KFDefineMessage_2eproto
namespace KFMsg {
class S2SAllocBattleIdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAllocBattleIdReq>
      _instance;
} _S2SAllocBattleIdReq_default_instance_;
class S2SAllocBattleIdAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAllocBattleIdAck>
      _instance;
} _S2SAllocBattleIdAck_default_instance_;
class S2SRegisterBattleServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRegisterBattleServerReq>
      _instance;
} _S2SRegisterBattleServerReq_default_instance_;
class S2SRegisterBattleServerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRegisterBattleServerAck>
      _instance;
} _S2SRegisterBattleServerAck_default_instance_;
class S2SRegisterServerToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRegisterServerToBattleShardReq>
      _instance;
} _S2SRegisterServerToBattleShardReq_default_instance_;
class S2STellBattleRegisterToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellBattleRegisterToShardReq>
      _instance;
} _S2STellBattleRegisterToShardReq_default_instance_;
class S2SDisconnectServerToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDisconnectServerToBattleShardReq>
      _instance;
} _S2SDisconnectServerToBattleShardReq_default_instance_;
class S2SCreateRoomToBattleProxyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateRoomToBattleProxyReq>
      _instance;
} _S2SCreateRoomToBattleProxyReq_default_instance_;
class S2SCreateRoomToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateRoomToBattleShardReq>
      _instance;
} _S2SCreateRoomToBattleShardReq_default_instance_;
class S2SCreateRoomToMatchShardAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SCreateRoomToMatchShardAck>
      _instance;
} _S2SCreateRoomToMatchShardAck_default_instance_;
class S2SAddCampToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddCampToBattleShardReq>
      _instance;
} _S2SAddCampToBattleShardReq_default_instance_;
class S2SAddCampToMatchShardAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddCampToMatchShardAck>
      _instance;
} _S2SAddCampToMatchShardAck_default_instance_;
class S2SOpenBattleRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOpenBattleRoomReq>
      _instance;
} _S2SOpenBattleRoomReq_default_instance_;
class S2SOpenBattleRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOpenBattleRoomAck>
      _instance;
} _S2SOpenBattleRoomAck_default_instance_;
class S2SOpenBattleRoomToShardAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOpenBattleRoomToShardAck>
      _instance;
} _S2SOpenBattleRoomToShardAck_default_instance_;
class S2SOpenRoomToMatchShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOpenRoomToMatchShardReq>
      _instance;
} _S2SOpenRoomToMatchShardReq_default_instance_;
class S2SOpenRoomToBattleShardAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOpenRoomToBattleShardAck>
      _instance;
} _S2SOpenRoomToBattleShardAck_default_instance_;
class S2SPlayerEnterBattleRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterBattleRoomReq>
      _instance;
} _S2SPlayerEnterBattleRoomReq_default_instance_;
class S2SPlayerEnterBattleRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterBattleRoomAck>
      _instance;
} _S2SPlayerEnterBattleRoomAck_default_instance_;
class S2SPlayerEnterRoomToBattleShardAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterRoomToBattleShardAck>
      _instance;
} _S2SPlayerEnterRoomToBattleShardAck_default_instance_;
class S2SPlayerLoginBattleRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLoginBattleRoomReq>
      _instance;
} _S2SPlayerLoginBattleRoomReq_default_instance_;
class S2SPlayerLoginBattleRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLoginBattleRoomAck>
      _instance;
} _S2SPlayerLoginBattleRoomAck_default_instance_;
class S2SPlayerLoginRoomToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLoginRoomToBattleShardReq>
      _instance;
} _S2SPlayerLoginRoomToBattleShardReq_default_instance_;
class S2SPlayerCancelMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerCancelMatchReq>
      _instance;
} _S2SPlayerCancelMatchReq_default_instance_;
class S2SPlayerLeaveBattleRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveBattleRoomReq>
      _instance;
} _S2SPlayerLeaveBattleRoomReq_default_instance_;
class S2SPlayerLeaveBattleRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveBattleRoomAck>
      _instance;
} _S2SPlayerLeaveBattleRoomAck_default_instance_;
class S2SPlayerLeaveRoomToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveRoomToBattleShardReq>
      _instance;
} _S2SPlayerLeaveRoomToBattleShardReq_default_instance_;
class S2SPlayerLeaveRoomToMatchShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveRoomToMatchShardReq>
      _instance;
} _S2SPlayerLeaveRoomToMatchShardReq_default_instance_;
class S2SLeaveBattleRoomToClientAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLeaveBattleRoomToClientAck>
      _instance;
} _S2SLeaveBattleRoomToClientAck_default_instance_;
class S2STellBattleRoomStartReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellBattleRoomStartReq>
      _instance;
} _S2STellBattleRoomStartReq_default_instance_;
class S2STellRoomStartToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRoomStartToBattleShardReq>
      _instance;
} _S2STellRoomStartToBattleShardReq_default_instance_;
class S2STellBattleRoomStartAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellBattleRoomStartAck>
      _instance;
} _S2STellBattleRoomStartAck_default_instance_;
class S2STellRoomStartToMatchShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRoomStartToMatchShardReq>
      _instance;
} _S2STellRoomStartToMatchShardReq_default_instance_;
class S2STellRoomStartToMatchShardAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRoomStartToMatchShardAck>
      _instance;
} _S2STellRoomStartToMatchShardAck_default_instance_;
class S2STellBattleRoomFinishReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellBattleRoomFinishReq>
      _instance;
} _S2STellBattleRoomFinishReq_default_instance_;
class S2STellBattleRoomFinishAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellBattleRoomFinishAck>
      _instance;
} _S2STellBattleRoomFinishAck_default_instance_;
class S2SBattleRoomScoreBalanceReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBattleRoomScoreBalanceReq>
      _instance;
} _S2SBattleRoomScoreBalanceReq_default_instance_;
class S2SBattleRoomScoreBalanceAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBattleRoomScoreBalanceAck>
      _instance;
} _S2SBattleRoomScoreBalanceAck_default_instance_;
class S2SBattleScoreBalanceToShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBattleScoreBalanceToShardReq>
      _instance;
} _S2SBattleScoreBalanceToShardReq_default_instance_;
class S2SPlayerBattleScoreReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerBattleScoreReq>
      _instance;
} _S2SPlayerBattleScoreReq_default_instance_;
class S2SPlayerBattleScoreAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerBattleScoreAck>
      _instance;
} _S2SPlayerBattleScoreAck_default_instance_;
class S2SOnlieQueryBattleScoreReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SOnlieQueryBattleScoreReq>
      _instance;
} _S2SOnlieQueryBattleScoreReq_default_instance_;
class S2STellRoomFinishToBattleShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRoomFinishToBattleShardReq>
      _instance;
} _S2STellRoomFinishToBattleShardReq_default_instance_;
class S2STellRoomCloseToMatchShardReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRoomCloseToMatchShardReq>
      _instance;
} _S2STellRoomCloseToMatchShardReq_default_instance_;
class S2SResetBattleRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SResetBattleRoomReq>
      _instance;
} _S2SResetBattleRoomReq_default_instance_;
}  // namespace KFMsg
namespace protobuf_KFBattleMessage_2eproto {
static void InitDefaultsS2SAllocBattleIdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAllocBattleIdReq_default_instance_;
    new (ptr) ::KFMsg::S2SAllocBattleIdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAllocBattleIdReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAllocBattleIdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAllocBattleIdReq}, {}};

static void InitDefaultsS2SAllocBattleIdAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAllocBattleIdAck_default_instance_;
    new (ptr) ::KFMsg::S2SAllocBattleIdAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAllocBattleIdAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAllocBattleIdAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAllocBattleIdAck}, {}};

static void InitDefaultsS2SRegisterBattleServerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRegisterBattleServerReq_default_instance_;
    new (ptr) ::KFMsg::S2SRegisterBattleServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRegisterBattleServerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRegisterBattleServerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRegisterBattleServerReq}, {}};

static void InitDefaultsS2SRegisterBattleServerAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRegisterBattleServerAck_default_instance_;
    new (ptr) ::KFMsg::S2SRegisterBattleServerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRegisterBattleServerAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRegisterBattleServerAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRegisterBattleServerAck}, {}};

static void InitDefaultsS2SRegisterServerToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRegisterServerToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SRegisterServerToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRegisterServerToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRegisterServerToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRegisterServerToBattleShardReq}, {}};

static void InitDefaultsS2STellBattleRegisterToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellBattleRegisterToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2STellBattleRegisterToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellBattleRegisterToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellBattleRegisterToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellBattleRegisterToShardReq}, {}};

static void InitDefaultsS2SDisconnectServerToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDisconnectServerToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SDisconnectServerToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDisconnectServerToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDisconnectServerToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDisconnectServerToBattleShardReq}, {}};

static void InitDefaultsS2SCreateRoomToBattleProxyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateRoomToBattleProxyReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateRoomToBattleProxyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateRoomToBattleProxyReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateRoomToBattleProxyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateRoomToBattleProxyReq}, {}};

static void InitDefaultsS2SCreateRoomToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateRoomToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SCreateRoomToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateRoomToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateRoomToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateRoomToBattleShardReq}, {}};

static void InitDefaultsS2SCreateRoomToMatchShardAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SCreateRoomToMatchShardAck_default_instance_;
    new (ptr) ::KFMsg::S2SCreateRoomToMatchShardAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SCreateRoomToMatchShardAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SCreateRoomToMatchShardAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SCreateRoomToMatchShardAck}, {}};

static void InitDefaultsS2SAddCampToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddCampToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddCampToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddCampToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddCampToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddCampToBattleShardReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleCamp.base,}};

static void InitDefaultsS2SAddCampToMatchShardAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddCampToMatchShardAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddCampToMatchShardAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddCampToMatchShardAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddCampToMatchShardAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddCampToMatchShardAck}, {}};

static void InitDefaultsS2SOpenBattleRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOpenBattleRoomReq_default_instance_;
    new (ptr) ::KFMsg::S2SOpenBattleRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOpenBattleRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOpenBattleRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOpenBattleRoomReq}, {}};

static void InitDefaultsS2SOpenBattleRoomAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOpenBattleRoomAck_default_instance_;
    new (ptr) ::KFMsg::S2SOpenBattleRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOpenBattleRoomAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOpenBattleRoomAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOpenBattleRoomAck}, {}};

static void InitDefaultsS2SOpenBattleRoomToShardAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOpenBattleRoomToShardAck_default_instance_;
    new (ptr) ::KFMsg::S2SOpenBattleRoomToShardAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOpenBattleRoomToShardAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOpenBattleRoomToShardAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOpenBattleRoomToShardAck}, {}};

static void InitDefaultsS2SOpenRoomToMatchShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOpenRoomToMatchShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SOpenRoomToMatchShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOpenRoomToMatchShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOpenRoomToMatchShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOpenRoomToMatchShardReq}, {}};

static void InitDefaultsS2SOpenRoomToBattleShardAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOpenRoomToBattleShardAck_default_instance_;
    new (ptr) ::KFMsg::S2SOpenRoomToBattleShardAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOpenRoomToBattleShardAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOpenRoomToBattleShardAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOpenRoomToBattleShardAck}, {}};

static void InitDefaultsS2SPlayerEnterBattleRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterBattleRoomReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterBattleRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterBattleRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SPlayerEnterBattleRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SPlayerEnterBattleRoomReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattlePlayer.base,}};

static void InitDefaultsS2SPlayerEnterBattleRoomAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterBattleRoomAck_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterBattleRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterBattleRoomAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerEnterBattleRoomAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerEnterBattleRoomAck}, {}};

static void InitDefaultsS2SPlayerEnterRoomToBattleShardAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterRoomToBattleShardAck_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterRoomToBattleShardAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterRoomToBattleShardAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerEnterRoomToBattleShardAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerEnterRoomToBattleShardAck}, {}};

static void InitDefaultsS2SPlayerLoginBattleRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLoginBattleRoomReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLoginBattleRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLoginBattleRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLoginBattleRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLoginBattleRoomReq}, {}};

static void InitDefaultsS2SPlayerLoginBattleRoomAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLoginBattleRoomAck_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLoginBattleRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLoginBattleRoomAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLoginBattleRoomAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLoginBattleRoomAck}, {}};

static void InitDefaultsS2SPlayerLoginRoomToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLoginRoomToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLoginRoomToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLoginRoomToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLoginRoomToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLoginRoomToBattleShardReq}, {}};

static void InitDefaultsS2SPlayerCancelMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerCancelMatchReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerCancelMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerCancelMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerCancelMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerCancelMatchReq}, {}};

static void InitDefaultsS2SPlayerLeaveBattleRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveBattleRoomReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveBattleRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveBattleRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveBattleRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveBattleRoomReq}, {}};

static void InitDefaultsS2SPlayerLeaveBattleRoomAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveBattleRoomAck_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveBattleRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveBattleRoomAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveBattleRoomAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveBattleRoomAck}, {}};

static void InitDefaultsS2SPlayerLeaveRoomToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveRoomToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveRoomToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveRoomToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveRoomToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveRoomToBattleShardReq}, {}};

static void InitDefaultsS2SPlayerLeaveRoomToMatchShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveRoomToMatchShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveRoomToMatchShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveRoomToMatchShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveRoomToMatchShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveRoomToMatchShardReq}, {}};

static void InitDefaultsS2SLeaveBattleRoomToClientAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLeaveBattleRoomToClientAck_default_instance_;
    new (ptr) ::KFMsg::S2SLeaveBattleRoomToClientAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLeaveBattleRoomToClientAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLeaveBattleRoomToClientAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLeaveBattleRoomToClientAck}, {}};

static void InitDefaultsS2STellBattleRoomStartReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellBattleRoomStartReq_default_instance_;
    new (ptr) ::KFMsg::S2STellBattleRoomStartReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellBattleRoomStartReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellBattleRoomStartReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellBattleRoomStartReq}, {}};

static void InitDefaultsS2STellRoomStartToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRoomStartToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2STellRoomStartToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRoomStartToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellRoomStartToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellRoomStartToBattleShardReq}, {}};

static void InitDefaultsS2STellBattleRoomStartAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellBattleRoomStartAck_default_instance_;
    new (ptr) ::KFMsg::S2STellBattleRoomStartAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellBattleRoomStartAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellBattleRoomStartAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellBattleRoomStartAck}, {}};

static void InitDefaultsS2STellRoomStartToMatchShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRoomStartToMatchShardReq_default_instance_;
    new (ptr) ::KFMsg::S2STellRoomStartToMatchShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRoomStartToMatchShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellRoomStartToMatchShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellRoomStartToMatchShardReq}, {}};

static void InitDefaultsS2STellRoomStartToMatchShardAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRoomStartToMatchShardAck_default_instance_;
    new (ptr) ::KFMsg::S2STellRoomStartToMatchShardAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRoomStartToMatchShardAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellRoomStartToMatchShardAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellRoomStartToMatchShardAck}, {}};

static void InitDefaultsS2STellBattleRoomFinishReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellBattleRoomFinishReq_default_instance_;
    new (ptr) ::KFMsg::S2STellBattleRoomFinishReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellBattleRoomFinishReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellBattleRoomFinishReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellBattleRoomFinishReq}, {}};

static void InitDefaultsS2STellBattleRoomFinishAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellBattleRoomFinishAck_default_instance_;
    new (ptr) ::KFMsg::S2STellBattleRoomFinishAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellBattleRoomFinishAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellBattleRoomFinishAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellBattleRoomFinishAck}, {}};

static void InitDefaultsS2SBattleRoomScoreBalanceReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBattleRoomScoreBalanceReq_default_instance_;
    new (ptr) ::KFMsg::S2SBattleRoomScoreBalanceReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBattleRoomScoreBalanceReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SBattleRoomScoreBalanceReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SBattleRoomScoreBalanceReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleScore.base,}};

static void InitDefaultsS2SBattleRoomScoreBalanceAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBattleRoomScoreBalanceAck_default_instance_;
    new (ptr) ::KFMsg::S2SBattleRoomScoreBalanceAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBattleRoomScoreBalanceAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBattleRoomScoreBalanceAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBattleRoomScoreBalanceAck}, {}};

static void InitDefaultsS2SBattleScoreBalanceToShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBattleScoreBalanceToShardReq_default_instance_;
    new (ptr) ::KFMsg::S2SBattleScoreBalanceToShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBattleScoreBalanceToShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SBattleScoreBalanceToShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SBattleScoreBalanceToShardReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleScore.base,}};

static void InitDefaultsS2SPlayerBattleScoreReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerBattleScoreReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerBattleScoreReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerBattleScoreReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SPlayerBattleScoreReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SPlayerBattleScoreReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBBattleScore.base,}};

static void InitDefaultsS2SPlayerBattleScoreAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerBattleScoreAck_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerBattleScoreAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerBattleScoreAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerBattleScoreAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerBattleScoreAck}, {}};

static void InitDefaultsS2SOnlieQueryBattleScoreReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SOnlieQueryBattleScoreReq_default_instance_;
    new (ptr) ::KFMsg::S2SOnlieQueryBattleScoreReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SOnlieQueryBattleScoreReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SOnlieQueryBattleScoreReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SOnlieQueryBattleScoreReq}, {}};

static void InitDefaultsS2STellRoomFinishToBattleShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRoomFinishToBattleShardReq_default_instance_;
    new (ptr) ::KFMsg::S2STellRoomFinishToBattleShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRoomFinishToBattleShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellRoomFinishToBattleShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellRoomFinishToBattleShardReq}, {}};

static void InitDefaultsS2STellRoomCloseToMatchShardReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRoomCloseToMatchShardReq_default_instance_;
    new (ptr) ::KFMsg::S2STellRoomCloseToMatchShardReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRoomCloseToMatchShardReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellRoomCloseToMatchShardReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellRoomCloseToMatchShardReq}, {}};

static void InitDefaultsS2SResetBattleRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SResetBattleRoomReq_default_instance_;
    new (ptr) ::KFMsg::S2SResetBattleRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SResetBattleRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SResetBattleRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SResetBattleRoomReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAllocBattleIdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAllocBattleIdAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRegisterBattleServerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRegisterBattleServerAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRegisterServerToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellBattleRegisterToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDisconnectServerToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateRoomToBattleProxyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateRoomToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SCreateRoomToMatchShardAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddCampToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddCampToMatchShardAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOpenBattleRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOpenBattleRoomAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOpenBattleRoomToShardAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOpenRoomToMatchShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOpenRoomToBattleShardAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterBattleRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterBattleRoomAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterRoomToBattleShardAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLoginBattleRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLoginBattleRoomAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLoginRoomToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerCancelMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveBattleRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveBattleRoomAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveRoomToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveRoomToMatchShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLeaveBattleRoomToClientAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellBattleRoomStartReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRoomStartToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellBattleRoomStartAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRoomStartToMatchShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRoomStartToMatchShardAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellBattleRoomFinishReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellBattleRoomFinishAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBattleRoomScoreBalanceReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBattleRoomScoreBalanceAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBattleScoreBalanceToShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerBattleScoreReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerBattleScoreAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SOnlieQueryBattleScoreReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRoomFinishToBattleShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRoomCloseToMatchShardReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SResetBattleRoomReq.base);
}

::google::protobuf::Metadata file_level_metadata[45];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAllocBattleIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAllocBattleIdReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAllocBattleIdReq, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAllocBattleIdAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAllocBattleIdAck, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerReq, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerAck, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterBattleServerAck, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterServerToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterServerToBattleShardReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterServerToBattleShardReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterServerToBattleShardReq, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterServerToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRegisterServerToBattleShardReq, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRegisterToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRegisterToShardReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRegisterToShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRegisterToShardReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRegisterToShardReq, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRegisterToShardReq, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectServerToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectServerToBattleShardReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleProxyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleProxyReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleProxyReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleProxyReq, maxplayercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleProxyReq, battleserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleProxyReq, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, matchshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, maxplayercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, battleserverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToBattleShardReq, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToMatchShardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToMatchShardAck, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToMatchShardAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SCreateRoomToMatchShardAck, battleshardid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToBattleShardReq, pbcamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToBattleShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToBattleShardReq, matchshardid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToMatchShardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToMatchShardAck, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToMatchShardAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToMatchShardAck, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddCampToMatchShardAck, addok_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomReq, maxplayercount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomAck, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomAck, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomAck, waittime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomToShardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomToShardAck, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomToShardAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomToShardAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenBattleRoomToShardAck, waittime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenRoomToMatchShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenRoomToMatchShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenRoomToMatchShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenRoomToMatchShardReq, waittime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenRoomToBattleShardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOpenRoomToBattleShardAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomReq, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomReq, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomAck, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomAck, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterBattleRoomAck, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterRoomToBattleShardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterRoomToBattleShardAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterRoomToBattleShardAck, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterRoomToBattleShardAck, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomReq, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomAck, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginBattleRoomAck, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginRoomToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginRoomToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginRoomToBattleShardReq, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLoginRoomToBattleShardReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerCancelMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerCancelMatchReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerCancelMatchReq, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerCancelMatchReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomReq, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomAck, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveBattleRoomAck, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToBattleShardReq, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToBattleShardReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq, campid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveBattleRoomToClientAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveBattleRoomToClientAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveBattleRoomToClientAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomStartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomStartReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomStartReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomStartReq, maxtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToBattleShardReq, maxtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomStartAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomStartAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToMatchShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToMatchShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToMatchShardReq, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToMatchShardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomStartToMatchShardAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishReq, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellBattleRoomFinishAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceReq, battleshardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceReq, pbscore_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceAck, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleRoomScoreBalanceAck, reward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleScoreBalanceToShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleScoreBalanceToShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBattleScoreBalanceToShardReq, pbscore_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreReq, pbscore_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerBattleScoreAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOnlieQueryBattleScoreReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SOnlieQueryBattleScoreReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomFinishToBattleShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomFinishToBattleShardReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomFinishToBattleShardReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomFinishToBattleShardReq, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomCloseToMatchShardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomCloseToMatchShardReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRoomCloseToMatchShardReq, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SResetBattleRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SResetBattleRoomReq, roomid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::S2SAllocBattleIdReq)},
  { 7, -1, sizeof(::KFMsg::S2SAllocBattleIdAck)},
  { 13, -1, sizeof(::KFMsg::S2SRegisterBattleServerReq)},
  { 24, -1, sizeof(::KFMsg::S2SRegisterBattleServerAck)},
  { 31, -1, sizeof(::KFMsg::S2SRegisterServerToBattleShardReq)},
  { 41, -1, sizeof(::KFMsg::S2STellBattleRegisterToShardReq)},
  { 51, -1, sizeof(::KFMsg::S2SDisconnectServerToBattleShardReq)},
  { 57, -1, sizeof(::KFMsg::S2SCreateRoomToBattleProxyReq)},
  { 67, -1, sizeof(::KFMsg::S2SCreateRoomToBattleShardReq)},
  { 78, -1, sizeof(::KFMsg::S2SCreateRoomToMatchShardAck)},
  { 86, -1, sizeof(::KFMsg::S2SAddCampToBattleShardReq)},
  { 95, -1, sizeof(::KFMsg::S2SAddCampToMatchShardAck)},
  { 104, -1, sizeof(::KFMsg::S2SOpenBattleRoomReq)},
  { 113, -1, sizeof(::KFMsg::S2SOpenBattleRoomAck)},
  { 123, -1, sizeof(::KFMsg::S2SOpenBattleRoomToShardAck)},
  { 132, -1, sizeof(::KFMsg::S2SOpenRoomToMatchShardReq)},
  { 140, -1, sizeof(::KFMsg::S2SOpenRoomToBattleShardAck)},
  { 146, -1, sizeof(::KFMsg::S2SPlayerEnterBattleRoomReq)},
  { 154, -1, sizeof(::KFMsg::S2SPlayerEnterBattleRoomAck)},
  { 163, -1, sizeof(::KFMsg::S2SPlayerEnterRoomToBattleShardAck)},
  { 171, -1, sizeof(::KFMsg::S2SPlayerLoginBattleRoomReq)},
  { 180, -1, sizeof(::KFMsg::S2SPlayerLoginBattleRoomAck)},
  { 188, -1, sizeof(::KFMsg::S2SPlayerLoginRoomToBattleShardReq)},
  { 196, -1, sizeof(::KFMsg::S2SPlayerCancelMatchReq)},
  { 204, -1, sizeof(::KFMsg::S2SPlayerLeaveBattleRoomReq)},
  { 213, -1, sizeof(::KFMsg::S2SPlayerLeaveBattleRoomAck)},
  { 221, -1, sizeof(::KFMsg::S2SPlayerLeaveRoomToBattleShardReq)},
  { 229, -1, sizeof(::KFMsg::S2SPlayerLeaveRoomToMatchShardReq)},
  { 239, -1, sizeof(::KFMsg::S2SLeaveBattleRoomToClientAck)},
  { 246, -1, sizeof(::KFMsg::S2STellBattleRoomStartReq)},
  { 254, -1, sizeof(::KFMsg::S2STellRoomStartToBattleShardReq)},
  { 261, -1, sizeof(::KFMsg::S2STellBattleRoomStartAck)},
  { 267, -1, sizeof(::KFMsg::S2STellRoomStartToMatchShardReq)},
  { 274, -1, sizeof(::KFMsg::S2STellRoomStartToMatchShardAck)},
  { 280, -1, sizeof(::KFMsg::S2STellBattleRoomFinishReq)},
  { 289, -1, sizeof(::KFMsg::S2STellBattleRoomFinishAck)},
  { 295, -1, sizeof(::KFMsg::S2SBattleRoomScoreBalanceReq)},
  { 303, -1, sizeof(::KFMsg::S2SBattleRoomScoreBalanceAck)},
  { 311, -1, sizeof(::KFMsg::S2SBattleScoreBalanceToShardReq)},
  { 318, -1, sizeof(::KFMsg::S2SPlayerBattleScoreReq)},
  { 326, -1, sizeof(::KFMsg::S2SPlayerBattleScoreAck)},
  { 333, -1, sizeof(::KFMsg::S2SOnlieQueryBattleScoreReq)},
  { 339, -1, sizeof(::KFMsg::S2STellRoomFinishToBattleShardReq)},
  { 347, -1, sizeof(::KFMsg::S2STellRoomCloseToMatchShardReq)},
  { 354, -1, sizeof(::KFMsg::S2SResetBattleRoomReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAllocBattleIdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAllocBattleIdAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRegisterBattleServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRegisterBattleServerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRegisterServerToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellBattleRegisterToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDisconnectServerToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateRoomToBattleProxyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateRoomToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SCreateRoomToMatchShardAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddCampToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddCampToMatchShardAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOpenBattleRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOpenBattleRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOpenBattleRoomToShardAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOpenRoomToMatchShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOpenRoomToBattleShardAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterBattleRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterBattleRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterRoomToBattleShardAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLoginBattleRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLoginBattleRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLoginRoomToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerCancelMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveBattleRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveBattleRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveRoomToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveRoomToMatchShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLeaveBattleRoomToClientAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellBattleRoomStartReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRoomStartToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellBattleRoomStartAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRoomStartToMatchShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRoomStartToMatchShardAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellBattleRoomFinishReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellBattleRoomFinishAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBattleRoomScoreBalanceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBattleRoomScoreBalanceAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBattleScoreBalanceToShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerBattleScoreReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerBattleScoreAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SOnlieQueryBattleScoreReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRoomFinishToBattleShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRoomCloseToMatchShardReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SResetBattleRoomReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "KFBattleMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 45);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025KFBattleMessage.proto\022\005KFMsg\032\025KFDefine"
      "Message.proto\"/\n\023S2SAllocBattleIdReq\022\n\n\002"
      "ip\030\001 \001(\014\022\014\n\004port\030\002 \001(\r\"!\n\023S2SAllocBattle"
      "IdAck\022\n\n\002id\030\001 \001(\004\"\200\001\n\032S2SRegisterBattleS"
      "erverReq\022\020\n\010serverid\030\001 \001(\004\022\n\n\002ip\030\002 \001(\014\022\014"
      "\n\004port\030\003 \001(\r\022\016\n\006roomid\030\004 \001(\004\022\025\n\rbattlesh"
      "ardid\030\005 \001(\004\022\017\n\007version\030\006 \001(\014\">\n\032S2SRegis"
      "terBattleServerAck\022\020\n\010serverid\030\001 \001(\004\022\016\n\006"
      "result\030\002 \001(\r\"p\n!S2SRegisterServerToBattl"
      "eShardReq\022\020\n\010serverid\030\001 \001(\004\022\n\n\002ip\030\002 \001(\014\022"
      "\014\n\004port\030\003 \001(\r\022\016\n\006roomid\030\004 \001(\004\022\017\n\007version"
      "\030\005 \001(\014\"n\n\037S2STellBattleRegisterToShardRe"
      "q\022\020\n\010serverid\030\001 \001(\004\022\016\n\006roomid\030\002 \001(\004\022\n\n\002i"
      "p\030\003 \001(\014\022\014\n\004port\030\004 \001(\r\022\017\n\007version\030\005 \001(\014\"7"
      "\n#S2SDisconnectServerToBattleShardReq\022\020\n"
      "\010serverid\030\001 \001(\004\"\201\001\n\035S2SCreateRoomToBattl"
      "eProxyReq\022\017\n\007matchid\030\001 \001(\r\022\016\n\006roomid\030\002 \001"
      "(\004\022\026\n\016maxplayercount\030\003 \001(\r\022\026\n\016battleserv"
      "erid\030\004 \001(\004\022\017\n\007version\030\005 \001(\014\"\227\001\n\035S2SCreat"
      "eRoomToBattleShardReq\022\017\n\007matchid\030\001 \001(\r\022\016"
      "\n\006roomid\030\002 \001(\004\022\024\n\014matchshardid\030\003 \001(\004\022\026\n\016"
      "maxplayercount\030\004 \001(\r\022\026\n\016battleserverid\030\005"
      " \001(\004\022\017\n\007version\030\006 \001(\014\"V\n\034S2SCreateRoomTo"
      "MatchShardAck\022\017\n\007matchid\030\001 \001(\r\022\016\n\006roomid"
      "\030\002 \001(\004\022\025\n\rbattleshardid\030\003 \001(\004\"x\n\032S2SAddC"
      "ampToBattleShardReq\022\016\n\006roomid\030\001 \001(\004\022#\n\006p"
      "bcamp\030\002 \001(\0132\023.KFMsg.PBBattleCamp\022\017\n\007matc"
      "hid\030\003 \001(\r\022\024\n\014matchshardid\030\004 \001(\004\"[\n\031S2SAd"
      "dCampToMatchShardAck\022\017\n\007matchid\030\001 \001(\r\022\016\n"
      "\006roomid\030\002 \001(\004\022\016\n\006campid\030\003 \001(\r\022\r\n\005addok\030\004"
      " \001(\010\"f\n\024S2SOpenBattleRoomReq\022\017\n\007matchid\030"
      "\001 \001(\r\022\016\n\006roomid\030\002 \001(\004\022\025\n\rbattleshardid\030\003"
      " \001(\004\022\026\n\016maxplayercount\030\004 \001(\r\"p\n\024S2SOpenB"
      "attleRoomAck\022\025\n\rbattleshardid\030\001 \001(\004\022\017\n\007m"
      "atchid\030\002 \001(\r\022\016\n\006roomid\030\003 \001(\004\022\016\n\006result\030\004"
      " \001(\r\022\020\n\010waittime\030\005 \001(\r\"`\n\033S2SOpenBattleR"
      "oomToShardAck\022\017\n\007matchid\030\001 \001(\r\022\016\n\006roomid"
      "\030\002 \001(\004\022\016\n\006result\030\003 \001(\r\022\020\n\010waittime\030\004 \001(\r"
      "\"O\n\032S2SOpenRoomToMatchShardReq\022\017\n\007matchi"
      "d\030\001 \001(\r\022\016\n\006roomid\030\002 \001(\004\022\020\n\010waittime\030\003 \001("
      "\r\"-\n\033S2SOpenRoomToBattleShardAck\022\016\n\006room"
      "id\030\001 \001(\004\"c\n\033S2SPlayerEnterBattleRoomReq\022"
      "\016\n\006roomid\030\001 \001(\004\022%\n\006player\030\002 \001(\0132\025.KFMsg."
      "PBBattlePlayer\022\r\n\005token\030\003 \001(\014\"f\n\033S2SPlay"
      "erEnterBattleRoomAck\022\025\n\rbattleshardid\030\001 "
      "\001(\004\022\016\n\006roomid\030\002 \001(\004\022\016\n\006campid\030\003 \001(\r\022\020\n\010p"
      "layerid\030\004 \001(\004\"V\n\"S2SPlayerEnterRoomToBat"
      "tleShardAck\022\016\n\006roomid\030\001 \001(\004\022\016\n\006campid\030\002 "
      "\001(\r\022\020\n\010playerid\030\003 \001(\004\"f\n\033S2SPlayerLoginB"
      "attleRoomReq\022\025\n\rbattleshardid\030\001 \001(\004\022\016\n\006r"
      "oomid\030\002 \001(\004\022\016\n\006campid\030\003 \001(\r\022\020\n\010playerid\030"
      "\004 \001(\004\"O\n\033S2SPlayerLoginBattleRoomAck\022\016\n\006"
      "roomid\030\001 \001(\004\022\016\n\006campid\030\002 \001(\r\022\020\n\010playerid"
      "\030\003 \001(\r\"V\n\"S2SPlayerLoginRoomToBattleShar"
      "dReq\022\016\n\006roomid\030\002 \001(\004\022\016\n\006campid\030\003 \001(\r\022\020\n\010"
      "playerid\030\004 \001(\004\"K\n\027S2SPlayerCancelMatchRe"
      "q\022\016\n\006roomid\030\001 \001(\004\022\016\n\006campid\030\002 \001(\r\022\020\n\010pla"
      "yerid\030\003 \001(\004\"f\n\033S2SPlayerLeaveBattleRoomR"
      "eq\022\016\n\006roomid\030\001 \001(\004\022\025\n\rbattleshardid\030\002 \001("
      "\004\022\016\n\006campid\030\003 \001(\r\022\020\n\010playerid\030\004 \001(\004\"O\n\033S"
      "2SPlayerLeaveBattleRoomAck\022\016\n\006roomid\030\001 \001"
      "(\004\022\016\n\006campid\030\002 \001(\r\022\020\n\010playerid\030\003 \001(\004\"V\n\""
      "S2SPlayerLeaveRoomToBattleShardReq\022\016\n\006ro"
      "omid\030\001 \001(\004\022\016\n\006campid\030\002 \001(\r\022\020\n\010playerid\030\003"
      " \001(\004\"w\n!S2SPlayerLeaveRoomToMatchShardRe"
      "q\022\017\n\007matchid\030\001 \001(\004\022\016\n\006roomid\030\002 \001(\004\022\016\n\006ca"
      "mpid\030\003 \001(\r\022\017\n\007groupid\030\004 \001(\004\022\020\n\010playerid\030"
      "\005 \001(\004\"A\n\035S2SLeaveBattleRoomToClientAck\022\020"
      "\n\010playerid\030\001 \001(\004\022\016\n\006roomid\030\002 \001(\004\"S\n\031S2ST"
      "ellBattleRoomStartReq\022\025\n\rbattleshardid\030\001"
      " \001(\004\022\016\n\006roomid\030\002 \001(\004\022\017\n\007maxtime\030\003 \001(\r\"C\n"
      " S2STellRoomStartToBattleShardReq\022\016\n\006roo"
      "mid\030\001 \001(\004\022\017\n\007maxtime\030\002 \001(\r\"+\n\031S2STellBat"
      "tleRoomStartAck\022\016\n\006roomid\030\001 \001(\004\"B\n\037S2STe"
      "llRoomStartToMatchShardReq\022\017\n\007matchid\030\001 "
      "\001(\r\022\016\n\006roomid\030\002 \001(\004\"1\n\037S2STellRoomStartT"
      "oMatchShardAck\022\016\n\006roomid\030\001 \001(\004\"a\n\032S2STel"
      "lBattleRoomFinishReq\022\025\n\rbattleshardid\030\001 "
      "\001(\004\022\016\n\006roomid\030\002 \001(\004\022\020\n\010serverid\030\003 \001(\004\022\n\n"
      "\002ip\030\004 \001(\014\",\n\032S2STellBattleRoomFinishAck\022"
      "\016\n\006roomid\030\001 \001(\004\"l\n\034S2SBattleRoomScoreBal"
      "anceReq\022\016\n\006roomid\030\001 \001(\004\022\025\n\rbattleshardid"
      "\030\002 \001(\r\022%\n\007pbscore\030\003 \001(\0132\024.KFMsg.PBBattle"
      "Score\"P\n\034S2SBattleRoomScoreBalanceAck\022\016\n"
      "\006roomid\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004\022\016\n\006rewar"
      "d\030\003 \001(\014\"X\n\037S2SBattleScoreBalanceToShardR"
      "eq\022\016\n\006roomid\030\001 \001(\004\022%\n\007pbscore\030\002 \001(\0132\024.KF"
      "Msg.PBBattleScore\"b\n\027S2SPlayerBattleScor"
      "eReq\022\020\n\010playerid\030\001 \001(\004\022\016\n\006roomid\030\002 \001(\004\022%"
      "\n\007pbscore\030\003 \001(\0132\024.KFMsg.PBBattleScore\";\n"
      "\027S2SPlayerBattleScoreAck\022\020\n\010playerid\030\001 \001"
      "(\004\022\016\n\006roomid\030\002 \001(\004\"/\n\033S2SOnlieQueryBattl"
      "eScoreReq\022\020\n\010playerid\030\001 \001(\004\"Q\n!S2STellRo"
      "omFinishToBattleShardReq\022\016\n\006roomid\030\001 \001(\004"
      "\022\020\n\010serverid\030\002 \001(\004\022\n\n\002ip\030\003 \001(\014\"B\n\037S2STel"
      "lRoomCloseToMatchShardReq\022\017\n\007matchid\030\001 \001"
      "(\004\022\016\n\006roomid\030\002 \001(\004\"\'\n\025S2SResetBattleRoom"
      "Req\022\016\n\006roomid\030\001 \001(\004*\267\017\n\016BattleProtocol\022\036"
      "\n\032S2S_BATTLE_PROTOCOL_UNKNOW\020\000\022#\n\036S2S_RE"
      "GISTER_BATTLE_SERVER_REQ\020\300W\022#\n\036S2S_REGIS"
      "TER_BATTLE_SERVER_ACK\020\301W\022.\n)S2S_DISCONNE"
      "CT_SERVER_TO_BATTLE_SHARD_REQ\020\302W\022,\n\'S2S_"
      "REGISTER_SERVER_TO_BATTLE_SHARD_REQ\020\303W\022("
      "\n#S2S_CREATE_ROOM_TO_BATTLE_PROXY_REQ\020\304W"
      "\022(\n#S2S_CREATE_ROOM_TO_BATTLE_SHARD_REQ\020"
      "\305W\022\'\n\"S2S_CREATE_ROOM_TO_MATCH_SHARD_ACK"
      "\020\306W\022\035\n\030S2S_OPEN_BATTLE_ROOM_REQ\020\307W\022\035\n\030S2"
      "S_OPEN_BATTLE_ROOM_ACK\020\310W\022&\n!S2S_OPEN_RO"
      "OM_TO_BATTLE_SHARD_ACK\020\311W\022%\n S2S_PLAYER_"
      "ENTER_BATTLE_ROOM_REQ\020\312W\022%\n S2S_PLAYER_E"
      "NTER_BATTLE_ROOM_ACK\020\313W\022.\n)S2S_PLAYER_EN"
      "TER_ROOM_TO_BATTLE_SHARD_ACK\020\314W\022%\n S2S_P"
      "LAYER_LEAVE_BATTLE_ROOM_REQ\020\315W\022-\n(S2S_PL"
      "AYER_LEAVE_ROOM_TO_MATCH_SHARD_REQ\020\316W\022#\n"
      "\036S2S_TELL_BATTLE_ROOM_START_REQ\020\317W\022#\n\036S2"
      "S_TELL_BATTLE_ROOM_START_ACK\020\320W\022+\n&S2S_T"
      "ELL_ROOM_START_TO_MATCH_SHARD_REQ\020\321W\022%\n "
      "S2S_OPEN_ROOM_TO_MATCH_SHARD_REQ\020\322W\022$\n\037S"
      "2S_TELL_BATTLE_ROOM_FINISH_REQ\020\323W\022(\n#S2S"
      "_LEAVE_BATTLE_ROOM_TO_CLIENT_ACK\020\324W\022,\n\'S"
      "2S_TELL_ROOM_START_TO_BATTLE_SHARD_REQ\020\325"
      "W\022-\n(S2S_TELL_ROOM_FINISH_TO_BATTLE_SAHR"
      "D_REQ\020\326W\022%\n S2S_ADD_CAMP_TO_BATTLE_SHARD"
      "_REQ\020\327W\022$\n\037S2S_ADD_CAMP_TO_MATCH_SHARD_A"
      "CK\020\330W\022(\n#S2S_REMOVE_CAMP_TO_BATTLE_SHARD"
      "_REQ\020\331W\022 \n\033S2S_PLAYER_CANCEL_MATCH_REQ\020\332"
      "W\022%\n S2S_PLAYER_LEAVE_BATTLE_ROOM_ACK\020\333W"
      "\022 \n\033S2S_PLAYER_CANCEL_MATCH_ACK\020\334W\022$\n\037S2"
      "S_TELL_BATTLE_ROOM_FINISH_ACK\020\335W\022.\n)S2S_"
      "PLAYER_LEAVE_ROOM_TO_BATTLE_SHARD_REQ\020\336W"
      "\022%\n S2S_PLAYER_LOGIN_BATTLE_ROOM_REQ\020\337W\022"
      "%\n S2S_PLAYER_LOGIN_BATTLE_ROOM_ACK\020\340W\022."
      "\n)S2S_PLAYER_LOGIN_ROOM_TO_BATTLE_SHARD_"
      "REQ\020\341W\022,\n\'S2S_TELL_ROOM_START_TO_BATTLE_"
      "SHARD_ACK\020\342W\022*\n%S2S_TELL_BATTLE_REGISTER"
      "_TO_SHARD_REQ\020\343W\022+\n&S2S_TELL_ROOM_CLOSE_"
      "TO_MATCH_SHARD_REQ\020\344W\022 \n\033S2S_PLAYER_BATT"
      "LE_SCORE_REQ\020\345W\022 \n\033S2S_PLAYER_BATTLE_SCO"
      "RE_ACK\020\346W\022&\n!S2S_BATTLE_ROOM_SCORE_BALAN"
      "CE_REQ\020\347W\022&\n!S2S_BATTLE_ROOM_SCORE_BALAN"
      "CE_ACK\020\350W\022*\n%S2S_BATTLE_SCORE_BALANCE_TO"
      "_SHARD_REQ\020\351W\022&\n!S2S_ONLINE_QUERY_BATTLE"
      "_SCORE_REQ\020\352W\022&\n!S2S_OPEN_BATTLE_ROOM_TO"
      "_SHARD_ACK\020\353W\022\036\n\031S2S_RESET_BATTLE_ROOM_R"
      "EQ\020\354W\022\030\n\023S2S_BATTLE_PING_REQ\020\355W\022\030\n\023S2S_B"
      "ATTLE_PING_ACK\020\356W\022\034\n\027S2S_ALLOC_BATTLE_ID"
      "_REQ\020\357W\022\034\n\027S2S_ALLOC_BATTLE_ID_ACK\020\360Wb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5885);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFBattleMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_KFDefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_KFBattleMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* BattleProtocol_descriptor() {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KFBattleMessage_2eproto::file_level_enum_descriptors[0];
}
bool BattleProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 11200:
    case 11201:
    case 11202:
    case 11203:
    case 11204:
    case 11205:
    case 11206:
    case 11207:
    case 11208:
    case 11209:
    case 11210:
    case 11211:
    case 11212:
    case 11213:
    case 11214:
    case 11215:
    case 11216:
    case 11217:
    case 11218:
    case 11219:
    case 11220:
    case 11221:
    case 11222:
    case 11223:
    case 11224:
    case 11225:
    case 11226:
    case 11227:
    case 11228:
    case 11229:
    case 11230:
    case 11231:
    case 11232:
    case 11233:
    case 11234:
    case 11235:
    case 11236:
    case 11237:
    case 11238:
    case 11239:
    case 11240:
    case 11241:
    case 11242:
    case 11243:
    case 11244:
    case 11245:
    case 11246:
    case 11247:
    case 11248:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void S2SAllocBattleIdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAllocBattleIdReq::kIpFieldNumber;
const int S2SAllocBattleIdReq::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAllocBattleIdReq::S2SAllocBattleIdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SAllocBattleIdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAllocBattleIdReq)
}
S2SAllocBattleIdReq::S2SAllocBattleIdReq(const S2SAllocBattleIdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAllocBattleIdReq)
}

void S2SAllocBattleIdReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

S2SAllocBattleIdReq::~S2SAllocBattleIdReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAllocBattleIdReq)
  SharedDtor();
}

void S2SAllocBattleIdReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SAllocBattleIdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAllocBattleIdReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAllocBattleIdReq& S2SAllocBattleIdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SAllocBattleIdReq.base);
  return *internal_default_instance();
}


void S2SAllocBattleIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAllocBattleIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SAllocBattleIdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAllocBattleIdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAllocBattleIdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAllocBattleIdReq)
  return false;
#undef DO_
}

void S2SAllocBattleIdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAllocBattleIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAllocBattleIdReq)
}

::google::protobuf::uint8* S2SAllocBattleIdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAllocBattleIdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAllocBattleIdReq)
  return target;
}

size_t S2SAllocBattleIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAllocBattleIdReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAllocBattleIdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAllocBattleIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAllocBattleIdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAllocBattleIdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAllocBattleIdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAllocBattleIdReq)
    MergeFrom(*source);
  }
}

void S2SAllocBattleIdReq::MergeFrom(const S2SAllocBattleIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAllocBattleIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void S2SAllocBattleIdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAllocBattleIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAllocBattleIdReq::CopyFrom(const S2SAllocBattleIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAllocBattleIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAllocBattleIdReq::IsInitialized() const {
  return true;
}

void S2SAllocBattleIdReq::Swap(S2SAllocBattleIdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAllocBattleIdReq::InternalSwap(S2SAllocBattleIdReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAllocBattleIdReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAllocBattleIdAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAllocBattleIdAck::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAllocBattleIdAck::S2SAllocBattleIdAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SAllocBattleIdAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAllocBattleIdAck)
}
S2SAllocBattleIdAck::S2SAllocBattleIdAck(const S2SAllocBattleIdAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAllocBattleIdAck)
}

void S2SAllocBattleIdAck::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

S2SAllocBattleIdAck::~S2SAllocBattleIdAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAllocBattleIdAck)
  SharedDtor();
}

void S2SAllocBattleIdAck::SharedDtor() {
}

void S2SAllocBattleIdAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAllocBattleIdAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAllocBattleIdAck& S2SAllocBattleIdAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SAllocBattleIdAck.base);
  return *internal_default_instance();
}


void S2SAllocBattleIdAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAllocBattleIdAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAllocBattleIdAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAllocBattleIdAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAllocBattleIdAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAllocBattleIdAck)
  return false;
#undef DO_
}

void S2SAllocBattleIdAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAllocBattleIdAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAllocBattleIdAck)
}

::google::protobuf::uint8* S2SAllocBattleIdAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAllocBattleIdAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAllocBattleIdAck)
  return target;
}

size_t S2SAllocBattleIdAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAllocBattleIdAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAllocBattleIdAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAllocBattleIdAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAllocBattleIdAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAllocBattleIdAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAllocBattleIdAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAllocBattleIdAck)
    MergeFrom(*source);
  }
}

void S2SAllocBattleIdAck::MergeFrom(const S2SAllocBattleIdAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAllocBattleIdAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SAllocBattleIdAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAllocBattleIdAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAllocBattleIdAck::CopyFrom(const S2SAllocBattleIdAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAllocBattleIdAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAllocBattleIdAck::IsInitialized() const {
  return true;
}

void S2SAllocBattleIdAck::Swap(S2SAllocBattleIdAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAllocBattleIdAck::InternalSwap(S2SAllocBattleIdAck* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAllocBattleIdAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRegisterBattleServerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRegisterBattleServerReq::kServeridFieldNumber;
const int S2SRegisterBattleServerReq::kIpFieldNumber;
const int S2SRegisterBattleServerReq::kPortFieldNumber;
const int S2SRegisterBattleServerReq::kRoomidFieldNumber;
const int S2SRegisterBattleServerReq::kBattleshardidFieldNumber;
const int S2SRegisterBattleServerReq::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRegisterBattleServerReq::S2SRegisterBattleServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SRegisterBattleServerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRegisterBattleServerReq)
}
S2SRegisterBattleServerReq::S2SRegisterBattleServerReq(const S2SRegisterBattleServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRegisterBattleServerReq)
}

void S2SRegisterBattleServerReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
}

S2SRegisterBattleServerReq::~S2SRegisterBattleServerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRegisterBattleServerReq)
  SharedDtor();
}

void S2SRegisterBattleServerReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRegisterBattleServerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRegisterBattleServerReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRegisterBattleServerReq& S2SRegisterBattleServerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SRegisterBattleServerReq.base);
  return *internal_default_instance();
}


void S2SRegisterBattleServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRegisterBattleServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool S2SRegisterBattleServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRegisterBattleServerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleshardid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRegisterBattleServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRegisterBattleServerReq)
  return false;
#undef DO_
}

void S2SRegisterBattleServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRegisterBattleServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // uint64 roomid = 4;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  // uint64 battleshardid = 5;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->battleshardid(), output);
  }

  // bytes version = 6;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRegisterBattleServerReq)
}

::google::protobuf::uint8* S2SRegisterBattleServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRegisterBattleServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // uint64 roomid = 4;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  // uint64 battleshardid = 5;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->battleshardid(), target);
  }

  // bytes version = 6;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRegisterBattleServerReq)
  return target;
}

size_t S2SRegisterBattleServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRegisterBattleServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bytes version = 6;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 roomid = 4;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 battleshardid = 5;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRegisterBattleServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRegisterBattleServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRegisterBattleServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRegisterBattleServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRegisterBattleServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRegisterBattleServerReq)
    MergeFrom(*source);
  }
}

void S2SRegisterBattleServerReq::MergeFrom(const S2SRegisterBattleServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRegisterBattleServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void S2SRegisterBattleServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRegisterBattleServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRegisterBattleServerReq::CopyFrom(const S2SRegisterBattleServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRegisterBattleServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRegisterBattleServerReq::IsInitialized() const {
  return true;
}

void S2SRegisterBattleServerReq::Swap(S2SRegisterBattleServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRegisterBattleServerReq::InternalSwap(S2SRegisterBattleServerReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(roomid_, other->roomid_);
  swap(battleshardid_, other->battleshardid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRegisterBattleServerReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRegisterBattleServerAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRegisterBattleServerAck::kServeridFieldNumber;
const int S2SRegisterBattleServerAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRegisterBattleServerAck::S2SRegisterBattleServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SRegisterBattleServerAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRegisterBattleServerAck)
}
S2SRegisterBattleServerAck::S2SRegisterBattleServerAck(const S2SRegisterBattleServerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRegisterBattleServerAck)
}

void S2SRegisterBattleServerAck::SharedCtor() {
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(result_));
}

S2SRegisterBattleServerAck::~S2SRegisterBattleServerAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRegisterBattleServerAck)
  SharedDtor();
}

void S2SRegisterBattleServerAck::SharedDtor() {
}

void S2SRegisterBattleServerAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRegisterBattleServerAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRegisterBattleServerAck& S2SRegisterBattleServerAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SRegisterBattleServerAck.base);
  return *internal_default_instance();
}


void S2SRegisterBattleServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRegisterBattleServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SRegisterBattleServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRegisterBattleServerAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRegisterBattleServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRegisterBattleServerAck)
  return false;
#undef DO_
}

void S2SRegisterBattleServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRegisterBattleServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRegisterBattleServerAck)
}

::google::protobuf::uint8* S2SRegisterBattleServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRegisterBattleServerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRegisterBattleServerAck)
  return target;
}

size_t S2SRegisterBattleServerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRegisterBattleServerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRegisterBattleServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRegisterBattleServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRegisterBattleServerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRegisterBattleServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRegisterBattleServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRegisterBattleServerAck)
    MergeFrom(*source);
  }
}

void S2SRegisterBattleServerAck::MergeFrom(const S2SRegisterBattleServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRegisterBattleServerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SRegisterBattleServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRegisterBattleServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRegisterBattleServerAck::CopyFrom(const S2SRegisterBattleServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRegisterBattleServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRegisterBattleServerAck::IsInitialized() const {
  return true;
}

void S2SRegisterBattleServerAck::Swap(S2SRegisterBattleServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRegisterBattleServerAck::InternalSwap(S2SRegisterBattleServerAck* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRegisterBattleServerAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRegisterServerToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRegisterServerToBattleShardReq::kServeridFieldNumber;
const int S2SRegisterServerToBattleShardReq::kIpFieldNumber;
const int S2SRegisterServerToBattleShardReq::kPortFieldNumber;
const int S2SRegisterServerToBattleShardReq::kRoomidFieldNumber;
const int S2SRegisterServerToBattleShardReq::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRegisterServerToBattleShardReq::S2SRegisterServerToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SRegisterServerToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRegisterServerToBattleShardReq)
}
S2SRegisterServerToBattleShardReq::S2SRegisterServerToBattleShardReq(const S2SRegisterServerToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRegisterServerToBattleShardReq)
}

void S2SRegisterServerToBattleShardReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
}

S2SRegisterServerToBattleShardReq::~S2SRegisterServerToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRegisterServerToBattleShardReq)
  SharedDtor();
}

void S2SRegisterServerToBattleShardReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRegisterServerToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRegisterServerToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRegisterServerToBattleShardReq& S2SRegisterServerToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SRegisterServerToBattleShardReq.base);
  return *internal_default_instance();
}


void S2SRegisterServerToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRegisterServerToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool S2SRegisterServerToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRegisterServerToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRegisterServerToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRegisterServerToBattleShardReq)
  return false;
#undef DO_
}

void S2SRegisterServerToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRegisterServerToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // uint64 roomid = 4;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRegisterServerToBattleShardReq)
}

::google::protobuf::uint8* S2SRegisterServerToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRegisterServerToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // uint64 roomid = 4;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRegisterServerToBattleShardReq)
  return target;
}

size_t S2SRegisterServerToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRegisterServerToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 roomid = 4;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRegisterServerToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRegisterServerToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRegisterServerToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRegisterServerToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRegisterServerToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRegisterServerToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2SRegisterServerToBattleShardReq::MergeFrom(const S2SRegisterServerToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRegisterServerToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void S2SRegisterServerToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRegisterServerToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRegisterServerToBattleShardReq::CopyFrom(const S2SRegisterServerToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRegisterServerToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRegisterServerToBattleShardReq::IsInitialized() const {
  return true;
}

void S2SRegisterServerToBattleShardReq::Swap(S2SRegisterServerToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRegisterServerToBattleShardReq::InternalSwap(S2SRegisterServerToBattleShardReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(roomid_, other->roomid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRegisterServerToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellBattleRegisterToShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellBattleRegisterToShardReq::kServeridFieldNumber;
const int S2STellBattleRegisterToShardReq::kRoomidFieldNumber;
const int S2STellBattleRegisterToShardReq::kIpFieldNumber;
const int S2STellBattleRegisterToShardReq::kPortFieldNumber;
const int S2STellBattleRegisterToShardReq::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellBattleRegisterToShardReq::S2STellBattleRegisterToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRegisterToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellBattleRegisterToShardReq)
}
S2STellBattleRegisterToShardReq::S2STellBattleRegisterToShardReq(const S2STellBattleRegisterToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellBattleRegisterToShardReq)
}

void S2STellBattleRegisterToShardReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
}

S2STellBattleRegisterToShardReq::~S2STellBattleRegisterToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellBattleRegisterToShardReq)
  SharedDtor();
}

void S2STellBattleRegisterToShardReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STellBattleRegisterToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellBattleRegisterToShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellBattleRegisterToShardReq& S2STellBattleRegisterToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRegisterToShardReq.base);
  return *internal_default_instance();
}


void S2STellBattleRegisterToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellBattleRegisterToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool S2STellBattleRegisterToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellBattleRegisterToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellBattleRegisterToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellBattleRegisterToShardReq)
  return false;
#undef DO_
}

void S2STellBattleRegisterToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellBattleRegisterToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ip(), output);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellBattleRegisterToShardReq)
}

::google::protobuf::uint8* S2STellBattleRegisterToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellBattleRegisterToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ip(), target);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellBattleRegisterToShardReq)
  return target;
}

size_t S2STellBattleRegisterToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellBattleRegisterToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellBattleRegisterToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellBattleRegisterToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellBattleRegisterToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellBattleRegisterToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellBattleRegisterToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellBattleRegisterToShardReq)
    MergeFrom(*source);
  }
}

void S2STellBattleRegisterToShardReq::MergeFrom(const S2STellBattleRegisterToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellBattleRegisterToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void S2STellBattleRegisterToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellBattleRegisterToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellBattleRegisterToShardReq::CopyFrom(const S2STellBattleRegisterToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellBattleRegisterToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellBattleRegisterToShardReq::IsInitialized() const {
  return true;
}

void S2STellBattleRegisterToShardReq::Swap(S2STellBattleRegisterToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellBattleRegisterToShardReq::InternalSwap(S2STellBattleRegisterToShardReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(roomid_, other->roomid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellBattleRegisterToShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDisconnectServerToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDisconnectServerToBattleShardReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDisconnectServerToBattleShardReq::S2SDisconnectServerToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SDisconnectServerToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDisconnectServerToBattleShardReq)
}
S2SDisconnectServerToBattleShardReq::S2SDisconnectServerToBattleShardReq(const S2SDisconnectServerToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDisconnectServerToBattleShardReq)
}

void S2SDisconnectServerToBattleShardReq::SharedCtor() {
  serverid_ = GOOGLE_ULONGLONG(0);
}

S2SDisconnectServerToBattleShardReq::~S2SDisconnectServerToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDisconnectServerToBattleShardReq)
  SharedDtor();
}

void S2SDisconnectServerToBattleShardReq::SharedDtor() {
}

void S2SDisconnectServerToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDisconnectServerToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDisconnectServerToBattleShardReq& S2SDisconnectServerToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SDisconnectServerToBattleShardReq.base);
  return *internal_default_instance();
}


void S2SDisconnectServerToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serverid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDisconnectServerToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDisconnectServerToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDisconnectServerToBattleShardReq)
  return false;
#undef DO_
}

void S2SDisconnectServerToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDisconnectServerToBattleShardReq)
}

::google::protobuf::uint8* S2SDisconnectServerToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDisconnectServerToBattleShardReq)
  return target;
}

size_t S2SDisconnectServerToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDisconnectServerToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDisconnectServerToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDisconnectServerToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDisconnectServerToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDisconnectServerToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2SDisconnectServerToBattleShardReq::MergeFrom(const S2SDisconnectServerToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SDisconnectServerToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDisconnectServerToBattleShardReq::CopyFrom(const S2SDisconnectServerToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDisconnectServerToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDisconnectServerToBattleShardReq::IsInitialized() const {
  return true;
}

void S2SDisconnectServerToBattleShardReq::Swap(S2SDisconnectServerToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDisconnectServerToBattleShardReq::InternalSwap(S2SDisconnectServerToBattleShardReq* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDisconnectServerToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateRoomToBattleProxyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateRoomToBattleProxyReq::kMatchidFieldNumber;
const int S2SCreateRoomToBattleProxyReq::kRoomidFieldNumber;
const int S2SCreateRoomToBattleProxyReq::kMaxplayercountFieldNumber;
const int S2SCreateRoomToBattleProxyReq::kBattleserveridFieldNumber;
const int S2SCreateRoomToBattleProxyReq::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateRoomToBattleProxyReq::S2SCreateRoomToBattleProxyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SCreateRoomToBattleProxyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateRoomToBattleProxyReq)
}
S2SCreateRoomToBattleProxyReq::S2SCreateRoomToBattleProxyReq(const S2SCreateRoomToBattleProxyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&battleserverid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(battleserverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateRoomToBattleProxyReq)
}

void S2SCreateRoomToBattleProxyReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleserverid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleserverid_));
}

S2SCreateRoomToBattleProxyReq::~S2SCreateRoomToBattleProxyReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateRoomToBattleProxyReq)
  SharedDtor();
}

void S2SCreateRoomToBattleProxyReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateRoomToBattleProxyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateRoomToBattleProxyReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateRoomToBattleProxyReq& S2SCreateRoomToBattleProxyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SCreateRoomToBattleProxyReq.base);
  return *internal_default_instance();
}


void S2SCreateRoomToBattleProxyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleserverid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleserverid_));
  _internal_metadata_.Clear();
}

bool S2SCreateRoomToBattleProxyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxplayercount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxplayercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleserverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateRoomToBattleProxyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateRoomToBattleProxyReq)
  return false;
#undef DO_
}

void S2SCreateRoomToBattleProxyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 maxplayercount = 3;
  if (this->maxplayercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxplayercount(), output);
  }

  // uint64 battleserverid = 4;
  if (this->battleserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->battleserverid(), output);
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateRoomToBattleProxyReq)
}

::google::protobuf::uint8* S2SCreateRoomToBattleProxyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 maxplayercount = 3;
  if (this->maxplayercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxplayercount(), target);
  }

  // uint64 battleserverid = 4;
  if (this->battleserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->battleserverid(), target);
  }

  // bytes version = 5;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateRoomToBattleProxyReq)
  return target;
}

size_t S2SCreateRoomToBattleProxyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 5;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 maxplayercount = 3;
  if (this->maxplayercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayercount());
  }

  // uint64 battleserverid = 4;
  if (this->battleserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleserverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateRoomToBattleProxyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateRoomToBattleProxyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateRoomToBattleProxyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateRoomToBattleProxyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateRoomToBattleProxyReq)
    MergeFrom(*source);
  }
}

void S2SCreateRoomToBattleProxyReq::MergeFrom(const S2SCreateRoomToBattleProxyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.maxplayercount() != 0) {
    set_maxplayercount(from.maxplayercount());
  }
  if (from.battleserverid() != 0) {
    set_battleserverid(from.battleserverid());
  }
}

void S2SCreateRoomToBattleProxyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateRoomToBattleProxyReq::CopyFrom(const S2SCreateRoomToBattleProxyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateRoomToBattleProxyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateRoomToBattleProxyReq::IsInitialized() const {
  return true;
}

void S2SCreateRoomToBattleProxyReq::Swap(S2SCreateRoomToBattleProxyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateRoomToBattleProxyReq::InternalSwap(S2SCreateRoomToBattleProxyReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(maxplayercount_, other->maxplayercount_);
  swap(battleserverid_, other->battleserverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateRoomToBattleProxyReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateRoomToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateRoomToBattleShardReq::kMatchidFieldNumber;
const int S2SCreateRoomToBattleShardReq::kRoomidFieldNumber;
const int S2SCreateRoomToBattleShardReq::kMatchshardidFieldNumber;
const int S2SCreateRoomToBattleShardReq::kMaxplayercountFieldNumber;
const int S2SCreateRoomToBattleShardReq::kBattleserveridFieldNumber;
const int S2SCreateRoomToBattleShardReq::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateRoomToBattleShardReq::S2SCreateRoomToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SCreateRoomToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateRoomToBattleShardReq)
}
S2SCreateRoomToBattleShardReq::S2SCreateRoomToBattleShardReq(const S2SCreateRoomToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&battleserverid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(battleserverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateRoomToBattleShardReq)
}

void S2SCreateRoomToBattleShardReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleserverid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleserverid_));
}

S2SCreateRoomToBattleShardReq::~S2SCreateRoomToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateRoomToBattleShardReq)
  SharedDtor();
}

void S2SCreateRoomToBattleShardReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SCreateRoomToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateRoomToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateRoomToBattleShardReq& S2SCreateRoomToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SCreateRoomToBattleShardReq.base);
  return *internal_default_instance();
}


void S2SCreateRoomToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleserverid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleserverid_));
  _internal_metadata_.Clear();
}

bool S2SCreateRoomToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateRoomToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matchshardid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matchshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxplayercount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxplayercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleserverid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleserverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateRoomToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateRoomToBattleShardReq)
  return false;
#undef DO_
}

void S2SCreateRoomToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint64 matchshardid = 3;
  if (this->matchshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->matchshardid(), output);
  }

  // uint32 maxplayercount = 4;
  if (this->maxplayercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxplayercount(), output);
  }

  // uint64 battleserverid = 5;
  if (this->battleserverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->battleserverid(), output);
  }

  // bytes version = 6;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateRoomToBattleShardReq)
}

::google::protobuf::uint8* S2SCreateRoomToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint64 matchshardid = 3;
  if (this->matchshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->matchshardid(), target);
  }

  // uint32 maxplayercount = 4;
  if (this->maxplayercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxplayercount(), target);
  }

  // uint64 battleserverid = 5;
  if (this->battleserverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->battleserverid(), target);
  }

  // bytes version = 6;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateRoomToBattleShardReq)
  return target;
}

size_t S2SCreateRoomToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateRoomToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 6;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 maxplayercount = 4;
  if (this->maxplayercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayercount());
  }

  // uint64 matchshardid = 3;
  if (this->matchshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matchshardid());
  }

  // uint64 battleserverid = 5;
  if (this->battleserverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleserverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateRoomToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateRoomToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateRoomToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateRoomToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateRoomToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateRoomToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2SCreateRoomToBattleShardReq::MergeFrom(const S2SCreateRoomToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateRoomToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.maxplayercount() != 0) {
    set_maxplayercount(from.maxplayercount());
  }
  if (from.matchshardid() != 0) {
    set_matchshardid(from.matchshardid());
  }
  if (from.battleserverid() != 0) {
    set_battleserverid(from.battleserverid());
  }
}

void S2SCreateRoomToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateRoomToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateRoomToBattleShardReq::CopyFrom(const S2SCreateRoomToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateRoomToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateRoomToBattleShardReq::IsInitialized() const {
  return true;
}

void S2SCreateRoomToBattleShardReq::Swap(S2SCreateRoomToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateRoomToBattleShardReq::InternalSwap(S2SCreateRoomToBattleShardReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(maxplayercount_, other->maxplayercount_);
  swap(matchshardid_, other->matchshardid_);
  swap(battleserverid_, other->battleserverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateRoomToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SCreateRoomToMatchShardAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SCreateRoomToMatchShardAck::kMatchidFieldNumber;
const int S2SCreateRoomToMatchShardAck::kRoomidFieldNumber;
const int S2SCreateRoomToMatchShardAck::kBattleshardidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SCreateRoomToMatchShardAck::S2SCreateRoomToMatchShardAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SCreateRoomToMatchShardAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SCreateRoomToMatchShardAck)
}
S2SCreateRoomToMatchShardAck::S2SCreateRoomToMatchShardAck(const S2SCreateRoomToMatchShardAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SCreateRoomToMatchShardAck)
}

void S2SCreateRoomToMatchShardAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
}

S2SCreateRoomToMatchShardAck::~S2SCreateRoomToMatchShardAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SCreateRoomToMatchShardAck)
  SharedDtor();
}

void S2SCreateRoomToMatchShardAck::SharedDtor() {
}

void S2SCreateRoomToMatchShardAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SCreateRoomToMatchShardAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SCreateRoomToMatchShardAck& S2SCreateRoomToMatchShardAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SCreateRoomToMatchShardAck.base);
  return *internal_default_instance();
}


void S2SCreateRoomToMatchShardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SCreateRoomToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool S2SCreateRoomToMatchShardAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SCreateRoomToMatchShardAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleshardid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SCreateRoomToMatchShardAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SCreateRoomToMatchShardAck)
  return false;
#undef DO_
}

void S2SCreateRoomToMatchShardAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SCreateRoomToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint64 battleshardid = 3;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->battleshardid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SCreateRoomToMatchShardAck)
}

::google::protobuf::uint8* S2SCreateRoomToMatchShardAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SCreateRoomToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint64 battleshardid = 3;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->battleshardid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SCreateRoomToMatchShardAck)
  return target;
}

size_t S2SCreateRoomToMatchShardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SCreateRoomToMatchShardAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 battleshardid = 3;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SCreateRoomToMatchShardAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SCreateRoomToMatchShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SCreateRoomToMatchShardAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SCreateRoomToMatchShardAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SCreateRoomToMatchShardAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SCreateRoomToMatchShardAck)
    MergeFrom(*source);
  }
}

void S2SCreateRoomToMatchShardAck::MergeFrom(const S2SCreateRoomToMatchShardAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SCreateRoomToMatchShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void S2SCreateRoomToMatchShardAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SCreateRoomToMatchShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SCreateRoomToMatchShardAck::CopyFrom(const S2SCreateRoomToMatchShardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SCreateRoomToMatchShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SCreateRoomToMatchShardAck::IsInitialized() const {
  return true;
}

void S2SCreateRoomToMatchShardAck::Swap(S2SCreateRoomToMatchShardAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SCreateRoomToMatchShardAck::InternalSwap(S2SCreateRoomToMatchShardAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(battleshardid_, other->battleshardid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SCreateRoomToMatchShardAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddCampToBattleShardReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddCampToBattleShardReq_default_instance_._instance.get_mutable()->pbcamp_ = const_cast< ::KFMsg::PBBattleCamp*>(
      ::KFMsg::PBBattleCamp::internal_default_instance());
}
void S2SAddCampToBattleShardReq::clear_pbcamp() {
  if (GetArenaNoVirtual() == NULL && pbcamp_ != NULL) {
    delete pbcamp_;
  }
  pbcamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddCampToBattleShardReq::kRoomidFieldNumber;
const int S2SAddCampToBattleShardReq::kPbcampFieldNumber;
const int S2SAddCampToBattleShardReq::kMatchidFieldNumber;
const int S2SAddCampToBattleShardReq::kMatchshardidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddCampToBattleShardReq::S2SAddCampToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SAddCampToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddCampToBattleShardReq)
}
S2SAddCampToBattleShardReq::S2SAddCampToBattleShardReq(const S2SAddCampToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbcamp()) {
    pbcamp_ = new ::KFMsg::PBBattleCamp(*from.pbcamp_);
  } else {
    pbcamp_ = NULL;
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddCampToBattleShardReq)
}

void S2SAddCampToBattleShardReq::SharedCtor() {
  ::memset(&pbcamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&pbcamp_)) + sizeof(matchid_));
}

S2SAddCampToBattleShardReq::~S2SAddCampToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddCampToBattleShardReq)
  SharedDtor();
}

void S2SAddCampToBattleShardReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbcamp_;
}

void S2SAddCampToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddCampToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddCampToBattleShardReq& S2SAddCampToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SAddCampToBattleShardReq.base);
  return *internal_default_instance();
}


void S2SAddCampToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddCampToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbcamp_ != NULL) {
    delete pbcamp_;
  }
  pbcamp_ = NULL;
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool S2SAddCampToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddCampToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBBattleCamp pbcamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbcamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matchshardid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matchshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddCampToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddCampToBattleShardReq)
  return false;
#undef DO_
}

void S2SAddCampToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddCampToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // .KFMsg.PBBattleCamp pbcamp = 2;
  if (this->has_pbcamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbcamp(), output);
  }

  // uint32 matchid = 3;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->matchid(), output);
  }

  // uint64 matchshardid = 4;
  if (this->matchshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->matchshardid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddCampToBattleShardReq)
}

::google::protobuf::uint8* S2SAddCampToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddCampToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // .KFMsg.PBBattleCamp pbcamp = 2;
  if (this->has_pbcamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbcamp(), deterministic, target);
  }

  // uint32 matchid = 3;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->matchid(), target);
  }

  // uint64 matchshardid = 4;
  if (this->matchshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->matchshardid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddCampToBattleShardReq)
  return target;
}

size_t S2SAddCampToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddCampToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBBattleCamp pbcamp = 2;
  if (this->has_pbcamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbcamp_);
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 matchshardid = 4;
  if (this->matchshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matchshardid());
  }

  // uint32 matchid = 3;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddCampToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddCampToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddCampToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddCampToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddCampToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddCampToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2SAddCampToBattleShardReq::MergeFrom(const S2SAddCampToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddCampToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbcamp()) {
    mutable_pbcamp()->::KFMsg::PBBattleCamp::MergeFrom(from.pbcamp());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchshardid() != 0) {
    set_matchshardid(from.matchshardid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void S2SAddCampToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddCampToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddCampToBattleShardReq::CopyFrom(const S2SAddCampToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddCampToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddCampToBattleShardReq::IsInitialized() const {
  return true;
}

void S2SAddCampToBattleShardReq::Swap(S2SAddCampToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddCampToBattleShardReq::InternalSwap(S2SAddCampToBattleShardReq* other) {
  using std::swap;
  swap(pbcamp_, other->pbcamp_);
  swap(roomid_, other->roomid_);
  swap(matchshardid_, other->matchshardid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddCampToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddCampToMatchShardAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddCampToMatchShardAck::kMatchidFieldNumber;
const int S2SAddCampToMatchShardAck::kRoomidFieldNumber;
const int S2SAddCampToMatchShardAck::kCampidFieldNumber;
const int S2SAddCampToMatchShardAck::kAddokFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddCampToMatchShardAck::S2SAddCampToMatchShardAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SAddCampToMatchShardAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddCampToMatchShardAck)
}
S2SAddCampToMatchShardAck::S2SAddCampToMatchShardAck(const S2SAddCampToMatchShardAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&addok_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(addok_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddCampToMatchShardAck)
}

void S2SAddCampToMatchShardAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addok_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(addok_));
}

S2SAddCampToMatchShardAck::~S2SAddCampToMatchShardAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddCampToMatchShardAck)
  SharedDtor();
}

void S2SAddCampToMatchShardAck::SharedDtor() {
}

void S2SAddCampToMatchShardAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddCampToMatchShardAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddCampToMatchShardAck& S2SAddCampToMatchShardAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SAddCampToMatchShardAck.base);
  return *internal_default_instance();
}


void S2SAddCampToMatchShardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddCampToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addok_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(addok_));
  _internal_metadata_.Clear();
}

bool S2SAddCampToMatchShardAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddCampToMatchShardAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool addok = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &addok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddCampToMatchShardAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddCampToMatchShardAck)
  return false;
#undef DO_
}

void S2SAddCampToMatchShardAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddCampToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // bool addok = 4;
  if (this->addok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->addok(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddCampToMatchShardAck)
}

::google::protobuf::uint8* S2SAddCampToMatchShardAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddCampToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // bool addok = 4;
  if (this->addok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->addok(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddCampToMatchShardAck)
  return target;
}

size_t S2SAddCampToMatchShardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddCampToMatchShardAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  // bool addok = 4;
  if (this->addok() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddCampToMatchShardAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddCampToMatchShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddCampToMatchShardAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddCampToMatchShardAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddCampToMatchShardAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddCampToMatchShardAck)
    MergeFrom(*source);
  }
}

void S2SAddCampToMatchShardAck::MergeFrom(const S2SAddCampToMatchShardAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddCampToMatchShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
  if (from.addok() != 0) {
    set_addok(from.addok());
  }
}

void S2SAddCampToMatchShardAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddCampToMatchShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddCampToMatchShardAck::CopyFrom(const S2SAddCampToMatchShardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddCampToMatchShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddCampToMatchShardAck::IsInitialized() const {
  return true;
}

void S2SAddCampToMatchShardAck::Swap(S2SAddCampToMatchShardAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddCampToMatchShardAck::InternalSwap(S2SAddCampToMatchShardAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(campid_, other->campid_);
  swap(addok_, other->addok_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddCampToMatchShardAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOpenBattleRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOpenBattleRoomReq::kMatchidFieldNumber;
const int S2SOpenBattleRoomReq::kRoomidFieldNumber;
const int S2SOpenBattleRoomReq::kBattleshardidFieldNumber;
const int S2SOpenBattleRoomReq::kMaxplayercountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOpenBattleRoomReq::S2SOpenBattleRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenBattleRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOpenBattleRoomReq)
}
S2SOpenBattleRoomReq::S2SOpenBattleRoomReq(const S2SOpenBattleRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&battleshardid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(battleshardid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOpenBattleRoomReq)
}

void S2SOpenBattleRoomReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleshardid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleshardid_));
}

S2SOpenBattleRoomReq::~S2SOpenBattleRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOpenBattleRoomReq)
  SharedDtor();
}

void S2SOpenBattleRoomReq::SharedDtor() {
}

void S2SOpenBattleRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOpenBattleRoomReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOpenBattleRoomReq& S2SOpenBattleRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenBattleRoomReq.base);
  return *internal_default_instance();
}


void S2SOpenBattleRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOpenBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleshardid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleshardid_));
  _internal_metadata_.Clear();
}

bool S2SOpenBattleRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOpenBattleRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleshardid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxplayercount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxplayercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOpenBattleRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOpenBattleRoomReq)
  return false;
#undef DO_
}

void S2SOpenBattleRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOpenBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint64 battleshardid = 3;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->battleshardid(), output);
  }

  // uint32 maxplayercount = 4;
  if (this->maxplayercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxplayercount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOpenBattleRoomReq)
}

::google::protobuf::uint8* S2SOpenBattleRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOpenBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint64 battleshardid = 3;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->battleshardid(), target);
  }

  // uint32 maxplayercount = 4;
  if (this->maxplayercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxplayercount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOpenBattleRoomReq)
  return target;
}

size_t S2SOpenBattleRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOpenBattleRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 maxplayercount = 4;
  if (this->maxplayercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayercount());
  }

  // uint64 battleshardid = 3;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOpenBattleRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOpenBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOpenBattleRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOpenBattleRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOpenBattleRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOpenBattleRoomReq)
    MergeFrom(*source);
  }
}

void S2SOpenBattleRoomReq::MergeFrom(const S2SOpenBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOpenBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.maxplayercount() != 0) {
    set_maxplayercount(from.maxplayercount());
  }
  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
}

void S2SOpenBattleRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOpenBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOpenBattleRoomReq::CopyFrom(const S2SOpenBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOpenBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOpenBattleRoomReq::IsInitialized() const {
  return true;
}

void S2SOpenBattleRoomReq::Swap(S2SOpenBattleRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOpenBattleRoomReq::InternalSwap(S2SOpenBattleRoomReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(maxplayercount_, other->maxplayercount_);
  swap(battleshardid_, other->battleshardid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOpenBattleRoomReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOpenBattleRoomAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOpenBattleRoomAck::kBattleshardidFieldNumber;
const int S2SOpenBattleRoomAck::kMatchidFieldNumber;
const int S2SOpenBattleRoomAck::kRoomidFieldNumber;
const int S2SOpenBattleRoomAck::kResultFieldNumber;
const int S2SOpenBattleRoomAck::kWaittimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOpenBattleRoomAck::S2SOpenBattleRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenBattleRoomAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOpenBattleRoomAck)
}
S2SOpenBattleRoomAck::S2SOpenBattleRoomAck(const S2SOpenBattleRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battleshardid_, &from.battleshardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&waittime_) -
    reinterpret_cast<char*>(&battleshardid_)) + sizeof(waittime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOpenBattleRoomAck)
}

void S2SOpenBattleRoomAck::SharedCtor() {
  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waittime_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(waittime_));
}

S2SOpenBattleRoomAck::~S2SOpenBattleRoomAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOpenBattleRoomAck)
  SharedDtor();
}

void S2SOpenBattleRoomAck::SharedDtor() {
}

void S2SOpenBattleRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOpenBattleRoomAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOpenBattleRoomAck& S2SOpenBattleRoomAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenBattleRoomAck.base);
  return *internal_default_instance();
}


void S2SOpenBattleRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOpenBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waittime_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(waittime_));
  _internal_metadata_.Clear();
}

bool S2SOpenBattleRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOpenBattleRoomAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 battleshardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 waittime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOpenBattleRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOpenBattleRoomAck)
  return false;
#undef DO_
}

void S2SOpenBattleRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOpenBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battleshardid(), output);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matchid(), output);
  }

  // uint64 roomid = 3;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roomid(), output);
  }

  // uint32 result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->result(), output);
  }

  // uint32 waittime = 5;
  if (this->waittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->waittime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOpenBattleRoomAck)
}

::google::protobuf::uint8* S2SOpenBattleRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOpenBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battleshardid(), target);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matchid(), target);
  }

  // uint64 roomid = 3;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roomid(), target);
  }

  // uint32 result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->result(), target);
  }

  // uint32 waittime = 5;
  if (this->waittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->waittime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOpenBattleRoomAck)
  return target;
}

size_t S2SOpenBattleRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOpenBattleRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint64 roomid = 3;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // uint32 waittime = 5;
  if (this->waittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->waittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOpenBattleRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOpenBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOpenBattleRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOpenBattleRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOpenBattleRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOpenBattleRoomAck)
    MergeFrom(*source);
  }
}

void S2SOpenBattleRoomAck::MergeFrom(const S2SOpenBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOpenBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.waittime() != 0) {
    set_waittime(from.waittime());
  }
}

void S2SOpenBattleRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOpenBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOpenBattleRoomAck::CopyFrom(const S2SOpenBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOpenBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOpenBattleRoomAck::IsInitialized() const {
  return true;
}

void S2SOpenBattleRoomAck::Swap(S2SOpenBattleRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOpenBattleRoomAck::InternalSwap(S2SOpenBattleRoomAck* other) {
  using std::swap;
  swap(battleshardid_, other->battleshardid_);
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(result_, other->result_);
  swap(waittime_, other->waittime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOpenBattleRoomAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOpenBattleRoomToShardAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOpenBattleRoomToShardAck::kMatchidFieldNumber;
const int S2SOpenBattleRoomToShardAck::kRoomidFieldNumber;
const int S2SOpenBattleRoomToShardAck::kResultFieldNumber;
const int S2SOpenBattleRoomToShardAck::kWaittimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOpenBattleRoomToShardAck::S2SOpenBattleRoomToShardAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenBattleRoomToShardAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOpenBattleRoomToShardAck)
}
S2SOpenBattleRoomToShardAck::S2SOpenBattleRoomToShardAck(const S2SOpenBattleRoomToShardAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&waittime_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(waittime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOpenBattleRoomToShardAck)
}

void S2SOpenBattleRoomToShardAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waittime_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(waittime_));
}

S2SOpenBattleRoomToShardAck::~S2SOpenBattleRoomToShardAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOpenBattleRoomToShardAck)
  SharedDtor();
}

void S2SOpenBattleRoomToShardAck::SharedDtor() {
}

void S2SOpenBattleRoomToShardAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOpenBattleRoomToShardAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOpenBattleRoomToShardAck& S2SOpenBattleRoomToShardAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenBattleRoomToShardAck.base);
  return *internal_default_instance();
}


void S2SOpenBattleRoomToShardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOpenBattleRoomToShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waittime_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(waittime_));
  _internal_metadata_.Clear();
}

bool S2SOpenBattleRoomToShardAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOpenBattleRoomToShardAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 waittime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOpenBattleRoomToShardAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOpenBattleRoomToShardAck)
  return false;
#undef DO_
}

void S2SOpenBattleRoomToShardAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOpenBattleRoomToShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result(), output);
  }

  // uint32 waittime = 4;
  if (this->waittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->waittime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOpenBattleRoomToShardAck)
}

::google::protobuf::uint8* S2SOpenBattleRoomToShardAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOpenBattleRoomToShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result(), target);
  }

  // uint32 waittime = 4;
  if (this->waittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->waittime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOpenBattleRoomToShardAck)
  return target;
}

size_t S2SOpenBattleRoomToShardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOpenBattleRoomToShardAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // uint32 waittime = 4;
  if (this->waittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->waittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOpenBattleRoomToShardAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOpenBattleRoomToShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOpenBattleRoomToShardAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOpenBattleRoomToShardAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOpenBattleRoomToShardAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOpenBattleRoomToShardAck)
    MergeFrom(*source);
  }
}

void S2SOpenBattleRoomToShardAck::MergeFrom(const S2SOpenBattleRoomToShardAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOpenBattleRoomToShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.waittime() != 0) {
    set_waittime(from.waittime());
  }
}

void S2SOpenBattleRoomToShardAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOpenBattleRoomToShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOpenBattleRoomToShardAck::CopyFrom(const S2SOpenBattleRoomToShardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOpenBattleRoomToShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOpenBattleRoomToShardAck::IsInitialized() const {
  return true;
}

void S2SOpenBattleRoomToShardAck::Swap(S2SOpenBattleRoomToShardAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOpenBattleRoomToShardAck::InternalSwap(S2SOpenBattleRoomToShardAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(result_, other->result_);
  swap(waittime_, other->waittime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOpenBattleRoomToShardAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOpenRoomToMatchShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOpenRoomToMatchShardReq::kMatchidFieldNumber;
const int S2SOpenRoomToMatchShardReq::kRoomidFieldNumber;
const int S2SOpenRoomToMatchShardReq::kWaittimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOpenRoomToMatchShardReq::S2SOpenRoomToMatchShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenRoomToMatchShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOpenRoomToMatchShardReq)
}
S2SOpenRoomToMatchShardReq::S2SOpenRoomToMatchShardReq(const S2SOpenRoomToMatchShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&waittime_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(waittime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOpenRoomToMatchShardReq)
}

void S2SOpenRoomToMatchShardReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waittime_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(waittime_));
}

S2SOpenRoomToMatchShardReq::~S2SOpenRoomToMatchShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOpenRoomToMatchShardReq)
  SharedDtor();
}

void S2SOpenRoomToMatchShardReq::SharedDtor() {
}

void S2SOpenRoomToMatchShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOpenRoomToMatchShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOpenRoomToMatchShardReq& S2SOpenRoomToMatchShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenRoomToMatchShardReq.base);
  return *internal_default_instance();
}


void S2SOpenRoomToMatchShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOpenRoomToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&waittime_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(waittime_));
  _internal_metadata_.Clear();
}

bool S2SOpenRoomToMatchShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOpenRoomToMatchShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 waittime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waittime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOpenRoomToMatchShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOpenRoomToMatchShardReq)
  return false;
#undef DO_
}

void S2SOpenRoomToMatchShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOpenRoomToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 waittime = 3;
  if (this->waittime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->waittime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOpenRoomToMatchShardReq)
}

::google::protobuf::uint8* S2SOpenRoomToMatchShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOpenRoomToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 waittime = 3;
  if (this->waittime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->waittime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOpenRoomToMatchShardReq)
  return target;
}

size_t S2SOpenRoomToMatchShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOpenRoomToMatchShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // uint32 waittime = 3;
  if (this->waittime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->waittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOpenRoomToMatchShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOpenRoomToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOpenRoomToMatchShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOpenRoomToMatchShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOpenRoomToMatchShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOpenRoomToMatchShardReq)
    MergeFrom(*source);
  }
}

void S2SOpenRoomToMatchShardReq::MergeFrom(const S2SOpenRoomToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOpenRoomToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.waittime() != 0) {
    set_waittime(from.waittime());
  }
}

void S2SOpenRoomToMatchShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOpenRoomToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOpenRoomToMatchShardReq::CopyFrom(const S2SOpenRoomToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOpenRoomToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOpenRoomToMatchShardReq::IsInitialized() const {
  return true;
}

void S2SOpenRoomToMatchShardReq::Swap(S2SOpenRoomToMatchShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOpenRoomToMatchShardReq::InternalSwap(S2SOpenRoomToMatchShardReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  swap(waittime_, other->waittime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOpenRoomToMatchShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOpenRoomToBattleShardAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOpenRoomToBattleShardAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOpenRoomToBattleShardAck::S2SOpenRoomToBattleShardAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenRoomToBattleShardAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOpenRoomToBattleShardAck)
}
S2SOpenRoomToBattleShardAck::S2SOpenRoomToBattleShardAck(const S2SOpenRoomToBattleShardAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOpenRoomToBattleShardAck)
}

void S2SOpenRoomToBattleShardAck::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

S2SOpenRoomToBattleShardAck::~S2SOpenRoomToBattleShardAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOpenRoomToBattleShardAck)
  SharedDtor();
}

void S2SOpenRoomToBattleShardAck::SharedDtor() {
}

void S2SOpenRoomToBattleShardAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOpenRoomToBattleShardAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOpenRoomToBattleShardAck& S2SOpenRoomToBattleShardAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SOpenRoomToBattleShardAck.base);
  return *internal_default_instance();
}


void S2SOpenRoomToBattleShardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOpenRoomToBattleShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SOpenRoomToBattleShardAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOpenRoomToBattleShardAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOpenRoomToBattleShardAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOpenRoomToBattleShardAck)
  return false;
#undef DO_
}

void S2SOpenRoomToBattleShardAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOpenRoomToBattleShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOpenRoomToBattleShardAck)
}

::google::protobuf::uint8* S2SOpenRoomToBattleShardAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOpenRoomToBattleShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOpenRoomToBattleShardAck)
  return target;
}

size_t S2SOpenRoomToBattleShardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOpenRoomToBattleShardAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOpenRoomToBattleShardAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOpenRoomToBattleShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOpenRoomToBattleShardAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOpenRoomToBattleShardAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOpenRoomToBattleShardAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOpenRoomToBattleShardAck)
    MergeFrom(*source);
  }
}

void S2SOpenRoomToBattleShardAck::MergeFrom(const S2SOpenRoomToBattleShardAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOpenRoomToBattleShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SOpenRoomToBattleShardAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOpenRoomToBattleShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOpenRoomToBattleShardAck::CopyFrom(const S2SOpenRoomToBattleShardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOpenRoomToBattleShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOpenRoomToBattleShardAck::IsInitialized() const {
  return true;
}

void S2SOpenRoomToBattleShardAck::Swap(S2SOpenRoomToBattleShardAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOpenRoomToBattleShardAck::InternalSwap(S2SOpenRoomToBattleShardAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOpenRoomToBattleShardAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterBattleRoomReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SPlayerEnterBattleRoomReq_default_instance_._instance.get_mutable()->player_ = const_cast< ::KFMsg::PBBattlePlayer*>(
      ::KFMsg::PBBattlePlayer::internal_default_instance());
}
void S2SPlayerEnterBattleRoomReq::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) {
    delete player_;
  }
  player_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterBattleRoomReq::kRoomidFieldNumber;
const int S2SPlayerEnterBattleRoomReq::kPlayerFieldNumber;
const int S2SPlayerEnterBattleRoomReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterBattleRoomReq::S2SPlayerEnterBattleRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerEnterBattleRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterBattleRoomReq)
}
S2SPlayerEnterBattleRoomReq::S2SPlayerEnterBattleRoomReq(const S2SPlayerEnterBattleRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_player()) {
    player_ = new ::KFMsg::PBBattlePlayer(*from.player_);
  } else {
    player_ = NULL;
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterBattleRoomReq)
}

void S2SPlayerEnterBattleRoomReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&player_)) + sizeof(roomid_));
}

S2SPlayerEnterBattleRoomReq::~S2SPlayerEnterBattleRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterBattleRoomReq)
  SharedDtor();
}

void S2SPlayerEnterBattleRoomReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_;
}

void S2SPlayerEnterBattleRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterBattleRoomReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterBattleRoomReq& S2SPlayerEnterBattleRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerEnterBattleRoomReq.base);
  return *internal_default_instance();
}


void S2SPlayerEnterBattleRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_ != NULL) {
    delete player_;
  }
  player_ = NULL;
  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterBattleRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBBattlePlayer player = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterBattleRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterBattleRoomReq)
  return false;
#undef DO_
}

void S2SPlayerEnterBattleRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // .KFMsg.PBBattlePlayer player = 2;
  if (this->has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_player(), output);
  }

  // bytes token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterBattleRoomReq)
}

::google::protobuf::uint8* S2SPlayerEnterBattleRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // .KFMsg.PBBattlePlayer player = 2;
  if (this->has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_player(), deterministic, target);
  }

  // bytes token = 3;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterBattleRoomReq)
  return target;
}

size_t S2SPlayerEnterBattleRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // .KFMsg.PBBattlePlayer player = 2;
  if (this->has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterBattleRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterBattleRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterBattleRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterBattleRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterBattleRoomReq)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterBattleRoomReq::MergeFrom(const S2SPlayerEnterBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_player()) {
    mutable_player()->::KFMsg::PBBattlePlayer::MergeFrom(from.player());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SPlayerEnterBattleRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterBattleRoomReq::CopyFrom(const S2SPlayerEnterBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterBattleRoomReq::IsInitialized() const {
  return true;
}

void S2SPlayerEnterBattleRoomReq::Swap(S2SPlayerEnterBattleRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterBattleRoomReq::InternalSwap(S2SPlayerEnterBattleRoomReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_, other->player_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterBattleRoomReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterBattleRoomAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterBattleRoomAck::kBattleshardidFieldNumber;
const int S2SPlayerEnterBattleRoomAck::kRoomidFieldNumber;
const int S2SPlayerEnterBattleRoomAck::kCampidFieldNumber;
const int S2SPlayerEnterBattleRoomAck::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterBattleRoomAck::S2SPlayerEnterBattleRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerEnterBattleRoomAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterBattleRoomAck)
}
S2SPlayerEnterBattleRoomAck::S2SPlayerEnterBattleRoomAck(const S2SPlayerEnterBattleRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battleshardid_, &from.battleshardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&battleshardid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterBattleRoomAck)
}

void S2SPlayerEnterBattleRoomAck::SharedCtor() {
  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(campid_));
}

S2SPlayerEnterBattleRoomAck::~S2SPlayerEnterBattleRoomAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterBattleRoomAck)
  SharedDtor();
}

void S2SPlayerEnterBattleRoomAck::SharedDtor() {
}

void S2SPlayerEnterBattleRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterBattleRoomAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterBattleRoomAck& S2SPlayerEnterBattleRoomAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerEnterBattleRoomAck.base);
  return *internal_default_instance();
}


void S2SPlayerEnterBattleRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterBattleRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 battleshardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterBattleRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterBattleRoomAck)
  return false;
#undef DO_
}

void S2SPlayerEnterBattleRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battleshardid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterBattleRoomAck)
}

::google::protobuf::uint8* S2SPlayerEnterBattleRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battleshardid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterBattleRoomAck)
  return target;
}

size_t S2SPlayerEnterBattleRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterBattleRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterBattleRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterBattleRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterBattleRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterBattleRoomAck)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterBattleRoomAck::MergeFrom(const S2SPlayerEnterBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerEnterBattleRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterBattleRoomAck::CopyFrom(const S2SPlayerEnterBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterBattleRoomAck::IsInitialized() const {
  return true;
}

void S2SPlayerEnterBattleRoomAck::Swap(S2SPlayerEnterBattleRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterBattleRoomAck::InternalSwap(S2SPlayerEnterBattleRoomAck* other) {
  using std::swap;
  swap(battleshardid_, other->battleshardid_);
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterBattleRoomAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterRoomToBattleShardAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterRoomToBattleShardAck::kRoomidFieldNumber;
const int S2SPlayerEnterRoomToBattleShardAck::kCampidFieldNumber;
const int S2SPlayerEnterRoomToBattleShardAck::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterRoomToBattleShardAck::S2SPlayerEnterRoomToBattleShardAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerEnterRoomToBattleShardAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
}
S2SPlayerEnterRoomToBattleShardAck::S2SPlayerEnterRoomToBattleShardAck(const S2SPlayerEnterRoomToBattleShardAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
}

void S2SPlayerEnterRoomToBattleShardAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
}

S2SPlayerEnterRoomToBattleShardAck::~S2SPlayerEnterRoomToBattleShardAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  SharedDtor();
}

void S2SPlayerEnterRoomToBattleShardAck::SharedDtor() {
}

void S2SPlayerEnterRoomToBattleShardAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterRoomToBattleShardAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterRoomToBattleShardAck& S2SPlayerEnterRoomToBattleShardAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerEnterRoomToBattleShardAck.base);
  return *internal_default_instance();
}


void S2SPlayerEnterRoomToBattleShardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterRoomToBattleShardAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  return false;
#undef DO_
}

void S2SPlayerEnterRoomToBattleShardAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->campid(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
}

::google::protobuf::uint8* S2SPlayerEnterRoomToBattleShardAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->campid(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  return target;
}

size_t S2SPlayerEnterRoomToBattleShardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterRoomToBattleShardAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterRoomToBattleShardAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterRoomToBattleShardAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterRoomToBattleShardAck::MergeFrom(const S2SPlayerEnterRoomToBattleShardAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerEnterRoomToBattleShardAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterRoomToBattleShardAck::CopyFrom(const S2SPlayerEnterRoomToBattleShardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterRoomToBattleShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterRoomToBattleShardAck::IsInitialized() const {
  return true;
}

void S2SPlayerEnterRoomToBattleShardAck::Swap(S2SPlayerEnterRoomToBattleShardAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterRoomToBattleShardAck::InternalSwap(S2SPlayerEnterRoomToBattleShardAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterRoomToBattleShardAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLoginBattleRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLoginBattleRoomReq::kBattleshardidFieldNumber;
const int S2SPlayerLoginBattleRoomReq::kRoomidFieldNumber;
const int S2SPlayerLoginBattleRoomReq::kCampidFieldNumber;
const int S2SPlayerLoginBattleRoomReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLoginBattleRoomReq::S2SPlayerLoginBattleRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLoginBattleRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLoginBattleRoomReq)
}
S2SPlayerLoginBattleRoomReq::S2SPlayerLoginBattleRoomReq(const S2SPlayerLoginBattleRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battleshardid_, &from.battleshardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&battleshardid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLoginBattleRoomReq)
}

void S2SPlayerLoginBattleRoomReq::SharedCtor() {
  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(campid_));
}

S2SPlayerLoginBattleRoomReq::~S2SPlayerLoginBattleRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLoginBattleRoomReq)
  SharedDtor();
}

void S2SPlayerLoginBattleRoomReq::SharedDtor() {
}

void S2SPlayerLoginBattleRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLoginBattleRoomReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLoginBattleRoomReq& S2SPlayerLoginBattleRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLoginBattleRoomReq.base);
  return *internal_default_instance();
}


void S2SPlayerLoginBattleRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLoginBattleRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 battleshardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLoginBattleRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLoginBattleRoomReq)
  return false;
#undef DO_
}

void S2SPlayerLoginBattleRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battleshardid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLoginBattleRoomReq)
}

::google::protobuf::uint8* S2SPlayerLoginBattleRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battleshardid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLoginBattleRoomReq)
  return target;
}

size_t S2SPlayerLoginBattleRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLoginBattleRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLoginBattleRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLoginBattleRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLoginBattleRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLoginBattleRoomReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLoginBattleRoomReq::MergeFrom(const S2SPlayerLoginBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerLoginBattleRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLoginBattleRoomReq::CopyFrom(const S2SPlayerLoginBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLoginBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLoginBattleRoomReq::IsInitialized() const {
  return true;
}

void S2SPlayerLoginBattleRoomReq::Swap(S2SPlayerLoginBattleRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLoginBattleRoomReq::InternalSwap(S2SPlayerLoginBattleRoomReq* other) {
  using std::swap;
  swap(battleshardid_, other->battleshardid_);
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLoginBattleRoomReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLoginBattleRoomAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLoginBattleRoomAck::kRoomidFieldNumber;
const int S2SPlayerLoginBattleRoomAck::kCampidFieldNumber;
const int S2SPlayerLoginBattleRoomAck::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLoginBattleRoomAck::S2SPlayerLoginBattleRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLoginBattleRoomAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLoginBattleRoomAck)
}
S2SPlayerLoginBattleRoomAck::S2SPlayerLoginBattleRoomAck(const S2SPlayerLoginBattleRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLoginBattleRoomAck)
}

void S2SPlayerLoginBattleRoomAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
}

S2SPlayerLoginBattleRoomAck::~S2SPlayerLoginBattleRoomAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLoginBattleRoomAck)
  SharedDtor();
}

void S2SPlayerLoginBattleRoomAck::SharedDtor() {
}

void S2SPlayerLoginBattleRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLoginBattleRoomAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLoginBattleRoomAck& S2SPlayerLoginBattleRoomAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLoginBattleRoomAck.base);
  return *internal_default_instance();
}


void S2SPlayerLoginBattleRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLoginBattleRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLoginBattleRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLoginBattleRoomAck)
  return false;
#undef DO_
}

void S2SPlayerLoginBattleRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->campid(), output);
  }

  // uint32 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLoginBattleRoomAck)
}

::google::protobuf::uint8* S2SPlayerLoginBattleRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->campid(), target);
  }

  // uint32 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLoginBattleRoomAck)
  return target;
}

size_t S2SPlayerLoginBattleRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  // uint32 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLoginBattleRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLoginBattleRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLoginBattleRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLoginBattleRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLoginBattleRoomAck)
    MergeFrom(*source);
  }
}

void S2SPlayerLoginBattleRoomAck::MergeFrom(const S2SPlayerLoginBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SPlayerLoginBattleRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLoginBattleRoomAck::CopyFrom(const S2SPlayerLoginBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLoginBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLoginBattleRoomAck::IsInitialized() const {
  return true;
}

void S2SPlayerLoginBattleRoomAck::Swap(S2SPlayerLoginBattleRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLoginBattleRoomAck::InternalSwap(S2SPlayerLoginBattleRoomAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(campid_, other->campid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLoginBattleRoomAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLoginRoomToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLoginRoomToBattleShardReq::kRoomidFieldNumber;
const int S2SPlayerLoginRoomToBattleShardReq::kCampidFieldNumber;
const int S2SPlayerLoginRoomToBattleShardReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLoginRoomToBattleShardReq::S2SPlayerLoginRoomToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLoginRoomToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
}
S2SPlayerLoginRoomToBattleShardReq::S2SPlayerLoginRoomToBattleShardReq(const S2SPlayerLoginRoomToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
}

void S2SPlayerLoginRoomToBattleShardReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
}

S2SPlayerLoginRoomToBattleShardReq::~S2SPlayerLoginRoomToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  SharedDtor();
}

void S2SPlayerLoginRoomToBattleShardReq::SharedDtor() {
}

void S2SPlayerLoginRoomToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLoginRoomToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLoginRoomToBattleShardReq& S2SPlayerLoginRoomToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLoginRoomToBattleShardReq.base);
  return *internal_default_instance();
}


void S2SPlayerLoginRoomToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLoginRoomToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  return false;
#undef DO_
}

void S2SPlayerLoginRoomToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
}

::google::protobuf::uint8* S2SPlayerLoginRoomToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  return target;
}

size_t S2SPlayerLoginRoomToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLoginRoomToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLoginRoomToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLoginRoomToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLoginRoomToBattleShardReq::MergeFrom(const S2SPlayerLoginRoomToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerLoginRoomToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLoginRoomToBattleShardReq::CopyFrom(const S2SPlayerLoginRoomToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLoginRoomToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLoginRoomToBattleShardReq::IsInitialized() const {
  return true;
}

void S2SPlayerLoginRoomToBattleShardReq::Swap(S2SPlayerLoginRoomToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLoginRoomToBattleShardReq::InternalSwap(S2SPlayerLoginRoomToBattleShardReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLoginRoomToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerCancelMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerCancelMatchReq::kRoomidFieldNumber;
const int S2SPlayerCancelMatchReq::kCampidFieldNumber;
const int S2SPlayerCancelMatchReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerCancelMatchReq::S2SPlayerCancelMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerCancelMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerCancelMatchReq)
}
S2SPlayerCancelMatchReq::S2SPlayerCancelMatchReq(const S2SPlayerCancelMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerCancelMatchReq)
}

void S2SPlayerCancelMatchReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
}

S2SPlayerCancelMatchReq::~S2SPlayerCancelMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerCancelMatchReq)
  SharedDtor();
}

void S2SPlayerCancelMatchReq::SharedDtor() {
}

void S2SPlayerCancelMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerCancelMatchReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerCancelMatchReq& S2SPlayerCancelMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerCancelMatchReq.base);
  return *internal_default_instance();
}


void S2SPlayerCancelMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerCancelMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerCancelMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerCancelMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerCancelMatchReq)
  return false;
#undef DO_
}

void S2SPlayerCancelMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->campid(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerCancelMatchReq)
}

::google::protobuf::uint8* S2SPlayerCancelMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->campid(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerCancelMatchReq)
  return target;
}

size_t S2SPlayerCancelMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerCancelMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerCancelMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerCancelMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerCancelMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerCancelMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerCancelMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerCancelMatchReq)
    MergeFrom(*source);
  }
}

void S2SPlayerCancelMatchReq::MergeFrom(const S2SPlayerCancelMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerCancelMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerCancelMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerCancelMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerCancelMatchReq::CopyFrom(const S2SPlayerCancelMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerCancelMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerCancelMatchReq::IsInitialized() const {
  return true;
}

void S2SPlayerCancelMatchReq::Swap(S2SPlayerCancelMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerCancelMatchReq::InternalSwap(S2SPlayerCancelMatchReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerCancelMatchReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveBattleRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveBattleRoomReq::kRoomidFieldNumber;
const int S2SPlayerLeaveBattleRoomReq::kBattleshardidFieldNumber;
const int S2SPlayerLeaveBattleRoomReq::kCampidFieldNumber;
const int S2SPlayerLeaveBattleRoomReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveBattleRoomReq::S2SPlayerLeaveBattleRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveBattleRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveBattleRoomReq)
}
S2SPlayerLeaveBattleRoomReq::S2SPlayerLeaveBattleRoomReq(const S2SPlayerLeaveBattleRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveBattleRoomReq)
}

void S2SPlayerLeaveBattleRoomReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
}

S2SPlayerLeaveBattleRoomReq::~S2SPlayerLeaveBattleRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveBattleRoomReq)
  SharedDtor();
}

void S2SPlayerLeaveBattleRoomReq::SharedDtor() {
}

void S2SPlayerLeaveBattleRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveBattleRoomReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveBattleRoomReq& S2SPlayerLeaveBattleRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveBattleRoomReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveBattleRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveBattleRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleshardid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveBattleRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveBattleRoomReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveBattleRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint64 battleshardid = 2;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleshardid(), output);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveBattleRoomReq)
}

::google::protobuf::uint8* S2SPlayerLeaveBattleRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint64 battleshardid = 2;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleshardid(), target);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveBattleRoomReq)
  return target;
}

size_t S2SPlayerLeaveBattleRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 battleshardid = 2;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint64 playerid = 4;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveBattleRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveBattleRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveBattleRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveBattleRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveBattleRoomReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveBattleRoomReq::MergeFrom(const S2SPlayerLeaveBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerLeaveBattleRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveBattleRoomReq::CopyFrom(const S2SPlayerLeaveBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveBattleRoomReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveBattleRoomReq::Swap(S2SPlayerLeaveBattleRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveBattleRoomReq::InternalSwap(S2SPlayerLeaveBattleRoomReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(battleshardid_, other->battleshardid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveBattleRoomReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveBattleRoomAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveBattleRoomAck::kRoomidFieldNumber;
const int S2SPlayerLeaveBattleRoomAck::kCampidFieldNumber;
const int S2SPlayerLeaveBattleRoomAck::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveBattleRoomAck::S2SPlayerLeaveBattleRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveBattleRoomAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveBattleRoomAck)
}
S2SPlayerLeaveBattleRoomAck::S2SPlayerLeaveBattleRoomAck(const S2SPlayerLeaveBattleRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveBattleRoomAck)
}

void S2SPlayerLeaveBattleRoomAck::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
}

S2SPlayerLeaveBattleRoomAck::~S2SPlayerLeaveBattleRoomAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveBattleRoomAck)
  SharedDtor();
}

void S2SPlayerLeaveBattleRoomAck::SharedDtor() {
}

void S2SPlayerLeaveBattleRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveBattleRoomAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveBattleRoomAck& S2SPlayerLeaveBattleRoomAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveBattleRoomAck.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveBattleRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveBattleRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveBattleRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveBattleRoomAck)
  return false;
#undef DO_
}

void S2SPlayerLeaveBattleRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->campid(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveBattleRoomAck)
}

::google::protobuf::uint8* S2SPlayerLeaveBattleRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->campid(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveBattleRoomAck)
  return target;
}

size_t S2SPlayerLeaveBattleRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveBattleRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveBattleRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveBattleRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveBattleRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveBattleRoomAck)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveBattleRoomAck::MergeFrom(const S2SPlayerLeaveBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerLeaveBattleRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveBattleRoomAck::CopyFrom(const S2SPlayerLeaveBattleRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveBattleRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveBattleRoomAck::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveBattleRoomAck::Swap(S2SPlayerLeaveBattleRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveBattleRoomAck::InternalSwap(S2SPlayerLeaveBattleRoomAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveBattleRoomAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveRoomToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveRoomToBattleShardReq::kRoomidFieldNumber;
const int S2SPlayerLeaveRoomToBattleShardReq::kCampidFieldNumber;
const int S2SPlayerLeaveRoomToBattleShardReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveRoomToBattleShardReq::S2SPlayerLeaveRoomToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveRoomToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
}
S2SPlayerLeaveRoomToBattleShardReq::S2SPlayerLeaveRoomToBattleShardReq(const S2SPlayerLeaveRoomToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
}

void S2SPlayerLeaveRoomToBattleShardReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
}

S2SPlayerLeaveRoomToBattleShardReq::~S2SPlayerLeaveRoomToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  SharedDtor();
}

void S2SPlayerLeaveRoomToBattleShardReq::SharedDtor() {
}

void S2SPlayerLeaveRoomToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveRoomToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveRoomToBattleShardReq& S2SPlayerLeaveRoomToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveRoomToBattleShardReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveRoomToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveRoomToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveRoomToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->campid(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
}

::google::protobuf::uint8* S2SPlayerLeaveRoomToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->campid(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  return target;
}

size_t S2SPlayerLeaveRoomToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 2;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveRoomToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveRoomToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveRoomToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveRoomToBattleShardReq::MergeFrom(const S2SPlayerLeaveRoomToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerLeaveRoomToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveRoomToBattleShardReq::CopyFrom(const S2SPlayerLeaveRoomToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveRoomToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveRoomToBattleShardReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveRoomToBattleShardReq::Swap(S2SPlayerLeaveRoomToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveRoomToBattleShardReq::InternalSwap(S2SPlayerLeaveRoomToBattleShardReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveRoomToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveRoomToMatchShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveRoomToMatchShardReq::kMatchidFieldNumber;
const int S2SPlayerLeaveRoomToMatchShardReq::kRoomidFieldNumber;
const int S2SPlayerLeaveRoomToMatchShardReq::kCampidFieldNumber;
const int S2SPlayerLeaveRoomToMatchShardReq::kGroupidFieldNumber;
const int S2SPlayerLeaveRoomToMatchShardReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveRoomToMatchShardReq::S2SPlayerLeaveRoomToMatchShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveRoomToMatchShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
}
S2SPlayerLeaveRoomToMatchShardReq::S2SPlayerLeaveRoomToMatchShardReq(const S2SPlayerLeaveRoomToMatchShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&matchid_, &from.matchid_,
    static_cast<size_t>(reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&matchid_)) + sizeof(campid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
}

void S2SPlayerLeaveRoomToMatchShardReq::SharedCtor() {
  ::memset(&matchid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&matchid_)) + sizeof(campid_));
}

S2SPlayerLeaveRoomToMatchShardReq::~S2SPlayerLeaveRoomToMatchShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  SharedDtor();
}

void S2SPlayerLeaveRoomToMatchShardReq::SharedDtor() {
}

void S2SPlayerLeaveRoomToMatchShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveRoomToMatchShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveRoomToMatchShardReq& S2SPlayerLeaveRoomToMatchShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerLeaveRoomToMatchShardReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveRoomToMatchShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&matchid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campid_) -
      reinterpret_cast<char*>(&matchid_)) + sizeof(campid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveRoomToMatchShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 campid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 groupid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveRoomToMatchShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->campid(), output);
  }

  // uint64 groupid = 4;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->groupid(), output);
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
}

::google::protobuf::uint8* S2SPlayerLeaveRoomToMatchShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->campid(), target);
  }

  // uint64 groupid = 4;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->groupid(), target);
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  return target;
}

size_t S2SPlayerLeaveRoomToMatchShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matchid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 groupid = 4;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->groupid());
  }

  // uint64 playerid = 5;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 campid = 3;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveRoomToMatchShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveRoomToMatchShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveRoomToMatchShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveRoomToMatchShardReq::MergeFrom(const S2SPlayerLeaveRoomToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
}

void S2SPlayerLeaveRoomToMatchShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveRoomToMatchShardReq::CopyFrom(const S2SPlayerLeaveRoomToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveRoomToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveRoomToMatchShardReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveRoomToMatchShardReq::Swap(S2SPlayerLeaveRoomToMatchShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveRoomToMatchShardReq::InternalSwap(S2SPlayerLeaveRoomToMatchShardReq* other) {
  using std::swap;
  swap(matchid_, other->matchid_);
  swap(roomid_, other->roomid_);
  swap(groupid_, other->groupid_);
  swap(playerid_, other->playerid_);
  swap(campid_, other->campid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveRoomToMatchShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLeaveBattleRoomToClientAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLeaveBattleRoomToClientAck::kPlayeridFieldNumber;
const int S2SLeaveBattleRoomToClientAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLeaveBattleRoomToClientAck::S2SLeaveBattleRoomToClientAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SLeaveBattleRoomToClientAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLeaveBattleRoomToClientAck)
}
S2SLeaveBattleRoomToClientAck::S2SLeaveBattleRoomToClientAck(const S2SLeaveBattleRoomToClientAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLeaveBattleRoomToClientAck)
}

void S2SLeaveBattleRoomToClientAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
}

S2SLeaveBattleRoomToClientAck::~S2SLeaveBattleRoomToClientAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLeaveBattleRoomToClientAck)
  SharedDtor();
}

void S2SLeaveBattleRoomToClientAck::SharedDtor() {
}

void S2SLeaveBattleRoomToClientAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLeaveBattleRoomToClientAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLeaveBattleRoomToClientAck& S2SLeaveBattleRoomToClientAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SLeaveBattleRoomToClientAck.base);
  return *internal_default_instance();
}


void S2SLeaveBattleRoomToClientAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
  _internal_metadata_.Clear();
}

bool S2SLeaveBattleRoomToClientAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLeaveBattleRoomToClientAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLeaveBattleRoomToClientAck)
  return false;
#undef DO_
}

void S2SLeaveBattleRoomToClientAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLeaveBattleRoomToClientAck)
}

::google::protobuf::uint8* S2SLeaveBattleRoomToClientAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLeaveBattleRoomToClientAck)
  return target;
}

size_t S2SLeaveBattleRoomToClientAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLeaveBattleRoomToClientAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLeaveBattleRoomToClientAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLeaveBattleRoomToClientAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLeaveBattleRoomToClientAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLeaveBattleRoomToClientAck)
    MergeFrom(*source);
  }
}

void S2SLeaveBattleRoomToClientAck::MergeFrom(const S2SLeaveBattleRoomToClientAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SLeaveBattleRoomToClientAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLeaveBattleRoomToClientAck::CopyFrom(const S2SLeaveBattleRoomToClientAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLeaveBattleRoomToClientAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLeaveBattleRoomToClientAck::IsInitialized() const {
  return true;
}

void S2SLeaveBattleRoomToClientAck::Swap(S2SLeaveBattleRoomToClientAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLeaveBattleRoomToClientAck::InternalSwap(S2SLeaveBattleRoomToClientAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLeaveBattleRoomToClientAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellBattleRoomStartReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellBattleRoomStartReq::kBattleshardidFieldNumber;
const int S2STellBattleRoomStartReq::kRoomidFieldNumber;
const int S2STellBattleRoomStartReq::kMaxtimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellBattleRoomStartReq::S2STellBattleRoomStartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomStartReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellBattleRoomStartReq)
}
S2STellBattleRoomStartReq::S2STellBattleRoomStartReq(const S2STellBattleRoomStartReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battleshardid_, &from.battleshardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxtime_) -
    reinterpret_cast<char*>(&battleshardid_)) + sizeof(maxtime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellBattleRoomStartReq)
}

void S2STellBattleRoomStartReq::SharedCtor() {
  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxtime_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(maxtime_));
}

S2STellBattleRoomStartReq::~S2STellBattleRoomStartReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellBattleRoomStartReq)
  SharedDtor();
}

void S2STellBattleRoomStartReq::SharedDtor() {
}

void S2STellBattleRoomStartReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellBattleRoomStartReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellBattleRoomStartReq& S2STellBattleRoomStartReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomStartReq.base);
  return *internal_default_instance();
}


void S2STellBattleRoomStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellBattleRoomStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxtime_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(maxtime_));
  _internal_metadata_.Clear();
}

bool S2STellBattleRoomStartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellBattleRoomStartReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 battleshardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxtime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellBattleRoomStartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellBattleRoomStartReq)
  return false;
#undef DO_
}

void S2STellBattleRoomStartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellBattleRoomStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battleshardid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint32 maxtime = 3;
  if (this->maxtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellBattleRoomStartReq)
}

::google::protobuf::uint8* S2STellBattleRoomStartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellBattleRoomStartReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battleshardid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint32 maxtime = 3;
  if (this->maxtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellBattleRoomStartReq)
  return target;
}

size_t S2STellBattleRoomStartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellBattleRoomStartReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 maxtime = 3;
  if (this->maxtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellBattleRoomStartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellBattleRoomStartReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellBattleRoomStartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellBattleRoomStartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellBattleRoomStartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellBattleRoomStartReq)
    MergeFrom(*source);
  }
}

void S2STellBattleRoomStartReq::MergeFrom(const S2STellBattleRoomStartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellBattleRoomStartReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.maxtime() != 0) {
    set_maxtime(from.maxtime());
  }
}

void S2STellBattleRoomStartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellBattleRoomStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellBattleRoomStartReq::CopyFrom(const S2STellBattleRoomStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellBattleRoomStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellBattleRoomStartReq::IsInitialized() const {
  return true;
}

void S2STellBattleRoomStartReq::Swap(S2STellBattleRoomStartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellBattleRoomStartReq::InternalSwap(S2STellBattleRoomStartReq* other) {
  using std::swap;
  swap(battleshardid_, other->battleshardid_);
  swap(roomid_, other->roomid_);
  swap(maxtime_, other->maxtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellBattleRoomStartReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRoomStartToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRoomStartToBattleShardReq::kRoomidFieldNumber;
const int S2STellRoomStartToBattleShardReq::kMaxtimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRoomStartToBattleShardReq::S2STellRoomStartToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomStartToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRoomStartToBattleShardReq)
}
S2STellRoomStartToBattleShardReq::S2STellRoomStartToBattleShardReq(const S2STellRoomStartToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxtime_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(maxtime_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRoomStartToBattleShardReq)
}

void S2STellRoomStartToBattleShardReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxtime_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(maxtime_));
}

S2STellRoomStartToBattleShardReq::~S2STellRoomStartToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRoomStartToBattleShardReq)
  SharedDtor();
}

void S2STellRoomStartToBattleShardReq::SharedDtor() {
}

void S2STellRoomStartToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRoomStartToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRoomStartToBattleShardReq& S2STellRoomStartToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomStartToBattleShardReq.base);
  return *internal_default_instance();
}


void S2STellRoomStartToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRoomStartToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxtime_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(maxtime_));
  _internal_metadata_.Clear();
}

bool S2STellRoomStartToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRoomStartToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maxtime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRoomStartToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRoomStartToBattleShardReq)
  return false;
#undef DO_
}

void S2STellRoomStartToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRoomStartToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 maxtime = 2;
  if (this->maxtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRoomStartToBattleShardReq)
}

::google::protobuf::uint8* S2STellRoomStartToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRoomStartToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 maxtime = 2;
  if (this->maxtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRoomStartToBattleShardReq)
  return target;
}

size_t S2STellRoomStartToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRoomStartToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 maxtime = 2;
  if (this->maxtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRoomStartToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRoomStartToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRoomStartToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRoomStartToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRoomStartToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRoomStartToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2STellRoomStartToBattleShardReq::MergeFrom(const S2STellRoomStartToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRoomStartToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.maxtime() != 0) {
    set_maxtime(from.maxtime());
  }
}

void S2STellRoomStartToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRoomStartToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRoomStartToBattleShardReq::CopyFrom(const S2STellRoomStartToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRoomStartToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRoomStartToBattleShardReq::IsInitialized() const {
  return true;
}

void S2STellRoomStartToBattleShardReq::Swap(S2STellRoomStartToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRoomStartToBattleShardReq::InternalSwap(S2STellRoomStartToBattleShardReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(maxtime_, other->maxtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRoomStartToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellBattleRoomStartAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellBattleRoomStartAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellBattleRoomStartAck::S2STellBattleRoomStartAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomStartAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellBattleRoomStartAck)
}
S2STellBattleRoomStartAck::S2STellBattleRoomStartAck(const S2STellBattleRoomStartAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellBattleRoomStartAck)
}

void S2STellBattleRoomStartAck::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

S2STellBattleRoomStartAck::~S2STellBattleRoomStartAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellBattleRoomStartAck)
  SharedDtor();
}

void S2STellBattleRoomStartAck::SharedDtor() {
}

void S2STellBattleRoomStartAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellBattleRoomStartAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellBattleRoomStartAck& S2STellBattleRoomStartAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomStartAck.base);
  return *internal_default_instance();
}


void S2STellBattleRoomStartAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellBattleRoomStartAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STellBattleRoomStartAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellBattleRoomStartAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellBattleRoomStartAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellBattleRoomStartAck)
  return false;
#undef DO_
}

void S2STellBattleRoomStartAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellBattleRoomStartAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellBattleRoomStartAck)
}

::google::protobuf::uint8* S2STellBattleRoomStartAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellBattleRoomStartAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellBattleRoomStartAck)
  return target;
}

size_t S2STellBattleRoomStartAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellBattleRoomStartAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellBattleRoomStartAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellBattleRoomStartAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellBattleRoomStartAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellBattleRoomStartAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellBattleRoomStartAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellBattleRoomStartAck)
    MergeFrom(*source);
  }
}

void S2STellBattleRoomStartAck::MergeFrom(const S2STellBattleRoomStartAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellBattleRoomStartAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2STellBattleRoomStartAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellBattleRoomStartAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellBattleRoomStartAck::CopyFrom(const S2STellBattleRoomStartAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellBattleRoomStartAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellBattleRoomStartAck::IsInitialized() const {
  return true;
}

void S2STellBattleRoomStartAck::Swap(S2STellBattleRoomStartAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellBattleRoomStartAck::InternalSwap(S2STellBattleRoomStartAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellBattleRoomStartAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRoomStartToMatchShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRoomStartToMatchShardReq::kMatchidFieldNumber;
const int S2STellRoomStartToMatchShardReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRoomStartToMatchShardReq::S2STellRoomStartToMatchShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomStartToMatchShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRoomStartToMatchShardReq)
}
S2STellRoomStartToMatchShardReq::S2STellRoomStartToMatchShardReq(const S2STellRoomStartToMatchShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRoomStartToMatchShardReq)
}

void S2STellRoomStartToMatchShardReq::SharedCtor() {
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
}

S2STellRoomStartToMatchShardReq::~S2STellRoomStartToMatchShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRoomStartToMatchShardReq)
  SharedDtor();
}

void S2STellRoomStartToMatchShardReq::SharedDtor() {
}

void S2STellRoomStartToMatchShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRoomStartToMatchShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRoomStartToMatchShardReq& S2STellRoomStartToMatchShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomStartToMatchShardReq.base);
  return *internal_default_instance();
}


void S2STellRoomStartToMatchShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRoomStartToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool S2STellRoomStartToMatchShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRoomStartToMatchShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRoomStartToMatchShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRoomStartToMatchShardReq)
  return false;
#undef DO_
}

void S2STellRoomStartToMatchShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRoomStartToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRoomStartToMatchShardReq)
}

::google::protobuf::uint8* S2STellRoomStartToMatchShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRoomStartToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRoomStartToMatchShardReq)
  return target;
}

size_t S2STellRoomStartToMatchShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRoomStartToMatchShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRoomStartToMatchShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRoomStartToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRoomStartToMatchShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRoomStartToMatchShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRoomStartToMatchShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRoomStartToMatchShardReq)
    MergeFrom(*source);
  }
}

void S2STellRoomStartToMatchShardReq::MergeFrom(const S2STellRoomStartToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRoomStartToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void S2STellRoomStartToMatchShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRoomStartToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRoomStartToMatchShardReq::CopyFrom(const S2STellRoomStartToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRoomStartToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRoomStartToMatchShardReq::IsInitialized() const {
  return true;
}

void S2STellRoomStartToMatchShardReq::Swap(S2STellRoomStartToMatchShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRoomStartToMatchShardReq::InternalSwap(S2STellRoomStartToMatchShardReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRoomStartToMatchShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRoomStartToMatchShardAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRoomStartToMatchShardAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRoomStartToMatchShardAck::S2STellRoomStartToMatchShardAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomStartToMatchShardAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRoomStartToMatchShardAck)
}
S2STellRoomStartToMatchShardAck::S2STellRoomStartToMatchShardAck(const S2STellRoomStartToMatchShardAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRoomStartToMatchShardAck)
}

void S2STellRoomStartToMatchShardAck::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

S2STellRoomStartToMatchShardAck::~S2STellRoomStartToMatchShardAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRoomStartToMatchShardAck)
  SharedDtor();
}

void S2STellRoomStartToMatchShardAck::SharedDtor() {
}

void S2STellRoomStartToMatchShardAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRoomStartToMatchShardAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRoomStartToMatchShardAck& S2STellRoomStartToMatchShardAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomStartToMatchShardAck.base);
  return *internal_default_instance();
}


void S2STellRoomStartToMatchShardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRoomStartToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STellRoomStartToMatchShardAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRoomStartToMatchShardAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRoomStartToMatchShardAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRoomStartToMatchShardAck)
  return false;
#undef DO_
}

void S2STellRoomStartToMatchShardAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRoomStartToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRoomStartToMatchShardAck)
}

::google::protobuf::uint8* S2STellRoomStartToMatchShardAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRoomStartToMatchShardAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRoomStartToMatchShardAck)
  return target;
}

size_t S2STellRoomStartToMatchShardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRoomStartToMatchShardAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRoomStartToMatchShardAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRoomStartToMatchShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRoomStartToMatchShardAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRoomStartToMatchShardAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRoomStartToMatchShardAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRoomStartToMatchShardAck)
    MergeFrom(*source);
  }
}

void S2STellRoomStartToMatchShardAck::MergeFrom(const S2STellRoomStartToMatchShardAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRoomStartToMatchShardAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2STellRoomStartToMatchShardAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRoomStartToMatchShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRoomStartToMatchShardAck::CopyFrom(const S2STellRoomStartToMatchShardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRoomStartToMatchShardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRoomStartToMatchShardAck::IsInitialized() const {
  return true;
}

void S2STellRoomStartToMatchShardAck::Swap(S2STellRoomStartToMatchShardAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRoomStartToMatchShardAck::InternalSwap(S2STellRoomStartToMatchShardAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRoomStartToMatchShardAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellBattleRoomFinishReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellBattleRoomFinishReq::kBattleshardidFieldNumber;
const int S2STellBattleRoomFinishReq::kRoomidFieldNumber;
const int S2STellBattleRoomFinishReq::kServeridFieldNumber;
const int S2STellBattleRoomFinishReq::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellBattleRoomFinishReq::S2STellBattleRoomFinishReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomFinishReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellBattleRoomFinishReq)
}
S2STellBattleRoomFinishReq::S2STellBattleRoomFinishReq(const S2STellBattleRoomFinishReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&battleshardid_, &from.battleshardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&battleshardid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellBattleRoomFinishReq)
}

void S2STellBattleRoomFinishReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(serverid_));
}

S2STellBattleRoomFinishReq::~S2STellBattleRoomFinishReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellBattleRoomFinishReq)
  SharedDtor();
}

void S2STellBattleRoomFinishReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STellBattleRoomFinishReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellBattleRoomFinishReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellBattleRoomFinishReq& S2STellBattleRoomFinishReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomFinishReq.base);
  return *internal_default_instance();
}


void S2STellBattleRoomFinishReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellBattleRoomFinishReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&battleshardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&battleshardid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2STellBattleRoomFinishReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellBattleRoomFinishReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 battleshardid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellBattleRoomFinishReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellBattleRoomFinishReq)
  return false;
#undef DO_
}

void S2STellBattleRoomFinishReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellBattleRoomFinishReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->battleshardid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellBattleRoomFinishReq)
}

::google::protobuf::uint8* S2STellBattleRoomFinishReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellBattleRoomFinishReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->battleshardid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // bytes ip = 4;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellBattleRoomFinishReq)
  return target;
}

size_t S2STellBattleRoomFinishReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellBattleRoomFinishReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 battleshardid = 1;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleshardid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellBattleRoomFinishReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellBattleRoomFinishReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellBattleRoomFinishReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellBattleRoomFinishReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellBattleRoomFinishReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellBattleRoomFinishReq)
    MergeFrom(*source);
  }
}

void S2STellBattleRoomFinishReq::MergeFrom(const S2STellBattleRoomFinishReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellBattleRoomFinishReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2STellBattleRoomFinishReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellBattleRoomFinishReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellBattleRoomFinishReq::CopyFrom(const S2STellBattleRoomFinishReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellBattleRoomFinishReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellBattleRoomFinishReq::IsInitialized() const {
  return true;
}

void S2STellBattleRoomFinishReq::Swap(S2STellBattleRoomFinishReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellBattleRoomFinishReq::InternalSwap(S2STellBattleRoomFinishReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(battleshardid_, other->battleshardid_);
  swap(roomid_, other->roomid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellBattleRoomFinishReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellBattleRoomFinishAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellBattleRoomFinishAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellBattleRoomFinishAck::S2STellBattleRoomFinishAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomFinishAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellBattleRoomFinishAck)
}
S2STellBattleRoomFinishAck::S2STellBattleRoomFinishAck(const S2STellBattleRoomFinishAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellBattleRoomFinishAck)
}

void S2STellBattleRoomFinishAck::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

S2STellBattleRoomFinishAck::~S2STellBattleRoomFinishAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellBattleRoomFinishAck)
  SharedDtor();
}

void S2STellBattleRoomFinishAck::SharedDtor() {
}

void S2STellBattleRoomFinishAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellBattleRoomFinishAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellBattleRoomFinishAck& S2STellBattleRoomFinishAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellBattleRoomFinishAck.base);
  return *internal_default_instance();
}


void S2STellBattleRoomFinishAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellBattleRoomFinishAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STellBattleRoomFinishAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellBattleRoomFinishAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellBattleRoomFinishAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellBattleRoomFinishAck)
  return false;
#undef DO_
}

void S2STellBattleRoomFinishAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellBattleRoomFinishAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellBattleRoomFinishAck)
}

::google::protobuf::uint8* S2STellBattleRoomFinishAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellBattleRoomFinishAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellBattleRoomFinishAck)
  return target;
}

size_t S2STellBattleRoomFinishAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellBattleRoomFinishAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellBattleRoomFinishAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellBattleRoomFinishAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellBattleRoomFinishAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellBattleRoomFinishAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellBattleRoomFinishAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellBattleRoomFinishAck)
    MergeFrom(*source);
  }
}

void S2STellBattleRoomFinishAck::MergeFrom(const S2STellBattleRoomFinishAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellBattleRoomFinishAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2STellBattleRoomFinishAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellBattleRoomFinishAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellBattleRoomFinishAck::CopyFrom(const S2STellBattleRoomFinishAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellBattleRoomFinishAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellBattleRoomFinishAck::IsInitialized() const {
  return true;
}

void S2STellBattleRoomFinishAck::Swap(S2STellBattleRoomFinishAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellBattleRoomFinishAck::InternalSwap(S2STellBattleRoomFinishAck* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellBattleRoomFinishAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBattleRoomScoreBalanceReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SBattleRoomScoreBalanceReq_default_instance_._instance.get_mutable()->pbscore_ = const_cast< ::KFMsg::PBBattleScore*>(
      ::KFMsg::PBBattleScore::internal_default_instance());
}
void S2SBattleRoomScoreBalanceReq::clear_pbscore() {
  if (GetArenaNoVirtual() == NULL && pbscore_ != NULL) {
    delete pbscore_;
  }
  pbscore_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBattleRoomScoreBalanceReq::kRoomidFieldNumber;
const int S2SBattleRoomScoreBalanceReq::kBattleshardidFieldNumber;
const int S2SBattleRoomScoreBalanceReq::kPbscoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBattleRoomScoreBalanceReq::S2SBattleRoomScoreBalanceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SBattleRoomScoreBalanceReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBattleRoomScoreBalanceReq)
}
S2SBattleRoomScoreBalanceReq::S2SBattleRoomScoreBalanceReq(const S2SBattleRoomScoreBalanceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbscore()) {
    pbscore_ = new ::KFMsg::PBBattleScore(*from.pbscore_);
  } else {
    pbscore_ = NULL;
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&battleshardid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(battleshardid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBattleRoomScoreBalanceReq)
}

void S2SBattleRoomScoreBalanceReq::SharedCtor() {
  ::memset(&pbscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleshardid_) -
      reinterpret_cast<char*>(&pbscore_)) + sizeof(battleshardid_));
}

S2SBattleRoomScoreBalanceReq::~S2SBattleRoomScoreBalanceReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBattleRoomScoreBalanceReq)
  SharedDtor();
}

void S2SBattleRoomScoreBalanceReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbscore_;
}

void S2SBattleRoomScoreBalanceReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBattleRoomScoreBalanceReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBattleRoomScoreBalanceReq& S2SBattleRoomScoreBalanceReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SBattleRoomScoreBalanceReq.base);
  return *internal_default_instance();
}


void S2SBattleRoomScoreBalanceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbscore_ != NULL) {
    delete pbscore_;
  }
  pbscore_ = NULL;
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battleshardid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(battleshardid_));
  _internal_metadata_.Clear();
}

bool S2SBattleRoomScoreBalanceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 battleshardid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battleshardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBBattleScore pbscore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBattleRoomScoreBalanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBattleRoomScoreBalanceReq)
  return false;
#undef DO_
}

void S2SBattleRoomScoreBalanceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint32 battleshardid = 2;
  if (this->battleshardid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->battleshardid(), output);
  }

  // .KFMsg.PBBattleScore pbscore = 3;
  if (this->has_pbscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbscore(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBattleRoomScoreBalanceReq)
}

::google::protobuf::uint8* S2SBattleRoomScoreBalanceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint32 battleshardid = 2;
  if (this->battleshardid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->battleshardid(), target);
  }

  // .KFMsg.PBBattleScore pbscore = 3;
  if (this->has_pbscore()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbscore(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBattleRoomScoreBalanceReq)
  return target;
}

size_t S2SBattleRoomScoreBalanceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBBattleScore pbscore = 3;
  if (this->has_pbscore()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbscore_);
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 battleshardid = 2;
  if (this->battleshardid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->battleshardid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBattleRoomScoreBalanceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBattleRoomScoreBalanceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBattleRoomScoreBalanceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBattleRoomScoreBalanceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBattleRoomScoreBalanceReq)
    MergeFrom(*source);
  }
}

void S2SBattleRoomScoreBalanceReq::MergeFrom(const S2SBattleRoomScoreBalanceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbscore()) {
    mutable_pbscore()->::KFMsg::PBBattleScore::MergeFrom(from.pbscore());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.battleshardid() != 0) {
    set_battleshardid(from.battleshardid());
  }
}

void S2SBattleRoomScoreBalanceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBattleRoomScoreBalanceReq::CopyFrom(const S2SBattleRoomScoreBalanceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBattleRoomScoreBalanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBattleRoomScoreBalanceReq::IsInitialized() const {
  return true;
}

void S2SBattleRoomScoreBalanceReq::Swap(S2SBattleRoomScoreBalanceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBattleRoomScoreBalanceReq::InternalSwap(S2SBattleRoomScoreBalanceReq* other) {
  using std::swap;
  swap(pbscore_, other->pbscore_);
  swap(roomid_, other->roomid_);
  swap(battleshardid_, other->battleshardid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBattleRoomScoreBalanceReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBattleRoomScoreBalanceAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBattleRoomScoreBalanceAck::kRoomidFieldNumber;
const int S2SBattleRoomScoreBalanceAck::kPlayeridFieldNumber;
const int S2SBattleRoomScoreBalanceAck::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBattleRoomScoreBalanceAck::S2SBattleRoomScoreBalanceAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SBattleRoomScoreBalanceAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBattleRoomScoreBalanceAck)
}
S2SBattleRoomScoreBalanceAck::S2SBattleRoomScoreBalanceAck(const S2SBattleRoomScoreBalanceAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reward().size() > 0) {
    reward_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBattleRoomScoreBalanceAck)
}

void S2SBattleRoomScoreBalanceAck::SharedCtor() {
  reward_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
}

S2SBattleRoomScoreBalanceAck::~S2SBattleRoomScoreBalanceAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBattleRoomScoreBalanceAck)
  SharedDtor();
}

void S2SBattleRoomScoreBalanceAck::SharedDtor() {
  reward_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBattleRoomScoreBalanceAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBattleRoomScoreBalanceAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBattleRoomScoreBalanceAck& S2SBattleRoomScoreBalanceAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SBattleRoomScoreBalanceAck.base);
  return *internal_default_instance();
}


void S2SBattleRoomScoreBalanceAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2SBattleRoomScoreBalanceAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes reward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBattleRoomScoreBalanceAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBattleRoomScoreBalanceAck)
  return false;
#undef DO_
}

void S2SBattleRoomScoreBalanceAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes reward = 3;
  if (this->reward().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->reward(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBattleRoomScoreBalanceAck)
}

::google::protobuf::uint8* S2SBattleRoomScoreBalanceAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes reward = 3;
  if (this->reward().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->reward(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBattleRoomScoreBalanceAck)
  return target;
}

size_t S2SBattleRoomScoreBalanceAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes reward = 3;
  if (this->reward().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->reward());
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBattleRoomScoreBalanceAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBattleRoomScoreBalanceAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBattleRoomScoreBalanceAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBattleRoomScoreBalanceAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBattleRoomScoreBalanceAck)
    MergeFrom(*source);
  }
}

void S2SBattleRoomScoreBalanceAck::MergeFrom(const S2SBattleRoomScoreBalanceAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reward().size() > 0) {

    reward_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SBattleRoomScoreBalanceAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBattleRoomScoreBalanceAck::CopyFrom(const S2SBattleRoomScoreBalanceAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBattleRoomScoreBalanceAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBattleRoomScoreBalanceAck::IsInitialized() const {
  return true;
}

void S2SBattleRoomScoreBalanceAck::Swap(S2SBattleRoomScoreBalanceAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBattleRoomScoreBalanceAck::InternalSwap(S2SBattleRoomScoreBalanceAck* other) {
  using std::swap;
  reward_.Swap(&other->reward_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBattleRoomScoreBalanceAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBattleScoreBalanceToShardReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SBattleScoreBalanceToShardReq_default_instance_._instance.get_mutable()->pbscore_ = const_cast< ::KFMsg::PBBattleScore*>(
      ::KFMsg::PBBattleScore::internal_default_instance());
}
void S2SBattleScoreBalanceToShardReq::clear_pbscore() {
  if (GetArenaNoVirtual() == NULL && pbscore_ != NULL) {
    delete pbscore_;
  }
  pbscore_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBattleScoreBalanceToShardReq::kRoomidFieldNumber;
const int S2SBattleScoreBalanceToShardReq::kPbscoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBattleScoreBalanceToShardReq::S2SBattleScoreBalanceToShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SBattleScoreBalanceToShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBattleScoreBalanceToShardReq)
}
S2SBattleScoreBalanceToShardReq::S2SBattleScoreBalanceToShardReq(const S2SBattleScoreBalanceToShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbscore()) {
    pbscore_ = new ::KFMsg::PBBattleScore(*from.pbscore_);
  } else {
    pbscore_ = NULL;
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBattleScoreBalanceToShardReq)
}

void S2SBattleScoreBalanceToShardReq::SharedCtor() {
  ::memset(&pbscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&pbscore_)) + sizeof(roomid_));
}

S2SBattleScoreBalanceToShardReq::~S2SBattleScoreBalanceToShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBattleScoreBalanceToShardReq)
  SharedDtor();
}

void S2SBattleScoreBalanceToShardReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbscore_;
}

void S2SBattleScoreBalanceToShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBattleScoreBalanceToShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBattleScoreBalanceToShardReq& S2SBattleScoreBalanceToShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SBattleScoreBalanceToShardReq.base);
  return *internal_default_instance();
}


void S2SBattleScoreBalanceToShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbscore_ != NULL) {
    delete pbscore_;
  }
  pbscore_ = NULL;
  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SBattleScoreBalanceToShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBBattleScore pbscore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBattleScoreBalanceToShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBattleScoreBalanceToShardReq)
  return false;
#undef DO_
}

void S2SBattleScoreBalanceToShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // .KFMsg.PBBattleScore pbscore = 2;
  if (this->has_pbscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbscore(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBattleScoreBalanceToShardReq)
}

::google::protobuf::uint8* S2SBattleScoreBalanceToShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // .KFMsg.PBBattleScore pbscore = 2;
  if (this->has_pbscore()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbscore(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBattleScoreBalanceToShardReq)
  return target;
}

size_t S2SBattleScoreBalanceToShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBBattleScore pbscore = 2;
  if (this->has_pbscore()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbscore_);
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBattleScoreBalanceToShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBattleScoreBalanceToShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBattleScoreBalanceToShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBattleScoreBalanceToShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBattleScoreBalanceToShardReq)
    MergeFrom(*source);
  }
}

void S2SBattleScoreBalanceToShardReq::MergeFrom(const S2SBattleScoreBalanceToShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbscore()) {
    mutable_pbscore()->::KFMsg::PBBattleScore::MergeFrom(from.pbscore());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SBattleScoreBalanceToShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBattleScoreBalanceToShardReq::CopyFrom(const S2SBattleScoreBalanceToShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBattleScoreBalanceToShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBattleScoreBalanceToShardReq::IsInitialized() const {
  return true;
}

void S2SBattleScoreBalanceToShardReq::Swap(S2SBattleScoreBalanceToShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBattleScoreBalanceToShardReq::InternalSwap(S2SBattleScoreBalanceToShardReq* other) {
  using std::swap;
  swap(pbscore_, other->pbscore_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBattleScoreBalanceToShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerBattleScoreReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SPlayerBattleScoreReq_default_instance_._instance.get_mutable()->pbscore_ = const_cast< ::KFMsg::PBBattleScore*>(
      ::KFMsg::PBBattleScore::internal_default_instance());
}
void S2SPlayerBattleScoreReq::clear_pbscore() {
  if (GetArenaNoVirtual() == NULL && pbscore_ != NULL) {
    delete pbscore_;
  }
  pbscore_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerBattleScoreReq::kPlayeridFieldNumber;
const int S2SPlayerBattleScoreReq::kRoomidFieldNumber;
const int S2SPlayerBattleScoreReq::kPbscoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerBattleScoreReq::S2SPlayerBattleScoreReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerBattleScoreReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerBattleScoreReq)
}
S2SPlayerBattleScoreReq::S2SPlayerBattleScoreReq(const S2SPlayerBattleScoreReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbscore()) {
    pbscore_ = new ::KFMsg::PBBattleScore(*from.pbscore_);
  } else {
    pbscore_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerBattleScoreReq)
}

void S2SPlayerBattleScoreReq::SharedCtor() {
  ::memset(&pbscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&pbscore_)) + sizeof(roomid_));
}

S2SPlayerBattleScoreReq::~S2SPlayerBattleScoreReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerBattleScoreReq)
  SharedDtor();
}

void S2SPlayerBattleScoreReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbscore_;
}

void S2SPlayerBattleScoreReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerBattleScoreReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerBattleScoreReq& S2SPlayerBattleScoreReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerBattleScoreReq.base);
  return *internal_default_instance();
}


void S2SPlayerBattleScoreReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerBattleScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbscore_ != NULL) {
    delete pbscore_;
  }
  pbscore_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerBattleScoreReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerBattleScoreReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBBattleScore pbscore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbscore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerBattleScoreReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerBattleScoreReq)
  return false;
#undef DO_
}

void S2SPlayerBattleScoreReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerBattleScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // .KFMsg.PBBattleScore pbscore = 3;
  if (this->has_pbscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbscore(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerBattleScoreReq)
}

::google::protobuf::uint8* S2SPlayerBattleScoreReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerBattleScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // .KFMsg.PBBattleScore pbscore = 3;
  if (this->has_pbscore()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbscore(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerBattleScoreReq)
  return target;
}

size_t S2SPlayerBattleScoreReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerBattleScoreReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBBattleScore pbscore = 3;
  if (this->has_pbscore()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbscore_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerBattleScoreReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerBattleScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerBattleScoreReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerBattleScoreReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerBattleScoreReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerBattleScoreReq)
    MergeFrom(*source);
  }
}

void S2SPlayerBattleScoreReq::MergeFrom(const S2SPlayerBattleScoreReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerBattleScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbscore()) {
    mutable_pbscore()->::KFMsg::PBBattleScore::MergeFrom(from.pbscore());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SPlayerBattleScoreReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerBattleScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerBattleScoreReq::CopyFrom(const S2SPlayerBattleScoreReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerBattleScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerBattleScoreReq::IsInitialized() const {
  return true;
}

void S2SPlayerBattleScoreReq::Swap(S2SPlayerBattleScoreReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerBattleScoreReq::InternalSwap(S2SPlayerBattleScoreReq* other) {
  using std::swap;
  swap(pbscore_, other->pbscore_);
  swap(playerid_, other->playerid_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerBattleScoreReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerBattleScoreAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerBattleScoreAck::kPlayeridFieldNumber;
const int S2SPlayerBattleScoreAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerBattleScoreAck::S2SPlayerBattleScoreAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerBattleScoreAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerBattleScoreAck)
}
S2SPlayerBattleScoreAck::S2SPlayerBattleScoreAck(const S2SPlayerBattleScoreAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerBattleScoreAck)
}

void S2SPlayerBattleScoreAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
}

S2SPlayerBattleScoreAck::~S2SPlayerBattleScoreAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerBattleScoreAck)
  SharedDtor();
}

void S2SPlayerBattleScoreAck::SharedDtor() {
}

void S2SPlayerBattleScoreAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerBattleScoreAck::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerBattleScoreAck& S2SPlayerBattleScoreAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SPlayerBattleScoreAck.base);
  return *internal_default_instance();
}


void S2SPlayerBattleScoreAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerBattleScoreAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(roomid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerBattleScoreAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerBattleScoreAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerBattleScoreAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerBattleScoreAck)
  return false;
#undef DO_
}

void S2SPlayerBattleScoreAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerBattleScoreAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerBattleScoreAck)
}

::google::protobuf::uint8* S2SPlayerBattleScoreAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerBattleScoreAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerBattleScoreAck)
  return target;
}

size_t S2SPlayerBattleScoreAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerBattleScoreAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerBattleScoreAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerBattleScoreAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerBattleScoreAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerBattleScoreAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerBattleScoreAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerBattleScoreAck)
    MergeFrom(*source);
  }
}

void S2SPlayerBattleScoreAck::MergeFrom(const S2SPlayerBattleScoreAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerBattleScoreAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SPlayerBattleScoreAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerBattleScoreAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerBattleScoreAck::CopyFrom(const S2SPlayerBattleScoreAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerBattleScoreAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerBattleScoreAck::IsInitialized() const {
  return true;
}

void S2SPlayerBattleScoreAck::Swap(S2SPlayerBattleScoreAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerBattleScoreAck::InternalSwap(S2SPlayerBattleScoreAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerBattleScoreAck::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SOnlieQueryBattleScoreReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SOnlieQueryBattleScoreReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SOnlieQueryBattleScoreReq::S2SOnlieQueryBattleScoreReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SOnlieQueryBattleScoreReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SOnlieQueryBattleScoreReq)
}
S2SOnlieQueryBattleScoreReq::S2SOnlieQueryBattleScoreReq(const S2SOnlieQueryBattleScoreReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SOnlieQueryBattleScoreReq)
}

void S2SOnlieQueryBattleScoreReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SOnlieQueryBattleScoreReq::~S2SOnlieQueryBattleScoreReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SOnlieQueryBattleScoreReq)
  SharedDtor();
}

void S2SOnlieQueryBattleScoreReq::SharedDtor() {
}

void S2SOnlieQueryBattleScoreReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SOnlieQueryBattleScoreReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SOnlieQueryBattleScoreReq& S2SOnlieQueryBattleScoreReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SOnlieQueryBattleScoreReq.base);
  return *internal_default_instance();
}


void S2SOnlieQueryBattleScoreReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SOnlieQueryBattleScoreReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SOnlieQueryBattleScoreReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SOnlieQueryBattleScoreReq)
  return false;
#undef DO_
}

void S2SOnlieQueryBattleScoreReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SOnlieQueryBattleScoreReq)
}

::google::protobuf::uint8* S2SOnlieQueryBattleScoreReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SOnlieQueryBattleScoreReq)
  return target;
}

size_t S2SOnlieQueryBattleScoreReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SOnlieQueryBattleScoreReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SOnlieQueryBattleScoreReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SOnlieQueryBattleScoreReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SOnlieQueryBattleScoreReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SOnlieQueryBattleScoreReq)
    MergeFrom(*source);
  }
}

void S2SOnlieQueryBattleScoreReq::MergeFrom(const S2SOnlieQueryBattleScoreReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SOnlieQueryBattleScoreReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SOnlieQueryBattleScoreReq::CopyFrom(const S2SOnlieQueryBattleScoreReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SOnlieQueryBattleScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SOnlieQueryBattleScoreReq::IsInitialized() const {
  return true;
}

void S2SOnlieQueryBattleScoreReq::Swap(S2SOnlieQueryBattleScoreReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SOnlieQueryBattleScoreReq::InternalSwap(S2SOnlieQueryBattleScoreReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SOnlieQueryBattleScoreReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRoomFinishToBattleShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRoomFinishToBattleShardReq::kRoomidFieldNumber;
const int S2STellRoomFinishToBattleShardReq::kServeridFieldNumber;
const int S2STellRoomFinishToBattleShardReq::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRoomFinishToBattleShardReq::S2STellRoomFinishToBattleShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomFinishToBattleShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRoomFinishToBattleShardReq)
}
S2STellRoomFinishToBattleShardReq::S2STellRoomFinishToBattleShardReq(const S2STellRoomFinishToBattleShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRoomFinishToBattleShardReq)
}

void S2STellRoomFinishToBattleShardReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(serverid_));
}

S2STellRoomFinishToBattleShardReq::~S2STellRoomFinishToBattleShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRoomFinishToBattleShardReq)
  SharedDtor();
}

void S2STellRoomFinishToBattleShardReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STellRoomFinishToBattleShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRoomFinishToBattleShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRoomFinishToBattleShardReq& S2STellRoomFinishToBattleShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomFinishToBattleShardReq.base);
  return *internal_default_instance();
}


void S2STellRoomFinishToBattleShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool S2STellRoomFinishToBattleShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRoomFinishToBattleShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRoomFinishToBattleShardReq)
  return false;
#undef DO_
}

void S2STellRoomFinishToBattleShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->serverid(), output);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRoomFinishToBattleShardReq)
}

::google::protobuf::uint8* S2STellRoomFinishToBattleShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->serverid(), target);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRoomFinishToBattleShardReq)
  return target;
}

size_t S2STellRoomFinishToBattleShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 serverid = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRoomFinishToBattleShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRoomFinishToBattleShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRoomFinishToBattleShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRoomFinishToBattleShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRoomFinishToBattleShardReq)
    MergeFrom(*source);
  }
}

void S2STellRoomFinishToBattleShardReq::MergeFrom(const S2STellRoomFinishToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2STellRoomFinishToBattleShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRoomFinishToBattleShardReq::CopyFrom(const S2STellRoomFinishToBattleShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRoomFinishToBattleShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRoomFinishToBattleShardReq::IsInitialized() const {
  return true;
}

void S2STellRoomFinishToBattleShardReq::Swap(S2STellRoomFinishToBattleShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRoomFinishToBattleShardReq::InternalSwap(S2STellRoomFinishToBattleShardReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRoomFinishToBattleShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRoomCloseToMatchShardReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRoomCloseToMatchShardReq::kMatchidFieldNumber;
const int S2STellRoomCloseToMatchShardReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRoomCloseToMatchShardReq::S2STellRoomCloseToMatchShardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomCloseToMatchShardReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRoomCloseToMatchShardReq)
}
S2STellRoomCloseToMatchShardReq::S2STellRoomCloseToMatchShardReq(const S2STellRoomCloseToMatchShardReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&matchid_, &from.matchid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&matchid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRoomCloseToMatchShardReq)
}

void S2STellRoomCloseToMatchShardReq::SharedCtor() {
  ::memset(&matchid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&matchid_)) + sizeof(roomid_));
}

S2STellRoomCloseToMatchShardReq::~S2STellRoomCloseToMatchShardReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRoomCloseToMatchShardReq)
  SharedDtor();
}

void S2STellRoomCloseToMatchShardReq::SharedDtor() {
}

void S2STellRoomCloseToMatchShardReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRoomCloseToMatchShardReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRoomCloseToMatchShardReq& S2STellRoomCloseToMatchShardReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2STellRoomCloseToMatchShardReq.base);
  return *internal_default_instance();
}


void S2STellRoomCloseToMatchShardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&matchid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&matchid_)) + sizeof(roomid_));
  _internal_metadata_.Clear();
}

bool S2STellRoomCloseToMatchShardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRoomCloseToMatchShardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRoomCloseToMatchShardReq)
  return false;
#undef DO_
}

void S2STellRoomCloseToMatchShardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->matchid(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRoomCloseToMatchShardReq)
}

::google::protobuf::uint8* S2STellRoomCloseToMatchShardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->matchid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRoomCloseToMatchShardReq)
  return target;
}

size_t S2STellRoomCloseToMatchShardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matchid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRoomCloseToMatchShardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRoomCloseToMatchShardReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRoomCloseToMatchShardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRoomCloseToMatchShardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRoomCloseToMatchShardReq)
    MergeFrom(*source);
  }
}

void S2STellRoomCloseToMatchShardReq::MergeFrom(const S2STellRoomCloseToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2STellRoomCloseToMatchShardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRoomCloseToMatchShardReq::CopyFrom(const S2STellRoomCloseToMatchShardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRoomCloseToMatchShardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRoomCloseToMatchShardReq::IsInitialized() const {
  return true;
}

void S2STellRoomCloseToMatchShardReq::Swap(S2STellRoomCloseToMatchShardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRoomCloseToMatchShardReq::InternalSwap(S2STellRoomCloseToMatchShardReq* other) {
  using std::swap;
  swap(matchid_, other->matchid_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRoomCloseToMatchShardReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SResetBattleRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SResetBattleRoomReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SResetBattleRoomReq::S2SResetBattleRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFBattleMessage_2eproto::scc_info_S2SResetBattleRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SResetBattleRoomReq)
}
S2SResetBattleRoomReq::S2SResetBattleRoomReq(const S2SResetBattleRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SResetBattleRoomReq)
}

void S2SResetBattleRoomReq::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

S2SResetBattleRoomReq::~S2SResetBattleRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SResetBattleRoomReq)
  SharedDtor();
}

void S2SResetBattleRoomReq::SharedDtor() {
}

void S2SResetBattleRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SResetBattleRoomReq::descriptor() {
  ::protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SResetBattleRoomReq& S2SResetBattleRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFBattleMessage_2eproto::scc_info_S2SResetBattleRoomReq.base);
  return *internal_default_instance();
}


void S2SResetBattleRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SResetBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SResetBattleRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SResetBattleRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SResetBattleRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SResetBattleRoomReq)
  return false;
#undef DO_
}

void S2SResetBattleRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SResetBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SResetBattleRoomReq)
}

::google::protobuf::uint8* S2SResetBattleRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SResetBattleRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SResetBattleRoomReq)
  return target;
}

size_t S2SResetBattleRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SResetBattleRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SResetBattleRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SResetBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SResetBattleRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SResetBattleRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SResetBattleRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SResetBattleRoomReq)
    MergeFrom(*source);
  }
}

void S2SResetBattleRoomReq::MergeFrom(const S2SResetBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SResetBattleRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void S2SResetBattleRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SResetBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SResetBattleRoomReq::CopyFrom(const S2SResetBattleRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SResetBattleRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SResetBattleRoomReq::IsInitialized() const {
  return true;
}

void S2SResetBattleRoomReq::Swap(S2SResetBattleRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SResetBattleRoomReq::InternalSwap(S2SResetBattleRoomReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SResetBattleRoomReq::GetMetadata() const {
  protobuf_KFBattleMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFBattleMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAllocBattleIdReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAllocBattleIdReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAllocBattleIdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAllocBattleIdAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAllocBattleIdAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAllocBattleIdAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRegisterBattleServerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRegisterBattleServerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRegisterBattleServerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRegisterBattleServerAck* Arena::CreateMaybeMessage< ::KFMsg::S2SRegisterBattleServerAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRegisterBattleServerAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRegisterServerToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRegisterServerToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRegisterServerToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellBattleRegisterToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellBattleRegisterToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellBattleRegisterToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDisconnectServerToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDisconnectServerToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDisconnectServerToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateRoomToBattleProxyReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateRoomToBattleProxyReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateRoomToBattleProxyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateRoomToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateRoomToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateRoomToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SCreateRoomToMatchShardAck* Arena::CreateMaybeMessage< ::KFMsg::S2SCreateRoomToMatchShardAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SCreateRoomToMatchShardAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddCampToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddCampToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddCampToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddCampToMatchShardAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddCampToMatchShardAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddCampToMatchShardAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOpenBattleRoomReq* Arena::CreateMaybeMessage< ::KFMsg::S2SOpenBattleRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOpenBattleRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOpenBattleRoomAck* Arena::CreateMaybeMessage< ::KFMsg::S2SOpenBattleRoomAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOpenBattleRoomAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOpenBattleRoomToShardAck* Arena::CreateMaybeMessage< ::KFMsg::S2SOpenBattleRoomToShardAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOpenBattleRoomToShardAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOpenRoomToMatchShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SOpenRoomToMatchShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOpenRoomToMatchShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOpenRoomToBattleShardAck* Arena::CreateMaybeMessage< ::KFMsg::S2SOpenRoomToBattleShardAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOpenRoomToBattleShardAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterBattleRoomReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterBattleRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterBattleRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterBattleRoomAck* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterBattleRoomAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterBattleRoomAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterRoomToBattleShardAck* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterRoomToBattleShardAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterRoomToBattleShardAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLoginBattleRoomReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLoginBattleRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLoginBattleRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLoginBattleRoomAck* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLoginBattleRoomAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLoginBattleRoomAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLoginRoomToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLoginRoomToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLoginRoomToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerCancelMatchReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerCancelMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerCancelMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveBattleRoomReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveBattleRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveBattleRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveBattleRoomAck* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveBattleRoomAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveBattleRoomAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveRoomToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveRoomToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveRoomToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveRoomToMatchShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveRoomToMatchShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveRoomToMatchShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLeaveBattleRoomToClientAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLeaveBattleRoomToClientAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLeaveBattleRoomToClientAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellBattleRoomStartReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellBattleRoomStartReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellBattleRoomStartReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRoomStartToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellRoomStartToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRoomStartToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellBattleRoomStartAck* Arena::CreateMaybeMessage< ::KFMsg::S2STellBattleRoomStartAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellBattleRoomStartAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRoomStartToMatchShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellRoomStartToMatchShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRoomStartToMatchShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRoomStartToMatchShardAck* Arena::CreateMaybeMessage< ::KFMsg::S2STellRoomStartToMatchShardAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRoomStartToMatchShardAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellBattleRoomFinishReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellBattleRoomFinishReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellBattleRoomFinishReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellBattleRoomFinishAck* Arena::CreateMaybeMessage< ::KFMsg::S2STellBattleRoomFinishAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellBattleRoomFinishAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBattleRoomScoreBalanceReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBattleRoomScoreBalanceReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBattleRoomScoreBalanceReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBattleRoomScoreBalanceAck* Arena::CreateMaybeMessage< ::KFMsg::S2SBattleRoomScoreBalanceAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBattleRoomScoreBalanceAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBattleScoreBalanceToShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBattleScoreBalanceToShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBattleScoreBalanceToShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerBattleScoreReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerBattleScoreReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerBattleScoreReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerBattleScoreAck* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerBattleScoreAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerBattleScoreAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SOnlieQueryBattleScoreReq* Arena::CreateMaybeMessage< ::KFMsg::S2SOnlieQueryBattleScoreReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SOnlieQueryBattleScoreReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRoomFinishToBattleShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellRoomFinishToBattleShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRoomFinishToBattleShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRoomCloseToMatchShardReq* Arena::CreateMaybeMessage< ::KFMsg::S2STellRoomCloseToMatchShardReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRoomCloseToMatchShardReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SResetBattleRoomReq* Arena::CreateMaybeMessage< ::KFMsg::S2SResetBattleRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SResetBattleRoomReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
