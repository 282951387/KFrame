// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFDataMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "KFDataMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace KFMsg {

namespace {

const ::google::protobuf::Descriptor* MsgEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncUpdateData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncUpdateData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncAddData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncAddData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncRemoveData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncRemoveData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTellQueryPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTellQueryPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgTellQueryBasic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgTellQueryBasic_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncUpdateGuildData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncUpdateGuildData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncAddGuildData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncAddGuildData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgSyncRemoveGuildData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgSyncRemoveGuildData_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DataProtocol_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_KFDataMessage_2eproto() {
  protobuf_AddDesc_KFDataMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "KFDataMessage.proto");
  GOOGLE_CHECK(file != NULL);
  MsgEnterGame_descriptor_ = file->message_type(0);
  static const int MsgEnterGame_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterGame, playerdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterGame, servertime_),
  };
  MsgEnterGame_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgEnterGame_descriptor_,
      MsgEnterGame::default_instance_,
      MsgEnterGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterGame, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgEnterGame, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgEnterGame));
  MsgSyncUpdateData_descriptor_ = file->message_type(1);
  static const int MsgSyncUpdateData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncUpdateData, pbdata_),
  };
  MsgSyncUpdateData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncUpdateData_descriptor_,
      MsgSyncUpdateData::default_instance_,
      MsgSyncUpdateData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncUpdateData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncUpdateData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncUpdateData));
  MsgSyncAddData_descriptor_ = file->message_type(2);
  static const int MsgSyncAddData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncAddData, pbdata_),
  };
  MsgSyncAddData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncAddData_descriptor_,
      MsgSyncAddData::default_instance_,
      MsgSyncAddData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncAddData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncAddData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncAddData));
  MsgSyncRemoveData_descriptor_ = file->message_type(3);
  static const int MsgSyncRemoveData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncRemoveData, pbdata_),
  };
  MsgSyncRemoveData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncRemoveData_descriptor_,
      MsgSyncRemoveData::default_instance_,
      MsgSyncRemoveData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncRemoveData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncRemoveData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncRemoveData));
  MsgTellQueryPlayer_descriptor_ = file->message_type(4);
  static const int MsgTellQueryPlayer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTellQueryPlayer, player_),
  };
  MsgTellQueryPlayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTellQueryPlayer_descriptor_,
      MsgTellQueryPlayer::default_instance_,
      MsgTellQueryPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTellQueryPlayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTellQueryPlayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTellQueryPlayer));
  MsgTellQueryBasic_descriptor_ = file->message_type(5);
  static const int MsgTellQueryBasic_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTellQueryBasic, player_),
  };
  MsgTellQueryBasic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgTellQueryBasic_descriptor_,
      MsgTellQueryBasic::default_instance_,
      MsgTellQueryBasic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTellQueryBasic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTellQueryBasic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgTellQueryBasic));
  MsgSyncUpdateGuildData_descriptor_ = file->message_type(6);
  static const int MsgSyncUpdateGuildData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncUpdateGuildData, pbdata_),
  };
  MsgSyncUpdateGuildData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncUpdateGuildData_descriptor_,
      MsgSyncUpdateGuildData::default_instance_,
      MsgSyncUpdateGuildData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncUpdateGuildData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncUpdateGuildData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncUpdateGuildData));
  MsgSyncAddGuildData_descriptor_ = file->message_type(7);
  static const int MsgSyncAddGuildData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncAddGuildData, pbdata_),
  };
  MsgSyncAddGuildData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncAddGuildData_descriptor_,
      MsgSyncAddGuildData::default_instance_,
      MsgSyncAddGuildData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncAddGuildData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncAddGuildData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncAddGuildData));
  MsgSyncRemoveGuildData_descriptor_ = file->message_type(8);
  static const int MsgSyncRemoveGuildData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncRemoveGuildData, pbdata_),
  };
  MsgSyncRemoveGuildData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MsgSyncRemoveGuildData_descriptor_,
      MsgSyncRemoveGuildData::default_instance_,
      MsgSyncRemoveGuildData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncRemoveGuildData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSyncRemoveGuildData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MsgSyncRemoveGuildData));
  DataProtocol_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_KFDataMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgEnterGame_descriptor_, &MsgEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncUpdateData_descriptor_, &MsgSyncUpdateData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncAddData_descriptor_, &MsgSyncAddData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncRemoveData_descriptor_, &MsgSyncRemoveData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTellQueryPlayer_descriptor_, &MsgTellQueryPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgTellQueryBasic_descriptor_, &MsgTellQueryBasic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncUpdateGuildData_descriptor_, &MsgSyncUpdateGuildData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncAddGuildData_descriptor_, &MsgSyncAddGuildData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MsgSyncRemoveGuildData_descriptor_, &MsgSyncRemoveGuildData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_KFDataMessage_2eproto() {
  delete MsgEnterGame::default_instance_;
  delete MsgEnterGame_reflection_;
  delete MsgSyncUpdateData::default_instance_;
  delete MsgSyncUpdateData_reflection_;
  delete MsgSyncAddData::default_instance_;
  delete MsgSyncAddData_reflection_;
  delete MsgSyncRemoveData::default_instance_;
  delete MsgSyncRemoveData_reflection_;
  delete MsgTellQueryPlayer::default_instance_;
  delete MsgTellQueryPlayer_reflection_;
  delete MsgTellQueryBasic::default_instance_;
  delete MsgTellQueryBasic_reflection_;
  delete MsgSyncUpdateGuildData::default_instance_;
  delete MsgSyncUpdateGuildData_reflection_;
  delete MsgSyncAddGuildData::default_instance_;
  delete MsgSyncAddGuildData_reflection_;
  delete MsgSyncRemoveGuildData::default_instance_;
  delete MsgSyncRemoveGuildData_reflection_;
}

void protobuf_AddDesc_KFDataMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::KFMsg::protobuf_AddDesc_KFCommonMessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023KFDataMessage.proto\022\005KFMsg\032\025KFCommonMe"
    "ssage.proto\"G\n\014MsgEnterGame\022#\n\nplayerdat"
    "a\030\001 \002(\0132\017.KFMsg.PBObject\022\022\n\nservertime\030\002"
    " \002(\004\"4\n\021MsgSyncUpdateData\022\037\n\006pbdata\030\001 \002("
    "\0132\017.KFMsg.PBObject\"1\n\016MsgSyncAddData\022\037\n\006"
    "pbdata\030\001 \002(\0132\017.KFMsg.PBObject\"4\n\021MsgSync"
    "RemoveData\022\037\n\006pbdata\030\001 \002(\0132\017.KFMsg.PBObj"
    "ect\"5\n\022MsgTellQueryPlayer\022\037\n\006player\030\001 \002("
    "\0132\017.KFMsg.PBObject\"4\n\021MsgTellQueryBasic\022"
    "\037\n\006player\030\001 \002(\0132\017.KFMsg.PBObject\"9\n\026MsgS"
    "yncUpdateGuildData\022\037\n\006pbdata\030\001 \002(\0132\017.KFM"
    "sg.PBObject\"6\n\023MsgSyncAddGuildData\022\037\n\006pb"
    "data\030\001 \002(\0132\017.KFMsg.PBObject\"9\n\026MsgSyncRe"
    "moveGuildData\022\037\n\006pbdata\030\001 \002(\0132\017.KFMsg.PB"
    "Object*\205\002\n\014DataProtocol\022\030\n\024MSG_LOGIN_ENT"
    "ER_GAME\020\n\022\030\n\024MSG_SYNC_UPDATE_DATA\020\013\022\025\n\021M"
    "SG_SYNC_ADD_DATA\020\014\022\030\n\024MSG_SYNC_REMOVE_DA"
    "TA\020\r\022\031\n\025MSG_TELL_QUERY_PLAYER\020\016\022\030\n\024MSG_T"
    "ELL_QUERY_BASIC\020\017\022\036\n\032MSG_SYNC_UPDATE_GUI"
    "LD_DATA\020\020\022\033\n\027MSG_SYNC_ADD_GUILD_DATA\020\021\022\036"
    "\n\032MSG_SYNC_REMOVE_GUILD_DATA\020\022", 830);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFDataMessage.proto", &protobuf_RegisterTypes);
  MsgEnterGame::default_instance_ = new MsgEnterGame();
  MsgSyncUpdateData::default_instance_ = new MsgSyncUpdateData();
  MsgSyncAddData::default_instance_ = new MsgSyncAddData();
  MsgSyncRemoveData::default_instance_ = new MsgSyncRemoveData();
  MsgTellQueryPlayer::default_instance_ = new MsgTellQueryPlayer();
  MsgTellQueryBasic::default_instance_ = new MsgTellQueryBasic();
  MsgSyncUpdateGuildData::default_instance_ = new MsgSyncUpdateGuildData();
  MsgSyncAddGuildData::default_instance_ = new MsgSyncAddGuildData();
  MsgSyncRemoveGuildData::default_instance_ = new MsgSyncRemoveGuildData();
  MsgEnterGame::default_instance_->InitAsDefaultInstance();
  MsgSyncUpdateData::default_instance_->InitAsDefaultInstance();
  MsgSyncAddData::default_instance_->InitAsDefaultInstance();
  MsgSyncRemoveData::default_instance_->InitAsDefaultInstance();
  MsgTellQueryPlayer::default_instance_->InitAsDefaultInstance();
  MsgTellQueryBasic::default_instance_->InitAsDefaultInstance();
  MsgSyncUpdateGuildData::default_instance_->InitAsDefaultInstance();
  MsgSyncAddGuildData::default_instance_->InitAsDefaultInstance();
  MsgSyncRemoveGuildData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_KFDataMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_KFDataMessage_2eproto {
  StaticDescriptorInitializer_KFDataMessage_2eproto() {
    protobuf_AddDesc_KFDataMessage_2eproto();
  }
} static_descriptor_initializer_KFDataMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* DataProtocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataProtocol_descriptor_;
}
bool DataProtocol_IsValid(int value) {
  switch(value) {
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int MsgEnterGame::kPlayerdataFieldNumber;
const int MsgEnterGame::kServertimeFieldNumber;
#endif  // !_MSC_VER

MsgEnterGame::MsgEnterGame()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgEnterGame::InitAsDefaultInstance() {
  playerdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgEnterGame::MsgEnterGame(const MsgEnterGame& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgEnterGame::SharedCtor() {
  _cached_size_ = 0;
  playerdata_ = NULL;
  servertime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgEnterGame::~MsgEnterGame() {
  SharedDtor();
}

void MsgEnterGame::SharedDtor() {
  if (this != default_instance_) {
    delete playerdata_;
  }
}

void MsgEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgEnterGame_descriptor_;
}

const MsgEnterGame& MsgEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgEnterGame* MsgEnterGame::default_instance_ = NULL;

MsgEnterGame* MsgEnterGame::New() const {
  return new MsgEnterGame;
}

void MsgEnterGame::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_playerdata()) {
      if (playerdata_ != NULL) playerdata_->::KFMsg::PBObject::Clear();
    }
    servertime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject playerdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_servertime;
        break;
      }

      // required uint64 servertime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_servertime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &servertime_)));
          set_has_servertime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject playerdata = 1;
  if (has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->playerdata(), output);
  }

  // required uint64 servertime = 2;
  if (has_servertime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->servertime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgEnterGame::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject playerdata = 1;
  if (has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->playerdata(), target);
  }

  // required uint64 servertime = 2;
  if (has_servertime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->servertime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgEnterGame::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject playerdata = 1;
    if (has_playerdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerdata());
    }

    // required uint64 servertime = 2;
    if (has_servertime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->servertime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgEnterGame* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgEnterGame*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgEnterGame::MergeFrom(const MsgEnterGame& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playerdata()) {
      mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
    }
    if (from.has_servertime()) {
      set_servertime(from.servertime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEnterGame::CopyFrom(const MsgEnterGame& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEnterGame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MsgEnterGame::Swap(MsgEnterGame* other) {
  if (other != this) {
    std::swap(playerdata_, other->playerdata_);
    std::swap(servertime_, other->servertime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgEnterGame_descriptor_;
  metadata.reflection = MsgEnterGame_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncUpdateData::kPbdataFieldNumber;
#endif  // !_MSC_VER

MsgSyncUpdateData::MsgSyncUpdateData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgSyncUpdateData::InitAsDefaultInstance() {
  pbdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgSyncUpdateData::MsgSyncUpdateData(const MsgSyncUpdateData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgSyncUpdateData::SharedCtor() {
  _cached_size_ = 0;
  pbdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncUpdateData::~MsgSyncUpdateData() {
  SharedDtor();
}

void MsgSyncUpdateData::SharedDtor() {
  if (this != default_instance_) {
    delete pbdata_;
  }
}

void MsgSyncUpdateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncUpdateData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncUpdateData_descriptor_;
}

const MsgSyncUpdateData& MsgSyncUpdateData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgSyncUpdateData* MsgSyncUpdateData::default_instance_ = NULL;

MsgSyncUpdateData* MsgSyncUpdateData::New() const {
  return new MsgSyncUpdateData;
}

void MsgSyncUpdateData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pbdata()) {
      if (pbdata_ != NULL) pbdata_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncUpdateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject pbdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSyncUpdateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pbdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSyncUpdateData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pbdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSyncUpdateData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject pbdata = 1;
    if (has_pbdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pbdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncUpdateData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncUpdateData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncUpdateData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncUpdateData::MergeFrom(const MsgSyncUpdateData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pbdata()) {
      mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncUpdateData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncUpdateData::CopyFrom(const MsgSyncUpdateData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncUpdateData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSyncUpdateData::Swap(MsgSyncUpdateData* other) {
  if (other != this) {
    std::swap(pbdata_, other->pbdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncUpdateData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncUpdateData_descriptor_;
  metadata.reflection = MsgSyncUpdateData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncAddData::kPbdataFieldNumber;
#endif  // !_MSC_VER

MsgSyncAddData::MsgSyncAddData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgSyncAddData::InitAsDefaultInstance() {
  pbdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgSyncAddData::MsgSyncAddData(const MsgSyncAddData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgSyncAddData::SharedCtor() {
  _cached_size_ = 0;
  pbdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncAddData::~MsgSyncAddData() {
  SharedDtor();
}

void MsgSyncAddData::SharedDtor() {
  if (this != default_instance_) {
    delete pbdata_;
  }
}

void MsgSyncAddData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncAddData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncAddData_descriptor_;
}

const MsgSyncAddData& MsgSyncAddData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgSyncAddData* MsgSyncAddData::default_instance_ = NULL;

MsgSyncAddData* MsgSyncAddData::New() const {
  return new MsgSyncAddData;
}

void MsgSyncAddData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pbdata()) {
      if (pbdata_ != NULL) pbdata_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncAddData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject pbdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSyncAddData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pbdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSyncAddData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pbdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSyncAddData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject pbdata = 1;
    if (has_pbdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pbdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncAddData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncAddData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncAddData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncAddData::MergeFrom(const MsgSyncAddData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pbdata()) {
      mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncAddData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncAddData::CopyFrom(const MsgSyncAddData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncAddData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSyncAddData::Swap(MsgSyncAddData* other) {
  if (other != this) {
    std::swap(pbdata_, other->pbdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncAddData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncAddData_descriptor_;
  metadata.reflection = MsgSyncAddData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncRemoveData::kPbdataFieldNumber;
#endif  // !_MSC_VER

MsgSyncRemoveData::MsgSyncRemoveData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgSyncRemoveData::InitAsDefaultInstance() {
  pbdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgSyncRemoveData::MsgSyncRemoveData(const MsgSyncRemoveData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgSyncRemoveData::SharedCtor() {
  _cached_size_ = 0;
  pbdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncRemoveData::~MsgSyncRemoveData() {
  SharedDtor();
}

void MsgSyncRemoveData::SharedDtor() {
  if (this != default_instance_) {
    delete pbdata_;
  }
}

void MsgSyncRemoveData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncRemoveData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncRemoveData_descriptor_;
}

const MsgSyncRemoveData& MsgSyncRemoveData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgSyncRemoveData* MsgSyncRemoveData::default_instance_ = NULL;

MsgSyncRemoveData* MsgSyncRemoveData::New() const {
  return new MsgSyncRemoveData;
}

void MsgSyncRemoveData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pbdata()) {
      if (pbdata_ != NULL) pbdata_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncRemoveData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject pbdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSyncRemoveData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pbdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSyncRemoveData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pbdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSyncRemoveData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject pbdata = 1;
    if (has_pbdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pbdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncRemoveData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncRemoveData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncRemoveData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncRemoveData::MergeFrom(const MsgSyncRemoveData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pbdata()) {
      mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncRemoveData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncRemoveData::CopyFrom(const MsgSyncRemoveData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncRemoveData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSyncRemoveData::Swap(MsgSyncRemoveData* other) {
  if (other != this) {
    std::swap(pbdata_, other->pbdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncRemoveData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncRemoveData_descriptor_;
  metadata.reflection = MsgSyncRemoveData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTellQueryPlayer::kPlayerFieldNumber;
#endif  // !_MSC_VER

MsgTellQueryPlayer::MsgTellQueryPlayer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgTellQueryPlayer::InitAsDefaultInstance() {
  player_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgTellQueryPlayer::MsgTellQueryPlayer(const MsgTellQueryPlayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgTellQueryPlayer::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTellQueryPlayer::~MsgTellQueryPlayer() {
  SharedDtor();
}

void MsgTellQueryPlayer::SharedDtor() {
  if (this != default_instance_) {
    delete player_;
  }
}

void MsgTellQueryPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTellQueryPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTellQueryPlayer_descriptor_;
}

const MsgTellQueryPlayer& MsgTellQueryPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgTellQueryPlayer* MsgTellQueryPlayer::default_instance_ = NULL;

MsgTellQueryPlayer* MsgTellQueryPlayer::New() const {
  return new MsgTellQueryPlayer;
}

void MsgTellQueryPlayer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_player()) {
      if (player_ != NULL) player_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTellQueryPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject player = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgTellQueryPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject player = 1;
  if (has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgTellQueryPlayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject player = 1;
  if (has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->player(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgTellQueryPlayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTellQueryPlayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTellQueryPlayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTellQueryPlayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTellQueryPlayer::MergeFrom(const MsgTellQueryPlayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player()) {
      mutable_player()->::KFMsg::PBObject::MergeFrom(from.player());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTellQueryPlayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTellQueryPlayer::CopyFrom(const MsgTellQueryPlayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTellQueryPlayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgTellQueryPlayer::Swap(MsgTellQueryPlayer* other) {
  if (other != this) {
    std::swap(player_, other->player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTellQueryPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTellQueryPlayer_descriptor_;
  metadata.reflection = MsgTellQueryPlayer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgTellQueryBasic::kPlayerFieldNumber;
#endif  // !_MSC_VER

MsgTellQueryBasic::MsgTellQueryBasic()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgTellQueryBasic::InitAsDefaultInstance() {
  player_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgTellQueryBasic::MsgTellQueryBasic(const MsgTellQueryBasic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgTellQueryBasic::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgTellQueryBasic::~MsgTellQueryBasic() {
  SharedDtor();
}

void MsgTellQueryBasic::SharedDtor() {
  if (this != default_instance_) {
    delete player_;
  }
}

void MsgTellQueryBasic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTellQueryBasic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgTellQueryBasic_descriptor_;
}

const MsgTellQueryBasic& MsgTellQueryBasic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgTellQueryBasic* MsgTellQueryBasic::default_instance_ = NULL;

MsgTellQueryBasic* MsgTellQueryBasic::New() const {
  return new MsgTellQueryBasic;
}

void MsgTellQueryBasic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_player()) {
      if (player_ != NULL) player_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgTellQueryBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject player = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgTellQueryBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject player = 1;
  if (has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgTellQueryBasic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject player = 1;
  if (has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->player(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgTellQueryBasic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTellQueryBasic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgTellQueryBasic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgTellQueryBasic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgTellQueryBasic::MergeFrom(const MsgTellQueryBasic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player()) {
      mutable_player()->::KFMsg::PBObject::MergeFrom(from.player());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgTellQueryBasic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTellQueryBasic::CopyFrom(const MsgTellQueryBasic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTellQueryBasic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgTellQueryBasic::Swap(MsgTellQueryBasic* other) {
  if (other != this) {
    std::swap(player_, other->player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgTellQueryBasic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgTellQueryBasic_descriptor_;
  metadata.reflection = MsgTellQueryBasic_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncUpdateGuildData::kPbdataFieldNumber;
#endif  // !_MSC_VER

MsgSyncUpdateGuildData::MsgSyncUpdateGuildData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgSyncUpdateGuildData::InitAsDefaultInstance() {
  pbdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgSyncUpdateGuildData::MsgSyncUpdateGuildData(const MsgSyncUpdateGuildData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgSyncUpdateGuildData::SharedCtor() {
  _cached_size_ = 0;
  pbdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncUpdateGuildData::~MsgSyncUpdateGuildData() {
  SharedDtor();
}

void MsgSyncUpdateGuildData::SharedDtor() {
  if (this != default_instance_) {
    delete pbdata_;
  }
}

void MsgSyncUpdateGuildData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncUpdateGuildData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncUpdateGuildData_descriptor_;
}

const MsgSyncUpdateGuildData& MsgSyncUpdateGuildData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgSyncUpdateGuildData* MsgSyncUpdateGuildData::default_instance_ = NULL;

MsgSyncUpdateGuildData* MsgSyncUpdateGuildData::New() const {
  return new MsgSyncUpdateGuildData;
}

void MsgSyncUpdateGuildData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pbdata()) {
      if (pbdata_ != NULL) pbdata_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncUpdateGuildData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject pbdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSyncUpdateGuildData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pbdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSyncUpdateGuildData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pbdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSyncUpdateGuildData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject pbdata = 1;
    if (has_pbdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pbdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncUpdateGuildData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncUpdateGuildData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncUpdateGuildData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncUpdateGuildData::MergeFrom(const MsgSyncUpdateGuildData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pbdata()) {
      mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncUpdateGuildData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncUpdateGuildData::CopyFrom(const MsgSyncUpdateGuildData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncUpdateGuildData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSyncUpdateGuildData::Swap(MsgSyncUpdateGuildData* other) {
  if (other != this) {
    std::swap(pbdata_, other->pbdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncUpdateGuildData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncUpdateGuildData_descriptor_;
  metadata.reflection = MsgSyncUpdateGuildData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncAddGuildData::kPbdataFieldNumber;
#endif  // !_MSC_VER

MsgSyncAddGuildData::MsgSyncAddGuildData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgSyncAddGuildData::InitAsDefaultInstance() {
  pbdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgSyncAddGuildData::MsgSyncAddGuildData(const MsgSyncAddGuildData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgSyncAddGuildData::SharedCtor() {
  _cached_size_ = 0;
  pbdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncAddGuildData::~MsgSyncAddGuildData() {
  SharedDtor();
}

void MsgSyncAddGuildData::SharedDtor() {
  if (this != default_instance_) {
    delete pbdata_;
  }
}

void MsgSyncAddGuildData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncAddGuildData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncAddGuildData_descriptor_;
}

const MsgSyncAddGuildData& MsgSyncAddGuildData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgSyncAddGuildData* MsgSyncAddGuildData::default_instance_ = NULL;

MsgSyncAddGuildData* MsgSyncAddGuildData::New() const {
  return new MsgSyncAddGuildData;
}

void MsgSyncAddGuildData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pbdata()) {
      if (pbdata_ != NULL) pbdata_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncAddGuildData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject pbdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSyncAddGuildData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pbdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSyncAddGuildData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pbdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSyncAddGuildData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject pbdata = 1;
    if (has_pbdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pbdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncAddGuildData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncAddGuildData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncAddGuildData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncAddGuildData::MergeFrom(const MsgSyncAddGuildData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pbdata()) {
      mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncAddGuildData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncAddGuildData::CopyFrom(const MsgSyncAddGuildData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncAddGuildData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSyncAddGuildData::Swap(MsgSyncAddGuildData* other) {
  if (other != this) {
    std::swap(pbdata_, other->pbdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncAddGuildData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncAddGuildData_descriptor_;
  metadata.reflection = MsgSyncAddGuildData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MsgSyncRemoveGuildData::kPbdataFieldNumber;
#endif  // !_MSC_VER

MsgSyncRemoveGuildData::MsgSyncRemoveGuildData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MsgSyncRemoveGuildData::InitAsDefaultInstance() {
  pbdata_ = const_cast< ::KFMsg::PBObject*>(&::KFMsg::PBObject::default_instance());
}

MsgSyncRemoveGuildData::MsgSyncRemoveGuildData(const MsgSyncRemoveGuildData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MsgSyncRemoveGuildData::SharedCtor() {
  _cached_size_ = 0;
  pbdata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgSyncRemoveGuildData::~MsgSyncRemoveGuildData() {
  SharedDtor();
}

void MsgSyncRemoveGuildData::SharedDtor() {
  if (this != default_instance_) {
    delete pbdata_;
  }
}

void MsgSyncRemoveGuildData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSyncRemoveGuildData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgSyncRemoveGuildData_descriptor_;
}

const MsgSyncRemoveGuildData& MsgSyncRemoveGuildData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_KFDataMessage_2eproto();
  return *default_instance_;
}

MsgSyncRemoveGuildData* MsgSyncRemoveGuildData::default_instance_ = NULL;

MsgSyncRemoveGuildData* MsgSyncRemoveGuildData::New() const {
  return new MsgSyncRemoveGuildData;
}

void MsgSyncRemoveGuildData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pbdata()) {
      if (pbdata_ != NULL) pbdata_->::KFMsg::PBObject::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MsgSyncRemoveGuildData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .KFMsg.PBObject pbdata = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pbdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MsgSyncRemoveGuildData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pbdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MsgSyncRemoveGuildData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .KFMsg.PBObject pbdata = 1;
  if (has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pbdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MsgSyncRemoveGuildData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .KFMsg.PBObject pbdata = 1;
    if (has_pbdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pbdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSyncRemoveGuildData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MsgSyncRemoveGuildData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MsgSyncRemoveGuildData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MsgSyncRemoveGuildData::MergeFrom(const MsgSyncRemoveGuildData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pbdata()) {
      mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MsgSyncRemoveGuildData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSyncRemoveGuildData::CopyFrom(const MsgSyncRemoveGuildData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSyncRemoveGuildData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MsgSyncRemoveGuildData::Swap(MsgSyncRemoveGuildData* other) {
  if (other != this) {
    std::swap(pbdata_, other->pbdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MsgSyncRemoveGuildData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgSyncRemoveGuildData_descriptor_;
  metadata.reflection = MsgSyncRemoveGuildData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

// @@protoc_insertion_point(global_scope)
