// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFFrameMessage.proto

#ifndef PROTOBUF_INCLUDED_KFFrameMessage_2eproto
#define PROTOBUF_INCLUDED_KFFrameMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFFrameMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFFrameMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[38];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFFrameMessage_2eproto
namespace KFMsg {
class ListenData;
class ListenDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern ListenDataDefaultTypeInternal _ListenData_default_instance_;
class PBDeployCommand;
class PBDeployCommandDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBDeployCommandDefaultTypeInternal _PBDeployCommand_default_instance_;
class PBTransmitRouteMessage;
class PBTransmitRouteMessageDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBTransmitRouteMessageDefaultTypeInternal _PBTransmitRouteMessage_default_instance_;
class RegisterToServerAck;
class RegisterToServerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern RegisterToServerAckDefaultTypeInternal _RegisterToServerAck_default_instance_;
class RegisterToServerReq;
class RegisterToServerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern RegisterToServerReqDefaultTypeInternal _RegisterToServerReq_default_instance_;
class S2SAddObjectToProxyReq;
class S2SAddObjectToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddObjectToProxyReqDefaultTypeInternal _S2SAddObjectToProxyReq_default_instance_;
class S2SAllocObjectToMasterReq;
class S2SAllocObjectToMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAllocObjectToMasterReqDefaultTypeInternal _S2SAllocObjectToMasterReq_default_instance_;
class S2SAllocObjectToProxyAck;
class S2SAllocObjectToProxyAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAllocObjectToProxyAckDefaultTypeInternal _S2SAllocObjectToProxyAck_default_instance_;
class S2SAllocObjectToShardAck;
class S2SAllocObjectToShardAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAllocObjectToShardAckDefaultTypeInternal _S2SAllocObjectToShardAck_default_instance_;
class S2SClusterAuthToClientAck;
class S2SClusterAuthToClientAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterAuthToClientAckDefaultTypeInternal _S2SClusterAuthToClientAck_default_instance_;
class S2SClusterAuthToMasterReq;
class S2SClusterAuthToMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterAuthToMasterReqDefaultTypeInternal _S2SClusterAuthToMasterReq_default_instance_;
class S2SClusterClientDiscoverToShardReq;
class S2SClusterClientDiscoverToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterClientDiscoverToShardReqDefaultTypeInternal _S2SClusterClientDiscoverToShardReq_default_instance_;
class S2SClusterClientLostToShardReq;
class S2SClusterClientLostToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterClientLostToShardReqDefaultTypeInternal _S2SClusterClientLostToShardReq_default_instance_;
class S2SClusterRegisterToMasterReq;
class S2SClusterRegisterToMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterRegisterToMasterReqDefaultTypeInternal _S2SClusterRegisterToMasterReq_default_instance_;
class S2SClusterTokenToProxyReq;
class S2SClusterTokenToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterTokenToProxyReqDefaultTypeInternal _S2SClusterTokenToProxyReq_default_instance_;
class S2SClusterUpdateToMasterReq;
class S2SClusterUpdateToMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterUpdateToMasterReqDefaultTypeInternal _S2SClusterUpdateToMasterReq_default_instance_;
class S2SClusterVerifyToClientAck;
class S2SClusterVerifyToClientAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterVerifyToClientAckDefaultTypeInternal _S2SClusterVerifyToClientAck_default_instance_;
class S2SClusterVerifyToProxyReq;
class S2SClusterVerifyToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClusterVerifyToProxyReqDefaultTypeInternal _S2SClusterVerifyToProxyReq_default_instance_;
class S2SDeployCommandToAgentReq;
class S2SDeployCommandToAgentReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDeployCommandToAgentReqDefaultTypeInternal _S2SDeployCommandToAgentReq_default_instance_;
class S2SDeployCommandToMasterReq;
class S2SDeployCommandToMasterReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDeployCommandToMasterReqDefaultTypeInternal _S2SDeployCommandToMasterReq_default_instance_;
class S2SDeployCommandToServerReq;
class S2SDeployCommandToServerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDeployCommandToServerReqDefaultTypeInternal _S2SDeployCommandToServerReq_default_instance_;
class S2SGetAgentIpAddressAck;
class S2SGetAgentIpAddressAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SGetAgentIpAddressAckDefaultTypeInternal _S2SGetAgentIpAddressAck_default_instance_;
class S2SGetAgentIpAddressReq;
class S2SGetAgentIpAddressReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SGetAgentIpAddressReqDefaultTypeInternal _S2SGetAgentIpAddressReq_default_instance_;
class S2SLogReq;
class S2SLogReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLogReqDefaultTypeInternal _S2SLogReq_default_instance_;
class S2SRegisterAgentToServerReq;
class S2SRegisterAgentToServerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterAgentToServerReqDefaultTypeInternal _S2SRegisterAgentToServerReq_default_instance_;
class S2SRegisterRouteClientToProxyReq;
class S2SRegisterRouteClientToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterRouteClientToProxyReqDefaultTypeInternal _S2SRegisterRouteClientToProxyReq_default_instance_;
class S2SRegisterRouteClientToShardReq;
class S2SRegisterRouteClientToShardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRegisterRouteClientToShardReqDefaultTypeInternal _S2SRegisterRouteClientToShardReq_default_instance_;
class S2SRemoveObjectToProxyReq;
class S2SRemoveObjectToProxyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRemoveObjectToProxyReqDefaultTypeInternal _S2SRemoveObjectToProxyReq_default_instance_;
class S2SRemoveOnlineToDirReq;
class S2SRemoveOnlineToDirReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRemoveOnlineToDirReqDefaultTypeInternal _S2SRemoveOnlineToDirReq_default_instance_;
class S2SSendToDynamicObjectReq;
class S2SSendToDynamicObjectReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSendToDynamicObjectReqDefaultTypeInternal _S2SSendToDynamicObjectReq_default_instance_;
class S2SSendToStaticObjectReq;
class S2SSendToStaticObjectReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSendToStaticObjectReqDefaultTypeInternal _S2SSendToStaticObjectReq_default_instance_;
class S2STransmitRouteProxyMessageAck;
class S2STransmitRouteProxyMessageAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitRouteProxyMessageAckDefaultTypeInternal _S2STransmitRouteProxyMessageAck_default_instance_;
class S2STransmitRouteProxyMessageReq;
class S2STransmitRouteProxyMessageReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitRouteProxyMessageReqDefaultTypeInternal _S2STransmitRouteProxyMessageReq_default_instance_;
class S2STransmitRouteZoneMessageAck;
class S2STransmitRouteZoneMessageAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitRouteZoneMessageAckDefaultTypeInternal _S2STransmitRouteZoneMessageAck_default_instance_;
class S2STransmitRouteZoneMessageReq;
class S2STransmitRouteZoneMessageReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STransmitRouteZoneMessageReqDefaultTypeInternal _S2STransmitRouteZoneMessageReq_default_instance_;
class S2SUpdateOnlineToDirReq;
class S2SUpdateOnlineToDirReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateOnlineToDirReqDefaultTypeInternal _S2SUpdateOnlineToDirReq_default_instance_;
class TellRegisterToServer;
class TellRegisterToServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern TellRegisterToServerDefaultTypeInternal _TellRegisterToServer_default_instance_;
class TellUnRegisterFromServer;
class TellUnRegisterFromServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern TellUnRegisterFromServerDefaultTypeInternal _TellUnRegisterFromServer_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::ListenData* Arena::CreateMaybeMessage<::KFMsg::ListenData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBDeployCommand* Arena::CreateMaybeMessage<::KFMsg::PBDeployCommand>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBTransmitRouteMessage* Arena::CreateMaybeMessage<::KFMsg::PBTransmitRouteMessage>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::RegisterToServerAck* Arena::CreateMaybeMessage<::KFMsg::RegisterToServerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::RegisterToServerReq* Arena::CreateMaybeMessage<::KFMsg::RegisterToServerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddObjectToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddObjectToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAllocObjectToMasterReq* Arena::CreateMaybeMessage<::KFMsg::S2SAllocObjectToMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAllocObjectToProxyAck* Arena::CreateMaybeMessage<::KFMsg::S2SAllocObjectToProxyAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAllocObjectToShardAck* Arena::CreateMaybeMessage<::KFMsg::S2SAllocObjectToShardAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterAuthToClientAck* Arena::CreateMaybeMessage<::KFMsg::S2SClusterAuthToClientAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterAuthToMasterReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterAuthToMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterClientDiscoverToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterClientDiscoverToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterClientLostToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterClientLostToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterRegisterToMasterReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterRegisterToMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterTokenToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterTokenToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterUpdateToMasterReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterUpdateToMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterVerifyToClientAck* Arena::CreateMaybeMessage<::KFMsg::S2SClusterVerifyToClientAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClusterVerifyToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SClusterVerifyToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDeployCommandToAgentReq* Arena::CreateMaybeMessage<::KFMsg::S2SDeployCommandToAgentReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDeployCommandToMasterReq* Arena::CreateMaybeMessage<::KFMsg::S2SDeployCommandToMasterReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDeployCommandToServerReq* Arena::CreateMaybeMessage<::KFMsg::S2SDeployCommandToServerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SGetAgentIpAddressAck* Arena::CreateMaybeMessage<::KFMsg::S2SGetAgentIpAddressAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SGetAgentIpAddressReq* Arena::CreateMaybeMessage<::KFMsg::S2SGetAgentIpAddressReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLogReq* Arena::CreateMaybeMessage<::KFMsg::S2SLogReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterAgentToServerReq* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterAgentToServerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterRouteClientToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterRouteClientToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRegisterRouteClientToShardReq* Arena::CreateMaybeMessage<::KFMsg::S2SRegisterRouteClientToShardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRemoveObjectToProxyReq* Arena::CreateMaybeMessage<::KFMsg::S2SRemoveObjectToProxyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRemoveOnlineToDirReq* Arena::CreateMaybeMessage<::KFMsg::S2SRemoveOnlineToDirReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSendToDynamicObjectReq* Arena::CreateMaybeMessage<::KFMsg::S2SSendToDynamicObjectReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSendToStaticObjectReq* Arena::CreateMaybeMessage<::KFMsg::S2SSendToStaticObjectReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitRouteProxyMessageAck* Arena::CreateMaybeMessage<::KFMsg::S2STransmitRouteProxyMessageAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitRouteProxyMessageReq* Arena::CreateMaybeMessage<::KFMsg::S2STransmitRouteProxyMessageReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitRouteZoneMessageAck* Arena::CreateMaybeMessage<::KFMsg::S2STransmitRouteZoneMessageAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STransmitRouteZoneMessageReq* Arena::CreateMaybeMessage<::KFMsg::S2STransmitRouteZoneMessageReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateOnlineToDirReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateOnlineToDirReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::TellRegisterToServer* Arena::CreateMaybeMessage<::KFMsg::TellRegisterToServer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::TellUnRegisterFromServer* Arena::CreateMaybeMessage<::KFMsg::TellUnRegisterFromServer>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum FrameProtocol {
  S2S_FRAME_PROTOCOL_BEGIN = 0,
  S2S_REGISTER_TO_SERVER_REQ = 10001,
  S2S_REGISTER_TO_SERVER_ACK = 10002,
  S2S_TELL_REGISTER_TO_SERVER = 10003,
  S2S_TELL_UNREGISTER_FROM_SERVER = 10004,
  S2S_REGISTER_ROUTE_CLIENT_TO_PROXY_REQ = 10011,
  S2S_REGISTER_ROUTE_CLIENT_TO_SHARD_REQ = 10012,
  S2S_TRANSMIT_ROUTE_ZONE_MESSAGE_REQ = 10013,
  S2S_TRANSMIT_ROUTE_ZONE_MESSAGE_ACK = 10014,
  S2S_TRANSMIT_ROUTE_PROXY_MESSAGE_REQ = 10015,
  S2S_TRANSMIT_ROUTE_PROXY_MESSAGE_ACK = 10016,
  S2S_LOG_REQ = 10021,
  S2S_UPDATE_ONLINE_TO_DIR_REQ = 10022,
  S2S_REMOVE_ONLINE_TO_DIR_REQ = 10023,
  S2S_CLUSTER_REGISTER_TO_MASTER_REQ = 10101,
  S2S_CLUSTER_UPDATE_TO_MASTER_REQ = 10102,
  S2S_CLUSTER_AUTH_TO_MASTER_REQ = 10103,
  S2S_CLUSTER_AUTH_TO_CLIENT_ACK = 10104,
  S2S_CLUSTER_TOKEN_TO_PROXY_REQ = 10105,
  S2S_CLUSTER_VERIFY_TO_PROXY_REQ = 10106,
  S2S_CLUSTER_VERIFY_TO_CLIENT_ACK = 10107,
  S2S_CLUSTER_CLIENT_DISCOVER_TO_SHARD_REQ = 10108,
  S2S_CLUSTER_CLIENT_LOST_TO_SHARD_REQ = 10109,
  S2S_REMOVE_OBJECT_TO_PROXY_REQ = 10110,
  S2S_ALLOC_OBJECT_TO_MASTER_REQ = 10112,
  S2S_ALLOC_OBJECT_TO_PROXY_ACK = 10113,
  S2S_ALLOC_OBJECT_TO_SHARD_ACK = 10114,
  S2S_SEND_TO_STATIC_OBJECT_REQ = 10115,
  S2S_SEND_TO_DYNAMIC_OBJECT_REQ = 10116,
  S2S_ADD_OBJECT_TO_PROXY_REQ = 10117,
  S2S_REGISTER_AGENT_TO_SERVER_REQ = 10301,
  S2S_GET_AGENT_IP_ADDRESS_REQ = 10303,
  S2S_GET_AGENT_IP_ADDRESS_ACK = 10304,
  S2S_DEPLOY_COMMAND_TO_AGENT_REQ = 10305,
  S2S_DEPLOY_COMMAND_TO_MASTER_REQ = 10306,
  S2S_DEPLOY_COMMAND_TO_SERVER_REQ = 10307,
  FrameProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FrameProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool FrameProtocol_IsValid(int value);
const FrameProtocol FrameProtocol_MIN = S2S_FRAME_PROTOCOL_BEGIN;
const FrameProtocol FrameProtocol_MAX = S2S_DEPLOY_COMMAND_TO_SERVER_REQ;
const int FrameProtocol_ARRAYSIZE = FrameProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* FrameProtocol_descriptor();
inline const ::std::string& FrameProtocol_Name(FrameProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    FrameProtocol_descriptor(), value);
}
inline bool FrameProtocol_Parse(
    const ::std::string& name, FrameProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FrameProtocol>(
    FrameProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT ListenData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.ListenData) */ {
 public:
  ListenData();
  virtual ~ListenData();

  ListenData(const ListenData& from);

  inline ListenData& operator=(const ListenData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListenData(ListenData&& from) noexcept
    : ListenData() {
    *this = ::std::move(from);
  }

  inline ListenData& operator=(ListenData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListenData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListenData* internal_default_instance() {
    return reinterpret_cast<const ListenData*>(
               &_ListenData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ListenData* other);
  friend void swap(ListenData& a, ListenData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListenData* New() const final {
    return CreateMaybeMessage<ListenData>(NULL);
  }

  ListenData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListenData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListenData& from);
  void MergeFrom(const ListenData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListenData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes appname = 2;
  void clear_appname();
  static const int kAppnameFieldNumber = 2;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const void* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // bytes apptype = 3;
  void clear_apptype();
  static const int kApptypeFieldNumber = 3;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const void* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // bytes ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // uint32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 zoneid = 6;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 6;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.ListenData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT RegisterToServerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.RegisterToServerReq) */ {
 public:
  RegisterToServerReq();
  virtual ~RegisterToServerReq();

  RegisterToServerReq(const RegisterToServerReq& from);

  inline RegisterToServerReq& operator=(const RegisterToServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterToServerReq(RegisterToServerReq&& from) noexcept
    : RegisterToServerReq() {
    *this = ::std::move(from);
  }

  inline RegisterToServerReq& operator=(RegisterToServerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterToServerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterToServerReq* internal_default_instance() {
    return reinterpret_cast<const RegisterToServerReq*>(
               &_RegisterToServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RegisterToServerReq* other);
  friend void swap(RegisterToServerReq& a, RegisterToServerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterToServerReq* New() const final {
    return CreateMaybeMessage<RegisterToServerReq>(NULL);
  }

  RegisterToServerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterToServerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterToServerReq& from);
  void MergeFrom(const RegisterToServerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterToServerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.ListenData listen = 1;
  bool has_listen() const;
  void clear_listen();
  static const int kListenFieldNumber = 1;
  private:
  const ::KFMsg::ListenData& _internal_listen() const;
  public:
  const ::KFMsg::ListenData& listen() const;
  ::KFMsg::ListenData* release_listen();
  ::KFMsg::ListenData* mutable_listen();
  void set_allocated_listen(::KFMsg::ListenData* listen);

  // @@protoc_insertion_point(class_scope:KFMsg.RegisterToServerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::ListenData* listen_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT RegisterToServerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.RegisterToServerAck) */ {
 public:
  RegisterToServerAck();
  virtual ~RegisterToServerAck();

  RegisterToServerAck(const RegisterToServerAck& from);

  inline RegisterToServerAck& operator=(const RegisterToServerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterToServerAck(RegisterToServerAck&& from) noexcept
    : RegisterToServerAck() {
    *this = ::std::move(from);
  }

  inline RegisterToServerAck& operator=(RegisterToServerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterToServerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterToServerAck* internal_default_instance() {
    return reinterpret_cast<const RegisterToServerAck*>(
               &_RegisterToServerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RegisterToServerAck* other);
  friend void swap(RegisterToServerAck& a, RegisterToServerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterToServerAck* New() const final {
    return CreateMaybeMessage<RegisterToServerAck>(NULL);
  }

  RegisterToServerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterToServerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterToServerAck& from);
  void MergeFrom(const RegisterToServerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterToServerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes appname = 2;
  void clear_appname();
  static const int kAppnameFieldNumber = 2;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const void* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // bytes apptype = 3;
  void clear_apptype();
  static const int kApptypeFieldNumber = 3;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const void* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // uint64 appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.RegisterToServerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::uint64 appid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT TellRegisterToServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.TellRegisterToServer) */ {
 public:
  TellRegisterToServer();
  virtual ~TellRegisterToServer();

  TellRegisterToServer(const TellRegisterToServer& from);

  inline TellRegisterToServer& operator=(const TellRegisterToServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TellRegisterToServer(TellRegisterToServer&& from) noexcept
    : TellRegisterToServer() {
    *this = ::std::move(from);
  }

  inline TellRegisterToServer& operator=(TellRegisterToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TellRegisterToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TellRegisterToServer* internal_default_instance() {
    return reinterpret_cast<const TellRegisterToServer*>(
               &_TellRegisterToServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(TellRegisterToServer* other);
  friend void swap(TellRegisterToServer& a, TellRegisterToServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TellRegisterToServer* New() const final {
    return CreateMaybeMessage<TellRegisterToServer>(NULL);
  }

  TellRegisterToServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TellRegisterToServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TellRegisterToServer& from);
  void MergeFrom(const TellRegisterToServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TellRegisterToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes servername = 1;
  void clear_servername();
  static const int kServernameFieldNumber = 1;
  const ::std::string& servername() const;
  void set_servername(const ::std::string& value);
  #if LANG_CXX11
  void set_servername(::std::string&& value);
  #endif
  void set_servername(const char* value);
  void set_servername(const void* value, size_t size);
  ::std::string* mutable_servername();
  ::std::string* release_servername();
  void set_allocated_servername(::std::string* servername);

  // .KFMsg.ListenData listen = 3;
  bool has_listen() const;
  void clear_listen();
  static const int kListenFieldNumber = 3;
  private:
  const ::KFMsg::ListenData& _internal_listen() const;
  public:
  const ::KFMsg::ListenData& listen() const;
  ::KFMsg::ListenData* release_listen();
  ::KFMsg::ListenData* mutable_listen();
  void set_allocated_listen(::KFMsg::ListenData* listen);

  // uint32 serverzoneid = 2;
  void clear_serverzoneid();
  static const int kServerzoneidFieldNumber = 2;
  ::google::protobuf::uint32 serverzoneid() const;
  void set_serverzoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.TellRegisterToServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr servername_;
  ::KFMsg::ListenData* listen_;
  ::google::protobuf::uint32 serverzoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT TellUnRegisterFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.TellUnRegisterFromServer) */ {
 public:
  TellUnRegisterFromServer();
  virtual ~TellUnRegisterFromServer();

  TellUnRegisterFromServer(const TellUnRegisterFromServer& from);

  inline TellUnRegisterFromServer& operator=(const TellUnRegisterFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TellUnRegisterFromServer(TellUnRegisterFromServer&& from) noexcept
    : TellUnRegisterFromServer() {
    *this = ::std::move(from);
  }

  inline TellUnRegisterFromServer& operator=(TellUnRegisterFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TellUnRegisterFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TellUnRegisterFromServer* internal_default_instance() {
    return reinterpret_cast<const TellUnRegisterFromServer*>(
               &_TellUnRegisterFromServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TellUnRegisterFromServer* other);
  friend void swap(TellUnRegisterFromServer& a, TellUnRegisterFromServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TellUnRegisterFromServer* New() const final {
    return CreateMaybeMessage<TellUnRegisterFromServer>(NULL);
  }

  TellUnRegisterFromServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TellUnRegisterFromServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TellUnRegisterFromServer& from);
  void MergeFrom(const TellUnRegisterFromServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TellUnRegisterFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes servername = 1;
  void clear_servername();
  static const int kServernameFieldNumber = 1;
  const ::std::string& servername() const;
  void set_servername(const ::std::string& value);
  #if LANG_CXX11
  void set_servername(::std::string&& value);
  #endif
  void set_servername(const char* value);
  void set_servername(const void* value, size_t size);
  ::std::string* mutable_servername();
  ::std::string* release_servername();
  void set_allocated_servername(::std::string* servername);

  // bytes appname = 4;
  void clear_appname();
  static const int kAppnameFieldNumber = 4;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const void* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // bytes apptype = 5;
  void clear_apptype();
  static const int kApptypeFieldNumber = 5;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const void* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // uint64 appid = 3;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // uint32 serverzoneid = 2;
  void clear_serverzoneid();
  static const int kServerzoneidFieldNumber = 2;
  ::google::protobuf::uint32 serverzoneid() const;
  void set_serverzoneid(::google::protobuf::uint32 value);

  // uint32 zoneid = 6;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 6;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.TellUnRegisterFromServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr servername_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::uint32 serverzoneid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterRouteClientToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterRouteClientToProxyReq) */ {
 public:
  S2SRegisterRouteClientToProxyReq();
  virtual ~S2SRegisterRouteClientToProxyReq();

  S2SRegisterRouteClientToProxyReq(const S2SRegisterRouteClientToProxyReq& from);

  inline S2SRegisterRouteClientToProxyReq& operator=(const S2SRegisterRouteClientToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterRouteClientToProxyReq(S2SRegisterRouteClientToProxyReq&& from) noexcept
    : S2SRegisterRouteClientToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SRegisterRouteClientToProxyReq& operator=(S2SRegisterRouteClientToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterRouteClientToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterRouteClientToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterRouteClientToProxyReq*>(
               &_S2SRegisterRouteClientToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(S2SRegisterRouteClientToProxyReq* other);
  friend void swap(S2SRegisterRouteClientToProxyReq& a, S2SRegisterRouteClientToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterRouteClientToProxyReq* New() const final {
    return CreateMaybeMessage<S2SRegisterRouteClientToProxyReq>(NULL);
  }

  S2SRegisterRouteClientToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterRouteClientToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterRouteClientToProxyReq& from);
  void MergeFrom(const S2SRegisterRouteClientToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterRouteClientToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterRouteClientToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterRouteClientToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterRouteClientToShardReq) */ {
 public:
  S2SRegisterRouteClientToShardReq();
  virtual ~S2SRegisterRouteClientToShardReq();

  S2SRegisterRouteClientToShardReq(const S2SRegisterRouteClientToShardReq& from);

  inline S2SRegisterRouteClientToShardReq& operator=(const S2SRegisterRouteClientToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterRouteClientToShardReq(S2SRegisterRouteClientToShardReq&& from) noexcept
    : S2SRegisterRouteClientToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SRegisterRouteClientToShardReq& operator=(S2SRegisterRouteClientToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterRouteClientToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterRouteClientToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterRouteClientToShardReq*>(
               &_S2SRegisterRouteClientToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(S2SRegisterRouteClientToShardReq* other);
  friend void swap(S2SRegisterRouteClientToShardReq& a, S2SRegisterRouteClientToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterRouteClientToShardReq* New() const final {
    return CreateMaybeMessage<S2SRegisterRouteClientToShardReq>(NULL);
  }

  S2SRegisterRouteClientToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterRouteClientToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterRouteClientToShardReq& from);
  void MergeFrom(const S2SRegisterRouteClientToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterRouteClientToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 serverid = 1;
  int serverid_size() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid(int index) const;
  void set_serverid(int index, ::google::protobuf::uint64 value);
  void add_serverid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      serverid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_serverid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterRouteClientToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > serverid_;
  mutable int _serverid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBTransmitRouteMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBTransmitRouteMessage) */ {
 public:
  PBTransmitRouteMessage();
  virtual ~PBTransmitRouteMessage();

  PBTransmitRouteMessage(const PBTransmitRouteMessage& from);

  inline PBTransmitRouteMessage& operator=(const PBTransmitRouteMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBTransmitRouteMessage(PBTransmitRouteMessage&& from) noexcept
    : PBTransmitRouteMessage() {
    *this = ::std::move(from);
  }

  inline PBTransmitRouteMessage& operator=(PBTransmitRouteMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTransmitRouteMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBTransmitRouteMessage* internal_default_instance() {
    return reinterpret_cast<const PBTransmitRouteMessage*>(
               &_PBTransmitRouteMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PBTransmitRouteMessage* other);
  friend void swap(PBTransmitRouteMessage& a, PBTransmitRouteMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBTransmitRouteMessage* New() const final {
    return CreateMaybeMessage<PBTransmitRouteMessage>(NULL);
  }

  PBTransmitRouteMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBTransmitRouteMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBTransmitRouteMessage& from);
  void MergeFrom(const PBTransmitRouteMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBTransmitRouteMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 5;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 5;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 msgid = 4;
  void clear_msgid();
  static const int kMsgidFieldNumber = 4;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBTransmitRouteMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitRouteZoneMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitRouteZoneMessageReq) */ {
 public:
  S2STransmitRouteZoneMessageReq();
  virtual ~S2STransmitRouteZoneMessageReq();

  S2STransmitRouteZoneMessageReq(const S2STransmitRouteZoneMessageReq& from);

  inline S2STransmitRouteZoneMessageReq& operator=(const S2STransmitRouteZoneMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitRouteZoneMessageReq(S2STransmitRouteZoneMessageReq&& from) noexcept
    : S2STransmitRouteZoneMessageReq() {
    *this = ::std::move(from);
  }

  inline S2STransmitRouteZoneMessageReq& operator=(S2STransmitRouteZoneMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitRouteZoneMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitRouteZoneMessageReq* internal_default_instance() {
    return reinterpret_cast<const S2STransmitRouteZoneMessageReq*>(
               &_S2STransmitRouteZoneMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(S2STransmitRouteZoneMessageReq* other);
  friend void swap(S2STransmitRouteZoneMessageReq& a, S2STransmitRouteZoneMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitRouteZoneMessageReq* New() const final {
    return CreateMaybeMessage<S2STransmitRouteZoneMessageReq>(NULL);
  }

  S2STransmitRouteZoneMessageReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitRouteZoneMessageReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitRouteZoneMessageReq& from);
  void MergeFrom(const S2STransmitRouteZoneMessageReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitRouteZoneMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBTransmitRouteMessage transmitdata = 1;
  bool has_transmitdata() const;
  void clear_transmitdata();
  static const int kTransmitdataFieldNumber = 1;
  private:
  const ::KFMsg::PBTransmitRouteMessage& _internal_transmitdata() const;
  public:
  const ::KFMsg::PBTransmitRouteMessage& transmitdata() const;
  ::KFMsg::PBTransmitRouteMessage* release_transmitdata();
  ::KFMsg::PBTransmitRouteMessage* mutable_transmitdata();
  void set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitRouteZoneMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBTransmitRouteMessage* transmitdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitRouteZoneMessageAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitRouteZoneMessageAck) */ {
 public:
  S2STransmitRouteZoneMessageAck();
  virtual ~S2STransmitRouteZoneMessageAck();

  S2STransmitRouteZoneMessageAck(const S2STransmitRouteZoneMessageAck& from);

  inline S2STransmitRouteZoneMessageAck& operator=(const S2STransmitRouteZoneMessageAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitRouteZoneMessageAck(S2STransmitRouteZoneMessageAck&& from) noexcept
    : S2STransmitRouteZoneMessageAck() {
    *this = ::std::move(from);
  }

  inline S2STransmitRouteZoneMessageAck& operator=(S2STransmitRouteZoneMessageAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitRouteZoneMessageAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitRouteZoneMessageAck* internal_default_instance() {
    return reinterpret_cast<const S2STransmitRouteZoneMessageAck*>(
               &_S2STransmitRouteZoneMessageAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(S2STransmitRouteZoneMessageAck* other);
  friend void swap(S2STransmitRouteZoneMessageAck& a, S2STransmitRouteZoneMessageAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitRouteZoneMessageAck* New() const final {
    return CreateMaybeMessage<S2STransmitRouteZoneMessageAck>(NULL);
  }

  S2STransmitRouteZoneMessageAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitRouteZoneMessageAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitRouteZoneMessageAck& from);
  void MergeFrom(const S2STransmitRouteZoneMessageAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitRouteZoneMessageAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBTransmitRouteMessage transmitdata = 1;
  bool has_transmitdata() const;
  void clear_transmitdata();
  static const int kTransmitdataFieldNumber = 1;
  private:
  const ::KFMsg::PBTransmitRouteMessage& _internal_transmitdata() const;
  public:
  const ::KFMsg::PBTransmitRouteMessage& transmitdata() const;
  ::KFMsg::PBTransmitRouteMessage* release_transmitdata();
  ::KFMsg::PBTransmitRouteMessage* mutable_transmitdata();
  void set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitRouteZoneMessageAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBTransmitRouteMessage* transmitdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitRouteProxyMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitRouteProxyMessageReq) */ {
 public:
  S2STransmitRouteProxyMessageReq();
  virtual ~S2STransmitRouteProxyMessageReq();

  S2STransmitRouteProxyMessageReq(const S2STransmitRouteProxyMessageReq& from);

  inline S2STransmitRouteProxyMessageReq& operator=(const S2STransmitRouteProxyMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitRouteProxyMessageReq(S2STransmitRouteProxyMessageReq&& from) noexcept
    : S2STransmitRouteProxyMessageReq() {
    *this = ::std::move(from);
  }

  inline S2STransmitRouteProxyMessageReq& operator=(S2STransmitRouteProxyMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitRouteProxyMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitRouteProxyMessageReq* internal_default_instance() {
    return reinterpret_cast<const S2STransmitRouteProxyMessageReq*>(
               &_S2STransmitRouteProxyMessageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(S2STransmitRouteProxyMessageReq* other);
  friend void swap(S2STransmitRouteProxyMessageReq& a, S2STransmitRouteProxyMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitRouteProxyMessageReq* New() const final {
    return CreateMaybeMessage<S2STransmitRouteProxyMessageReq>(NULL);
  }

  S2STransmitRouteProxyMessageReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitRouteProxyMessageReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitRouteProxyMessageReq& from);
  void MergeFrom(const S2STransmitRouteProxyMessageReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitRouteProxyMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBTransmitRouteMessage transmitdata = 1;
  bool has_transmitdata() const;
  void clear_transmitdata();
  static const int kTransmitdataFieldNumber = 1;
  private:
  const ::KFMsg::PBTransmitRouteMessage& _internal_transmitdata() const;
  public:
  const ::KFMsg::PBTransmitRouteMessage& transmitdata() const;
  ::KFMsg::PBTransmitRouteMessage* release_transmitdata();
  ::KFMsg::PBTransmitRouteMessage* mutable_transmitdata();
  void set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitRouteProxyMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBTransmitRouteMessage* transmitdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STransmitRouteProxyMessageAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STransmitRouteProxyMessageAck) */ {
 public:
  S2STransmitRouteProxyMessageAck();
  virtual ~S2STransmitRouteProxyMessageAck();

  S2STransmitRouteProxyMessageAck(const S2STransmitRouteProxyMessageAck& from);

  inline S2STransmitRouteProxyMessageAck& operator=(const S2STransmitRouteProxyMessageAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STransmitRouteProxyMessageAck(S2STransmitRouteProxyMessageAck&& from) noexcept
    : S2STransmitRouteProxyMessageAck() {
    *this = ::std::move(from);
  }

  inline S2STransmitRouteProxyMessageAck& operator=(S2STransmitRouteProxyMessageAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STransmitRouteProxyMessageAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STransmitRouteProxyMessageAck* internal_default_instance() {
    return reinterpret_cast<const S2STransmitRouteProxyMessageAck*>(
               &_S2STransmitRouteProxyMessageAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(S2STransmitRouteProxyMessageAck* other);
  friend void swap(S2STransmitRouteProxyMessageAck& a, S2STransmitRouteProxyMessageAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STransmitRouteProxyMessageAck* New() const final {
    return CreateMaybeMessage<S2STransmitRouteProxyMessageAck>(NULL);
  }

  S2STransmitRouteProxyMessageAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STransmitRouteProxyMessageAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STransmitRouteProxyMessageAck& from);
  void MergeFrom(const S2STransmitRouteProxyMessageAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STransmitRouteProxyMessageAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBTransmitRouteMessage transmitdata = 1;
  bool has_transmitdata() const;
  void clear_transmitdata();
  static const int kTransmitdataFieldNumber = 1;
  private:
  const ::KFMsg::PBTransmitRouteMessage& _internal_transmitdata() const;
  public:
  const ::KFMsg::PBTransmitRouteMessage& transmitdata() const;
  ::KFMsg::PBTransmitRouteMessage* release_transmitdata();
  ::KFMsg::PBTransmitRouteMessage* mutable_transmitdata();
  void set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STransmitRouteProxyMessageAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBTransmitRouteMessage* transmitdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLogReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLogReq) */ {
 public:
  S2SLogReq();
  virtual ~S2SLogReq();

  S2SLogReq(const S2SLogReq& from);

  inline S2SLogReq& operator=(const S2SLogReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLogReq(S2SLogReq&& from) noexcept
    : S2SLogReq() {
    *this = ::std::move(from);
  }

  inline S2SLogReq& operator=(S2SLogReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLogReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLogReq* internal_default_instance() {
    return reinterpret_cast<const S2SLogReq*>(
               &_S2SLogReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(S2SLogReq* other);
  friend void swap(S2SLogReq& a, S2SLogReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLogReq* New() const final {
    return CreateMaybeMessage<S2SLogReq>(NULL);
  }

  S2SLogReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLogReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLogReq& from);
  void MergeFrom(const S2SLogReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLogReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes app_name = 3;
  void clear_app_name();
  static const int kAppNameFieldNumber = 3;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const void* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // bytes app_type = 4;
  void clear_app_type();
  static const int kAppTypeFieldNumber = 4;
  const ::std::string& app_type() const;
  void set_app_type(const ::std::string& value);
  #if LANG_CXX11
  void set_app_type(::std::string&& value);
  #endif
  void set_app_type(const char* value);
  void set_app_type(const void* value, size_t size);
  ::std::string* mutable_app_type();
  ::std::string* release_app_type();
  void set_allocated_app_type(::std::string* app_type);

  // bytes app_id = 5;
  void clear_app_id();
  static const int kAppIdFieldNumber = 5;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const void* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // bytes log_info = 6;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 6;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const void* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // uint32 log_level = 1;
  void clear_log_level();
  static const int kLogLevelFieldNumber = 1;
  ::google::protobuf::uint32 log_level() const;
  void set_log_level(::google::protobuf::uint32 value);

  // uint32 zone_id = 2;
  void clear_zone_id();
  static const int kZoneIdFieldNumber = 2;
  ::google::protobuf::uint32 zone_id() const;
  void set_zone_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLogReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr app_type_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::uint32 log_level_;
  ::google::protobuf::uint32 zone_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateOnlineToDirReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateOnlineToDirReq) */ {
 public:
  S2SUpdateOnlineToDirReq();
  virtual ~S2SUpdateOnlineToDirReq();

  S2SUpdateOnlineToDirReq(const S2SUpdateOnlineToDirReq& from);

  inline S2SUpdateOnlineToDirReq& operator=(const S2SUpdateOnlineToDirReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateOnlineToDirReq(S2SUpdateOnlineToDirReq&& from) noexcept
    : S2SUpdateOnlineToDirReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateOnlineToDirReq& operator=(S2SUpdateOnlineToDirReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateOnlineToDirReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateOnlineToDirReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateOnlineToDirReq*>(
               &_S2SUpdateOnlineToDirReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(S2SUpdateOnlineToDirReq* other);
  friend void swap(S2SUpdateOnlineToDirReq& a, S2SUpdateOnlineToDirReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateOnlineToDirReq* New() const final {
    return CreateMaybeMessage<S2SUpdateOnlineToDirReq>(NULL);
  }

  S2SUpdateOnlineToDirReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateOnlineToDirReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateOnlineToDirReq& from);
  void MergeFrom(const S2SUpdateOnlineToDirReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateOnlineToDirReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes zonename = 2;
  void clear_zonename();
  static const int kZonenameFieldNumber = 2;
  const ::std::string& zonename() const;
  void set_zonename(const ::std::string& value);
  #if LANG_CXX11
  void set_zonename(::std::string&& value);
  #endif
  void set_zonename(const char* value);
  void set_zonename(const void* value, size_t size);
  ::std::string* mutable_zonename();
  ::std::string* release_zonename();
  void set_allocated_zonename(::std::string* zonename);

  // bytes ip = 5;
  void clear_ip();
  static const int kIpFieldNumber = 5;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 zoneid = 1;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // uint32 zonechannel = 3;
  void clear_zonechannel();
  static const int kZonechannelFieldNumber = 3;
  ::google::protobuf::uint32 zonechannel() const;
  void set_zonechannel(::google::protobuf::uint32 value);

  // uint64 appid = 4;
  void clear_appid();
  static const int kAppidFieldNumber = 4;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // uint32 port = 6;
  void clear_port();
  static const int kPortFieldNumber = 6;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 onlinecount = 7;
  void clear_onlinecount();
  static const int kOnlinecountFieldNumber = 7;
  ::google::protobuf::uint32 onlinecount() const;
  void set_onlinecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateOnlineToDirReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr zonename_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 zonechannel_;
  ::google::protobuf::uint64 appid_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 onlinecount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRemoveOnlineToDirReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRemoveOnlineToDirReq) */ {
 public:
  S2SRemoveOnlineToDirReq();
  virtual ~S2SRemoveOnlineToDirReq();

  S2SRemoveOnlineToDirReq(const S2SRemoveOnlineToDirReq& from);

  inline S2SRemoveOnlineToDirReq& operator=(const S2SRemoveOnlineToDirReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRemoveOnlineToDirReq(S2SRemoveOnlineToDirReq&& from) noexcept
    : S2SRemoveOnlineToDirReq() {
    *this = ::std::move(from);
  }

  inline S2SRemoveOnlineToDirReq& operator=(S2SRemoveOnlineToDirReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRemoveOnlineToDirReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRemoveOnlineToDirReq* internal_default_instance() {
    return reinterpret_cast<const S2SRemoveOnlineToDirReq*>(
               &_S2SRemoveOnlineToDirReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(S2SRemoveOnlineToDirReq* other);
  friend void swap(S2SRemoveOnlineToDirReq& a, S2SRemoveOnlineToDirReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRemoveOnlineToDirReq* New() const final {
    return CreateMaybeMessage<S2SRemoveOnlineToDirReq>(NULL);
  }

  S2SRemoveOnlineToDirReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRemoveOnlineToDirReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRemoveOnlineToDirReq& from);
  void MergeFrom(const S2SRemoveOnlineToDirReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRemoveOnlineToDirReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 appid = 1;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint64 appid() const;
  void set_appid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRemoveOnlineToDirReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 appid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterRegisterToMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterRegisterToMasterReq) */ {
 public:
  S2SClusterRegisterToMasterReq();
  virtual ~S2SClusterRegisterToMasterReq();

  S2SClusterRegisterToMasterReq(const S2SClusterRegisterToMasterReq& from);

  inline S2SClusterRegisterToMasterReq& operator=(const S2SClusterRegisterToMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterRegisterToMasterReq(S2SClusterRegisterToMasterReq&& from) noexcept
    : S2SClusterRegisterToMasterReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterRegisterToMasterReq& operator=(S2SClusterRegisterToMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterRegisterToMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterRegisterToMasterReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterRegisterToMasterReq*>(
               &_S2SClusterRegisterToMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(S2SClusterRegisterToMasterReq* other);
  friend void swap(S2SClusterRegisterToMasterReq& a, S2SClusterRegisterToMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterRegisterToMasterReq* New() const final {
    return CreateMaybeMessage<S2SClusterRegisterToMasterReq>(NULL);
  }

  S2SClusterRegisterToMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterRegisterToMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterRegisterToMasterReq& from);
  void MergeFrom(const S2SClusterRegisterToMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterRegisterToMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterRegisterToMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterUpdateToMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterUpdateToMasterReq) */ {
 public:
  S2SClusterUpdateToMasterReq();
  virtual ~S2SClusterUpdateToMasterReq();

  S2SClusterUpdateToMasterReq(const S2SClusterUpdateToMasterReq& from);

  inline S2SClusterUpdateToMasterReq& operator=(const S2SClusterUpdateToMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterUpdateToMasterReq(S2SClusterUpdateToMasterReq&& from) noexcept
    : S2SClusterUpdateToMasterReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterUpdateToMasterReq& operator=(S2SClusterUpdateToMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterUpdateToMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterUpdateToMasterReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterUpdateToMasterReq*>(
               &_S2SClusterUpdateToMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(S2SClusterUpdateToMasterReq* other);
  friend void swap(S2SClusterUpdateToMasterReq& a, S2SClusterUpdateToMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterUpdateToMasterReq* New() const final {
    return CreateMaybeMessage<S2SClusterUpdateToMasterReq>(NULL);
  }

  S2SClusterUpdateToMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterUpdateToMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterUpdateToMasterReq& from);
  void MergeFrom(const S2SClusterUpdateToMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterUpdateToMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 count = 6;
  void clear_count();
  static const int kCountFieldNumber = 6;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterUpdateToMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterAuthToMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterAuthToMasterReq) */ {
 public:
  S2SClusterAuthToMasterReq();
  virtual ~S2SClusterAuthToMasterReq();

  S2SClusterAuthToMasterReq(const S2SClusterAuthToMasterReq& from);

  inline S2SClusterAuthToMasterReq& operator=(const S2SClusterAuthToMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterAuthToMasterReq(S2SClusterAuthToMasterReq&& from) noexcept
    : S2SClusterAuthToMasterReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterAuthToMasterReq& operator=(S2SClusterAuthToMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterAuthToMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterAuthToMasterReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterAuthToMasterReq*>(
               &_S2SClusterAuthToMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(S2SClusterAuthToMasterReq* other);
  friend void swap(S2SClusterAuthToMasterReq& a, S2SClusterAuthToMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterAuthToMasterReq* New() const final {
    return CreateMaybeMessage<S2SClusterAuthToMasterReq>(NULL);
  }

  S2SClusterAuthToMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterAuthToMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterAuthToMasterReq& from);
  void MergeFrom(const S2SClusterAuthToMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterAuthToMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes clusterkey = 1;
  void clear_clusterkey();
  static const int kClusterkeyFieldNumber = 1;
  const ::std::string& clusterkey() const;
  void set_clusterkey(const ::std::string& value);
  #if LANG_CXX11
  void set_clusterkey(::std::string&& value);
  #endif
  void set_clusterkey(const char* value);
  void set_clusterkey(const void* value, size_t size);
  ::std::string* mutable_clusterkey();
  ::std::string* release_clusterkey();
  void set_allocated_clusterkey(::std::string* clusterkey);

  // bytes clustername = 2;
  void clear_clustername();
  static const int kClusternameFieldNumber = 2;
  const ::std::string& clustername() const;
  void set_clustername(const ::std::string& value);
  #if LANG_CXX11
  void set_clustername(::std::string&& value);
  #endif
  void set_clustername(const char* value);
  void set_clustername(const void* value, size_t size);
  ::std::string* mutable_clustername();
  ::std::string* release_clustername();
  void set_allocated_clustername(::std::string* clustername);

  // uint64 clientid = 3;
  void clear_clientid();
  static const int kClientidFieldNumber = 3;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterAuthToMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr clusterkey_;
  ::google::protobuf::internal::ArenaStringPtr clustername_;
  ::google::protobuf::uint64 clientid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterAuthToClientAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterAuthToClientAck) */ {
 public:
  S2SClusterAuthToClientAck();
  virtual ~S2SClusterAuthToClientAck();

  S2SClusterAuthToClientAck(const S2SClusterAuthToClientAck& from);

  inline S2SClusterAuthToClientAck& operator=(const S2SClusterAuthToClientAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterAuthToClientAck(S2SClusterAuthToClientAck&& from) noexcept
    : S2SClusterAuthToClientAck() {
    *this = ::std::move(from);
  }

  inline S2SClusterAuthToClientAck& operator=(S2SClusterAuthToClientAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterAuthToClientAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterAuthToClientAck* internal_default_instance() {
    return reinterpret_cast<const S2SClusterAuthToClientAck*>(
               &_S2SClusterAuthToClientAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(S2SClusterAuthToClientAck* other);
  friend void swap(S2SClusterAuthToClientAck& a, S2SClusterAuthToClientAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterAuthToClientAck* New() const final {
    return CreateMaybeMessage<S2SClusterAuthToClientAck>(NULL);
  }

  S2SClusterAuthToClientAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterAuthToClientAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterAuthToClientAck& from);
  void MergeFrom(const S2SClusterAuthToClientAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterAuthToClientAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes ip = 5;
  void clear_ip();
  static const int kIpFieldNumber = 5;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint64 id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 port = 6;
  void clear_port();
  static const int kPortFieldNumber = 6;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterAuthToClientAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterTokenToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterTokenToProxyReq) */ {
 public:
  S2SClusterTokenToProxyReq();
  virtual ~S2SClusterTokenToProxyReq();

  S2SClusterTokenToProxyReq(const S2SClusterTokenToProxyReq& from);

  inline S2SClusterTokenToProxyReq& operator=(const S2SClusterTokenToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterTokenToProxyReq(S2SClusterTokenToProxyReq&& from) noexcept
    : S2SClusterTokenToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterTokenToProxyReq& operator=(S2SClusterTokenToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterTokenToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterTokenToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterTokenToProxyReq*>(
               &_S2SClusterTokenToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(S2SClusterTokenToProxyReq* other);
  friend void swap(S2SClusterTokenToProxyReq& a, S2SClusterTokenToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterTokenToProxyReq* New() const final {
    return CreateMaybeMessage<S2SClusterTokenToProxyReq>(NULL);
  }

  S2SClusterTokenToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterTokenToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterTokenToProxyReq& from);
  void MergeFrom(const S2SClusterTokenToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterTokenToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 clientid = 2;
  void clear_clientid();
  static const int kClientidFieldNumber = 2;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterTokenToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 clientid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterVerifyToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterVerifyToProxyReq) */ {
 public:
  S2SClusterVerifyToProxyReq();
  virtual ~S2SClusterVerifyToProxyReq();

  S2SClusterVerifyToProxyReq(const S2SClusterVerifyToProxyReq& from);

  inline S2SClusterVerifyToProxyReq& operator=(const S2SClusterVerifyToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterVerifyToProxyReq(S2SClusterVerifyToProxyReq&& from) noexcept
    : S2SClusterVerifyToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterVerifyToProxyReq& operator=(S2SClusterVerifyToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterVerifyToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterVerifyToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterVerifyToProxyReq*>(
               &_S2SClusterVerifyToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(S2SClusterVerifyToProxyReq* other);
  friend void swap(S2SClusterVerifyToProxyReq& a, S2SClusterVerifyToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterVerifyToProxyReq* New() const final {
    return CreateMaybeMessage<S2SClusterVerifyToProxyReq>(NULL);
  }

  S2SClusterVerifyToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterVerifyToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterVerifyToProxyReq& from);
  void MergeFrom(const S2SClusterVerifyToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterVerifyToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterVerifyToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterVerifyToClientAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterVerifyToClientAck) */ {
 public:
  S2SClusterVerifyToClientAck();
  virtual ~S2SClusterVerifyToClientAck();

  S2SClusterVerifyToClientAck(const S2SClusterVerifyToClientAck& from);

  inline S2SClusterVerifyToClientAck& operator=(const S2SClusterVerifyToClientAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterVerifyToClientAck(S2SClusterVerifyToClientAck&& from) noexcept
    : S2SClusterVerifyToClientAck() {
    *this = ::std::move(from);
  }

  inline S2SClusterVerifyToClientAck& operator=(S2SClusterVerifyToClientAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterVerifyToClientAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterVerifyToClientAck* internal_default_instance() {
    return reinterpret_cast<const S2SClusterVerifyToClientAck*>(
               &_S2SClusterVerifyToClientAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(S2SClusterVerifyToClientAck* other);
  friend void swap(S2SClusterVerifyToClientAck& a, S2SClusterVerifyToClientAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterVerifyToClientAck* New() const final {
    return CreateMaybeMessage<S2SClusterVerifyToClientAck>(NULL);
  }

  S2SClusterVerifyToClientAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterVerifyToClientAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterVerifyToClientAck& from);
  void MergeFrom(const S2SClusterVerifyToClientAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterVerifyToClientAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterVerifyToClientAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterClientDiscoverToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterClientDiscoverToShardReq) */ {
 public:
  S2SClusterClientDiscoverToShardReq();
  virtual ~S2SClusterClientDiscoverToShardReq();

  S2SClusterClientDiscoverToShardReq(const S2SClusterClientDiscoverToShardReq& from);

  inline S2SClusterClientDiscoverToShardReq& operator=(const S2SClusterClientDiscoverToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterClientDiscoverToShardReq(S2SClusterClientDiscoverToShardReq&& from) noexcept
    : S2SClusterClientDiscoverToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterClientDiscoverToShardReq& operator=(S2SClusterClientDiscoverToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterClientDiscoverToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterClientDiscoverToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterClientDiscoverToShardReq*>(
               &_S2SClusterClientDiscoverToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(S2SClusterClientDiscoverToShardReq* other);
  friend void swap(S2SClusterClientDiscoverToShardReq& a, S2SClusterClientDiscoverToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterClientDiscoverToShardReq* New() const final {
    return CreateMaybeMessage<S2SClusterClientDiscoverToShardReq>(NULL);
  }

  S2SClusterClientDiscoverToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterClientDiscoverToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterClientDiscoverToShardReq& from);
  void MergeFrom(const S2SClusterClientDiscoverToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterClientDiscoverToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 clientid = 1;
  int clientid_size() const;
  void clear_clientid();
  static const int kClientidFieldNumber = 1;
  ::google::protobuf::uint64 clientid(int index) const;
  void set_clientid(int index, ::google::protobuf::uint64 value);
  void add_clientid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      clientid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_clientid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterClientDiscoverToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > clientid_;
  mutable int _clientid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClusterClientLostToShardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClusterClientLostToShardReq) */ {
 public:
  S2SClusterClientLostToShardReq();
  virtual ~S2SClusterClientLostToShardReq();

  S2SClusterClientLostToShardReq(const S2SClusterClientLostToShardReq& from);

  inline S2SClusterClientLostToShardReq& operator=(const S2SClusterClientLostToShardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClusterClientLostToShardReq(S2SClusterClientLostToShardReq&& from) noexcept
    : S2SClusterClientLostToShardReq() {
    *this = ::std::move(from);
  }

  inline S2SClusterClientLostToShardReq& operator=(S2SClusterClientLostToShardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClusterClientLostToShardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClusterClientLostToShardReq* internal_default_instance() {
    return reinterpret_cast<const S2SClusterClientLostToShardReq*>(
               &_S2SClusterClientLostToShardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(S2SClusterClientLostToShardReq* other);
  friend void swap(S2SClusterClientLostToShardReq& a, S2SClusterClientLostToShardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClusterClientLostToShardReq* New() const final {
    return CreateMaybeMessage<S2SClusterClientLostToShardReq>(NULL);
  }

  S2SClusterClientLostToShardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClusterClientLostToShardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClusterClientLostToShardReq& from);
  void MergeFrom(const S2SClusterClientLostToShardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClusterClientLostToShardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 clientid = 1;
  void clear_clientid();
  static const int kClientidFieldNumber = 1;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClusterClientLostToShardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 clientid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddObjectToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddObjectToProxyReq) */ {
 public:
  S2SAddObjectToProxyReq();
  virtual ~S2SAddObjectToProxyReq();

  S2SAddObjectToProxyReq(const S2SAddObjectToProxyReq& from);

  inline S2SAddObjectToProxyReq& operator=(const S2SAddObjectToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddObjectToProxyReq(S2SAddObjectToProxyReq&& from) noexcept
    : S2SAddObjectToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SAddObjectToProxyReq& operator=(S2SAddObjectToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddObjectToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddObjectToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddObjectToProxyReq*>(
               &_S2SAddObjectToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(S2SAddObjectToProxyReq* other);
  friend void swap(S2SAddObjectToProxyReq& a, S2SAddObjectToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddObjectToProxyReq* New() const final {
    return CreateMaybeMessage<S2SAddObjectToProxyReq>(NULL);
  }

  S2SAddObjectToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddObjectToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddObjectToProxyReq& from);
  void MergeFrom(const S2SAddObjectToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddObjectToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 objectid = 1;
  int objectid_size() const;
  void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  ::google::protobuf::uint64 objectid(int index) const;
  void set_objectid(int index, ::google::protobuf::uint64 value);
  void add_objectid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      objectid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_objectid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddObjectToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > objectid_;
  mutable int _objectid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRemoveObjectToProxyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRemoveObjectToProxyReq) */ {
 public:
  S2SRemoveObjectToProxyReq();
  virtual ~S2SRemoveObjectToProxyReq();

  S2SRemoveObjectToProxyReq(const S2SRemoveObjectToProxyReq& from);

  inline S2SRemoveObjectToProxyReq& operator=(const S2SRemoveObjectToProxyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRemoveObjectToProxyReq(S2SRemoveObjectToProxyReq&& from) noexcept
    : S2SRemoveObjectToProxyReq() {
    *this = ::std::move(from);
  }

  inline S2SRemoveObjectToProxyReq& operator=(S2SRemoveObjectToProxyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRemoveObjectToProxyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRemoveObjectToProxyReq* internal_default_instance() {
    return reinterpret_cast<const S2SRemoveObjectToProxyReq*>(
               &_S2SRemoveObjectToProxyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(S2SRemoveObjectToProxyReq* other);
  friend void swap(S2SRemoveObjectToProxyReq& a, S2SRemoveObjectToProxyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRemoveObjectToProxyReq* New() const final {
    return CreateMaybeMessage<S2SRemoveObjectToProxyReq>(NULL);
  }

  S2SRemoveObjectToProxyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRemoveObjectToProxyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRemoveObjectToProxyReq& from);
  void MergeFrom(const S2SRemoveObjectToProxyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRemoveObjectToProxyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 objectid = 2;
  int objectid_size() const;
  void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  ::google::protobuf::uint64 objectid(int index) const;
  void set_objectid(int index, ::google::protobuf::uint64 value);
  void add_objectid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      objectid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_objectid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRemoveObjectToProxyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > objectid_;
  mutable int _objectid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAllocObjectToMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAllocObjectToMasterReq) */ {
 public:
  S2SAllocObjectToMasterReq();
  virtual ~S2SAllocObjectToMasterReq();

  S2SAllocObjectToMasterReq(const S2SAllocObjectToMasterReq& from);

  inline S2SAllocObjectToMasterReq& operator=(const S2SAllocObjectToMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAllocObjectToMasterReq(S2SAllocObjectToMasterReq&& from) noexcept
    : S2SAllocObjectToMasterReq() {
    *this = ::std::move(from);
  }

  inline S2SAllocObjectToMasterReq& operator=(S2SAllocObjectToMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAllocObjectToMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAllocObjectToMasterReq* internal_default_instance() {
    return reinterpret_cast<const S2SAllocObjectToMasterReq*>(
               &_S2SAllocObjectToMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(S2SAllocObjectToMasterReq* other);
  friend void swap(S2SAllocObjectToMasterReq& a, S2SAllocObjectToMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAllocObjectToMasterReq* New() const final {
    return CreateMaybeMessage<S2SAllocObjectToMasterReq>(NULL);
  }

  S2SAllocObjectToMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAllocObjectToMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAllocObjectToMasterReq& from);
  void MergeFrom(const S2SAllocObjectToMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAllocObjectToMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 objectid = 1;
  int objectid_size() const;
  void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  ::google::protobuf::uint64 objectid(int index) const;
  void set_objectid(int index, ::google::protobuf::uint64 value);
  void add_objectid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      objectid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_objectid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAllocObjectToMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > objectid_;
  mutable int _objectid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAllocObjectToProxyAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAllocObjectToProxyAck) */ {
 public:
  S2SAllocObjectToProxyAck();
  virtual ~S2SAllocObjectToProxyAck();

  S2SAllocObjectToProxyAck(const S2SAllocObjectToProxyAck& from);

  inline S2SAllocObjectToProxyAck& operator=(const S2SAllocObjectToProxyAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAllocObjectToProxyAck(S2SAllocObjectToProxyAck&& from) noexcept
    : S2SAllocObjectToProxyAck() {
    *this = ::std::move(from);
  }

  inline S2SAllocObjectToProxyAck& operator=(S2SAllocObjectToProxyAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAllocObjectToProxyAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAllocObjectToProxyAck* internal_default_instance() {
    return reinterpret_cast<const S2SAllocObjectToProxyAck*>(
               &_S2SAllocObjectToProxyAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(S2SAllocObjectToProxyAck* other);
  friend void swap(S2SAllocObjectToProxyAck& a, S2SAllocObjectToProxyAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAllocObjectToProxyAck* New() const final {
    return CreateMaybeMessage<S2SAllocObjectToProxyAck>(NULL);
  }

  S2SAllocObjectToProxyAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAllocObjectToProxyAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAllocObjectToProxyAck& from);
  void MergeFrom(const S2SAllocObjectToProxyAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAllocObjectToProxyAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 objectid = 1;
  int objectid_size() const;
  void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  ::google::protobuf::uint64 objectid(int index) const;
  void set_objectid(int index, ::google::protobuf::uint64 value);
  void add_objectid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      objectid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_objectid();

  // repeated uint64 shardid = 2;
  int shardid_size() const;
  void clear_shardid();
  static const int kShardidFieldNumber = 2;
  ::google::protobuf::uint64 shardid(int index) const;
  void set_shardid(int index, ::google::protobuf::uint64 value);
  void add_shardid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      shardid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_shardid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAllocObjectToProxyAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > objectid_;
  mutable int _objectid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > shardid_;
  mutable int _shardid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAllocObjectToShardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAllocObjectToShardAck) */ {
 public:
  S2SAllocObjectToShardAck();
  virtual ~S2SAllocObjectToShardAck();

  S2SAllocObjectToShardAck(const S2SAllocObjectToShardAck& from);

  inline S2SAllocObjectToShardAck& operator=(const S2SAllocObjectToShardAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAllocObjectToShardAck(S2SAllocObjectToShardAck&& from) noexcept
    : S2SAllocObjectToShardAck() {
    *this = ::std::move(from);
  }

  inline S2SAllocObjectToShardAck& operator=(S2SAllocObjectToShardAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAllocObjectToShardAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAllocObjectToShardAck* internal_default_instance() {
    return reinterpret_cast<const S2SAllocObjectToShardAck*>(
               &_S2SAllocObjectToShardAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(S2SAllocObjectToShardAck* other);
  friend void swap(S2SAllocObjectToShardAck& a, S2SAllocObjectToShardAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAllocObjectToShardAck* New() const final {
    return CreateMaybeMessage<S2SAllocObjectToShardAck>(NULL);
  }

  S2SAllocObjectToShardAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAllocObjectToShardAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAllocObjectToShardAck& from);
  void MergeFrom(const S2SAllocObjectToShardAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAllocObjectToShardAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 objectid = 1;
  int objectid_size() const;
  void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  ::google::protobuf::uint64 objectid(int index) const;
  void set_objectid(int index, ::google::protobuf::uint64 value);
  void add_objectid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      objectid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_objectid();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAllocObjectToShardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > objectid_;
  mutable int _objectid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSendToDynamicObjectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSendToDynamicObjectReq) */ {
 public:
  S2SSendToDynamicObjectReq();
  virtual ~S2SSendToDynamicObjectReq();

  S2SSendToDynamicObjectReq(const S2SSendToDynamicObjectReq& from);

  inline S2SSendToDynamicObjectReq& operator=(const S2SSendToDynamicObjectReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSendToDynamicObjectReq(S2SSendToDynamicObjectReq&& from) noexcept
    : S2SSendToDynamicObjectReq() {
    *this = ::std::move(from);
  }

  inline S2SSendToDynamicObjectReq& operator=(S2SSendToDynamicObjectReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSendToDynamicObjectReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSendToDynamicObjectReq* internal_default_instance() {
    return reinterpret_cast<const S2SSendToDynamicObjectReq*>(
               &_S2SSendToDynamicObjectReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(S2SSendToDynamicObjectReq* other);
  friend void swap(S2SSendToDynamicObjectReq& a, S2SSendToDynamicObjectReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSendToDynamicObjectReq* New() const final {
    return CreateMaybeMessage<S2SSendToDynamicObjectReq>(NULL);
  }

  S2SSendToDynamicObjectReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSendToDynamicObjectReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSendToDynamicObjectReq& from);
  void MergeFrom(const S2SSendToDynamicObjectReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSendToDynamicObjectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 4;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 4;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint64 objectid = 1;
  void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  ::google::protobuf::uint64 objectid() const;
  void set_objectid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 msgid = 3;
  void clear_msgid();
  static const int kMsgidFieldNumber = 3;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSendToDynamicObjectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint64 objectid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSendToStaticObjectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSendToStaticObjectReq) */ {
 public:
  S2SSendToStaticObjectReq();
  virtual ~S2SSendToStaticObjectReq();

  S2SSendToStaticObjectReq(const S2SSendToStaticObjectReq& from);

  inline S2SSendToStaticObjectReq& operator=(const S2SSendToStaticObjectReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSendToStaticObjectReq(S2SSendToStaticObjectReq&& from) noexcept
    : S2SSendToStaticObjectReq() {
    *this = ::std::move(from);
  }

  inline S2SSendToStaticObjectReq& operator=(S2SSendToStaticObjectReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSendToStaticObjectReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSendToStaticObjectReq* internal_default_instance() {
    return reinterpret_cast<const S2SSendToStaticObjectReq*>(
               &_S2SSendToStaticObjectReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(S2SSendToStaticObjectReq* other);
  friend void swap(S2SSendToStaticObjectReq& a, S2SSendToStaticObjectReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSendToStaticObjectReq* New() const final {
    return CreateMaybeMessage<S2SSendToStaticObjectReq>(NULL);
  }

  S2SSendToStaticObjectReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSendToStaticObjectReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSendToStaticObjectReq& from);
  void MergeFrom(const S2SSendToStaticObjectReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSendToStaticObjectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 4;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 4;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint64 objectid = 1;
  void clear_objectid();
  static const int kObjectidFieldNumber = 1;
  ::google::protobuf::uint64 objectid() const;
  void set_objectid(::google::protobuf::uint64 value);

  // uint64 serverid = 2;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint32 msgid = 3;
  void clear_msgid();
  static const int kMsgidFieldNumber = 3;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSendToStaticObjectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint64 objectid_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRegisterAgentToServerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRegisterAgentToServerReq) */ {
 public:
  S2SRegisterAgentToServerReq();
  virtual ~S2SRegisterAgentToServerReq();

  S2SRegisterAgentToServerReq(const S2SRegisterAgentToServerReq& from);

  inline S2SRegisterAgentToServerReq& operator=(const S2SRegisterAgentToServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRegisterAgentToServerReq(S2SRegisterAgentToServerReq&& from) noexcept
    : S2SRegisterAgentToServerReq() {
    *this = ::std::move(from);
  }

  inline S2SRegisterAgentToServerReq& operator=(S2SRegisterAgentToServerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRegisterAgentToServerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRegisterAgentToServerReq* internal_default_instance() {
    return reinterpret_cast<const S2SRegisterAgentToServerReq*>(
               &_S2SRegisterAgentToServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(S2SRegisterAgentToServerReq* other);
  friend void swap(S2SRegisterAgentToServerReq& a, S2SRegisterAgentToServerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRegisterAgentToServerReq* New() const final {
    return CreateMaybeMessage<S2SRegisterAgentToServerReq>(NULL);
  }

  S2SRegisterAgentToServerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRegisterAgentToServerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRegisterAgentToServerReq& from);
  void MergeFrom(const S2SRegisterAgentToServerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRegisterAgentToServerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes agentid = 1;
  void clear_agentid();
  static const int kAgentidFieldNumber = 1;
  const ::std::string& agentid() const;
  void set_agentid(const ::std::string& value);
  #if LANG_CXX11
  void set_agentid(::std::string&& value);
  #endif
  void set_agentid(const char* value);
  void set_agentid(const void* value, size_t size);
  ::std::string* mutable_agentid();
  ::std::string* release_agentid();
  void set_allocated_agentid(::std::string* agentid);

  // bytes localip = 2;
  void clear_localip();
  static const int kLocalipFieldNumber = 2;
  const ::std::string& localip() const;
  void set_localip(const ::std::string& value);
  #if LANG_CXX11
  void set_localip(::std::string&& value);
  #endif
  void set_localip(const char* value);
  void set_localip(const void* value, size_t size);
  ::std::string* mutable_localip();
  ::std::string* release_localip();
  void set_allocated_localip(::std::string* localip);

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const void* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // uint32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRegisterAgentToServerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr agentid_;
  ::google::protobuf::internal::ArenaStringPtr localip_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SGetAgentIpAddressReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SGetAgentIpAddressReq) */ {
 public:
  S2SGetAgentIpAddressReq();
  virtual ~S2SGetAgentIpAddressReq();

  S2SGetAgentIpAddressReq(const S2SGetAgentIpAddressReq& from);

  inline S2SGetAgentIpAddressReq& operator=(const S2SGetAgentIpAddressReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SGetAgentIpAddressReq(S2SGetAgentIpAddressReq&& from) noexcept
    : S2SGetAgentIpAddressReq() {
    *this = ::std::move(from);
  }

  inline S2SGetAgentIpAddressReq& operator=(S2SGetAgentIpAddressReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SGetAgentIpAddressReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SGetAgentIpAddressReq* internal_default_instance() {
    return reinterpret_cast<const S2SGetAgentIpAddressReq*>(
               &_S2SGetAgentIpAddressReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(S2SGetAgentIpAddressReq* other);
  friend void swap(S2SGetAgentIpAddressReq& a, S2SGetAgentIpAddressReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SGetAgentIpAddressReq* New() const final {
    return CreateMaybeMessage<S2SGetAgentIpAddressReq>(NULL);
  }

  S2SGetAgentIpAddressReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SGetAgentIpAddressReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SGetAgentIpAddressReq& from);
  void MergeFrom(const S2SGetAgentIpAddressReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SGetAgentIpAddressReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes localip = 1;
  void clear_localip();
  static const int kLocalipFieldNumber = 1;
  const ::std::string& localip() const;
  void set_localip(const ::std::string& value);
  #if LANG_CXX11
  void set_localip(::std::string&& value);
  #endif
  void set_localip(const char* value);
  void set_localip(const void* value, size_t size);
  ::std::string* mutable_localip();
  ::std::string* release_localip();
  void set_allocated_localip(::std::string* localip);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SGetAgentIpAddressReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr localip_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SGetAgentIpAddressAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SGetAgentIpAddressAck) */ {
 public:
  S2SGetAgentIpAddressAck();
  virtual ~S2SGetAgentIpAddressAck();

  S2SGetAgentIpAddressAck(const S2SGetAgentIpAddressAck& from);

  inline S2SGetAgentIpAddressAck& operator=(const S2SGetAgentIpAddressAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SGetAgentIpAddressAck(S2SGetAgentIpAddressAck&& from) noexcept
    : S2SGetAgentIpAddressAck() {
    *this = ::std::move(from);
  }

  inline S2SGetAgentIpAddressAck& operator=(S2SGetAgentIpAddressAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SGetAgentIpAddressAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SGetAgentIpAddressAck* internal_default_instance() {
    return reinterpret_cast<const S2SGetAgentIpAddressAck*>(
               &_S2SGetAgentIpAddressAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(S2SGetAgentIpAddressAck* other);
  friend void swap(S2SGetAgentIpAddressAck& a, S2SGetAgentIpAddressAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SGetAgentIpAddressAck* New() const final {
    return CreateMaybeMessage<S2SGetAgentIpAddressAck>(NULL);
  }

  S2SGetAgentIpAddressAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SGetAgentIpAddressAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SGetAgentIpAddressAck& from);
  void MergeFrom(const S2SGetAgentIpAddressAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SGetAgentIpAddressAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes appname = 1;
  void clear_appname();
  static const int kAppnameFieldNumber = 1;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const void* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // bytes apptype = 2;
  void clear_apptype();
  static const int kApptypeFieldNumber = 2;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const void* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // bytes appid = 3;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const void* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // bytes ip = 4;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 port = 5;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SGetAgentIpAddressAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBDeployCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBDeployCommand) */ {
 public:
  PBDeployCommand();
  virtual ~PBDeployCommand();

  PBDeployCommand(const PBDeployCommand& from);

  inline PBDeployCommand& operator=(const PBDeployCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBDeployCommand(PBDeployCommand&& from) noexcept
    : PBDeployCommand() {
    *this = ::std::move(from);
  }

  inline PBDeployCommand& operator=(PBDeployCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDeployCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBDeployCommand* internal_default_instance() {
    return reinterpret_cast<const PBDeployCommand*>(
               &_PBDeployCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(PBDeployCommand* other);
  friend void swap(PBDeployCommand& a, PBDeployCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBDeployCommand* New() const final {
    return CreateMaybeMessage<PBDeployCommand>(NULL);
  }

  PBDeployCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBDeployCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBDeployCommand& from);
  void MergeFrom(const PBDeployCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBDeployCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const void* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // bytes appname = 2;
  void clear_appname();
  static const int kAppnameFieldNumber = 2;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const void* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // bytes apptype = 3;
  void clear_apptype();
  static const int kApptypeFieldNumber = 3;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const void* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // bytes appid = 4;
  void clear_appid();
  static const int kAppidFieldNumber = 4;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const void* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // bytes value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // bytes logurl = 7;
  void clear_logurl();
  static const int kLogurlFieldNumber = 7;
  const ::std::string& logurl() const;
  void set_logurl(const ::std::string& value);
  #if LANG_CXX11
  void set_logurl(::std::string&& value);
  #endif
  void set_logurl(const char* value);
  void set_logurl(const void* value, size_t size);
  ::std::string* mutable_logurl();
  ::std::string* release_logurl();
  void set_allocated_logurl(::std::string* logurl);

  // uint32 zoneid = 5;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 5;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBDeployCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr logurl_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDeployCommandToAgentReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDeployCommandToAgentReq) */ {
 public:
  S2SDeployCommandToAgentReq();
  virtual ~S2SDeployCommandToAgentReq();

  S2SDeployCommandToAgentReq(const S2SDeployCommandToAgentReq& from);

  inline S2SDeployCommandToAgentReq& operator=(const S2SDeployCommandToAgentReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDeployCommandToAgentReq(S2SDeployCommandToAgentReq&& from) noexcept
    : S2SDeployCommandToAgentReq() {
    *this = ::std::move(from);
  }

  inline S2SDeployCommandToAgentReq& operator=(S2SDeployCommandToAgentReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDeployCommandToAgentReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDeployCommandToAgentReq* internal_default_instance() {
    return reinterpret_cast<const S2SDeployCommandToAgentReq*>(
               &_S2SDeployCommandToAgentReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(S2SDeployCommandToAgentReq* other);
  friend void swap(S2SDeployCommandToAgentReq& a, S2SDeployCommandToAgentReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDeployCommandToAgentReq* New() const final {
    return CreateMaybeMessage<S2SDeployCommandToAgentReq>(NULL);
  }

  S2SDeployCommandToAgentReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDeployCommandToAgentReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDeployCommandToAgentReq& from);
  void MergeFrom(const S2SDeployCommandToAgentReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDeployCommandToAgentReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBDeployCommand deploycommand = 1;
  bool has_deploycommand() const;
  void clear_deploycommand();
  static const int kDeploycommandFieldNumber = 1;
  private:
  const ::KFMsg::PBDeployCommand& _internal_deploycommand() const;
  public:
  const ::KFMsg::PBDeployCommand& deploycommand() const;
  ::KFMsg::PBDeployCommand* release_deploycommand();
  ::KFMsg::PBDeployCommand* mutable_deploycommand();
  void set_allocated_deploycommand(::KFMsg::PBDeployCommand* deploycommand);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDeployCommandToAgentReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBDeployCommand* deploycommand_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDeployCommandToMasterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDeployCommandToMasterReq) */ {
 public:
  S2SDeployCommandToMasterReq();
  virtual ~S2SDeployCommandToMasterReq();

  S2SDeployCommandToMasterReq(const S2SDeployCommandToMasterReq& from);

  inline S2SDeployCommandToMasterReq& operator=(const S2SDeployCommandToMasterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDeployCommandToMasterReq(S2SDeployCommandToMasterReq&& from) noexcept
    : S2SDeployCommandToMasterReq() {
    *this = ::std::move(from);
  }

  inline S2SDeployCommandToMasterReq& operator=(S2SDeployCommandToMasterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDeployCommandToMasterReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDeployCommandToMasterReq* internal_default_instance() {
    return reinterpret_cast<const S2SDeployCommandToMasterReq*>(
               &_S2SDeployCommandToMasterReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(S2SDeployCommandToMasterReq* other);
  friend void swap(S2SDeployCommandToMasterReq& a, S2SDeployCommandToMasterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDeployCommandToMasterReq* New() const final {
    return CreateMaybeMessage<S2SDeployCommandToMasterReq>(NULL);
  }

  S2SDeployCommandToMasterReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDeployCommandToMasterReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDeployCommandToMasterReq& from);
  void MergeFrom(const S2SDeployCommandToMasterReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDeployCommandToMasterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBDeployCommand deploycommand = 1;
  bool has_deploycommand() const;
  void clear_deploycommand();
  static const int kDeploycommandFieldNumber = 1;
  private:
  const ::KFMsg::PBDeployCommand& _internal_deploycommand() const;
  public:
  const ::KFMsg::PBDeployCommand& deploycommand() const;
  ::KFMsg::PBDeployCommand* release_deploycommand();
  ::KFMsg::PBDeployCommand* mutable_deploycommand();
  void set_allocated_deploycommand(::KFMsg::PBDeployCommand* deploycommand);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDeployCommandToMasterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBDeployCommand* deploycommand_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDeployCommandToServerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDeployCommandToServerReq) */ {
 public:
  S2SDeployCommandToServerReq();
  virtual ~S2SDeployCommandToServerReq();

  S2SDeployCommandToServerReq(const S2SDeployCommandToServerReq& from);

  inline S2SDeployCommandToServerReq& operator=(const S2SDeployCommandToServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDeployCommandToServerReq(S2SDeployCommandToServerReq&& from) noexcept
    : S2SDeployCommandToServerReq() {
    *this = ::std::move(from);
  }

  inline S2SDeployCommandToServerReq& operator=(S2SDeployCommandToServerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDeployCommandToServerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDeployCommandToServerReq* internal_default_instance() {
    return reinterpret_cast<const S2SDeployCommandToServerReq*>(
               &_S2SDeployCommandToServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(S2SDeployCommandToServerReq* other);
  friend void swap(S2SDeployCommandToServerReq& a, S2SDeployCommandToServerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDeployCommandToServerReq* New() const final {
    return CreateMaybeMessage<S2SDeployCommandToServerReq>(NULL);
  }

  S2SDeployCommandToServerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDeployCommandToServerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDeployCommandToServerReq& from);
  void MergeFrom(const S2SDeployCommandToServerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDeployCommandToServerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBDeployCommand deploycommand = 1;
  bool has_deploycommand() const;
  void clear_deploycommand();
  static const int kDeploycommandFieldNumber = 1;
  private:
  const ::KFMsg::PBDeployCommand& _internal_deploycommand() const;
  public:
  const ::KFMsg::PBDeployCommand& deploycommand() const;
  ::KFMsg::PBDeployCommand* release_deploycommand();
  ::KFMsg::PBDeployCommand* mutable_deploycommand();
  void set_allocated_deploycommand(::KFMsg::PBDeployCommand* deploycommand);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDeployCommandToServerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBDeployCommand* deploycommand_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFFrameMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListenData

// uint64 appid = 1;
inline void ListenData::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ListenData::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.ListenData.appid)
  return appid_;
}
inline void ListenData::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.ListenData.appid)
}

// bytes appname = 2;
inline void ListenData::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListenData::appname() const {
  // @@protoc_insertion_point(field_get:KFMsg.ListenData.appname)
  return appname_.GetNoArena();
}
inline void ListenData::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.ListenData.appname)
}
#if LANG_CXX11
inline void ListenData::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.ListenData.appname)
}
#endif
inline void ListenData::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.ListenData.appname)
}
inline void ListenData::set_appname(const void* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.ListenData.appname)
}
inline ::std::string* ListenData::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.ListenData.appname)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListenData::release_appname() {
  // @@protoc_insertion_point(field_release:KFMsg.ListenData.appname)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListenData::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.ListenData.appname)
}

// bytes apptype = 3;
inline void ListenData::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListenData::apptype() const {
  // @@protoc_insertion_point(field_get:KFMsg.ListenData.apptype)
  return apptype_.GetNoArena();
}
inline void ListenData::set_apptype(const ::std::string& value) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.ListenData.apptype)
}
#if LANG_CXX11
inline void ListenData::set_apptype(::std::string&& value) {
  
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.ListenData.apptype)
}
#endif
inline void ListenData::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.ListenData.apptype)
}
inline void ListenData::set_apptype(const void* value, size_t size) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.ListenData.apptype)
}
inline ::std::string* ListenData::mutable_apptype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.ListenData.apptype)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListenData::release_apptype() {
  // @@protoc_insertion_point(field_release:KFMsg.ListenData.apptype)
  
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListenData::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    
  } else {
    
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.ListenData.apptype)
}

// bytes ip = 4;
inline void ListenData::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListenData::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.ListenData.ip)
  return ip_.GetNoArena();
}
inline void ListenData::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.ListenData.ip)
}
#if LANG_CXX11
inline void ListenData::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.ListenData.ip)
}
#endif
inline void ListenData::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.ListenData.ip)
}
inline void ListenData::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.ListenData.ip)
}
inline ::std::string* ListenData::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.ListenData.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListenData::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.ListenData.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListenData::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.ListenData.ip)
}

// uint32 port = 5;
inline void ListenData::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 ListenData::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.ListenData.port)
  return port_;
}
inline void ListenData::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.ListenData.port)
}

// uint32 zoneid = 6;
inline void ListenData::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 ListenData::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.ListenData.zoneid)
  return zoneid_;
}
inline void ListenData::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.ListenData.zoneid)
}

// -------------------------------------------------------------------

// RegisterToServerReq

// .KFMsg.ListenData listen = 1;
inline bool RegisterToServerReq::has_listen() const {
  return this != internal_default_instance() && listen_ != NULL;
}
inline void RegisterToServerReq::clear_listen() {
  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
}
inline const ::KFMsg::ListenData& RegisterToServerReq::_internal_listen() const {
  return *listen_;
}
inline const ::KFMsg::ListenData& RegisterToServerReq::listen() const {
  const ::KFMsg::ListenData* p = listen_;
  // @@protoc_insertion_point(field_get:KFMsg.RegisterToServerReq.listen)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::ListenData*>(
      &::KFMsg::_ListenData_default_instance_);
}
inline ::KFMsg::ListenData* RegisterToServerReq::release_listen() {
  // @@protoc_insertion_point(field_release:KFMsg.RegisterToServerReq.listen)
  
  ::KFMsg::ListenData* temp = listen_;
  listen_ = NULL;
  return temp;
}
inline ::KFMsg::ListenData* RegisterToServerReq::mutable_listen() {
  
  if (listen_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::ListenData>(GetArenaNoVirtual());
    listen_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.RegisterToServerReq.listen)
  return listen_;
}
inline void RegisterToServerReq::set_allocated_listen(::KFMsg::ListenData* listen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete listen_;
  }
  if (listen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      listen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, listen, submessage_arena);
    }
    
  } else {
    
  }
  listen_ = listen;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.RegisterToServerReq.listen)
}

// -------------------------------------------------------------------

// RegisterToServerAck

// uint64 appid = 1;
inline void RegisterToServerAck::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RegisterToServerAck::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.RegisterToServerAck.appid)
  return appid_;
}
inline void RegisterToServerAck::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.RegisterToServerAck.appid)
}

// bytes appname = 2;
inline void RegisterToServerAck::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterToServerAck::appname() const {
  // @@protoc_insertion_point(field_get:KFMsg.RegisterToServerAck.appname)
  return appname_.GetNoArena();
}
inline void RegisterToServerAck::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.RegisterToServerAck.appname)
}
#if LANG_CXX11
inline void RegisterToServerAck::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.RegisterToServerAck.appname)
}
#endif
inline void RegisterToServerAck::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.RegisterToServerAck.appname)
}
inline void RegisterToServerAck::set_appname(const void* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.RegisterToServerAck.appname)
}
inline ::std::string* RegisterToServerAck::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.RegisterToServerAck.appname)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterToServerAck::release_appname() {
  // @@protoc_insertion_point(field_release:KFMsg.RegisterToServerAck.appname)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterToServerAck::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.RegisterToServerAck.appname)
}

// bytes apptype = 3;
inline void RegisterToServerAck::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterToServerAck::apptype() const {
  // @@protoc_insertion_point(field_get:KFMsg.RegisterToServerAck.apptype)
  return apptype_.GetNoArena();
}
inline void RegisterToServerAck::set_apptype(const ::std::string& value) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.RegisterToServerAck.apptype)
}
#if LANG_CXX11
inline void RegisterToServerAck::set_apptype(::std::string&& value) {
  
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.RegisterToServerAck.apptype)
}
#endif
inline void RegisterToServerAck::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.RegisterToServerAck.apptype)
}
inline void RegisterToServerAck::set_apptype(const void* value, size_t size) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.RegisterToServerAck.apptype)
}
inline ::std::string* RegisterToServerAck::mutable_apptype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.RegisterToServerAck.apptype)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterToServerAck::release_apptype() {
  // @@protoc_insertion_point(field_release:KFMsg.RegisterToServerAck.apptype)
  
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterToServerAck::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    
  } else {
    
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.RegisterToServerAck.apptype)
}

// -------------------------------------------------------------------

// TellRegisterToServer

// bytes servername = 1;
inline void TellRegisterToServer::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TellRegisterToServer::servername() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellRegisterToServer.servername)
  return servername_.GetNoArena();
}
inline void TellRegisterToServer::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.TellRegisterToServer.servername)
}
#if LANG_CXX11
inline void TellRegisterToServer::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.TellRegisterToServer.servername)
}
#endif
inline void TellRegisterToServer::set_servername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.TellRegisterToServer.servername)
}
inline void TellRegisterToServer::set_servername(const void* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.TellRegisterToServer.servername)
}
inline ::std::string* TellRegisterToServer::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.TellRegisterToServer.servername)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TellRegisterToServer::release_servername() {
  // @@protoc_insertion_point(field_release:KFMsg.TellRegisterToServer.servername)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TellRegisterToServer::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.TellRegisterToServer.servername)
}

// uint32 serverzoneid = 2;
inline void TellRegisterToServer::clear_serverzoneid() {
  serverzoneid_ = 0u;
}
inline ::google::protobuf::uint32 TellRegisterToServer::serverzoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellRegisterToServer.serverzoneid)
  return serverzoneid_;
}
inline void TellRegisterToServer::set_serverzoneid(::google::protobuf::uint32 value) {
  
  serverzoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.TellRegisterToServer.serverzoneid)
}

// .KFMsg.ListenData listen = 3;
inline bool TellRegisterToServer::has_listen() const {
  return this != internal_default_instance() && listen_ != NULL;
}
inline void TellRegisterToServer::clear_listen() {
  if (GetArenaNoVirtual() == NULL && listen_ != NULL) {
    delete listen_;
  }
  listen_ = NULL;
}
inline const ::KFMsg::ListenData& TellRegisterToServer::_internal_listen() const {
  return *listen_;
}
inline const ::KFMsg::ListenData& TellRegisterToServer::listen() const {
  const ::KFMsg::ListenData* p = listen_;
  // @@protoc_insertion_point(field_get:KFMsg.TellRegisterToServer.listen)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::ListenData*>(
      &::KFMsg::_ListenData_default_instance_);
}
inline ::KFMsg::ListenData* TellRegisterToServer::release_listen() {
  // @@protoc_insertion_point(field_release:KFMsg.TellRegisterToServer.listen)
  
  ::KFMsg::ListenData* temp = listen_;
  listen_ = NULL;
  return temp;
}
inline ::KFMsg::ListenData* TellRegisterToServer::mutable_listen() {
  
  if (listen_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::ListenData>(GetArenaNoVirtual());
    listen_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.TellRegisterToServer.listen)
  return listen_;
}
inline void TellRegisterToServer::set_allocated_listen(::KFMsg::ListenData* listen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete listen_;
  }
  if (listen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      listen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, listen, submessage_arena);
    }
    
  } else {
    
  }
  listen_ = listen;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.TellRegisterToServer.listen)
}

// -------------------------------------------------------------------

// TellUnRegisterFromServer

// bytes servername = 1;
inline void TellUnRegisterFromServer::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TellUnRegisterFromServer::servername() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellUnRegisterFromServer.servername)
  return servername_.GetNoArena();
}
inline void TellUnRegisterFromServer::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.TellUnRegisterFromServer.servername)
}
#if LANG_CXX11
inline void TellUnRegisterFromServer::set_servername(::std::string&& value) {
  
  servername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.TellUnRegisterFromServer.servername)
}
#endif
inline void TellUnRegisterFromServer::set_servername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.TellUnRegisterFromServer.servername)
}
inline void TellUnRegisterFromServer::set_servername(const void* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.TellUnRegisterFromServer.servername)
}
inline ::std::string* TellUnRegisterFromServer::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.TellUnRegisterFromServer.servername)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TellUnRegisterFromServer::release_servername() {
  // @@protoc_insertion_point(field_release:KFMsg.TellUnRegisterFromServer.servername)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TellUnRegisterFromServer::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.TellUnRegisterFromServer.servername)
}

// uint32 serverzoneid = 2;
inline void TellUnRegisterFromServer::clear_serverzoneid() {
  serverzoneid_ = 0u;
}
inline ::google::protobuf::uint32 TellUnRegisterFromServer::serverzoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellUnRegisterFromServer.serverzoneid)
  return serverzoneid_;
}
inline void TellUnRegisterFromServer::set_serverzoneid(::google::protobuf::uint32 value) {
  
  serverzoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.TellUnRegisterFromServer.serverzoneid)
}

// uint64 appid = 3;
inline void TellUnRegisterFromServer::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TellUnRegisterFromServer::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellUnRegisterFromServer.appid)
  return appid_;
}
inline void TellUnRegisterFromServer::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.TellUnRegisterFromServer.appid)
}

// bytes appname = 4;
inline void TellUnRegisterFromServer::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TellUnRegisterFromServer::appname() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellUnRegisterFromServer.appname)
  return appname_.GetNoArena();
}
inline void TellUnRegisterFromServer::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.TellUnRegisterFromServer.appname)
}
#if LANG_CXX11
inline void TellUnRegisterFromServer::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.TellUnRegisterFromServer.appname)
}
#endif
inline void TellUnRegisterFromServer::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.TellUnRegisterFromServer.appname)
}
inline void TellUnRegisterFromServer::set_appname(const void* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.TellUnRegisterFromServer.appname)
}
inline ::std::string* TellUnRegisterFromServer::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.TellUnRegisterFromServer.appname)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TellUnRegisterFromServer::release_appname() {
  // @@protoc_insertion_point(field_release:KFMsg.TellUnRegisterFromServer.appname)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TellUnRegisterFromServer::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.TellUnRegisterFromServer.appname)
}

// bytes apptype = 5;
inline void TellUnRegisterFromServer::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TellUnRegisterFromServer::apptype() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellUnRegisterFromServer.apptype)
  return apptype_.GetNoArena();
}
inline void TellUnRegisterFromServer::set_apptype(const ::std::string& value) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.TellUnRegisterFromServer.apptype)
}
#if LANG_CXX11
inline void TellUnRegisterFromServer::set_apptype(::std::string&& value) {
  
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.TellUnRegisterFromServer.apptype)
}
#endif
inline void TellUnRegisterFromServer::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.TellUnRegisterFromServer.apptype)
}
inline void TellUnRegisterFromServer::set_apptype(const void* value, size_t size) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.TellUnRegisterFromServer.apptype)
}
inline ::std::string* TellUnRegisterFromServer::mutable_apptype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.TellUnRegisterFromServer.apptype)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TellUnRegisterFromServer::release_apptype() {
  // @@protoc_insertion_point(field_release:KFMsg.TellUnRegisterFromServer.apptype)
  
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TellUnRegisterFromServer::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    
  } else {
    
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.TellUnRegisterFromServer.apptype)
}

// uint32 zoneid = 6;
inline void TellUnRegisterFromServer::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 TellUnRegisterFromServer::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.TellUnRegisterFromServer.zoneid)
  return zoneid_;
}
inline void TellUnRegisterFromServer::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.TellUnRegisterFromServer.zoneid)
}

// -------------------------------------------------------------------

// S2SRegisterRouteClientToProxyReq

// uint64 serverid = 1;
inline void S2SRegisterRouteClientToProxyReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRegisterRouteClientToProxyReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterRouteClientToProxyReq.serverid)
  return serverid_;
}
inline void S2SRegisterRouteClientToProxyReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterRouteClientToProxyReq.serverid)
}

// -------------------------------------------------------------------

// S2SRegisterRouteClientToShardReq

// repeated uint64 serverid = 1;
inline int S2SRegisterRouteClientToShardReq::serverid_size() const {
  return serverid_.size();
}
inline void S2SRegisterRouteClientToShardReq::clear_serverid() {
  serverid_.Clear();
}
inline ::google::protobuf::uint64 S2SRegisterRouteClientToShardReq::serverid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterRouteClientToShardReq.serverid)
  return serverid_.Get(index);
}
inline void S2SRegisterRouteClientToShardReq::set_serverid(int index, ::google::protobuf::uint64 value) {
  serverid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterRouteClientToShardReq.serverid)
}
inline void S2SRegisterRouteClientToShardReq::add_serverid(::google::protobuf::uint64 value) {
  serverid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SRegisterRouteClientToShardReq.serverid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SRegisterRouteClientToShardReq::serverid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SRegisterRouteClientToShardReq.serverid)
  return serverid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SRegisterRouteClientToShardReq::mutable_serverid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SRegisterRouteClientToShardReq.serverid)
  return &serverid_;
}

// -------------------------------------------------------------------

// PBTransmitRouteMessage

// uint64 serverid = 2;
inline void PBTransmitRouteMessage::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBTransmitRouteMessage::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTransmitRouteMessage.serverid)
  return serverid_;
}
inline void PBTransmitRouteMessage::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBTransmitRouteMessage.serverid)
}

// uint64 playerid = 3;
inline void PBTransmitRouteMessage::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBTransmitRouteMessage::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTransmitRouteMessage.playerid)
  return playerid_;
}
inline void PBTransmitRouteMessage::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBTransmitRouteMessage.playerid)
}

// uint32 msgid = 4;
inline void PBTransmitRouteMessage::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 PBTransmitRouteMessage::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTransmitRouteMessage.msgid)
  return msgid_;
}
inline void PBTransmitRouteMessage::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBTransmitRouteMessage.msgid)
}

// bytes msgdata = 5;
inline void PBTransmitRouteMessage::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBTransmitRouteMessage::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTransmitRouteMessage.msgdata)
  return msgdata_.GetNoArena();
}
inline void PBTransmitRouteMessage::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBTransmitRouteMessage.msgdata)
}
#if LANG_CXX11
inline void PBTransmitRouteMessage::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBTransmitRouteMessage.msgdata)
}
#endif
inline void PBTransmitRouteMessage::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBTransmitRouteMessage.msgdata)
}
inline void PBTransmitRouteMessage::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBTransmitRouteMessage.msgdata)
}
inline ::std::string* PBTransmitRouteMessage::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBTransmitRouteMessage.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBTransmitRouteMessage::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.PBTransmitRouteMessage.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTransmitRouteMessage::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBTransmitRouteMessage.msgdata)
}

// -------------------------------------------------------------------

// S2STransmitRouteZoneMessageReq

// .KFMsg.PBTransmitRouteMessage transmitdata = 1;
inline bool S2STransmitRouteZoneMessageReq::has_transmitdata() const {
  return this != internal_default_instance() && transmitdata_ != NULL;
}
inline void S2STransmitRouteZoneMessageReq::clear_transmitdata() {
  if (GetArenaNoVirtual() == NULL && transmitdata_ != NULL) {
    delete transmitdata_;
  }
  transmitdata_ = NULL;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteZoneMessageReq::_internal_transmitdata() const {
  return *transmitdata_;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteZoneMessageReq::transmitdata() const {
  const ::KFMsg::PBTransmitRouteMessage* p = transmitdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitRouteZoneMessageReq.transmitdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBTransmitRouteMessage*>(
      &::KFMsg::_PBTransmitRouteMessage_default_instance_);
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteZoneMessageReq::release_transmitdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitRouteZoneMessageReq.transmitdata)
  
  ::KFMsg::PBTransmitRouteMessage* temp = transmitdata_;
  transmitdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteZoneMessageReq::mutable_transmitdata() {
  
  if (transmitdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBTransmitRouteMessage>(GetArenaNoVirtual());
    transmitdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitRouteZoneMessageReq.transmitdata)
  return transmitdata_;
}
inline void S2STransmitRouteZoneMessageReq::set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transmitdata_;
  }
  if (transmitdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transmitdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transmitdata, submessage_arena);
    }
    
  } else {
    
  }
  transmitdata_ = transmitdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitRouteZoneMessageReq.transmitdata)
}

// -------------------------------------------------------------------

// S2STransmitRouteZoneMessageAck

// .KFMsg.PBTransmitRouteMessage transmitdata = 1;
inline bool S2STransmitRouteZoneMessageAck::has_transmitdata() const {
  return this != internal_default_instance() && transmitdata_ != NULL;
}
inline void S2STransmitRouteZoneMessageAck::clear_transmitdata() {
  if (GetArenaNoVirtual() == NULL && transmitdata_ != NULL) {
    delete transmitdata_;
  }
  transmitdata_ = NULL;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteZoneMessageAck::_internal_transmitdata() const {
  return *transmitdata_;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteZoneMessageAck::transmitdata() const {
  const ::KFMsg::PBTransmitRouteMessage* p = transmitdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitRouteZoneMessageAck.transmitdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBTransmitRouteMessage*>(
      &::KFMsg::_PBTransmitRouteMessage_default_instance_);
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteZoneMessageAck::release_transmitdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitRouteZoneMessageAck.transmitdata)
  
  ::KFMsg::PBTransmitRouteMessage* temp = transmitdata_;
  transmitdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteZoneMessageAck::mutable_transmitdata() {
  
  if (transmitdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBTransmitRouteMessage>(GetArenaNoVirtual());
    transmitdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitRouteZoneMessageAck.transmitdata)
  return transmitdata_;
}
inline void S2STransmitRouteZoneMessageAck::set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transmitdata_;
  }
  if (transmitdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transmitdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transmitdata, submessage_arena);
    }
    
  } else {
    
  }
  transmitdata_ = transmitdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitRouteZoneMessageAck.transmitdata)
}

// -------------------------------------------------------------------

// S2STransmitRouteProxyMessageReq

// .KFMsg.PBTransmitRouteMessage transmitdata = 1;
inline bool S2STransmitRouteProxyMessageReq::has_transmitdata() const {
  return this != internal_default_instance() && transmitdata_ != NULL;
}
inline void S2STransmitRouteProxyMessageReq::clear_transmitdata() {
  if (GetArenaNoVirtual() == NULL && transmitdata_ != NULL) {
    delete transmitdata_;
  }
  transmitdata_ = NULL;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteProxyMessageReq::_internal_transmitdata() const {
  return *transmitdata_;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteProxyMessageReq::transmitdata() const {
  const ::KFMsg::PBTransmitRouteMessage* p = transmitdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitRouteProxyMessageReq.transmitdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBTransmitRouteMessage*>(
      &::KFMsg::_PBTransmitRouteMessage_default_instance_);
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteProxyMessageReq::release_transmitdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitRouteProxyMessageReq.transmitdata)
  
  ::KFMsg::PBTransmitRouteMessage* temp = transmitdata_;
  transmitdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteProxyMessageReq::mutable_transmitdata() {
  
  if (transmitdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBTransmitRouteMessage>(GetArenaNoVirtual());
    transmitdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitRouteProxyMessageReq.transmitdata)
  return transmitdata_;
}
inline void S2STransmitRouteProxyMessageReq::set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transmitdata_;
  }
  if (transmitdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transmitdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transmitdata, submessage_arena);
    }
    
  } else {
    
  }
  transmitdata_ = transmitdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitRouteProxyMessageReq.transmitdata)
}

// -------------------------------------------------------------------

// S2STransmitRouteProxyMessageAck

// .KFMsg.PBTransmitRouteMessage transmitdata = 1;
inline bool S2STransmitRouteProxyMessageAck::has_transmitdata() const {
  return this != internal_default_instance() && transmitdata_ != NULL;
}
inline void S2STransmitRouteProxyMessageAck::clear_transmitdata() {
  if (GetArenaNoVirtual() == NULL && transmitdata_ != NULL) {
    delete transmitdata_;
  }
  transmitdata_ = NULL;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteProxyMessageAck::_internal_transmitdata() const {
  return *transmitdata_;
}
inline const ::KFMsg::PBTransmitRouteMessage& S2STransmitRouteProxyMessageAck::transmitdata() const {
  const ::KFMsg::PBTransmitRouteMessage* p = transmitdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STransmitRouteProxyMessageAck.transmitdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBTransmitRouteMessage*>(
      &::KFMsg::_PBTransmitRouteMessage_default_instance_);
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteProxyMessageAck::release_transmitdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STransmitRouteProxyMessageAck.transmitdata)
  
  ::KFMsg::PBTransmitRouteMessage* temp = transmitdata_;
  transmitdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBTransmitRouteMessage* S2STransmitRouteProxyMessageAck::mutable_transmitdata() {
  
  if (transmitdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBTransmitRouteMessage>(GetArenaNoVirtual());
    transmitdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STransmitRouteProxyMessageAck.transmitdata)
  return transmitdata_;
}
inline void S2STransmitRouteProxyMessageAck::set_allocated_transmitdata(::KFMsg::PBTransmitRouteMessage* transmitdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transmitdata_;
  }
  if (transmitdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transmitdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transmitdata, submessage_arena);
    }
    
  } else {
    
  }
  transmitdata_ = transmitdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STransmitRouteProxyMessageAck.transmitdata)
}

// -------------------------------------------------------------------

// S2SLogReq

// uint32 log_level = 1;
inline void S2SLogReq::clear_log_level() {
  log_level_ = 0u;
}
inline ::google::protobuf::uint32 S2SLogReq::log_level() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogReq.log_level)
  return log_level_;
}
inline void S2SLogReq::set_log_level(::google::protobuf::uint32 value) {
  
  log_level_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogReq.log_level)
}

// uint32 zone_id = 2;
inline void S2SLogReq::clear_zone_id() {
  zone_id_ = 0u;
}
inline ::google::protobuf::uint32 S2SLogReq::zone_id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogReq.zone_id)
  return zone_id_;
}
inline void S2SLogReq::set_zone_id(::google::protobuf::uint32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogReq.zone_id)
}

// bytes app_name = 3;
inline void S2SLogReq::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLogReq::app_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogReq.app_name)
  return app_name_.GetNoArena();
}
inline void S2SLogReq::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogReq.app_name)
}
#if LANG_CXX11
inline void S2SLogReq::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLogReq.app_name)
}
#endif
inline void S2SLogReq::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLogReq.app_name)
}
inline void S2SLogReq::set_app_name(const void* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLogReq.app_name)
}
inline ::std::string* S2SLogReq::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLogReq.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLogReq::release_app_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLogReq.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLogReq::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLogReq.app_name)
}

// bytes app_type = 4;
inline void S2SLogReq::clear_app_type() {
  app_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLogReq::app_type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogReq.app_type)
  return app_type_.GetNoArena();
}
inline void S2SLogReq::set_app_type(const ::std::string& value) {
  
  app_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogReq.app_type)
}
#if LANG_CXX11
inline void S2SLogReq::set_app_type(::std::string&& value) {
  
  app_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLogReq.app_type)
}
#endif
inline void S2SLogReq::set_app_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLogReq.app_type)
}
inline void S2SLogReq::set_app_type(const void* value, size_t size) {
  
  app_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLogReq.app_type)
}
inline ::std::string* S2SLogReq::mutable_app_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLogReq.app_type)
  return app_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLogReq::release_app_type() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLogReq.app_type)
  
  return app_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLogReq::set_allocated_app_type(::std::string* app_type) {
  if (app_type != NULL) {
    
  } else {
    
  }
  app_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLogReq.app_type)
}

// bytes app_id = 5;
inline void S2SLogReq::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLogReq::app_id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogReq.app_id)
  return app_id_.GetNoArena();
}
inline void S2SLogReq::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogReq.app_id)
}
#if LANG_CXX11
inline void S2SLogReq::set_app_id(::std::string&& value) {
  
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLogReq.app_id)
}
#endif
inline void S2SLogReq::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLogReq.app_id)
}
inline void S2SLogReq::set_app_id(const void* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLogReq.app_id)
}
inline ::std::string* S2SLogReq::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLogReq.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLogReq::release_app_id() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLogReq.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLogReq::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLogReq.app_id)
}

// bytes log_info = 6;
inline void S2SLogReq::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLogReq::log_info() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogReq.log_info)
  return log_info_.GetNoArena();
}
inline void S2SLogReq::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogReq.log_info)
}
#if LANG_CXX11
inline void S2SLogReq::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLogReq.log_info)
}
#endif
inline void S2SLogReq::set_log_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLogReq.log_info)
}
inline void S2SLogReq::set_log_info(const void* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLogReq.log_info)
}
inline ::std::string* S2SLogReq::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLogReq.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLogReq::release_log_info() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLogReq.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLogReq::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLogReq.log_info)
}

// -------------------------------------------------------------------

// S2SUpdateOnlineToDirReq

// uint32 zoneid = 1;
inline void S2SUpdateOnlineToDirReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateOnlineToDirReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.zoneid)
  return zoneid_;
}
inline void S2SUpdateOnlineToDirReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.zoneid)
}

// bytes zonename = 2;
inline void S2SUpdateOnlineToDirReq::clear_zonename() {
  zonename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SUpdateOnlineToDirReq::zonename() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.zonename)
  return zonename_.GetNoArena();
}
inline void S2SUpdateOnlineToDirReq::set_zonename(const ::std::string& value) {
  
  zonename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.zonename)
}
#if LANG_CXX11
inline void S2SUpdateOnlineToDirReq::set_zonename(::std::string&& value) {
  
  zonename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SUpdateOnlineToDirReq.zonename)
}
#endif
inline void S2SUpdateOnlineToDirReq::set_zonename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  zonename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SUpdateOnlineToDirReq.zonename)
}
inline void S2SUpdateOnlineToDirReq::set_zonename(const void* value, size_t size) {
  
  zonename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SUpdateOnlineToDirReq.zonename)
}
inline ::std::string* S2SUpdateOnlineToDirReq::mutable_zonename() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateOnlineToDirReq.zonename)
  return zonename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SUpdateOnlineToDirReq::release_zonename() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateOnlineToDirReq.zonename)
  
  return zonename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SUpdateOnlineToDirReq::set_allocated_zonename(::std::string* zonename) {
  if (zonename != NULL) {
    
  } else {
    
  }
  zonename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zonename);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateOnlineToDirReq.zonename)
}

// uint32 zonechannel = 3;
inline void S2SUpdateOnlineToDirReq::clear_zonechannel() {
  zonechannel_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateOnlineToDirReq::zonechannel() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.zonechannel)
  return zonechannel_;
}
inline void S2SUpdateOnlineToDirReq::set_zonechannel(::google::protobuf::uint32 value) {
  
  zonechannel_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.zonechannel)
}

// uint64 appid = 4;
inline void S2SUpdateOnlineToDirReq::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateOnlineToDirReq::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.appid)
  return appid_;
}
inline void S2SUpdateOnlineToDirReq::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.appid)
}

// bytes ip = 5;
inline void S2SUpdateOnlineToDirReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SUpdateOnlineToDirReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.ip)
  return ip_.GetNoArena();
}
inline void S2SUpdateOnlineToDirReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.ip)
}
#if LANG_CXX11
inline void S2SUpdateOnlineToDirReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SUpdateOnlineToDirReq.ip)
}
#endif
inline void S2SUpdateOnlineToDirReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SUpdateOnlineToDirReq.ip)
}
inline void S2SUpdateOnlineToDirReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SUpdateOnlineToDirReq.ip)
}
inline ::std::string* S2SUpdateOnlineToDirReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateOnlineToDirReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SUpdateOnlineToDirReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateOnlineToDirReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SUpdateOnlineToDirReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateOnlineToDirReq.ip)
}

// uint32 port = 6;
inline void S2SUpdateOnlineToDirReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateOnlineToDirReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.port)
  return port_;
}
inline void S2SUpdateOnlineToDirReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.port)
}

// uint32 onlinecount = 7;
inline void S2SUpdateOnlineToDirReq::clear_onlinecount() {
  onlinecount_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateOnlineToDirReq::onlinecount() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateOnlineToDirReq.onlinecount)
  return onlinecount_;
}
inline void S2SUpdateOnlineToDirReq::set_onlinecount(::google::protobuf::uint32 value) {
  
  onlinecount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateOnlineToDirReq.onlinecount)
}

// -------------------------------------------------------------------

// S2SRemoveOnlineToDirReq

// uint64 appid = 1;
inline void S2SRemoveOnlineToDirReq::clear_appid() {
  appid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRemoveOnlineToDirReq::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRemoveOnlineToDirReq.appid)
  return appid_;
}
inline void S2SRemoveOnlineToDirReq::set_appid(::google::protobuf::uint64 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRemoveOnlineToDirReq.appid)
}

// -------------------------------------------------------------------

// S2SClusterRegisterToMasterReq

// bytes type = 1;
inline void S2SClusterRegisterToMasterReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterRegisterToMasterReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterRegisterToMasterReq.type)
  return type_.GetNoArena();
}
inline void S2SClusterRegisterToMasterReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterRegisterToMasterReq.type)
}
#if LANG_CXX11
inline void S2SClusterRegisterToMasterReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterRegisterToMasterReq.type)
}
#endif
inline void S2SClusterRegisterToMasterReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterRegisterToMasterReq.type)
}
inline void S2SClusterRegisterToMasterReq::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterRegisterToMasterReq.type)
}
inline ::std::string* S2SClusterRegisterToMasterReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterRegisterToMasterReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterRegisterToMasterReq::release_type() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterRegisterToMasterReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterRegisterToMasterReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterRegisterToMasterReq.type)
}

// uint64 id = 2;
inline void S2SClusterRegisterToMasterReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterRegisterToMasterReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterRegisterToMasterReq.id)
  return id_;
}
inline void S2SClusterRegisterToMasterReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterRegisterToMasterReq.id)
}

// bytes name = 3;
inline void S2SClusterRegisterToMasterReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterRegisterToMasterReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterRegisterToMasterReq.name)
  return name_.GetNoArena();
}
inline void S2SClusterRegisterToMasterReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterRegisterToMasterReq.name)
}
#if LANG_CXX11
inline void S2SClusterRegisterToMasterReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterRegisterToMasterReq.name)
}
#endif
inline void S2SClusterRegisterToMasterReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterRegisterToMasterReq.name)
}
inline void S2SClusterRegisterToMasterReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterRegisterToMasterReq.name)
}
inline ::std::string* S2SClusterRegisterToMasterReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterRegisterToMasterReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterRegisterToMasterReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterRegisterToMasterReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterRegisterToMasterReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterRegisterToMasterReq.name)
}

// bytes ip = 4;
inline void S2SClusterRegisterToMasterReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterRegisterToMasterReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterRegisterToMasterReq.ip)
  return ip_.GetNoArena();
}
inline void S2SClusterRegisterToMasterReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterRegisterToMasterReq.ip)
}
#if LANG_CXX11
inline void S2SClusterRegisterToMasterReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterRegisterToMasterReq.ip)
}
#endif
inline void S2SClusterRegisterToMasterReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterRegisterToMasterReq.ip)
}
inline void S2SClusterRegisterToMasterReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterRegisterToMasterReq.ip)
}
inline ::std::string* S2SClusterRegisterToMasterReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterRegisterToMasterReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterRegisterToMasterReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterRegisterToMasterReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterRegisterToMasterReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterRegisterToMasterReq.ip)
}

// uint32 port = 5;
inline void S2SClusterRegisterToMasterReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SClusterRegisterToMasterReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterRegisterToMasterReq.port)
  return port_;
}
inline void S2SClusterRegisterToMasterReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterRegisterToMasterReq.port)
}

// -------------------------------------------------------------------

// S2SClusterUpdateToMasterReq

// bytes type = 1;
inline void S2SClusterUpdateToMasterReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterUpdateToMasterReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterUpdateToMasterReq.type)
  return type_.GetNoArena();
}
inline void S2SClusterUpdateToMasterReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterUpdateToMasterReq.type)
}
#if LANG_CXX11
inline void S2SClusterUpdateToMasterReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterUpdateToMasterReq.type)
}
#endif
inline void S2SClusterUpdateToMasterReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterUpdateToMasterReq.type)
}
inline void S2SClusterUpdateToMasterReq::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterUpdateToMasterReq.type)
}
inline ::std::string* S2SClusterUpdateToMasterReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterUpdateToMasterReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterUpdateToMasterReq::release_type() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterUpdateToMasterReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterUpdateToMasterReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterUpdateToMasterReq.type)
}

// uint64 id = 2;
inline void S2SClusterUpdateToMasterReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterUpdateToMasterReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterUpdateToMasterReq.id)
  return id_;
}
inline void S2SClusterUpdateToMasterReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterUpdateToMasterReq.id)
}

// bytes name = 3;
inline void S2SClusterUpdateToMasterReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterUpdateToMasterReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterUpdateToMasterReq.name)
  return name_.GetNoArena();
}
inline void S2SClusterUpdateToMasterReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterUpdateToMasterReq.name)
}
#if LANG_CXX11
inline void S2SClusterUpdateToMasterReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterUpdateToMasterReq.name)
}
#endif
inline void S2SClusterUpdateToMasterReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterUpdateToMasterReq.name)
}
inline void S2SClusterUpdateToMasterReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterUpdateToMasterReq.name)
}
inline ::std::string* S2SClusterUpdateToMasterReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterUpdateToMasterReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterUpdateToMasterReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterUpdateToMasterReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterUpdateToMasterReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterUpdateToMasterReq.name)
}

// bytes ip = 4;
inline void S2SClusterUpdateToMasterReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterUpdateToMasterReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterUpdateToMasterReq.ip)
  return ip_.GetNoArena();
}
inline void S2SClusterUpdateToMasterReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterUpdateToMasterReq.ip)
}
#if LANG_CXX11
inline void S2SClusterUpdateToMasterReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterUpdateToMasterReq.ip)
}
#endif
inline void S2SClusterUpdateToMasterReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterUpdateToMasterReq.ip)
}
inline void S2SClusterUpdateToMasterReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterUpdateToMasterReq.ip)
}
inline ::std::string* S2SClusterUpdateToMasterReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterUpdateToMasterReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterUpdateToMasterReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterUpdateToMasterReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterUpdateToMasterReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterUpdateToMasterReq.ip)
}

// uint32 port = 5;
inline void S2SClusterUpdateToMasterReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SClusterUpdateToMasterReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterUpdateToMasterReq.port)
  return port_;
}
inline void S2SClusterUpdateToMasterReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterUpdateToMasterReq.port)
}

// uint32 count = 6;
inline void S2SClusterUpdateToMasterReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 S2SClusterUpdateToMasterReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterUpdateToMasterReq.count)
  return count_;
}
inline void S2SClusterUpdateToMasterReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterUpdateToMasterReq.count)
}

// -------------------------------------------------------------------

// S2SClusterAuthToMasterReq

// bytes clusterkey = 1;
inline void S2SClusterAuthToMasterReq::clear_clusterkey() {
  clusterkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterAuthToMasterReq::clusterkey() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
  return clusterkey_.GetNoArena();
}
inline void S2SClusterAuthToMasterReq::set_clusterkey(const ::std::string& value) {
  
  clusterkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
}
#if LANG_CXX11
inline void S2SClusterAuthToMasterReq::set_clusterkey(::std::string&& value) {
  
  clusterkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
}
#endif
inline void S2SClusterAuthToMasterReq::set_clusterkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clusterkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
}
inline void S2SClusterAuthToMasterReq::set_clusterkey(const void* value, size_t size) {
  
  clusterkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
}
inline ::std::string* S2SClusterAuthToMasterReq::mutable_clusterkey() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
  return clusterkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterAuthToMasterReq::release_clusterkey() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
  
  return clusterkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterAuthToMasterReq::set_allocated_clusterkey(::std::string* clusterkey) {
  if (clusterkey != NULL) {
    
  } else {
    
  }
  clusterkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clusterkey);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterAuthToMasterReq.clusterkey)
}

// bytes clustername = 2;
inline void S2SClusterAuthToMasterReq::clear_clustername() {
  clustername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterAuthToMasterReq::clustername() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToMasterReq.clustername)
  return clustername_.GetNoArena();
}
inline void S2SClusterAuthToMasterReq::set_clustername(const ::std::string& value) {
  
  clustername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToMasterReq.clustername)
}
#if LANG_CXX11
inline void S2SClusterAuthToMasterReq::set_clustername(::std::string&& value) {
  
  clustername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterAuthToMasterReq.clustername)
}
#endif
inline void S2SClusterAuthToMasterReq::set_clustername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clustername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterAuthToMasterReq.clustername)
}
inline void S2SClusterAuthToMasterReq::set_clustername(const void* value, size_t size) {
  
  clustername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterAuthToMasterReq.clustername)
}
inline ::std::string* S2SClusterAuthToMasterReq::mutable_clustername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterAuthToMasterReq.clustername)
  return clustername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterAuthToMasterReq::release_clustername() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterAuthToMasterReq.clustername)
  
  return clustername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterAuthToMasterReq::set_allocated_clustername(::std::string* clustername) {
  if (clustername != NULL) {
    
  } else {
    
  }
  clustername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clustername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterAuthToMasterReq.clustername)
}

// uint64 clientid = 3;
inline void S2SClusterAuthToMasterReq::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterAuthToMasterReq::clientid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToMasterReq.clientid)
  return clientid_;
}
inline void S2SClusterAuthToMasterReq::set_clientid(::google::protobuf::uint64 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToMasterReq.clientid)
}

// -------------------------------------------------------------------

// S2SClusterAuthToClientAck

// bytes token = 1;
inline void S2SClusterAuthToClientAck::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterAuthToClientAck::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToClientAck.token)
  return token_.GetNoArena();
}
inline void S2SClusterAuthToClientAck::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToClientAck.token)
}
#if LANG_CXX11
inline void S2SClusterAuthToClientAck::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterAuthToClientAck.token)
}
#endif
inline void S2SClusterAuthToClientAck::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterAuthToClientAck.token)
}
inline void S2SClusterAuthToClientAck::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterAuthToClientAck.token)
}
inline ::std::string* S2SClusterAuthToClientAck::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterAuthToClientAck.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterAuthToClientAck::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterAuthToClientAck.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterAuthToClientAck::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterAuthToClientAck.token)
}

// bytes name = 2;
inline void S2SClusterAuthToClientAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterAuthToClientAck::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToClientAck.name)
  return name_.GetNoArena();
}
inline void S2SClusterAuthToClientAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToClientAck.name)
}
#if LANG_CXX11
inline void S2SClusterAuthToClientAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterAuthToClientAck.name)
}
#endif
inline void S2SClusterAuthToClientAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterAuthToClientAck.name)
}
inline void S2SClusterAuthToClientAck::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterAuthToClientAck.name)
}
inline ::std::string* S2SClusterAuthToClientAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterAuthToClientAck.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterAuthToClientAck::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterAuthToClientAck.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterAuthToClientAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterAuthToClientAck.name)
}

// bytes type = 3;
inline void S2SClusterAuthToClientAck::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterAuthToClientAck::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToClientAck.type)
  return type_.GetNoArena();
}
inline void S2SClusterAuthToClientAck::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToClientAck.type)
}
#if LANG_CXX11
inline void S2SClusterAuthToClientAck::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterAuthToClientAck.type)
}
#endif
inline void S2SClusterAuthToClientAck::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterAuthToClientAck.type)
}
inline void S2SClusterAuthToClientAck::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterAuthToClientAck.type)
}
inline ::std::string* S2SClusterAuthToClientAck::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterAuthToClientAck.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterAuthToClientAck::release_type() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterAuthToClientAck.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterAuthToClientAck::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterAuthToClientAck.type)
}

// uint64 id = 4;
inline void S2SClusterAuthToClientAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterAuthToClientAck::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToClientAck.id)
  return id_;
}
inline void S2SClusterAuthToClientAck::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToClientAck.id)
}

// bytes ip = 5;
inline void S2SClusterAuthToClientAck::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterAuthToClientAck::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToClientAck.ip)
  return ip_.GetNoArena();
}
inline void S2SClusterAuthToClientAck::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToClientAck.ip)
}
#if LANG_CXX11
inline void S2SClusterAuthToClientAck::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterAuthToClientAck.ip)
}
#endif
inline void S2SClusterAuthToClientAck::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterAuthToClientAck.ip)
}
inline void S2SClusterAuthToClientAck::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterAuthToClientAck.ip)
}
inline ::std::string* S2SClusterAuthToClientAck::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterAuthToClientAck.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterAuthToClientAck::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterAuthToClientAck.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterAuthToClientAck::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterAuthToClientAck.ip)
}

// uint32 port = 6;
inline void S2SClusterAuthToClientAck::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SClusterAuthToClientAck::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterAuthToClientAck.port)
  return port_;
}
inline void S2SClusterAuthToClientAck::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterAuthToClientAck.port)
}

// -------------------------------------------------------------------

// S2SClusterTokenToProxyReq

// bytes token = 1;
inline void S2SClusterTokenToProxyReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterTokenToProxyReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterTokenToProxyReq.token)
  return token_.GetNoArena();
}
inline void S2SClusterTokenToProxyReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterTokenToProxyReq.token)
}
#if LANG_CXX11
inline void S2SClusterTokenToProxyReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterTokenToProxyReq.token)
}
#endif
inline void S2SClusterTokenToProxyReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterTokenToProxyReq.token)
}
inline void S2SClusterTokenToProxyReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterTokenToProxyReq.token)
}
inline ::std::string* S2SClusterTokenToProxyReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterTokenToProxyReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterTokenToProxyReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterTokenToProxyReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterTokenToProxyReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterTokenToProxyReq.token)
}

// uint64 clientid = 2;
inline void S2SClusterTokenToProxyReq::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterTokenToProxyReq::clientid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterTokenToProxyReq.clientid)
  return clientid_;
}
inline void S2SClusterTokenToProxyReq::set_clientid(::google::protobuf::uint64 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterTokenToProxyReq.clientid)
}

// -------------------------------------------------------------------

// S2SClusterVerifyToProxyReq

// bytes token = 1;
inline void S2SClusterVerifyToProxyReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SClusterVerifyToProxyReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterVerifyToProxyReq.token)
  return token_.GetNoArena();
}
inline void S2SClusterVerifyToProxyReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterVerifyToProxyReq.token)
}
#if LANG_CXX11
inline void S2SClusterVerifyToProxyReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SClusterVerifyToProxyReq.token)
}
#endif
inline void S2SClusterVerifyToProxyReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SClusterVerifyToProxyReq.token)
}
inline void S2SClusterVerifyToProxyReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SClusterVerifyToProxyReq.token)
}
inline ::std::string* S2SClusterVerifyToProxyReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SClusterVerifyToProxyReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SClusterVerifyToProxyReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SClusterVerifyToProxyReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SClusterVerifyToProxyReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SClusterVerifyToProxyReq.token)
}

// uint64 serverid = 2;
inline void S2SClusterVerifyToProxyReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterVerifyToProxyReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterVerifyToProxyReq.serverid)
  return serverid_;
}
inline void S2SClusterVerifyToProxyReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterVerifyToProxyReq.serverid)
}

// -------------------------------------------------------------------

// S2SClusterVerifyToClientAck

// uint64 serverid = 1;
inline void S2SClusterVerifyToClientAck::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterVerifyToClientAck::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterVerifyToClientAck.serverid)
  return serverid_;
}
inline void S2SClusterVerifyToClientAck::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterVerifyToClientAck.serverid)
}

// -------------------------------------------------------------------

// S2SClusterClientDiscoverToShardReq

// repeated uint64 clientid = 1;
inline int S2SClusterClientDiscoverToShardReq::clientid_size() const {
  return clientid_.size();
}
inline void S2SClusterClientDiscoverToShardReq::clear_clientid() {
  clientid_.Clear();
}
inline ::google::protobuf::uint64 S2SClusterClientDiscoverToShardReq::clientid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterClientDiscoverToShardReq.clientid)
  return clientid_.Get(index);
}
inline void S2SClusterClientDiscoverToShardReq::set_clientid(int index, ::google::protobuf::uint64 value) {
  clientid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterClientDiscoverToShardReq.clientid)
}
inline void S2SClusterClientDiscoverToShardReq::add_clientid(::google::protobuf::uint64 value) {
  clientid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SClusterClientDiscoverToShardReq.clientid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SClusterClientDiscoverToShardReq::clientid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SClusterClientDiscoverToShardReq.clientid)
  return clientid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SClusterClientDiscoverToShardReq::mutable_clientid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SClusterClientDiscoverToShardReq.clientid)
  return &clientid_;
}

// -------------------------------------------------------------------

// S2SClusterClientLostToShardReq

// uint64 clientid = 1;
inline void S2SClusterClientLostToShardReq::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClusterClientLostToShardReq::clientid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClusterClientLostToShardReq.clientid)
  return clientid_;
}
inline void S2SClusterClientLostToShardReq::set_clientid(::google::protobuf::uint64 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClusterClientLostToShardReq.clientid)
}

// -------------------------------------------------------------------

// S2SAddObjectToProxyReq

// repeated uint64 objectid = 1;
inline int S2SAddObjectToProxyReq::objectid_size() const {
  return objectid_.size();
}
inline void S2SAddObjectToProxyReq::clear_objectid() {
  objectid_.Clear();
}
inline ::google::protobuf::uint64 S2SAddObjectToProxyReq::objectid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddObjectToProxyReq.objectid)
  return objectid_.Get(index);
}
inline void S2SAddObjectToProxyReq::set_objectid(int index, ::google::protobuf::uint64 value) {
  objectid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddObjectToProxyReq.objectid)
}
inline void S2SAddObjectToProxyReq::add_objectid(::google::protobuf::uint64 value) {
  objectid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAddObjectToProxyReq.objectid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAddObjectToProxyReq::objectid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAddObjectToProxyReq.objectid)
  return objectid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAddObjectToProxyReq::mutable_objectid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAddObjectToProxyReq.objectid)
  return &objectid_;
}

// -------------------------------------------------------------------

// S2SRemoveObjectToProxyReq

// repeated uint64 objectid = 2;
inline int S2SRemoveObjectToProxyReq::objectid_size() const {
  return objectid_.size();
}
inline void S2SRemoveObjectToProxyReq::clear_objectid() {
  objectid_.Clear();
}
inline ::google::protobuf::uint64 S2SRemoveObjectToProxyReq::objectid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRemoveObjectToProxyReq.objectid)
  return objectid_.Get(index);
}
inline void S2SRemoveObjectToProxyReq::set_objectid(int index, ::google::protobuf::uint64 value) {
  objectid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRemoveObjectToProxyReq.objectid)
}
inline void S2SRemoveObjectToProxyReq::add_objectid(::google::protobuf::uint64 value) {
  objectid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SRemoveObjectToProxyReq.objectid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SRemoveObjectToProxyReq::objectid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SRemoveObjectToProxyReq.objectid)
  return objectid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SRemoveObjectToProxyReq::mutable_objectid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SRemoveObjectToProxyReq.objectid)
  return &objectid_;
}

// -------------------------------------------------------------------

// S2SAllocObjectToMasterReq

// repeated uint64 objectid = 1;
inline int S2SAllocObjectToMasterReq::objectid_size() const {
  return objectid_.size();
}
inline void S2SAllocObjectToMasterReq::clear_objectid() {
  objectid_.Clear();
}
inline ::google::protobuf::uint64 S2SAllocObjectToMasterReq::objectid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocObjectToMasterReq.objectid)
  return objectid_.Get(index);
}
inline void S2SAllocObjectToMasterReq::set_objectid(int index, ::google::protobuf::uint64 value) {
  objectid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocObjectToMasterReq.objectid)
}
inline void S2SAllocObjectToMasterReq::add_objectid(::google::protobuf::uint64 value) {
  objectid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAllocObjectToMasterReq.objectid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAllocObjectToMasterReq::objectid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAllocObjectToMasterReq.objectid)
  return objectid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAllocObjectToMasterReq::mutable_objectid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAllocObjectToMasterReq.objectid)
  return &objectid_;
}

// -------------------------------------------------------------------

// S2SAllocObjectToProxyAck

// repeated uint64 objectid = 1;
inline int S2SAllocObjectToProxyAck::objectid_size() const {
  return objectid_.size();
}
inline void S2SAllocObjectToProxyAck::clear_objectid() {
  objectid_.Clear();
}
inline ::google::protobuf::uint64 S2SAllocObjectToProxyAck::objectid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocObjectToProxyAck.objectid)
  return objectid_.Get(index);
}
inline void S2SAllocObjectToProxyAck::set_objectid(int index, ::google::protobuf::uint64 value) {
  objectid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocObjectToProxyAck.objectid)
}
inline void S2SAllocObjectToProxyAck::add_objectid(::google::protobuf::uint64 value) {
  objectid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAllocObjectToProxyAck.objectid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAllocObjectToProxyAck::objectid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAllocObjectToProxyAck.objectid)
  return objectid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAllocObjectToProxyAck::mutable_objectid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAllocObjectToProxyAck.objectid)
  return &objectid_;
}

// repeated uint64 shardid = 2;
inline int S2SAllocObjectToProxyAck::shardid_size() const {
  return shardid_.size();
}
inline void S2SAllocObjectToProxyAck::clear_shardid() {
  shardid_.Clear();
}
inline ::google::protobuf::uint64 S2SAllocObjectToProxyAck::shardid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocObjectToProxyAck.shardid)
  return shardid_.Get(index);
}
inline void S2SAllocObjectToProxyAck::set_shardid(int index, ::google::protobuf::uint64 value) {
  shardid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocObjectToProxyAck.shardid)
}
inline void S2SAllocObjectToProxyAck::add_shardid(::google::protobuf::uint64 value) {
  shardid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAllocObjectToProxyAck.shardid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAllocObjectToProxyAck::shardid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAllocObjectToProxyAck.shardid)
  return shardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAllocObjectToProxyAck::mutable_shardid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAllocObjectToProxyAck.shardid)
  return &shardid_;
}

// -------------------------------------------------------------------

// S2SAllocObjectToShardAck

// repeated uint64 objectid = 1;
inline int S2SAllocObjectToShardAck::objectid_size() const {
  return objectid_.size();
}
inline void S2SAllocObjectToShardAck::clear_objectid() {
  objectid_.Clear();
}
inline ::google::protobuf::uint64 S2SAllocObjectToShardAck::objectid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAllocObjectToShardAck.objectid)
  return objectid_.Get(index);
}
inline void S2SAllocObjectToShardAck::set_objectid(int index, ::google::protobuf::uint64 value) {
  objectid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAllocObjectToShardAck.objectid)
}
inline void S2SAllocObjectToShardAck::add_objectid(::google::protobuf::uint64 value) {
  objectid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAllocObjectToShardAck.objectid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAllocObjectToShardAck::objectid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAllocObjectToShardAck.objectid)
  return objectid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAllocObjectToShardAck::mutable_objectid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAllocObjectToShardAck.objectid)
  return &objectid_;
}

// -------------------------------------------------------------------

// S2SSendToDynamicObjectReq

// uint64 objectid = 1;
inline void S2SSendToDynamicObjectReq::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSendToDynamicObjectReq::objectid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToDynamicObjectReq.objectid)
  return objectid_;
}
inline void S2SSendToDynamicObjectReq::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToDynamicObjectReq.objectid)
}

// uint64 serverid = 2;
inline void S2SSendToDynamicObjectReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSendToDynamicObjectReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToDynamicObjectReq.serverid)
  return serverid_;
}
inline void S2SSendToDynamicObjectReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToDynamicObjectReq.serverid)
}

// uint32 msgid = 3;
inline void S2SSendToDynamicObjectReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SSendToDynamicObjectReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToDynamicObjectReq.msgid)
  return msgid_;
}
inline void S2SSendToDynamicObjectReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToDynamicObjectReq.msgid)
}

// bytes msgdata = 4;
inline void S2SSendToDynamicObjectReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSendToDynamicObjectReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToDynamicObjectReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SSendToDynamicObjectReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToDynamicObjectReq.msgdata)
}
#if LANG_CXX11
inline void S2SSendToDynamicObjectReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSendToDynamicObjectReq.msgdata)
}
#endif
inline void S2SSendToDynamicObjectReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSendToDynamicObjectReq.msgdata)
}
inline void S2SSendToDynamicObjectReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSendToDynamicObjectReq.msgdata)
}
inline ::std::string* S2SSendToDynamicObjectReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSendToDynamicObjectReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSendToDynamicObjectReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSendToDynamicObjectReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSendToDynamicObjectReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSendToDynamicObjectReq.msgdata)
}

// -------------------------------------------------------------------

// S2SSendToStaticObjectReq

// uint64 objectid = 1;
inline void S2SSendToStaticObjectReq::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSendToStaticObjectReq::objectid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToStaticObjectReq.objectid)
  return objectid_;
}
inline void S2SSendToStaticObjectReq::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToStaticObjectReq.objectid)
}

// uint64 serverid = 2;
inline void S2SSendToStaticObjectReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSendToStaticObjectReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToStaticObjectReq.serverid)
  return serverid_;
}
inline void S2SSendToStaticObjectReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToStaticObjectReq.serverid)
}

// uint32 msgid = 3;
inline void S2SSendToStaticObjectReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SSendToStaticObjectReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToStaticObjectReq.msgid)
  return msgid_;
}
inline void S2SSendToStaticObjectReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToStaticObjectReq.msgid)
}

// bytes msgdata = 4;
inline void S2SSendToStaticObjectReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSendToStaticObjectReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSendToStaticObjectReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SSendToStaticObjectReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSendToStaticObjectReq.msgdata)
}
#if LANG_CXX11
inline void S2SSendToStaticObjectReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSendToStaticObjectReq.msgdata)
}
#endif
inline void S2SSendToStaticObjectReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSendToStaticObjectReq.msgdata)
}
inline void S2SSendToStaticObjectReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSendToStaticObjectReq.msgdata)
}
inline ::std::string* S2SSendToStaticObjectReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSendToStaticObjectReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSendToStaticObjectReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSendToStaticObjectReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSendToStaticObjectReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSendToStaticObjectReq.msgdata)
}

// -------------------------------------------------------------------

// S2SRegisterAgentToServerReq

// bytes agentid = 1;
inline void S2SRegisterAgentToServerReq::clear_agentid() {
  agentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterAgentToServerReq::agentid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterAgentToServerReq.agentid)
  return agentid_.GetNoArena();
}
inline void S2SRegisterAgentToServerReq::set_agentid(const ::std::string& value) {
  
  agentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterAgentToServerReq.agentid)
}
#if LANG_CXX11
inline void S2SRegisterAgentToServerReq::set_agentid(::std::string&& value) {
  
  agentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterAgentToServerReq.agentid)
}
#endif
inline void S2SRegisterAgentToServerReq::set_agentid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterAgentToServerReq.agentid)
}
inline void S2SRegisterAgentToServerReq::set_agentid(const void* value, size_t size) {
  
  agentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterAgentToServerReq.agentid)
}
inline ::std::string* S2SRegisterAgentToServerReq::mutable_agentid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterAgentToServerReq.agentid)
  return agentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterAgentToServerReq::release_agentid() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterAgentToServerReq.agentid)
  
  return agentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterAgentToServerReq::set_allocated_agentid(::std::string* agentid) {
  if (agentid != NULL) {
    
  } else {
    
  }
  agentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agentid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterAgentToServerReq.agentid)
}

// bytes localip = 2;
inline void S2SRegisterAgentToServerReq::clear_localip() {
  localip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterAgentToServerReq::localip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterAgentToServerReq.localip)
  return localip_.GetNoArena();
}
inline void S2SRegisterAgentToServerReq::set_localip(const ::std::string& value) {
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterAgentToServerReq.localip)
}
#if LANG_CXX11
inline void S2SRegisterAgentToServerReq::set_localip(::std::string&& value) {
  
  localip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterAgentToServerReq.localip)
}
#endif
inline void S2SRegisterAgentToServerReq::set_localip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterAgentToServerReq.localip)
}
inline void S2SRegisterAgentToServerReq::set_localip(const void* value, size_t size) {
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterAgentToServerReq.localip)
}
inline ::std::string* S2SRegisterAgentToServerReq::mutable_localip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterAgentToServerReq.localip)
  return localip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterAgentToServerReq::release_localip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterAgentToServerReq.localip)
  
  return localip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterAgentToServerReq::set_allocated_localip(::std::string* localip) {
  if (localip != NULL) {
    
  } else {
    
  }
  localip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterAgentToServerReq.localip)
}

// bytes name = 3;
inline void S2SRegisterAgentToServerReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterAgentToServerReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterAgentToServerReq.name)
  return name_.GetNoArena();
}
inline void S2SRegisterAgentToServerReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterAgentToServerReq.name)
}
#if LANG_CXX11
inline void S2SRegisterAgentToServerReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterAgentToServerReq.name)
}
#endif
inline void S2SRegisterAgentToServerReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterAgentToServerReq.name)
}
inline void S2SRegisterAgentToServerReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterAgentToServerReq.name)
}
inline ::std::string* S2SRegisterAgentToServerReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterAgentToServerReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterAgentToServerReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterAgentToServerReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterAgentToServerReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterAgentToServerReq.name)
}

// bytes type = 4;
inline void S2SRegisterAgentToServerReq::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRegisterAgentToServerReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterAgentToServerReq.type)
  return type_.GetNoArena();
}
inline void S2SRegisterAgentToServerReq::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterAgentToServerReq.type)
}
#if LANG_CXX11
inline void S2SRegisterAgentToServerReq::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRegisterAgentToServerReq.type)
}
#endif
inline void S2SRegisterAgentToServerReq::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRegisterAgentToServerReq.type)
}
inline void S2SRegisterAgentToServerReq::set_type(const void* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRegisterAgentToServerReq.type)
}
inline ::std::string* S2SRegisterAgentToServerReq::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRegisterAgentToServerReq.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRegisterAgentToServerReq::release_type() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRegisterAgentToServerReq.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRegisterAgentToServerReq::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRegisterAgentToServerReq.type)
}

// uint32 port = 5;
inline void S2SRegisterAgentToServerReq::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SRegisterAgentToServerReq::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRegisterAgentToServerReq.port)
  return port_;
}
inline void S2SRegisterAgentToServerReq::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRegisterAgentToServerReq.port)
}

// -------------------------------------------------------------------

// S2SGetAgentIpAddressReq

// bytes localip = 1;
inline void S2SGetAgentIpAddressReq::clear_localip() {
  localip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SGetAgentIpAddressReq::localip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGetAgentIpAddressReq.localip)
  return localip_.GetNoArena();
}
inline void S2SGetAgentIpAddressReq::set_localip(const ::std::string& value) {
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SGetAgentIpAddressReq.localip)
}
#if LANG_CXX11
inline void S2SGetAgentIpAddressReq::set_localip(::std::string&& value) {
  
  localip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SGetAgentIpAddressReq.localip)
}
#endif
inline void S2SGetAgentIpAddressReq::set_localip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SGetAgentIpAddressReq.localip)
}
inline void S2SGetAgentIpAddressReq::set_localip(const void* value, size_t size) {
  
  localip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SGetAgentIpAddressReq.localip)
}
inline ::std::string* S2SGetAgentIpAddressReq::mutable_localip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SGetAgentIpAddressReq.localip)
  return localip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SGetAgentIpAddressReq::release_localip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SGetAgentIpAddressReq.localip)
  
  return localip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SGetAgentIpAddressReq::set_allocated_localip(::std::string* localip) {
  if (localip != NULL) {
    
  } else {
    
  }
  localip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SGetAgentIpAddressReq.localip)
}

// -------------------------------------------------------------------

// S2SGetAgentIpAddressAck

// bytes appname = 1;
inline void S2SGetAgentIpAddressAck::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SGetAgentIpAddressAck::appname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGetAgentIpAddressAck.appname)
  return appname_.GetNoArena();
}
inline void S2SGetAgentIpAddressAck::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SGetAgentIpAddressAck.appname)
}
#if LANG_CXX11
inline void S2SGetAgentIpAddressAck::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SGetAgentIpAddressAck.appname)
}
#endif
inline void S2SGetAgentIpAddressAck::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SGetAgentIpAddressAck.appname)
}
inline void S2SGetAgentIpAddressAck::set_appname(const void* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SGetAgentIpAddressAck.appname)
}
inline ::std::string* S2SGetAgentIpAddressAck::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SGetAgentIpAddressAck.appname)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SGetAgentIpAddressAck::release_appname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SGetAgentIpAddressAck.appname)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SGetAgentIpAddressAck::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SGetAgentIpAddressAck.appname)
}

// bytes apptype = 2;
inline void S2SGetAgentIpAddressAck::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SGetAgentIpAddressAck::apptype() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGetAgentIpAddressAck.apptype)
  return apptype_.GetNoArena();
}
inline void S2SGetAgentIpAddressAck::set_apptype(const ::std::string& value) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SGetAgentIpAddressAck.apptype)
}
#if LANG_CXX11
inline void S2SGetAgentIpAddressAck::set_apptype(::std::string&& value) {
  
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SGetAgentIpAddressAck.apptype)
}
#endif
inline void S2SGetAgentIpAddressAck::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SGetAgentIpAddressAck.apptype)
}
inline void S2SGetAgentIpAddressAck::set_apptype(const void* value, size_t size) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SGetAgentIpAddressAck.apptype)
}
inline ::std::string* S2SGetAgentIpAddressAck::mutable_apptype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SGetAgentIpAddressAck.apptype)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SGetAgentIpAddressAck::release_apptype() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SGetAgentIpAddressAck.apptype)
  
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SGetAgentIpAddressAck::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    
  } else {
    
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SGetAgentIpAddressAck.apptype)
}

// bytes appid = 3;
inline void S2SGetAgentIpAddressAck::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SGetAgentIpAddressAck::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGetAgentIpAddressAck.appid)
  return appid_.GetNoArena();
}
inline void S2SGetAgentIpAddressAck::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SGetAgentIpAddressAck.appid)
}
#if LANG_CXX11
inline void S2SGetAgentIpAddressAck::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SGetAgentIpAddressAck.appid)
}
#endif
inline void S2SGetAgentIpAddressAck::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SGetAgentIpAddressAck.appid)
}
inline void S2SGetAgentIpAddressAck::set_appid(const void* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SGetAgentIpAddressAck.appid)
}
inline ::std::string* S2SGetAgentIpAddressAck::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SGetAgentIpAddressAck.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SGetAgentIpAddressAck::release_appid() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SGetAgentIpAddressAck.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SGetAgentIpAddressAck::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SGetAgentIpAddressAck.appid)
}

// bytes ip = 4;
inline void S2SGetAgentIpAddressAck::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SGetAgentIpAddressAck::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGetAgentIpAddressAck.ip)
  return ip_.GetNoArena();
}
inline void S2SGetAgentIpAddressAck::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SGetAgentIpAddressAck.ip)
}
#if LANG_CXX11
inline void S2SGetAgentIpAddressAck::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SGetAgentIpAddressAck.ip)
}
#endif
inline void S2SGetAgentIpAddressAck::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SGetAgentIpAddressAck.ip)
}
inline void S2SGetAgentIpAddressAck::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SGetAgentIpAddressAck.ip)
}
inline ::std::string* S2SGetAgentIpAddressAck::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SGetAgentIpAddressAck.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SGetAgentIpAddressAck::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SGetAgentIpAddressAck.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SGetAgentIpAddressAck::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SGetAgentIpAddressAck.ip)
}

// uint32 port = 5;
inline void S2SGetAgentIpAddressAck::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 S2SGetAgentIpAddressAck::port() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SGetAgentIpAddressAck.port)
  return port_;
}
inline void S2SGetAgentIpAddressAck::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SGetAgentIpAddressAck.port)
}

// -------------------------------------------------------------------

// PBDeployCommand

// bytes command = 1;
inline void PBDeployCommand::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDeployCommand::command() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.command)
  return command_.GetNoArena();
}
inline void PBDeployCommand::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.command)
}
#if LANG_CXX11
inline void PBDeployCommand::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDeployCommand.command)
}
#endif
inline void PBDeployCommand::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDeployCommand.command)
}
inline void PBDeployCommand::set_command(const void* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDeployCommand.command)
}
inline ::std::string* PBDeployCommand::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDeployCommand.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDeployCommand::release_command() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDeployCommand.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDeployCommand::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDeployCommand.command)
}

// bytes appname = 2;
inline void PBDeployCommand::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDeployCommand::appname() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.appname)
  return appname_.GetNoArena();
}
inline void PBDeployCommand::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.appname)
}
#if LANG_CXX11
inline void PBDeployCommand::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDeployCommand.appname)
}
#endif
inline void PBDeployCommand::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDeployCommand.appname)
}
inline void PBDeployCommand::set_appname(const void* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDeployCommand.appname)
}
inline ::std::string* PBDeployCommand::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDeployCommand.appname)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDeployCommand::release_appname() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDeployCommand.appname)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDeployCommand::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDeployCommand.appname)
}

// bytes apptype = 3;
inline void PBDeployCommand::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDeployCommand::apptype() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.apptype)
  return apptype_.GetNoArena();
}
inline void PBDeployCommand::set_apptype(const ::std::string& value) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.apptype)
}
#if LANG_CXX11
inline void PBDeployCommand::set_apptype(::std::string&& value) {
  
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDeployCommand.apptype)
}
#endif
inline void PBDeployCommand::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDeployCommand.apptype)
}
inline void PBDeployCommand::set_apptype(const void* value, size_t size) {
  
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDeployCommand.apptype)
}
inline ::std::string* PBDeployCommand::mutable_apptype() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDeployCommand.apptype)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDeployCommand::release_apptype() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDeployCommand.apptype)
  
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDeployCommand::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    
  } else {
    
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDeployCommand.apptype)
}

// bytes appid = 4;
inline void PBDeployCommand::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDeployCommand::appid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.appid)
  return appid_.GetNoArena();
}
inline void PBDeployCommand::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.appid)
}
#if LANG_CXX11
inline void PBDeployCommand::set_appid(::std::string&& value) {
  
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDeployCommand.appid)
}
#endif
inline void PBDeployCommand::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDeployCommand.appid)
}
inline void PBDeployCommand::set_appid(const void* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDeployCommand.appid)
}
inline ::std::string* PBDeployCommand::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDeployCommand.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDeployCommand::release_appid() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDeployCommand.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDeployCommand::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDeployCommand.appid)
}

// uint32 zoneid = 5;
inline void PBDeployCommand::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 PBDeployCommand::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.zoneid)
  return zoneid_;
}
inline void PBDeployCommand::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.zoneid)
}

// bytes value = 6;
inline void PBDeployCommand::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDeployCommand::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.value)
  return value_.GetNoArena();
}
inline void PBDeployCommand::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.value)
}
#if LANG_CXX11
inline void PBDeployCommand::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDeployCommand.value)
}
#endif
inline void PBDeployCommand::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDeployCommand.value)
}
inline void PBDeployCommand::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDeployCommand.value)
}
inline ::std::string* PBDeployCommand::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDeployCommand.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDeployCommand::release_value() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDeployCommand.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDeployCommand::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDeployCommand.value)
}

// bytes logurl = 7;
inline void PBDeployCommand::clear_logurl() {
  logurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDeployCommand::logurl() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDeployCommand.logurl)
  return logurl_.GetNoArena();
}
inline void PBDeployCommand::set_logurl(const ::std::string& value) {
  
  logurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDeployCommand.logurl)
}
#if LANG_CXX11
inline void PBDeployCommand::set_logurl(::std::string&& value) {
  
  logurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDeployCommand.logurl)
}
#endif
inline void PBDeployCommand::set_logurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDeployCommand.logurl)
}
inline void PBDeployCommand::set_logurl(const void* value, size_t size) {
  
  logurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDeployCommand.logurl)
}
inline ::std::string* PBDeployCommand::mutable_logurl() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDeployCommand.logurl)
  return logurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDeployCommand::release_logurl() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDeployCommand.logurl)
  
  return logurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDeployCommand::set_allocated_logurl(::std::string* logurl) {
  if (logurl != NULL) {
    
  } else {
    
  }
  logurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logurl);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDeployCommand.logurl)
}

// -------------------------------------------------------------------

// S2SDeployCommandToAgentReq

// .KFMsg.PBDeployCommand deploycommand = 1;
inline bool S2SDeployCommandToAgentReq::has_deploycommand() const {
  return this != internal_default_instance() && deploycommand_ != NULL;
}
inline void S2SDeployCommandToAgentReq::clear_deploycommand() {
  if (GetArenaNoVirtual() == NULL && deploycommand_ != NULL) {
    delete deploycommand_;
  }
  deploycommand_ = NULL;
}
inline const ::KFMsg::PBDeployCommand& S2SDeployCommandToAgentReq::_internal_deploycommand() const {
  return *deploycommand_;
}
inline const ::KFMsg::PBDeployCommand& S2SDeployCommandToAgentReq::deploycommand() const {
  const ::KFMsg::PBDeployCommand* p = deploycommand_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SDeployCommandToAgentReq.deploycommand)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBDeployCommand*>(
      &::KFMsg::_PBDeployCommand_default_instance_);
}
inline ::KFMsg::PBDeployCommand* S2SDeployCommandToAgentReq::release_deploycommand() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDeployCommandToAgentReq.deploycommand)
  
  ::KFMsg::PBDeployCommand* temp = deploycommand_;
  deploycommand_ = NULL;
  return temp;
}
inline ::KFMsg::PBDeployCommand* S2SDeployCommandToAgentReq::mutable_deploycommand() {
  
  if (deploycommand_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBDeployCommand>(GetArenaNoVirtual());
    deploycommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDeployCommandToAgentReq.deploycommand)
  return deploycommand_;
}
inline void S2SDeployCommandToAgentReq::set_allocated_deploycommand(::KFMsg::PBDeployCommand* deploycommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deploycommand_;
  }
  if (deploycommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deploycommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deploycommand, submessage_arena);
    }
    
  } else {
    
  }
  deploycommand_ = deploycommand;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDeployCommandToAgentReq.deploycommand)
}

// -------------------------------------------------------------------

// S2SDeployCommandToMasterReq

// .KFMsg.PBDeployCommand deploycommand = 1;
inline bool S2SDeployCommandToMasterReq::has_deploycommand() const {
  return this != internal_default_instance() && deploycommand_ != NULL;
}
inline void S2SDeployCommandToMasterReq::clear_deploycommand() {
  if (GetArenaNoVirtual() == NULL && deploycommand_ != NULL) {
    delete deploycommand_;
  }
  deploycommand_ = NULL;
}
inline const ::KFMsg::PBDeployCommand& S2SDeployCommandToMasterReq::_internal_deploycommand() const {
  return *deploycommand_;
}
inline const ::KFMsg::PBDeployCommand& S2SDeployCommandToMasterReq::deploycommand() const {
  const ::KFMsg::PBDeployCommand* p = deploycommand_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SDeployCommandToMasterReq.deploycommand)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBDeployCommand*>(
      &::KFMsg::_PBDeployCommand_default_instance_);
}
inline ::KFMsg::PBDeployCommand* S2SDeployCommandToMasterReq::release_deploycommand() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDeployCommandToMasterReq.deploycommand)
  
  ::KFMsg::PBDeployCommand* temp = deploycommand_;
  deploycommand_ = NULL;
  return temp;
}
inline ::KFMsg::PBDeployCommand* S2SDeployCommandToMasterReq::mutable_deploycommand() {
  
  if (deploycommand_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBDeployCommand>(GetArenaNoVirtual());
    deploycommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDeployCommandToMasterReq.deploycommand)
  return deploycommand_;
}
inline void S2SDeployCommandToMasterReq::set_allocated_deploycommand(::KFMsg::PBDeployCommand* deploycommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deploycommand_;
  }
  if (deploycommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deploycommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deploycommand, submessage_arena);
    }
    
  } else {
    
  }
  deploycommand_ = deploycommand;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDeployCommandToMasterReq.deploycommand)
}

// -------------------------------------------------------------------

// S2SDeployCommandToServerReq

// .KFMsg.PBDeployCommand deploycommand = 1;
inline bool S2SDeployCommandToServerReq::has_deploycommand() const {
  return this != internal_default_instance() && deploycommand_ != NULL;
}
inline void S2SDeployCommandToServerReq::clear_deploycommand() {
  if (GetArenaNoVirtual() == NULL && deploycommand_ != NULL) {
    delete deploycommand_;
  }
  deploycommand_ = NULL;
}
inline const ::KFMsg::PBDeployCommand& S2SDeployCommandToServerReq::_internal_deploycommand() const {
  return *deploycommand_;
}
inline const ::KFMsg::PBDeployCommand& S2SDeployCommandToServerReq::deploycommand() const {
  const ::KFMsg::PBDeployCommand* p = deploycommand_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SDeployCommandToServerReq.deploycommand)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBDeployCommand*>(
      &::KFMsg::_PBDeployCommand_default_instance_);
}
inline ::KFMsg::PBDeployCommand* S2SDeployCommandToServerReq::release_deploycommand() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDeployCommandToServerReq.deploycommand)
  
  ::KFMsg::PBDeployCommand* temp = deploycommand_;
  deploycommand_ = NULL;
  return temp;
}
inline ::KFMsg::PBDeployCommand* S2SDeployCommandToServerReq::mutable_deploycommand() {
  
  if (deploycommand_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBDeployCommand>(GetArenaNoVirtual());
    deploycommand_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDeployCommandToServerReq.deploycommand)
  return deploycommand_;
}
inline void S2SDeployCommandToServerReq::set_allocated_deploycommand(::KFMsg::PBDeployCommand* deploycommand) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete deploycommand_;
  }
  if (deploycommand) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      deploycommand = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, deploycommand, submessage_arena);
    }
    
  } else {
    
  }
  deploycommand_ = deploycommand;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDeployCommandToServerReq.deploycommand)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::FrameProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::FrameProtocol>() {
  return ::KFMsg::FrameProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFFrameMessage_2eproto
