// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFDefineMessage.proto

#ifndef PROTOBUF_INCLUDED_KFDefineMessage_2eproto
#define PROTOBUF_INCLUDED_KFDefineMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFDefineMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[25];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFDefineMessage_2eproto
namespace KFMsg {
class PBApplicationlist;
class PBApplicationlistDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBApplicationlistDefaultTypeInternal _PBApplicationlist_default_instance_;
class PBApplicationlists;
class PBApplicationlistsDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBApplicationlistsDefaultTypeInternal _PBApplicationlists_default_instance_;
class PBArray;
class PBArrayDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBArrayDefaultTypeInternal _PBArray_default_instance_;
class PBBattleCamp;
class PBBattleCampDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBBattleCampDefaultTypeInternal _PBBattleCamp_default_instance_;
class PBBattlePlayer;
class PBBattlePlayerDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBBattlePlayerDefaultTypeInternal _PBBattlePlayer_default_instance_;
class PBBattleScore;
class PBBattleScoreDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBBattleScoreDefaultTypeInternal _PBBattleScore_default_instance_;
class PBDouble;
class PBDoubleDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBDoubleDefaultTypeInternal _PBDouble_default_instance_;
class PBGuestData;
class PBGuestDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBGuestDataDefaultTypeInternal _PBGuestData_default_instance_;
class PBGuildIdArray;
class PBGuildIdArrayDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBGuildIdArrayDefaultTypeInternal _PBGuildIdArray_default_instance_;
class PBInt32;
class PBInt32DefaultTypeInternal;
LIBPROTOC_EXPORT extern PBInt32DefaultTypeInternal _PBInt32_default_instance_;
class PBInt64;
class PBInt64DefaultTypeInternal;
LIBPROTOC_EXPORT extern PBInt64DefaultTypeInternal _PBInt64_default_instance_;
class PBMatchGroup;
class PBMatchGroupDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMatchGroupDefaultTypeInternal _PBMatchGroup_default_instance_;
class PBObject;
class PBObjectDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBObjectDefaultTypeInternal _PBObject_default_instance_;
class PBRankData;
class PBRankDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRankDataDefaultTypeInternal _PBRankData_default_instance_;
class PBRankDatas;
class PBRankDatasDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRankDatasDefaultTypeInternal _PBRankDatas_default_instance_;
class PBRecentData;
class PBRecentDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRecentDataDefaultTypeInternal _PBRecentData_default_instance_;
class PBRecord;
class PBRecordDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRecordDefaultTypeInternal _PBRecord_default_instance_;
class PBString;
class PBStringDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBStringDefaultTypeInternal _PBString_default_instance_;
class PBStrings;
class PBStringsDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBStringsDefaultTypeInternal _PBStrings_default_instance_;
class PBTaskData;
class PBTaskDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBTaskDataDefaultTypeInternal _PBTaskData_default_instance_;
class PBTaskDatas;
class PBTaskDatasDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBTaskDatasDefaultTypeInternal _PBTaskDatas_default_instance_;
class PBUInt32;
class PBUInt32DefaultTypeInternal;
LIBPROTOC_EXPORT extern PBUInt32DefaultTypeInternal _PBUInt32_default_instance_;
class PBUInt64;
class PBUInt64DefaultTypeInternal;
LIBPROTOC_EXPORT extern PBUInt64DefaultTypeInternal _PBUInt64_default_instance_;
class PBVector3D;
class PBVector3DDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBVector3DDefaultTypeInternal _PBVector3D_default_instance_;
class Vector3D;
class Vector3DDefaultTypeInternal;
LIBPROTOC_EXPORT extern Vector3DDefaultTypeInternal _Vector3D_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::PBApplicationlist* Arena::CreateMaybeMessage<::KFMsg::PBApplicationlist>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBApplicationlists* Arena::CreateMaybeMessage<::KFMsg::PBApplicationlists>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBArray* Arena::CreateMaybeMessage<::KFMsg::PBArray>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBBattleCamp* Arena::CreateMaybeMessage<::KFMsg::PBBattleCamp>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBBattlePlayer* Arena::CreateMaybeMessage<::KFMsg::PBBattlePlayer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBBattleScore* Arena::CreateMaybeMessage<::KFMsg::PBBattleScore>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBDouble* Arena::CreateMaybeMessage<::KFMsg::PBDouble>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBGuestData* Arena::CreateMaybeMessage<::KFMsg::PBGuestData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBGuildIdArray* Arena::CreateMaybeMessage<::KFMsg::PBGuildIdArray>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBInt32* Arena::CreateMaybeMessage<::KFMsg::PBInt32>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBInt64* Arena::CreateMaybeMessage<::KFMsg::PBInt64>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBMatchGroup* Arena::CreateMaybeMessage<::KFMsg::PBMatchGroup>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBObject* Arena::CreateMaybeMessage<::KFMsg::PBObject>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRankData* Arena::CreateMaybeMessage<::KFMsg::PBRankData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRankDatas* Arena::CreateMaybeMessage<::KFMsg::PBRankDatas>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRecentData* Arena::CreateMaybeMessage<::KFMsg::PBRecentData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRecord* Arena::CreateMaybeMessage<::KFMsg::PBRecord>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBString* Arena::CreateMaybeMessage<::KFMsg::PBString>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBStrings* Arena::CreateMaybeMessage<::KFMsg::PBStrings>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBTaskData* Arena::CreateMaybeMessage<::KFMsg::PBTaskData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBTaskDatas* Arena::CreateMaybeMessage<::KFMsg::PBTaskDatas>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBUInt32* Arena::CreateMaybeMessage<::KFMsg::PBUInt32>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBUInt64* Arena::CreateMaybeMessage<::KFMsg::PBUInt64>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBVector3D* Arena::CreateMaybeMessage<::KFMsg::PBVector3D>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::Vector3D* Arena::CreateMaybeMessage<::KFMsg::Vector3D>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

// ===================================================================

class LIBPROTOC_EXPORT Vector3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.Vector3D) */ {
 public:
  Vector3D();
  virtual ~Vector3D();

  Vector3D(const Vector3D& from);

  inline Vector3D& operator=(const Vector3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3D(Vector3D&& from) noexcept
    : Vector3D() {
    *this = ::std::move(from);
  }

  inline Vector3D& operator=(Vector3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector3D* internal_default_instance() {
    return reinterpret_cast<const Vector3D*>(
               &_Vector3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Vector3D* other);
  friend void swap(Vector3D& a, Vector3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3D* New() const final {
    return CreateMaybeMessage<Vector3D>(NULL);
  }

  Vector3D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Vector3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Vector3D& from);
  void MergeFrom(const Vector3D& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:KFMsg.Vector3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBInt32) */ {
 public:
  PBInt32();
  virtual ~PBInt32();

  PBInt32(const PBInt32& from);

  inline PBInt32& operator=(const PBInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBInt32(PBInt32&& from) noexcept
    : PBInt32() {
    *this = ::std::move(from);
  }

  inline PBInt32& operator=(PBInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBInt32* internal_default_instance() {
    return reinterpret_cast<const PBInt32*>(
               &_PBInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PBInt32* other);
  friend void swap(PBInt32& a, PBInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBInt32* New() const final {
    return CreateMaybeMessage<PBInt32>(NULL);
  }

  PBInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBInt32& from);
  void MergeFrom(const PBInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // sint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBUInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBUInt32) */ {
 public:
  PBUInt32();
  virtual ~PBUInt32();

  PBUInt32(const PBUInt32& from);

  inline PBUInt32& operator=(const PBUInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBUInt32(PBUInt32&& from) noexcept
    : PBUInt32() {
    *this = ::std::move(from);
  }

  inline PBUInt32& operator=(PBUInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBUInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBUInt32* internal_default_instance() {
    return reinterpret_cast<const PBUInt32*>(
               &_PBUInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PBUInt32* other);
  friend void swap(PBUInt32& a, PBUInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBUInt32* New() const final {
    return CreateMaybeMessage<PBUInt32>(NULL);
  }

  PBUInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBUInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBUInt32& from);
  void MergeFrom(const PBUInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBUInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBUInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBInt64) */ {
 public:
  PBInt64();
  virtual ~PBInt64();

  PBInt64(const PBInt64& from);

  inline PBInt64& operator=(const PBInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBInt64(PBInt64&& from) noexcept
    : PBInt64() {
    *this = ::std::move(from);
  }

  inline PBInt64& operator=(PBInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBInt64* internal_default_instance() {
    return reinterpret_cast<const PBInt64*>(
               &_PBInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PBInt64* other);
  friend void swap(PBInt64& a, PBInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBInt64* New() const final {
    return CreateMaybeMessage<PBInt64>(NULL);
  }

  PBInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBInt64& from);
  void MergeFrom(const PBInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // sint64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBUInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBUInt64) */ {
 public:
  PBUInt64();
  virtual ~PBUInt64();

  PBUInt64(const PBUInt64& from);

  inline PBUInt64& operator=(const PBUInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBUInt64(PBUInt64&& from) noexcept
    : PBUInt64() {
    *this = ::std::move(from);
  }

  inline PBUInt64& operator=(PBUInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBUInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBUInt64* internal_default_instance() {
    return reinterpret_cast<const PBUInt64*>(
               &_PBUInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PBUInt64* other);
  friend void swap(PBUInt64& a, PBUInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBUInt64* New() const final {
    return CreateMaybeMessage<PBUInt64>(NULL);
  }

  PBUInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBUInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBUInt64& from);
  void MergeFrom(const PBUInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBUInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBUInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBDouble) */ {
 public:
  PBDouble();
  virtual ~PBDouble();

  PBDouble(const PBDouble& from);

  inline PBDouble& operator=(const PBDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBDouble(PBDouble&& from) noexcept
    : PBDouble() {
    *this = ::std::move(from);
  }

  inline PBDouble& operator=(PBDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBDouble* internal_default_instance() {
    return reinterpret_cast<const PBDouble*>(
               &_PBDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PBDouble* other);
  friend void swap(PBDouble& a, PBDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBDouble* New() const final {
    return CreateMaybeMessage<PBDouble>(NULL);
  }

  PBDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBDouble& from);
  void MergeFrom(const PBDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // double value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBString) */ {
 public:
  PBString();
  virtual ~PBString();

  PBString(const PBString& from);

  inline PBString& operator=(const PBString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBString(PBString&& from) noexcept
    : PBString() {
    *this = ::std::move(from);
  }

  inline PBString& operator=(PBString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBString* internal_default_instance() {
    return reinterpret_cast<const PBString*>(
               &_PBString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PBString* other);
  friend void swap(PBString& a, PBString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBString* New() const final {
    return CreateMaybeMessage<PBString>(NULL);
  }

  PBString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBString& from);
  void MergeFrom(const PBString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBStrings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBStrings) */ {
 public:
  PBStrings();
  virtual ~PBStrings();

  PBStrings(const PBStrings& from);

  inline PBStrings& operator=(const PBStrings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBStrings(PBStrings&& from) noexcept
    : PBStrings() {
    *this = ::std::move(from);
  }

  inline PBStrings& operator=(PBStrings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStrings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBStrings* internal_default_instance() {
    return reinterpret_cast<const PBStrings*>(
               &_PBStrings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PBStrings* other);
  friend void swap(PBStrings& a, PBStrings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBStrings* New() const final {
    return CreateMaybeMessage<PBStrings>(NULL);
  }

  PBStrings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBStrings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBStrings& from);
  void MergeFrom(const PBStrings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBStrings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBString pbstring = 1;
  int pbstring_size() const;
  void clear_pbstring();
  static const int kPbstringFieldNumber = 1;
  ::KFMsg::PBString* mutable_pbstring(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
      mutable_pbstring();
  const ::KFMsg::PBString& pbstring(int index) const;
  ::KFMsg::PBString* add_pbstring();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
      pbstring() const;

  // @@protoc_insertion_point(class_scope:KFMsg.PBStrings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString > pbstring_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBVector3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBVector3D) */ {
 public:
  PBVector3D();
  virtual ~PBVector3D();

  PBVector3D(const PBVector3D& from);

  inline PBVector3D& operator=(const PBVector3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBVector3D(PBVector3D&& from) noexcept
    : PBVector3D() {
    *this = ::std::move(from);
  }

  inline PBVector3D& operator=(PBVector3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBVector3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBVector3D* internal_default_instance() {
    return reinterpret_cast<const PBVector3D*>(
               &_PBVector3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PBVector3D* other);
  friend void swap(PBVector3D& a, PBVector3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBVector3D* New() const final {
    return CreateMaybeMessage<PBVector3D>(NULL);
  }

  PBVector3D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBVector3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBVector3D& from);
  void MergeFrom(const PBVector3D& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBVector3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .KFMsg.Vector3D value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::KFMsg::Vector3D& _internal_value() const;
  public:
  const ::KFMsg::Vector3D& value() const;
  ::KFMsg::Vector3D* release_value();
  ::KFMsg::Vector3D* mutable_value();
  void set_allocated_value(::KFMsg::Vector3D* value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBVector3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::KFMsg::Vector3D* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBArray) */ {
 public:
  PBArray();
  virtual ~PBArray();

  PBArray(const PBArray& from);

  inline PBArray& operator=(const PBArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBArray(PBArray&& from) noexcept
    : PBArray() {
    *this = ::std::move(from);
  }

  inline PBArray& operator=(PBArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBArray* internal_default_instance() {
    return reinterpret_cast<const PBArray*>(
               &_PBArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PBArray* other);
  friend void swap(PBArray& a, PBArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBArray* New() const final {
    return CreateMaybeMessage<PBArray>(NULL);
  }

  PBArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBArray& from);
  void MergeFrom(const PBArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 pbint32 = 2;
  int pbint32_size() const;
  void clear_pbint32();
  static const int kPbint32FieldNumber = 2;
  ::google::protobuf::int32 pbint32(int index) const;
  void set_pbint32(int index, ::google::protobuf::int32 value);
  void add_pbint32(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pbint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pbint32();

  // repeated uint32 pbuint32 = 3;
  int pbuint32_size() const;
  void clear_pbuint32();
  static const int kPbuint32FieldNumber = 3;
  ::google::protobuf::uint32 pbuint32(int index) const;
  void set_pbuint32(int index, ::google::protobuf::uint32 value);
  void add_pbuint32(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pbuint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pbuint32();

  // repeated sint64 pbint64 = 4;
  int pbint64_size() const;
  void clear_pbint64();
  static const int kPbint64FieldNumber = 4;
  ::google::protobuf::int64 pbint64(int index) const;
  void set_pbint64(int index, ::google::protobuf::int64 value);
  void add_pbint64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      pbint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_pbint64();

  // repeated uint64 pbuint64 = 5;
  int pbuint64_size() const;
  void clear_pbuint64();
  static const int kPbuint64FieldNumber = 5;
  ::google::protobuf::uint64 pbuint64(int index) const;
  void set_pbuint64(int index, ::google::protobuf::uint64 value);
  void add_pbuint64(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pbuint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pbuint64();

  // repeated double pbdouble = 6;
  int pbdouble_size() const;
  void clear_pbdouble();
  static const int kPbdoubleFieldNumber = 6;
  double pbdouble(int index) const;
  void set_pbdouble(int index, double value);
  void add_pbdouble(double value);
  const ::google::protobuf::RepeatedField< double >&
      pbdouble() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_pbdouble();

  // repeated bytes pbstring = 7;
  int pbstring_size() const;
  void clear_pbstring();
  static const int kPbstringFieldNumber = 7;
  const ::std::string& pbstring(int index) const;
  ::std::string* mutable_pbstring(int index);
  void set_pbstring(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_pbstring(int index, ::std::string&& value);
  #endif
  void set_pbstring(int index, const char* value);
  void set_pbstring(int index, const void* value, size_t size);
  ::std::string* add_pbstring();
  void add_pbstring(const ::std::string& value);
  #if LANG_CXX11
  void add_pbstring(::std::string&& value);
  #endif
  void add_pbstring(const char* value);
  void add_pbstring(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& pbstring() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_pbstring();

  // repeated .KFMsg.Vector3D pbvector3d = 8;
  int pbvector3d_size() const;
  void clear_pbvector3d();
  static const int kPbvector3DFieldNumber = 8;
  ::KFMsg::Vector3D* mutable_pbvector3d(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::Vector3D >*
      mutable_pbvector3d();
  const ::KFMsg::Vector3D& pbvector3d(int index) const;
  ::KFMsg::Vector3D* add_pbvector3d();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::Vector3D >&
      pbvector3d() const;

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.PBArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pbint32_;
  mutable int _pbint32_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pbuint32_;
  mutable int _pbuint32_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > pbint64_;
  mutable int _pbint64_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pbuint64_;
  mutable int _pbuint64_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > pbdouble_;
  mutable int _pbdouble_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> pbstring_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::Vector3D > pbvector3d_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBObject) */ {
 public:
  PBObject();
  virtual ~PBObject();

  PBObject(const PBObject& from);

  inline PBObject& operator=(const PBObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBObject(PBObject&& from) noexcept
    : PBObject() {
    *this = ::std::move(from);
  }

  inline PBObject& operator=(PBObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBObject* internal_default_instance() {
    return reinterpret_cast<const PBObject*>(
               &_PBObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(PBObject* other);
  friend void swap(PBObject& a, PBObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBObject* New() const final {
    return CreateMaybeMessage<PBObject>(NULL);
  }

  PBObject* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBObject>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBObject& from);
  void MergeFrom(const PBObject& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBInt32 pbint32 = 3;
  int pbint32_size() const;
  void clear_pbint32();
  static const int kPbint32FieldNumber = 3;
  ::KFMsg::PBInt32* mutable_pbint32(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt32 >*
      mutable_pbint32();
  const ::KFMsg::PBInt32& pbint32(int index) const;
  ::KFMsg::PBInt32* add_pbint32();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt32 >&
      pbint32() const;

  // repeated .KFMsg.PBUInt32 pbuint32 = 4;
  int pbuint32_size() const;
  void clear_pbuint32();
  static const int kPbuint32FieldNumber = 4;
  ::KFMsg::PBUInt32* mutable_pbuint32(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >*
      mutable_pbuint32();
  const ::KFMsg::PBUInt32& pbuint32(int index) const;
  ::KFMsg::PBUInt32* add_pbuint32();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >&
      pbuint32() const;

  // repeated .KFMsg.PBInt64 pbint64 = 5;
  int pbint64_size() const;
  void clear_pbint64();
  static const int kPbint64FieldNumber = 5;
  ::KFMsg::PBInt64* mutable_pbint64(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt64 >*
      mutable_pbint64();
  const ::KFMsg::PBInt64& pbint64(int index) const;
  ::KFMsg::PBInt64* add_pbint64();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt64 >&
      pbint64() const;

  // repeated .KFMsg.PBUInt64 pbuint64 = 6;
  int pbuint64_size() const;
  void clear_pbuint64();
  static const int kPbuint64FieldNumber = 6;
  ::KFMsg::PBUInt64* mutable_pbuint64(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt64 >*
      mutable_pbuint64();
  const ::KFMsg::PBUInt64& pbuint64(int index) const;
  ::KFMsg::PBUInt64* add_pbuint64();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt64 >&
      pbuint64() const;

  // repeated .KFMsg.PBDouble pbdouble = 7;
  int pbdouble_size() const;
  void clear_pbdouble();
  static const int kPbdoubleFieldNumber = 7;
  ::KFMsg::PBDouble* mutable_pbdouble(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDouble >*
      mutable_pbdouble();
  const ::KFMsg::PBDouble& pbdouble(int index) const;
  ::KFMsg::PBDouble* add_pbdouble();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDouble >&
      pbdouble() const;

  // repeated .KFMsg.PBString pbstring = 8;
  int pbstring_size() const;
  void clear_pbstring();
  static const int kPbstringFieldNumber = 8;
  ::KFMsg::PBString* mutable_pbstring(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
      mutable_pbstring();
  const ::KFMsg::PBString& pbstring(int index) const;
  ::KFMsg::PBString* add_pbstring();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
      pbstring() const;

  // repeated .KFMsg.PBVector3D pbvector3d = 9;
  int pbvector3d_size() const;
  void clear_pbvector3d();
  static const int kPbvector3DFieldNumber = 9;
  ::KFMsg::PBVector3D* mutable_pbvector3d(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBVector3D >*
      mutable_pbvector3d();
  const ::KFMsg::PBVector3D& pbvector3d(int index) const;
  ::KFMsg::PBVector3D* add_pbvector3d();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBVector3D >&
      pbvector3d() const;

  // repeated .KFMsg.PBArray pbarray = 10;
  int pbarray_size() const;
  void clear_pbarray();
  static const int kPbarrayFieldNumber = 10;
  ::KFMsg::PBArray* mutable_pbarray(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBArray >*
      mutable_pbarray();
  const ::KFMsg::PBArray& pbarray(int index) const;
  ::KFMsg::PBArray* add_pbarray();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBArray >&
      pbarray() const;

  // repeated .KFMsg.PBObject pbobject = 11;
  int pbobject_size() const;
  void clear_pbobject();
  static const int kPbobjectFieldNumber = 11;
  ::KFMsg::PBObject* mutable_pbobject(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >*
      mutable_pbobject();
  const ::KFMsg::PBObject& pbobject(int index) const;
  ::KFMsg::PBObject* add_pbobject();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >&
      pbobject() const;

  // repeated .KFMsg.PBRecord pbrecord = 12;
  int pbrecord_size() const;
  void clear_pbrecord();
  static const int kPbrecordFieldNumber = 12;
  ::KFMsg::PBRecord* mutable_pbrecord(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRecord >*
      mutable_pbrecord();
  const ::KFMsg::PBRecord& pbrecord(int index) const;
  ::KFMsg::PBRecord* add_pbrecord();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRecord >&
      pbrecord() const;

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt32 > pbint32_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 > pbuint32_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt64 > pbint64_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt64 > pbuint64_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDouble > pbdouble_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString > pbstring_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBVector3D > pbvector3d_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBArray > pbarray_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject > pbobject_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRecord > pbrecord_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRecord) */ {
 public:
  PBRecord();
  virtual ~PBRecord();

  PBRecord(const PBRecord& from);

  inline PBRecord& operator=(const PBRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRecord(PBRecord&& from) noexcept
    : PBRecord() {
    *this = ::std::move(from);
  }

  inline PBRecord& operator=(PBRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRecord* internal_default_instance() {
    return reinterpret_cast<const PBRecord*>(
               &_PBRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(PBRecord* other);
  friend void swap(PBRecord& a, PBRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRecord* New() const final {
    return CreateMaybeMessage<PBRecord>(NULL);
  }

  PBRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRecord& from);
  void MergeFrom(const PBRecord& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBObject pbobject = 2;
  int pbobject_size() const;
  void clear_pbobject();
  static const int kPbobjectFieldNumber = 2;
  ::KFMsg::PBObject* mutable_pbobject(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >*
      mutable_pbobject();
  const ::KFMsg::PBObject& pbobject(int index) const;
  ::KFMsg::PBObject* add_pbobject();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >&
      pbobject() const;

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.PBRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject > pbobject_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRankData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRankData) */ {
 public:
  PBRankData();
  virtual ~PBRankData();

  PBRankData(const PBRankData& from);

  inline PBRankData& operator=(const PBRankData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRankData(PBRankData&& from) noexcept
    : PBRankData() {
    *this = ::std::move(from);
  }

  inline PBRankData& operator=(PBRankData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRankData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRankData* internal_default_instance() {
    return reinterpret_cast<const PBRankData*>(
               &_PBRankData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(PBRankData* other);
  friend void swap(PBRankData& a, PBRankData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRankData* New() const final {
    return CreateMaybeMessage<PBRankData>(NULL);
  }

  PBRankData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRankData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRankData& from);
  void MergeFrom(const PBRankData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRankData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBStrings pbdata = 4;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 4;
  private:
  const ::KFMsg::PBStrings& _internal_pbdata() const;
  public:
  const ::KFMsg::PBStrings& pbdata() const;
  ::KFMsg::PBStrings* release_pbdata();
  ::KFMsg::PBStrings* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBStrings* pbdata);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 rankscore = 3;
  void clear_rankscore();
  static const int kRankscoreFieldNumber = 3;
  ::google::protobuf::uint64 rankscore() const;
  void set_rankscore(::google::protobuf::uint64 value);

  // uint32 rankindex = 1;
  void clear_rankindex();
  static const int kRankindexFieldNumber = 1;
  ::google::protobuf::uint32 rankindex() const;
  void set_rankindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBRankData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBStrings* pbdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 rankscore_;
  ::google::protobuf::uint32 rankindex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRankDatas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRankDatas) */ {
 public:
  PBRankDatas();
  virtual ~PBRankDatas();

  PBRankDatas(const PBRankDatas& from);

  inline PBRankDatas& operator=(const PBRankDatas& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRankDatas(PBRankDatas&& from) noexcept
    : PBRankDatas() {
    *this = ::std::move(from);
  }

  inline PBRankDatas& operator=(PBRankDatas&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRankDatas& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRankDatas* internal_default_instance() {
    return reinterpret_cast<const PBRankDatas*>(
               &_PBRankDatas_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(PBRankDatas* other);
  friend void swap(PBRankDatas& a, PBRankDatas& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRankDatas* New() const final {
    return CreateMaybeMessage<PBRankDatas>(NULL);
  }

  PBRankDatas* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRankDatas>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRankDatas& from);
  void MergeFrom(const PBRankDatas& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRankDatas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRankData rankdata = 3;
  int rankdata_size() const;
  void clear_rankdata();
  static const int kRankdataFieldNumber = 3;
  ::KFMsg::PBRankData* mutable_rankdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >*
      mutable_rankdata();
  const ::KFMsg::PBRankData& rankdata(int index) const;
  ::KFMsg::PBRankData* add_rankdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >&
      rankdata() const;

  // @@protoc_insertion_point(class_scope:KFMsg.PBRankDatas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData > rankdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBTaskData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBTaskData) */ {
 public:
  PBTaskData();
  virtual ~PBTaskData();

  PBTaskData(const PBTaskData& from);

  inline PBTaskData& operator=(const PBTaskData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBTaskData(PBTaskData&& from) noexcept
    : PBTaskData() {
    *this = ::std::move(from);
  }

  inline PBTaskData& operator=(PBTaskData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTaskData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBTaskData* internal_default_instance() {
    return reinterpret_cast<const PBTaskData*>(
               &_PBTaskData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PBTaskData* other);
  friend void swap(PBTaskData& a, PBTaskData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBTaskData* New() const final {
    return CreateMaybeMessage<PBTaskData>(NULL);
  }

  PBTaskData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBTaskData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBTaskData& from);
  void MergeFrom(const PBTaskData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBTaskData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBTaskData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBTaskDatas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBTaskDatas) */ {
 public:
  PBTaskDatas();
  virtual ~PBTaskDatas();

  PBTaskDatas(const PBTaskDatas& from);

  inline PBTaskDatas& operator=(const PBTaskDatas& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBTaskDatas(PBTaskDatas&& from) noexcept
    : PBTaskDatas() {
    *this = ::std::move(from);
  }

  inline PBTaskDatas& operator=(PBTaskDatas&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTaskDatas& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBTaskDatas* internal_default_instance() {
    return reinterpret_cast<const PBTaskDatas*>(
               &_PBTaskDatas_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(PBTaskDatas* other);
  friend void swap(PBTaskDatas& a, PBTaskDatas& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBTaskDatas* New() const final {
    return CreateMaybeMessage<PBTaskDatas>(NULL);
  }

  PBTaskDatas* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBTaskDatas>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBTaskDatas& from);
  void MergeFrom(const PBTaskDatas& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBTaskDatas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBTaskData taskdata = 1;
  int taskdata_size() const;
  void clear_taskdata();
  static const int kTaskdataFieldNumber = 1;
  ::KFMsg::PBTaskData* mutable_taskdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBTaskData >*
      mutable_taskdata();
  const ::KFMsg::PBTaskData& taskdata(int index) const;
  ::KFMsg::PBTaskData* add_taskdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBTaskData >&
      taskdata() const;

  // @@protoc_insertion_point(class_scope:KFMsg.PBTaskDatas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBTaskData > taskdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBBattlePlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBBattlePlayer) */ {
 public:
  PBBattlePlayer();
  virtual ~PBBattlePlayer();

  PBBattlePlayer(const PBBattlePlayer& from);

  inline PBBattlePlayer& operator=(const PBBattlePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBBattlePlayer(PBBattlePlayer&& from) noexcept
    : PBBattlePlayer() {
    *this = ::std::move(from);
  }

  inline PBBattlePlayer& operator=(PBBattlePlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattlePlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBBattlePlayer* internal_default_instance() {
    return reinterpret_cast<const PBBattlePlayer*>(
               &_PBBattlePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(PBBattlePlayer* other);
  friend void swap(PBBattlePlayer& a, PBBattlePlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBBattlePlayer* New() const final {
    return CreateMaybeMessage<PBBattlePlayer>(NULL);
  }

  PBBattlePlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBBattlePlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBBattlePlayer& from);
  void MergeFrom(const PBBattlePlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBBattlePlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes icon = 5;
  void clear_icon();
  static const int kIconFieldNumber = 5;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const void* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // bytes iconbox = 6;
  void clear_iconbox();
  static const int kIconboxFieldNumber = 6;
  const ::std::string& iconbox() const;
  void set_iconbox(const ::std::string& value);
  #if LANG_CXX11
  void set_iconbox(::std::string&& value);
  #endif
  void set_iconbox(const char* value);
  void set_iconbox(const void* value, size_t size);
  ::std::string* mutable_iconbox();
  ::std::string* release_iconbox();
  void set_allocated_iconbox(::std::string* iconbox);

  // .KFMsg.PBTaskDatas achieve = 12;
  bool has_achieve() const;
  void clear_achieve();
  static const int kAchieveFieldNumber = 12;
  private:
  const ::KFMsg::PBTaskDatas& _internal_achieve() const;
  public:
  const ::KFMsg::PBTaskDatas& achieve() const;
  ::KFMsg::PBTaskDatas* release_achieve();
  ::KFMsg::PBTaskDatas* mutable_achieve();
  void set_allocated_achieve(::KFMsg::PBTaskDatas* achieve);

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 sex = 4;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // uint32 grading = 7;
  void clear_grading();
  static const int kGradingFieldNumber = 7;
  ::google::protobuf::uint32 grading() const;
  void set_grading(::google::protobuf::uint32 value);

  // uint32 modelid = 8;
  void clear_modelid();
  static const int kModelidFieldNumber = 8;
  ::google::protobuf::uint32 modelid() const;
  void set_modelid(::google::protobuf::uint32 value);

  // uint32 clothesid = 9;
  void clear_clothesid();
  static const int kClothesidFieldNumber = 9;
  ::google::protobuf::uint32 clothesid() const;
  void set_clothesid(::google::protobuf::uint32 value);

  // uint64 groupid = 10;
  void clear_groupid();
  static const int kGroupidFieldNumber = 10;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // uint32 campid = 11;
  void clear_campid();
  static const int kCampidFieldNumber = 11;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBBattlePlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::internal::ArenaStringPtr iconbox_;
  ::KFMsg::PBTaskDatas* achieve_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 grading_;
  ::google::protobuf::uint32 modelid_;
  ::google::protobuf::uint32 clothesid_;
  ::google::protobuf::uint64 groupid_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBBattleCamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBBattleCamp) */ {
 public:
  PBBattleCamp();
  virtual ~PBBattleCamp();

  PBBattleCamp(const PBBattleCamp& from);

  inline PBBattleCamp& operator=(const PBBattleCamp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBBattleCamp(PBBattleCamp&& from) noexcept
    : PBBattleCamp() {
    *this = ::std::move(from);
  }

  inline PBBattleCamp& operator=(PBBattleCamp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattleCamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBBattleCamp* internal_default_instance() {
    return reinterpret_cast<const PBBattleCamp*>(
               &_PBBattleCamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(PBBattleCamp* other);
  friend void swap(PBBattleCamp& a, PBBattleCamp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBBattleCamp* New() const final {
    return CreateMaybeMessage<PBBattleCamp>(NULL);
  }

  PBBattleCamp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBBattleCamp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBBattleCamp& from);
  void MergeFrom(const PBBattleCamp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBBattleCamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  int pbplayer_size() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 2;
  ::KFMsg::PBBattlePlayer* mutable_pbplayer(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >*
      mutable_pbplayer();
  const ::KFMsg::PBBattlePlayer& pbplayer(int index) const;
  ::KFMsg::PBBattlePlayer* add_pbplayer();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >&
      pbplayer() const;

  // uint32 campid = 1;
  void clear_campid();
  static const int kCampidFieldNumber = 1;
  ::google::protobuf::uint32 campid() const;
  void set_campid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBBattleCamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer > pbplayer_;
  ::google::protobuf::uint32 campid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBMatchGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBMatchGroup) */ {
 public:
  PBMatchGroup();
  virtual ~PBMatchGroup();

  PBMatchGroup(const PBMatchGroup& from);

  inline PBMatchGroup& operator=(const PBMatchGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMatchGroup(PBMatchGroup&& from) noexcept
    : PBMatchGroup() {
    *this = ::std::move(from);
  }

  inline PBMatchGroup& operator=(PBMatchGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMatchGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMatchGroup* internal_default_instance() {
    return reinterpret_cast<const PBMatchGroup*>(
               &_PBMatchGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(PBMatchGroup* other);
  friend void swap(PBMatchGroup& a, PBMatchGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMatchGroup* New() const final {
    return CreateMaybeMessage<PBMatchGroup>(NULL);
  }

  PBMatchGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMatchGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMatchGroup& from);
  void MergeFrom(const PBMatchGroup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMatchGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBBattlePlayer pbplayer = 2;
  int pbplayer_size() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 2;
  ::KFMsg::PBBattlePlayer* mutable_pbplayer(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >*
      mutable_pbplayer();
  const ::KFMsg::PBBattlePlayer& pbplayer(int index) const;
  ::KFMsg::PBBattlePlayer* add_pbplayer();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >&
      pbplayer() const;

  // uint64 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint64 groupid() const;
  void set_groupid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBMatchGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer > pbplayer_;
  ::google::protobuf::uint64 groupid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBGuestData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBGuestData) */ {
 public:
  PBGuestData();
  virtual ~PBGuestData();

  PBGuestData(const PBGuestData& from);

  inline PBGuestData& operator=(const PBGuestData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBGuestData(PBGuestData&& from) noexcept
    : PBGuestData() {
    *this = ::std::move(from);
  }

  inline PBGuestData& operator=(PBGuestData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGuestData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBGuestData* internal_default_instance() {
    return reinterpret_cast<const PBGuestData*>(
               &_PBGuestData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(PBGuestData* other);
  friend void swap(PBGuestData& a, PBGuestData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBGuestData* New() const final {
    return CreateMaybeMessage<PBGuestData>(NULL);
  }

  PBGuestData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBGuestData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBGuestData& from);
  void MergeFrom(const PBGuestData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBGuestData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes guesticon = 2;
  void clear_guesticon();
  static const int kGuesticonFieldNumber = 2;
  const ::std::string& guesticon() const;
  void set_guesticon(const ::std::string& value);
  #if LANG_CXX11
  void set_guesticon(::std::string&& value);
  #endif
  void set_guesticon(const char* value);
  void set_guesticon(const void* value, size_t size);
  ::std::string* mutable_guesticon();
  ::std::string* release_guesticon();
  void set_allocated_guesticon(::std::string* guesticon);

  // bytes guesticonbox = 3;
  void clear_guesticonbox();
  static const int kGuesticonboxFieldNumber = 3;
  const ::std::string& guesticonbox() const;
  void set_guesticonbox(const ::std::string& value);
  #if LANG_CXX11
  void set_guesticonbox(::std::string&& value);
  #endif
  void set_guesticonbox(const char* value);
  void set_guesticonbox(const void* value, size_t size);
  ::std::string* mutable_guesticonbox();
  ::std::string* release_guesticonbox();
  void set_allocated_guesticonbox(::std::string* guesticonbox);

  // uint64 guestid = 1;
  void clear_guestid();
  static const int kGuestidFieldNumber = 1;
  ::google::protobuf::uint64 guestid() const;
  void set_guestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBGuestData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guesticon_;
  ::google::protobuf::internal::ArenaStringPtr guesticonbox_;
  ::google::protobuf::uint64 guestid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBBattleScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBBattleScore) */ {
 public:
  PBBattleScore();
  virtual ~PBBattleScore();

  PBBattleScore(const PBBattleScore& from);

  inline PBBattleScore& operator=(const PBBattleScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBBattleScore(PBBattleScore&& from) noexcept
    : PBBattleScore() {
    *this = ::std::move(from);
  }

  inline PBBattleScore& operator=(PBBattleScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattleScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBBattleScore* internal_default_instance() {
    return reinterpret_cast<const PBBattleScore*>(
               &_PBBattleScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(PBBattleScore* other);
  friend void swap(PBBattleScore& a, PBBattleScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBBattleScore* New() const final {
    return CreateMaybeMessage<PBBattleScore>(NULL);
  }

  PBBattleScore* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBBattleScore>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBBattleScore& from);
  void MergeFrom(const PBBattleScore& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBBattleScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBUInt32 pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  ::KFMsg::PBUInt32* mutable_pbdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >*
      mutable_pbdata();
  const ::KFMsg::PBUInt32& pbdata(int index) const;
  ::KFMsg::PBUInt32* add_pbdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >&
      pbdata() const;

  // repeated uint64 members = 8;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 8;
  ::google::protobuf::uint64 members(int index) const;
  void set_members(int index, ::google::protobuf::uint64 value);
  void add_members(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_members();

  // bytes reward = 6;
  void clear_reward();
  static const int kRewardFieldNumber = 6;
  const ::std::string& reward() const;
  void set_reward(const ::std::string& value);
  #if LANG_CXX11
  void set_reward(::std::string&& value);
  #endif
  void set_reward(const char* value);
  void set_reward(const void* value, size_t size);
  ::std::string* mutable_reward();
  ::std::string* release_reward();
  void set_allocated_reward(::std::string* reward);

  // .KFMsg.PBTaskDatas achieve = 7;
  bool has_achieve() const;
  void clear_achieve();
  static const int kAchieveFieldNumber = 7;
  private:
  const ::KFMsg::PBTaskDatas& _internal_achieve() const;
  public:
  const ::KFMsg::PBTaskDatas& achieve() const;
  ::KFMsg::PBTaskDatas* release_achieve();
  ::KFMsg::PBTaskDatas* mutable_achieve();
  void set_allocated_achieve(::KFMsg::PBTaskDatas* achieve);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 ranking = 2;
  void clear_ranking();
  static const int kRankingFieldNumber = 2;
  ::google::protobuf::uint32 ranking() const;
  void set_ranking(::google::protobuf::uint32 value);

  // sint32 score = 4;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // uint32 matchid = 5;
  void clear_matchid();
  static const int kMatchidFieldNumber = 5;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 playercount = 9;
  void clear_playercount();
  static const int kPlayercountFieldNumber = 9;
  ::google::protobuf::uint32 playercount() const;
  void set_playercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBBattleScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 > pbdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > members_;
  mutable int _members_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_;
  ::KFMsg::PBTaskDatas* achieve_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 ranking_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 playercount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRecentData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRecentData) */ {
 public:
  PBRecentData();
  virtual ~PBRecentData();

  PBRecentData(const PBRecentData& from);

  inline PBRecentData& operator=(const PBRecentData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRecentData(PBRecentData&& from) noexcept
    : PBRecentData() {
    *this = ::std::move(from);
  }

  inline PBRecentData& operator=(PBRecentData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRecentData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRecentData* internal_default_instance() {
    return reinterpret_cast<const PBRecentData*>(
               &_PBRecentData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(PBRecentData* other);
  friend void swap(PBRecentData& a, PBRecentData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRecentData* New() const final {
    return CreateMaybeMessage<PBRecentData>(NULL);
  }

  PBRecentData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRecentData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRecentData& from);
  void MergeFrom(const PBRecentData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRecentData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 ranking = 2;
  void clear_ranking();
  static const int kRankingFieldNumber = 2;
  ::google::protobuf::uint32 ranking() const;
  void set_ranking(::google::protobuf::uint32 value);

  // uint32 totalnum = 3;
  void clear_totalnum();
  static const int kTotalnumFieldNumber = 3;
  ::google::protobuf::uint32 totalnum() const;
  void set_totalnum(::google::protobuf::uint32 value);

  // uint32 kill = 4;
  void clear_kill();
  static const int kKillFieldNumber = 4;
  ::google::protobuf::uint32 kill() const;
  void set_kill(::google::protobuf::uint32 value);

  // uint32 score = 5;
  void clear_score();
  static const int kScoreFieldNumber = 5;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 bekillid = 6;
  void clear_bekillid();
  static const int kBekillidFieldNumber = 6;
  ::google::protobuf::uint32 bekillid() const;
  void set_bekillid(::google::protobuf::uint32 value);

  // uint32 relationtype = 7;
  void clear_relationtype();
  static const int kRelationtypeFieldNumber = 7;
  ::google::protobuf::uint32 relationtype() const;
  void set_relationtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBRecentData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 ranking_;
  ::google::protobuf::uint32 totalnum_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 bekillid_;
  ::google::protobuf::uint32 relationtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBApplicationlist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBApplicationlist) */ {
 public:
  PBApplicationlist();
  virtual ~PBApplicationlist();

  PBApplicationlist(const PBApplicationlist& from);

  inline PBApplicationlist& operator=(const PBApplicationlist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBApplicationlist(PBApplicationlist&& from) noexcept
    : PBApplicationlist() {
    *this = ::std::move(from);
  }

  inline PBApplicationlist& operator=(PBApplicationlist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBApplicationlist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBApplicationlist* internal_default_instance() {
    return reinterpret_cast<const PBApplicationlist*>(
               &_PBApplicationlist_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(PBApplicationlist* other);
  friend void swap(PBApplicationlist& a, PBApplicationlist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBApplicationlist* New() const final {
    return CreateMaybeMessage<PBApplicationlist>(NULL);
  }

  PBApplicationlist* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBApplicationlist>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBApplicationlist& from);
  void MergeFrom(const PBApplicationlist& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBApplicationlist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBStrings basic = 3;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 3;
  private:
  const ::KFMsg::PBStrings& _internal_basic() const;
  public:
  const ::KFMsg::PBStrings& basic() const;
  ::KFMsg::PBStrings* release_basic();
  ::KFMsg::PBStrings* mutable_basic();
  void set_allocated_basic(::KFMsg::PBStrings* basic);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBApplicationlist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBStrings* basic_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBApplicationlists : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBApplicationlists) */ {
 public:
  PBApplicationlists();
  virtual ~PBApplicationlists();

  PBApplicationlists(const PBApplicationlists& from);

  inline PBApplicationlists& operator=(const PBApplicationlists& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBApplicationlists(PBApplicationlists&& from) noexcept
    : PBApplicationlists() {
    *this = ::std::move(from);
  }

  inline PBApplicationlists& operator=(PBApplicationlists&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBApplicationlists& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBApplicationlists* internal_default_instance() {
    return reinterpret_cast<const PBApplicationlists*>(
               &_PBApplicationlists_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(PBApplicationlists* other);
  friend void swap(PBApplicationlists& a, PBApplicationlists& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBApplicationlists* New() const final {
    return CreateMaybeMessage<PBApplicationlists>(NULL);
  }

  PBApplicationlists* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBApplicationlists>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBApplicationlists& from);
  void MergeFrom(const PBApplicationlists& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBApplicationlists* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBApplicationlist applylists = 1;
  int applylists_size() const;
  void clear_applylists();
  static const int kApplylistsFieldNumber = 1;
  ::KFMsg::PBApplicationlist* mutable_applylists(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBApplicationlist >*
      mutable_applylists();
  const ::KFMsg::PBApplicationlist& applylists(int index) const;
  ::KFMsg::PBApplicationlist* add_applylists();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBApplicationlist >&
      applylists() const;

  // @@protoc_insertion_point(class_scope:KFMsg.PBApplicationlists)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBApplicationlist > applylists_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBGuildIdArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBGuildIdArray) */ {
 public:
  PBGuildIdArray();
  virtual ~PBGuildIdArray();

  PBGuildIdArray(const PBGuildIdArray& from);

  inline PBGuildIdArray& operator=(const PBGuildIdArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBGuildIdArray(PBGuildIdArray&& from) noexcept
    : PBGuildIdArray() {
    *this = ::std::move(from);
  }

  inline PBGuildIdArray& operator=(PBGuildIdArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGuildIdArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBGuildIdArray* internal_default_instance() {
    return reinterpret_cast<const PBGuildIdArray*>(
               &_PBGuildIdArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(PBGuildIdArray* other);
  friend void swap(PBGuildIdArray& a, PBGuildIdArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBGuildIdArray* New() const final {
    return CreateMaybeMessage<PBGuildIdArray>(NULL);
  }

  PBGuildIdArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBGuildIdArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBGuildIdArray& from);
  void MergeFrom(const PBGuildIdArray& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBGuildIdArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guildid = 1;
  int guildid_size() const;
  void clear_guildid();
  static const int kGuildidFieldNumber = 1;
  ::google::protobuf::uint64 guildid(int index) const;
  void set_guildid(int index, ::google::protobuf::uint64 value);
  void add_guildid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guildid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guildid();

  // @@protoc_insertion_point(class_scope:KFMsg.PBGuildIdArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guildid_;
  mutable int _guildid_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFDefineMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Vector3D

// double x = 1;
inline void Vector3D::clear_x() {
  x_ = 0;
}
inline double Vector3D::x() const {
  // @@protoc_insertion_point(field_get:KFMsg.Vector3D.x)
  return x_;
}
inline void Vector3D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.Vector3D.x)
}

// double y = 2;
inline void Vector3D::clear_y() {
  y_ = 0;
}
inline double Vector3D::y() const {
  // @@protoc_insertion_point(field_get:KFMsg.Vector3D.y)
  return y_;
}
inline void Vector3D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.Vector3D.y)
}

// double z = 3;
inline void Vector3D::clear_z() {
  z_ = 0;
}
inline double Vector3D::z() const {
  // @@protoc_insertion_point(field_get:KFMsg.Vector3D.z)
  return z_;
}
inline void Vector3D::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.Vector3D.z)
}

// -------------------------------------------------------------------

// PBInt32

// bytes name = 1;
inline void PBInt32::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBInt32::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBInt32.name)
  return name_.GetNoArena();
}
inline void PBInt32::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBInt32.name)
}
#if LANG_CXX11
inline void PBInt32::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBInt32.name)
}
#endif
inline void PBInt32::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBInt32.name)
}
inline void PBInt32::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBInt32.name)
}
inline ::std::string* PBInt32::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBInt32.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBInt32::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBInt32.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBInt32::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBInt32.name)
}

// sint32 value = 2;
inline void PBInt32::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 PBInt32::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBInt32.value)
  return value_;
}
inline void PBInt32::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBInt32.value)
}

// -------------------------------------------------------------------

// PBUInt32

// bytes name = 1;
inline void PBUInt32::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBUInt32::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBUInt32.name)
  return name_.GetNoArena();
}
inline void PBUInt32::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBUInt32.name)
}
#if LANG_CXX11
inline void PBUInt32::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBUInt32.name)
}
#endif
inline void PBUInt32::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBUInt32.name)
}
inline void PBUInt32::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBUInt32.name)
}
inline ::std::string* PBUInt32::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBUInt32.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBUInt32::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBUInt32.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBUInt32::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBUInt32.name)
}

// uint32 value = 2;
inline void PBUInt32::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 PBUInt32::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBUInt32.value)
  return value_;
}
inline void PBUInt32::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBUInt32.value)
}

// -------------------------------------------------------------------

// PBInt64

// bytes name = 1;
inline void PBInt64::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBInt64::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBInt64.name)
  return name_.GetNoArena();
}
inline void PBInt64::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBInt64.name)
}
#if LANG_CXX11
inline void PBInt64::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBInt64.name)
}
#endif
inline void PBInt64::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBInt64.name)
}
inline void PBInt64::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBInt64.name)
}
inline ::std::string* PBInt64::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBInt64.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBInt64::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBInt64.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBInt64::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBInt64.name)
}

// sint64 value = 2;
inline void PBInt64::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBInt64::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBInt64.value)
  return value_;
}
inline void PBInt64::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBInt64.value)
}

// -------------------------------------------------------------------

// PBUInt64

// bytes name = 1;
inline void PBUInt64::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBUInt64::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBUInt64.name)
  return name_.GetNoArena();
}
inline void PBUInt64::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBUInt64.name)
}
#if LANG_CXX11
inline void PBUInt64::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBUInt64.name)
}
#endif
inline void PBUInt64::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBUInt64.name)
}
inline void PBUInt64::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBUInt64.name)
}
inline ::std::string* PBUInt64::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBUInt64.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBUInt64::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBUInt64.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBUInt64::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBUInt64.name)
}

// uint64 value = 2;
inline void PBUInt64::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBUInt64::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBUInt64.value)
  return value_;
}
inline void PBUInt64::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBUInt64.value)
}

// -------------------------------------------------------------------

// PBDouble

// bytes name = 1;
inline void PBDouble::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDouble::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDouble.name)
  return name_.GetNoArena();
}
inline void PBDouble::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDouble.name)
}
#if LANG_CXX11
inline void PBDouble::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDouble.name)
}
#endif
inline void PBDouble::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDouble.name)
}
inline void PBDouble::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDouble.name)
}
inline ::std::string* PBDouble::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDouble.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDouble::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDouble.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDouble::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDouble.name)
}

// double value = 2;
inline void PBDouble::clear_value() {
  value_ = 0;
}
inline double PBDouble::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDouble.value)
  return value_;
}
inline void PBDouble::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBDouble.value)
}

// -------------------------------------------------------------------

// PBString

// bytes name = 1;
inline void PBString::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBString::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBString.name)
  return name_.GetNoArena();
}
inline void PBString::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBString.name)
}
#if LANG_CXX11
inline void PBString::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBString.name)
}
#endif
inline void PBString::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBString.name)
}
inline void PBString::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBString.name)
}
inline ::std::string* PBString::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBString.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBString::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBString.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBString::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBString.name)
}

// bytes value = 2;
inline void PBString::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBString::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBString.value)
  return value_.GetNoArena();
}
inline void PBString::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBString.value)
}
#if LANG_CXX11
inline void PBString::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBString.value)
}
#endif
inline void PBString::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBString.value)
}
inline void PBString::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBString.value)
}
inline ::std::string* PBString::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBString.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBString::release_value() {
  // @@protoc_insertion_point(field_release:KFMsg.PBString.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBString::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBString.value)
}

// -------------------------------------------------------------------

// PBStrings

// repeated .KFMsg.PBString pbstring = 1;
inline int PBStrings::pbstring_size() const {
  return pbstring_.size();
}
inline void PBStrings::clear_pbstring() {
  pbstring_.Clear();
}
inline ::KFMsg::PBString* PBStrings::mutable_pbstring(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBStrings.pbstring)
  return pbstring_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
PBStrings::mutable_pbstring() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBStrings.pbstring)
  return &pbstring_;
}
inline const ::KFMsg::PBString& PBStrings::pbstring(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBStrings.pbstring)
  return pbstring_.Get(index);
}
inline ::KFMsg::PBString* PBStrings::add_pbstring() {
  // @@protoc_insertion_point(field_add:KFMsg.PBStrings.pbstring)
  return pbstring_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
PBStrings::pbstring() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBStrings.pbstring)
  return pbstring_;
}

// -------------------------------------------------------------------

// PBVector3D

// bytes name = 1;
inline void PBVector3D::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBVector3D::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBVector3D.name)
  return name_.GetNoArena();
}
inline void PBVector3D::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBVector3D.name)
}
#if LANG_CXX11
inline void PBVector3D::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBVector3D.name)
}
#endif
inline void PBVector3D::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBVector3D.name)
}
inline void PBVector3D::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBVector3D.name)
}
inline ::std::string* PBVector3D::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBVector3D.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBVector3D::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBVector3D.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBVector3D::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBVector3D.name)
}

// .KFMsg.Vector3D value = 2;
inline bool PBVector3D::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void PBVector3D::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::KFMsg::Vector3D& PBVector3D::_internal_value() const {
  return *value_;
}
inline const ::KFMsg::Vector3D& PBVector3D::value() const {
  const ::KFMsg::Vector3D* p = value_;
  // @@protoc_insertion_point(field_get:KFMsg.PBVector3D.value)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::Vector3D*>(
      &::KFMsg::_Vector3D_default_instance_);
}
inline ::KFMsg::Vector3D* PBVector3D::release_value() {
  // @@protoc_insertion_point(field_release:KFMsg.PBVector3D.value)
  
  ::KFMsg::Vector3D* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::KFMsg::Vector3D* PBVector3D::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::Vector3D>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.PBVector3D.value)
  return value_;
}
inline void PBVector3D::set_allocated_value(::KFMsg::Vector3D* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBVector3D.value)
}

// -------------------------------------------------------------------

// PBArray

// bytes name = 1;
inline void PBArray::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBArray::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.name)
  return name_.GetNoArena();
}
inline void PBArray::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.name)
}
#if LANG_CXX11
inline void PBArray::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBArray.name)
}
#endif
inline void PBArray::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBArray.name)
}
inline void PBArray::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBArray.name)
}
inline ::std::string* PBArray::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBArray.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBArray::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBArray.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBArray::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBArray.name)
}

// repeated sint32 pbint32 = 2;
inline int PBArray::pbint32_size() const {
  return pbint32_.size();
}
inline void PBArray::clear_pbint32() {
  pbint32_.Clear();
}
inline ::google::protobuf::int32 PBArray::pbint32(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbint32)
  return pbint32_.Get(index);
}
inline void PBArray::set_pbint32(int index, ::google::protobuf::int32 value) {
  pbint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbint32)
}
inline void PBArray::add_pbint32(::google::protobuf::int32 value) {
  pbint32_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBArray::pbint32() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbint32)
  return pbint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBArray::mutable_pbint32() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbint32)
  return &pbint32_;
}

// repeated uint32 pbuint32 = 3;
inline int PBArray::pbuint32_size() const {
  return pbuint32_.size();
}
inline void PBArray::clear_pbuint32() {
  pbuint32_.Clear();
}
inline ::google::protobuf::uint32 PBArray::pbuint32(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbuint32)
  return pbuint32_.Get(index);
}
inline void PBArray::set_pbuint32(int index, ::google::protobuf::uint32 value) {
  pbuint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbuint32)
}
inline void PBArray::add_pbuint32(::google::protobuf::uint32 value) {
  pbuint32_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbuint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBArray::pbuint32() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbuint32)
  return pbuint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBArray::mutable_pbuint32() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbuint32)
  return &pbuint32_;
}

// repeated sint64 pbint64 = 4;
inline int PBArray::pbint64_size() const {
  return pbint64_.size();
}
inline void PBArray::clear_pbint64() {
  pbint64_.Clear();
}
inline ::google::protobuf::int64 PBArray::pbint64(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbint64)
  return pbint64_.Get(index);
}
inline void PBArray::set_pbint64(int index, ::google::protobuf::int64 value) {
  pbint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbint64)
}
inline void PBArray::add_pbint64(::google::protobuf::int64 value) {
  pbint64_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PBArray::pbint64() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbint64)
  return pbint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PBArray::mutable_pbint64() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbint64)
  return &pbint64_;
}

// repeated uint64 pbuint64 = 5;
inline int PBArray::pbuint64_size() const {
  return pbuint64_.size();
}
inline void PBArray::clear_pbuint64() {
  pbuint64_.Clear();
}
inline ::google::protobuf::uint64 PBArray::pbuint64(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbuint64)
  return pbuint64_.Get(index);
}
inline void PBArray::set_pbuint64(int index, ::google::protobuf::uint64 value) {
  pbuint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbuint64)
}
inline void PBArray::add_pbuint64(::google::protobuf::uint64 value) {
  pbuint64_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbuint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBArray::pbuint64() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbuint64)
  return pbuint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBArray::mutable_pbuint64() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbuint64)
  return &pbuint64_;
}

// repeated double pbdouble = 6;
inline int PBArray::pbdouble_size() const {
  return pbdouble_.size();
}
inline void PBArray::clear_pbdouble() {
  pbdouble_.Clear();
}
inline double PBArray::pbdouble(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbdouble)
  return pbdouble_.Get(index);
}
inline void PBArray::set_pbdouble(int index, double value) {
  pbdouble_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbdouble)
}
inline void PBArray::add_pbdouble(double value) {
  pbdouble_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbdouble)
}
inline const ::google::protobuf::RepeatedField< double >&
PBArray::pbdouble() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbdouble)
  return pbdouble_;
}
inline ::google::protobuf::RepeatedField< double >*
PBArray::mutable_pbdouble() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbdouble)
  return &pbdouble_;
}

// repeated bytes pbstring = 7;
inline int PBArray::pbstring_size() const {
  return pbstring_.size();
}
inline void PBArray::clear_pbstring() {
  pbstring_.Clear();
}
inline const ::std::string& PBArray::pbstring(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbstring)
  return pbstring_.Get(index);
}
inline ::std::string* PBArray::mutable_pbstring(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBArray.pbstring)
  return pbstring_.Mutable(index);
}
inline void PBArray::set_pbstring(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbstring)
  pbstring_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PBArray::set_pbstring(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.PBArray.pbstring)
  pbstring_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PBArray::set_pbstring(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  pbstring_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.PBArray.pbstring)
}
inline void PBArray::set_pbstring(int index, const void* value, size_t size) {
  pbstring_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBArray.pbstring)
}
inline ::std::string* PBArray::add_pbstring() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.PBArray.pbstring)
  return pbstring_.Add();
}
inline void PBArray::add_pbstring(const ::std::string& value) {
  pbstring_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbstring)
}
#if LANG_CXX11
inline void PBArray::add_pbstring(::std::string&& value) {
  pbstring_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbstring)
}
#endif
inline void PBArray::add_pbstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  pbstring_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.PBArray.pbstring)
}
inline void PBArray::add_pbstring(const void* value, size_t size) {
  pbstring_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.PBArray.pbstring)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBArray::pbstring() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbstring)
  return pbstring_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBArray::mutable_pbstring() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbstring)
  return &pbstring_;
}

// repeated .KFMsg.Vector3D pbvector3d = 8;
inline int PBArray::pbvector3d_size() const {
  return pbvector3d_.size();
}
inline void PBArray::clear_pbvector3d() {
  pbvector3d_.Clear();
}
inline ::KFMsg::Vector3D* PBArray::mutable_pbvector3d(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBArray.pbvector3d)
  return pbvector3d_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::Vector3D >*
PBArray::mutable_pbvector3d() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBArray.pbvector3d)
  return &pbvector3d_;
}
inline const ::KFMsg::Vector3D& PBArray::pbvector3d(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBArray.pbvector3d)
  return pbvector3d_.Get(index);
}
inline ::KFMsg::Vector3D* PBArray::add_pbvector3d() {
  // @@protoc_insertion_point(field_add:KFMsg.PBArray.pbvector3d)
  return pbvector3d_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::Vector3D >&
PBArray::pbvector3d() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBArray.pbvector3d)
  return pbvector3d_;
}

// -------------------------------------------------------------------

// PBObject

// bytes name = 1;
inline void PBObject::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBObject::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.name)
  return name_.GetNoArena();
}
inline void PBObject::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBObject.name)
}
#if LANG_CXX11
inline void PBObject::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBObject.name)
}
#endif
inline void PBObject::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBObject.name)
}
inline void PBObject::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBObject.name)
}
inline ::std::string* PBObject::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBObject::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBObject.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBObject::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBObject.name)
}

// uint64 key = 2;
inline void PBObject::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBObject::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.key)
  return key_;
}
inline void PBObject::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBObject.key)
}

// repeated .KFMsg.PBInt32 pbint32 = 3;
inline int PBObject::pbint32_size() const {
  return pbint32_.size();
}
inline void PBObject::clear_pbint32() {
  pbint32_.Clear();
}
inline ::KFMsg::PBInt32* PBObject::mutable_pbint32(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbint32)
  return pbint32_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt32 >*
PBObject::mutable_pbint32() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbint32)
  return &pbint32_;
}
inline const ::KFMsg::PBInt32& PBObject::pbint32(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbint32)
  return pbint32_.Get(index);
}
inline ::KFMsg::PBInt32* PBObject::add_pbint32() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbint32)
  return pbint32_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt32 >&
PBObject::pbint32() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbint32)
  return pbint32_;
}

// repeated .KFMsg.PBUInt32 pbuint32 = 4;
inline int PBObject::pbuint32_size() const {
  return pbuint32_.size();
}
inline void PBObject::clear_pbuint32() {
  pbuint32_.Clear();
}
inline ::KFMsg::PBUInt32* PBObject::mutable_pbuint32(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbuint32)
  return pbuint32_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >*
PBObject::mutable_pbuint32() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbuint32)
  return &pbuint32_;
}
inline const ::KFMsg::PBUInt32& PBObject::pbuint32(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbuint32)
  return pbuint32_.Get(index);
}
inline ::KFMsg::PBUInt32* PBObject::add_pbuint32() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbuint32)
  return pbuint32_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >&
PBObject::pbuint32() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbuint32)
  return pbuint32_;
}

// repeated .KFMsg.PBInt64 pbint64 = 5;
inline int PBObject::pbint64_size() const {
  return pbint64_.size();
}
inline void PBObject::clear_pbint64() {
  pbint64_.Clear();
}
inline ::KFMsg::PBInt64* PBObject::mutable_pbint64(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbint64)
  return pbint64_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt64 >*
PBObject::mutable_pbint64() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbint64)
  return &pbint64_;
}
inline const ::KFMsg::PBInt64& PBObject::pbint64(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbint64)
  return pbint64_.Get(index);
}
inline ::KFMsg::PBInt64* PBObject::add_pbint64() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbint64)
  return pbint64_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBInt64 >&
PBObject::pbint64() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbint64)
  return pbint64_;
}

// repeated .KFMsg.PBUInt64 pbuint64 = 6;
inline int PBObject::pbuint64_size() const {
  return pbuint64_.size();
}
inline void PBObject::clear_pbuint64() {
  pbuint64_.Clear();
}
inline ::KFMsg::PBUInt64* PBObject::mutable_pbuint64(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbuint64)
  return pbuint64_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt64 >*
PBObject::mutable_pbuint64() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbuint64)
  return &pbuint64_;
}
inline const ::KFMsg::PBUInt64& PBObject::pbuint64(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbuint64)
  return pbuint64_.Get(index);
}
inline ::KFMsg::PBUInt64* PBObject::add_pbuint64() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbuint64)
  return pbuint64_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt64 >&
PBObject::pbuint64() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbuint64)
  return pbuint64_;
}

// repeated .KFMsg.PBDouble pbdouble = 7;
inline int PBObject::pbdouble_size() const {
  return pbdouble_.size();
}
inline void PBObject::clear_pbdouble() {
  pbdouble_.Clear();
}
inline ::KFMsg::PBDouble* PBObject::mutable_pbdouble(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbdouble)
  return pbdouble_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDouble >*
PBObject::mutable_pbdouble() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbdouble)
  return &pbdouble_;
}
inline const ::KFMsg::PBDouble& PBObject::pbdouble(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbdouble)
  return pbdouble_.Get(index);
}
inline ::KFMsg::PBDouble* PBObject::add_pbdouble() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbdouble)
  return pbdouble_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDouble >&
PBObject::pbdouble() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbdouble)
  return pbdouble_;
}

// repeated .KFMsg.PBString pbstring = 8;
inline int PBObject::pbstring_size() const {
  return pbstring_.size();
}
inline void PBObject::clear_pbstring() {
  pbstring_.Clear();
}
inline ::KFMsg::PBString* PBObject::mutable_pbstring(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbstring)
  return pbstring_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >*
PBObject::mutable_pbstring() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbstring)
  return &pbstring_;
}
inline const ::KFMsg::PBString& PBObject::pbstring(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbstring)
  return pbstring_.Get(index);
}
inline ::KFMsg::PBString* PBObject::add_pbstring() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbstring)
  return pbstring_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBString >&
PBObject::pbstring() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbstring)
  return pbstring_;
}

// repeated .KFMsg.PBVector3D pbvector3d = 9;
inline int PBObject::pbvector3d_size() const {
  return pbvector3d_.size();
}
inline void PBObject::clear_pbvector3d() {
  pbvector3d_.Clear();
}
inline ::KFMsg::PBVector3D* PBObject::mutable_pbvector3d(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbvector3d)
  return pbvector3d_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBVector3D >*
PBObject::mutable_pbvector3d() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbvector3d)
  return &pbvector3d_;
}
inline const ::KFMsg::PBVector3D& PBObject::pbvector3d(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbvector3d)
  return pbvector3d_.Get(index);
}
inline ::KFMsg::PBVector3D* PBObject::add_pbvector3d() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbvector3d)
  return pbvector3d_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBVector3D >&
PBObject::pbvector3d() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbvector3d)
  return pbvector3d_;
}

// repeated .KFMsg.PBArray pbarray = 10;
inline int PBObject::pbarray_size() const {
  return pbarray_.size();
}
inline void PBObject::clear_pbarray() {
  pbarray_.Clear();
}
inline ::KFMsg::PBArray* PBObject::mutable_pbarray(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbarray)
  return pbarray_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBArray >*
PBObject::mutable_pbarray() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbarray)
  return &pbarray_;
}
inline const ::KFMsg::PBArray& PBObject::pbarray(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbarray)
  return pbarray_.Get(index);
}
inline ::KFMsg::PBArray* PBObject::add_pbarray() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbarray)
  return pbarray_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBArray >&
PBObject::pbarray() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbarray)
  return pbarray_;
}

// repeated .KFMsg.PBObject pbobject = 11;
inline int PBObject::pbobject_size() const {
  return pbobject_.size();
}
inline void PBObject::clear_pbobject() {
  pbobject_.Clear();
}
inline ::KFMsg::PBObject* PBObject::mutable_pbobject(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbobject)
  return pbobject_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >*
PBObject::mutable_pbobject() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbobject)
  return &pbobject_;
}
inline const ::KFMsg::PBObject& PBObject::pbobject(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbobject)
  return pbobject_.Get(index);
}
inline ::KFMsg::PBObject* PBObject::add_pbobject() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbobject)
  return pbobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >&
PBObject::pbobject() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbobject)
  return pbobject_;
}

// repeated .KFMsg.PBRecord pbrecord = 12;
inline int PBObject::pbrecord_size() const {
  return pbrecord_.size();
}
inline void PBObject::clear_pbrecord() {
  pbrecord_.Clear();
}
inline ::KFMsg::PBRecord* PBObject::mutable_pbrecord(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBObject.pbrecord)
  return pbrecord_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRecord >*
PBObject::mutable_pbrecord() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBObject.pbrecord)
  return &pbrecord_;
}
inline const ::KFMsg::PBRecord& PBObject::pbrecord(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBObject.pbrecord)
  return pbrecord_.Get(index);
}
inline ::KFMsg::PBRecord* PBObject::add_pbrecord() {
  // @@protoc_insertion_point(field_add:KFMsg.PBObject.pbrecord)
  return pbrecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRecord >&
PBObject::pbrecord() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBObject.pbrecord)
  return pbrecord_;
}

// -------------------------------------------------------------------

// PBRecord

// bytes name = 1;
inline void PBRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBRecord::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecord.name)
  return name_.GetNoArena();
}
inline void PBRecord::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBRecord.name)
}
#if LANG_CXX11
inline void PBRecord::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBRecord.name)
}
#endif
inline void PBRecord::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBRecord.name)
}
inline void PBRecord::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBRecord.name)
}
inline ::std::string* PBRecord::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBRecord::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBRecord.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBRecord.name)
}

// repeated .KFMsg.PBObject pbobject = 2;
inline int PBRecord::pbobject_size() const {
  return pbobject_.size();
}
inline void PBRecord::clear_pbobject() {
  pbobject_.Clear();
}
inline ::KFMsg::PBObject* PBRecord::mutable_pbobject(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBRecord.pbobject)
  return pbobject_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >*
PBRecord::mutable_pbobject() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBRecord.pbobject)
  return &pbobject_;
}
inline const ::KFMsg::PBObject& PBRecord::pbobject(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecord.pbobject)
  return pbobject_.Get(index);
}
inline ::KFMsg::PBObject* PBRecord::add_pbobject() {
  // @@protoc_insertion_point(field_add:KFMsg.PBRecord.pbobject)
  return pbobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBObject >&
PBRecord::pbobject() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBRecord.pbobject)
  return pbobject_;
}

// -------------------------------------------------------------------

// PBRankData

// uint32 rankindex = 1;
inline void PBRankData::clear_rankindex() {
  rankindex_ = 0u;
}
inline ::google::protobuf::uint32 PBRankData::rankindex() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.rankindex)
  return rankindex_;
}
inline void PBRankData::set_rankindex(::google::protobuf::uint32 value) {
  
  rankindex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRankData.rankindex)
}

// uint64 playerid = 2;
inline void PBRankData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRankData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.playerid)
  return playerid_;
}
inline void PBRankData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRankData.playerid)
}

// uint64 rankscore = 3;
inline void PBRankData::clear_rankscore() {
  rankscore_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRankData::rankscore() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.rankscore)
  return rankscore_;
}
inline void PBRankData::set_rankscore(::google::protobuf::uint64 value) {
  
  rankscore_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRankData.rankscore)
}

// .KFMsg.PBStrings pbdata = 4;
inline bool PBRankData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline void PBRankData::clear_pbdata() {
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
}
inline const ::KFMsg::PBStrings& PBRankData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBStrings& PBRankData::pbdata() const {
  const ::KFMsg::PBStrings* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBStrings*>(
      &::KFMsg::_PBStrings_default_instance_);
}
inline ::KFMsg::PBStrings* PBRankData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.PBRankData.pbdata)
  
  ::KFMsg::PBStrings* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBStrings* PBRankData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBStrings>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.PBRankData.pbdata)
  return pbdata_;
}
inline void PBRankData::set_allocated_pbdata(::KFMsg::PBStrings* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbdata_;
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBRankData.pbdata)
}

// -------------------------------------------------------------------

// PBRankDatas

// repeated .KFMsg.PBRankData rankdata = 3;
inline int PBRankDatas::rankdata_size() const {
  return rankdata_.size();
}
inline void PBRankDatas::clear_rankdata() {
  rankdata_.Clear();
}
inline ::KFMsg::PBRankData* PBRankDatas::mutable_rankdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBRankDatas.rankdata)
  return rankdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >*
PBRankDatas::mutable_rankdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBRankDatas.rankdata)
  return &rankdata_;
}
inline const ::KFMsg::PBRankData& PBRankDatas::rankdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankDatas.rankdata)
  return rankdata_.Get(index);
}
inline ::KFMsg::PBRankData* PBRankDatas::add_rankdata() {
  // @@protoc_insertion_point(field_add:KFMsg.PBRankDatas.rankdata)
  return rankdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >&
PBRankDatas::rankdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBRankDatas.rankdata)
  return rankdata_;
}

// -------------------------------------------------------------------

// PBTaskData

// uint32 id = 1;
inline void PBTaskData::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PBTaskData::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTaskData.id)
  return id_;
}
inline void PBTaskData::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBTaskData.id)
}

// uint32 value = 2;
inline void PBTaskData::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 PBTaskData::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTaskData.value)
  return value_;
}
inline void PBTaskData::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBTaskData.value)
}

// -------------------------------------------------------------------

// PBTaskDatas

// repeated .KFMsg.PBTaskData taskdata = 1;
inline int PBTaskDatas::taskdata_size() const {
  return taskdata_.size();
}
inline void PBTaskDatas::clear_taskdata() {
  taskdata_.Clear();
}
inline ::KFMsg::PBTaskData* PBTaskDatas::mutable_taskdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBTaskDatas.taskdata)
  return taskdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBTaskData >*
PBTaskDatas::mutable_taskdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBTaskDatas.taskdata)
  return &taskdata_;
}
inline const ::KFMsg::PBTaskData& PBTaskDatas::taskdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBTaskDatas.taskdata)
  return taskdata_.Get(index);
}
inline ::KFMsg::PBTaskData* PBTaskDatas::add_taskdata() {
  // @@protoc_insertion_point(field_add:KFMsg.PBTaskDatas.taskdata)
  return taskdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBTaskData >&
PBTaskDatas::taskdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBTaskDatas.taskdata)
  return taskdata_;
}

// -------------------------------------------------------------------

// PBBattlePlayer

// uint64 serverid = 1;
inline void PBBattlePlayer::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBBattlePlayer::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.serverid)
  return serverid_;
}
inline void PBBattlePlayer::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.serverid)
}

// uint64 playerid = 2;
inline void PBBattlePlayer::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBBattlePlayer::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.playerid)
  return playerid_;
}
inline void PBBattlePlayer::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.playerid)
}

// bytes name = 3;
inline void PBBattlePlayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBBattlePlayer::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.name)
  return name_.GetNoArena();
}
inline void PBBattlePlayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.name)
}
#if LANG_CXX11
inline void PBBattlePlayer::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBBattlePlayer.name)
}
#endif
inline void PBBattlePlayer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBBattlePlayer.name)
}
inline void PBBattlePlayer::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBBattlePlayer.name)
}
inline ::std::string* PBBattlePlayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattlePlayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBBattlePlayer::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBattlePlayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBBattlePlayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBattlePlayer.name)
}

// uint32 sex = 4;
inline void PBBattlePlayer::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 PBBattlePlayer::sex() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.sex)
  return sex_;
}
inline void PBBattlePlayer::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.sex)
}

// bytes icon = 5;
inline void PBBattlePlayer::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBBattlePlayer::icon() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.icon)
  return icon_.GetNoArena();
}
inline void PBBattlePlayer::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.icon)
}
#if LANG_CXX11
inline void PBBattlePlayer::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBBattlePlayer.icon)
}
#endif
inline void PBBattlePlayer::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBBattlePlayer.icon)
}
inline void PBBattlePlayer::set_icon(const void* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBBattlePlayer.icon)
}
inline ::std::string* PBBattlePlayer::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattlePlayer.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBBattlePlayer::release_icon() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBattlePlayer.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBBattlePlayer::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBattlePlayer.icon)
}

// bytes iconbox = 6;
inline void PBBattlePlayer::clear_iconbox() {
  iconbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBBattlePlayer::iconbox() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.iconbox)
  return iconbox_.GetNoArena();
}
inline void PBBattlePlayer::set_iconbox(const ::std::string& value) {
  
  iconbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.iconbox)
}
#if LANG_CXX11
inline void PBBattlePlayer::set_iconbox(::std::string&& value) {
  
  iconbox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBBattlePlayer.iconbox)
}
#endif
inline void PBBattlePlayer::set_iconbox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  iconbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBBattlePlayer.iconbox)
}
inline void PBBattlePlayer::set_iconbox(const void* value, size_t size) {
  
  iconbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBBattlePlayer.iconbox)
}
inline ::std::string* PBBattlePlayer::mutable_iconbox() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattlePlayer.iconbox)
  return iconbox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBBattlePlayer::release_iconbox() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBattlePlayer.iconbox)
  
  return iconbox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBBattlePlayer::set_allocated_iconbox(::std::string* iconbox) {
  if (iconbox != NULL) {
    
  } else {
    
  }
  iconbox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconbox);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBattlePlayer.iconbox)
}

// uint32 grading = 7;
inline void PBBattlePlayer::clear_grading() {
  grading_ = 0u;
}
inline ::google::protobuf::uint32 PBBattlePlayer::grading() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.grading)
  return grading_;
}
inline void PBBattlePlayer::set_grading(::google::protobuf::uint32 value) {
  
  grading_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.grading)
}

// uint32 modelid = 8;
inline void PBBattlePlayer::clear_modelid() {
  modelid_ = 0u;
}
inline ::google::protobuf::uint32 PBBattlePlayer::modelid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.modelid)
  return modelid_;
}
inline void PBBattlePlayer::set_modelid(::google::protobuf::uint32 value) {
  
  modelid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.modelid)
}

// uint32 clothesid = 9;
inline void PBBattlePlayer::clear_clothesid() {
  clothesid_ = 0u;
}
inline ::google::protobuf::uint32 PBBattlePlayer::clothesid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.clothesid)
  return clothesid_;
}
inline void PBBattlePlayer::set_clothesid(::google::protobuf::uint32 value) {
  
  clothesid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.clothesid)
}

// uint64 groupid = 10;
inline void PBBattlePlayer::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBBattlePlayer::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.groupid)
  return groupid_;
}
inline void PBBattlePlayer::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.groupid)
}

// uint32 campid = 11;
inline void PBBattlePlayer::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 PBBattlePlayer::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.campid)
  return campid_;
}
inline void PBBattlePlayer::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattlePlayer.campid)
}

// .KFMsg.PBTaskDatas achieve = 12;
inline bool PBBattlePlayer::has_achieve() const {
  return this != internal_default_instance() && achieve_ != NULL;
}
inline void PBBattlePlayer::clear_achieve() {
  if (GetArenaNoVirtual() == NULL && achieve_ != NULL) {
    delete achieve_;
  }
  achieve_ = NULL;
}
inline const ::KFMsg::PBTaskDatas& PBBattlePlayer::_internal_achieve() const {
  return *achieve_;
}
inline const ::KFMsg::PBTaskDatas& PBBattlePlayer::achieve() const {
  const ::KFMsg::PBTaskDatas* p = achieve_;
  // @@protoc_insertion_point(field_get:KFMsg.PBBattlePlayer.achieve)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBTaskDatas*>(
      &::KFMsg::_PBTaskDatas_default_instance_);
}
inline ::KFMsg::PBTaskDatas* PBBattlePlayer::release_achieve() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBattlePlayer.achieve)
  
  ::KFMsg::PBTaskDatas* temp = achieve_;
  achieve_ = NULL;
  return temp;
}
inline ::KFMsg::PBTaskDatas* PBBattlePlayer::mutable_achieve() {
  
  if (achieve_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBTaskDatas>(GetArenaNoVirtual());
    achieve_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattlePlayer.achieve)
  return achieve_;
}
inline void PBBattlePlayer::set_allocated_achieve(::KFMsg::PBTaskDatas* achieve) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete achieve_;
  }
  if (achieve) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      achieve = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achieve, submessage_arena);
    }
    
  } else {
    
  }
  achieve_ = achieve;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBattlePlayer.achieve)
}

// -------------------------------------------------------------------

// PBBattleCamp

// uint32 campid = 1;
inline void PBBattleCamp::clear_campid() {
  campid_ = 0u;
}
inline ::google::protobuf::uint32 PBBattleCamp::campid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleCamp.campid)
  return campid_;
}
inline void PBBattleCamp::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleCamp.campid)
}

// repeated .KFMsg.PBBattlePlayer pbplayer = 2;
inline int PBBattleCamp::pbplayer_size() const {
  return pbplayer_.size();
}
inline void PBBattleCamp::clear_pbplayer() {
  pbplayer_.Clear();
}
inline ::KFMsg::PBBattlePlayer* PBBattleCamp::mutable_pbplayer(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattleCamp.pbplayer)
  return pbplayer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >*
PBBattleCamp::mutable_pbplayer() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBBattleCamp.pbplayer)
  return &pbplayer_;
}
inline const ::KFMsg::PBBattlePlayer& PBBattleCamp::pbplayer(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleCamp.pbplayer)
  return pbplayer_.Get(index);
}
inline ::KFMsg::PBBattlePlayer* PBBattleCamp::add_pbplayer() {
  // @@protoc_insertion_point(field_add:KFMsg.PBBattleCamp.pbplayer)
  return pbplayer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >&
PBBattleCamp::pbplayer() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBBattleCamp.pbplayer)
  return pbplayer_;
}

// -------------------------------------------------------------------

// PBMatchGroup

// uint64 groupid = 1;
inline void PBMatchGroup::clear_groupid() {
  groupid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMatchGroup::groupid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchGroup.groupid)
  return groupid_;
}
inline void PBMatchGroup::set_groupid(::google::protobuf::uint64 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchGroup.groupid)
}

// repeated .KFMsg.PBBattlePlayer pbplayer = 2;
inline int PBMatchGroup::pbplayer_size() const {
  return pbplayer_.size();
}
inline void PBMatchGroup::clear_pbplayer() {
  pbplayer_.Clear();
}
inline ::KFMsg::PBBattlePlayer* PBMatchGroup::mutable_pbplayer(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchGroup.pbplayer)
  return pbplayer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >*
PBMatchGroup::mutable_pbplayer() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBMatchGroup.pbplayer)
  return &pbplayer_;
}
inline const ::KFMsg::PBBattlePlayer& PBMatchGroup::pbplayer(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchGroup.pbplayer)
  return pbplayer_.Get(index);
}
inline ::KFMsg::PBBattlePlayer* PBMatchGroup::add_pbplayer() {
  // @@protoc_insertion_point(field_add:KFMsg.PBMatchGroup.pbplayer)
  return pbplayer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBattlePlayer >&
PBMatchGroup::pbplayer() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBMatchGroup.pbplayer)
  return pbplayer_;
}

// -------------------------------------------------------------------

// PBGuestData

// uint64 guestid = 1;
inline void PBGuestData::clear_guestid() {
  guestid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBGuestData::guestid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBGuestData.guestid)
  return guestid_;
}
inline void PBGuestData::set_guestid(::google::protobuf::uint64 value) {
  
  guestid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBGuestData.guestid)
}

// bytes guesticon = 2;
inline void PBGuestData::clear_guesticon() {
  guesticon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBGuestData::guesticon() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBGuestData.guesticon)
  return guesticon_.GetNoArena();
}
inline void PBGuestData::set_guesticon(const ::std::string& value) {
  
  guesticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBGuestData.guesticon)
}
#if LANG_CXX11
inline void PBGuestData::set_guesticon(::std::string&& value) {
  
  guesticon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBGuestData.guesticon)
}
#endif
inline void PBGuestData::set_guesticon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guesticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBGuestData.guesticon)
}
inline void PBGuestData::set_guesticon(const void* value, size_t size) {
  
  guesticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBGuestData.guesticon)
}
inline ::std::string* PBGuestData::mutable_guesticon() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBGuestData.guesticon)
  return guesticon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBGuestData::release_guesticon() {
  // @@protoc_insertion_point(field_release:KFMsg.PBGuestData.guesticon)
  
  return guesticon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBGuestData::set_allocated_guesticon(::std::string* guesticon) {
  if (guesticon != NULL) {
    
  } else {
    
  }
  guesticon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guesticon);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBGuestData.guesticon)
}

// bytes guesticonbox = 3;
inline void PBGuestData::clear_guesticonbox() {
  guesticonbox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBGuestData::guesticonbox() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBGuestData.guesticonbox)
  return guesticonbox_.GetNoArena();
}
inline void PBGuestData::set_guesticonbox(const ::std::string& value) {
  
  guesticonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBGuestData.guesticonbox)
}
#if LANG_CXX11
inline void PBGuestData::set_guesticonbox(::std::string&& value) {
  
  guesticonbox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBGuestData.guesticonbox)
}
#endif
inline void PBGuestData::set_guesticonbox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guesticonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBGuestData.guesticonbox)
}
inline void PBGuestData::set_guesticonbox(const void* value, size_t size) {
  
  guesticonbox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBGuestData.guesticonbox)
}
inline ::std::string* PBGuestData::mutable_guesticonbox() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBGuestData.guesticonbox)
  return guesticonbox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBGuestData::release_guesticonbox() {
  // @@protoc_insertion_point(field_release:KFMsg.PBGuestData.guesticonbox)
  
  return guesticonbox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBGuestData::set_allocated_guesticonbox(::std::string* guesticonbox) {
  if (guesticonbox != NULL) {
    
  } else {
    
  }
  guesticonbox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guesticonbox);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBGuestData.guesticonbox)
}

// -------------------------------------------------------------------

// PBBattleScore

// uint64 playerid = 1;
inline void PBBattleScore::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBBattleScore::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.playerid)
  return playerid_;
}
inline void PBBattleScore::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.playerid)
}

// uint32 ranking = 2;
inline void PBBattleScore::clear_ranking() {
  ranking_ = 0u;
}
inline ::google::protobuf::uint32 PBBattleScore::ranking() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.ranking)
  return ranking_;
}
inline void PBBattleScore::set_ranking(::google::protobuf::uint32 value) {
  
  ranking_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.ranking)
}

// repeated .KFMsg.PBUInt32 pbdata = 3;
inline int PBBattleScore::pbdata_size() const {
  return pbdata_.size();
}
inline void PBBattleScore::clear_pbdata() {
  pbdata_.Clear();
}
inline ::KFMsg::PBUInt32* PBBattleScore::mutable_pbdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattleScore.pbdata)
  return pbdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >*
PBBattleScore::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBBattleScore.pbdata)
  return &pbdata_;
}
inline const ::KFMsg::PBUInt32& PBBattleScore::pbdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.pbdata)
  return pbdata_.Get(index);
}
inline ::KFMsg::PBUInt32* PBBattleScore::add_pbdata() {
  // @@protoc_insertion_point(field_add:KFMsg.PBBattleScore.pbdata)
  return pbdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBUInt32 >&
PBBattleScore::pbdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBBattleScore.pbdata)
  return pbdata_;
}

// sint32 score = 4;
inline void PBBattleScore::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 PBBattleScore::score() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.score)
  return score_;
}
inline void PBBattleScore::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.score)
}

// uint32 matchid = 5;
inline void PBBattleScore::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 PBBattleScore::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.matchid)
  return matchid_;
}
inline void PBBattleScore::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.matchid)
}

// bytes reward = 6;
inline void PBBattleScore::clear_reward() {
  reward_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBBattleScore::reward() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.reward)
  return reward_.GetNoArena();
}
inline void PBBattleScore::set_reward(const ::std::string& value) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.reward)
}
#if LANG_CXX11
inline void PBBattleScore::set_reward(::std::string&& value) {
  
  reward_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBBattleScore.reward)
}
#endif
inline void PBBattleScore::set_reward(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBBattleScore.reward)
}
inline void PBBattleScore::set_reward(const void* value, size_t size) {
  
  reward_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBBattleScore.reward)
}
inline ::std::string* PBBattleScore::mutable_reward() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattleScore.reward)
  return reward_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBBattleScore::release_reward() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBattleScore.reward)
  
  return reward_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBBattleScore::set_allocated_reward(::std::string* reward) {
  if (reward != NULL) {
    
  } else {
    
  }
  reward_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBattleScore.reward)
}

// .KFMsg.PBTaskDatas achieve = 7;
inline bool PBBattleScore::has_achieve() const {
  return this != internal_default_instance() && achieve_ != NULL;
}
inline void PBBattleScore::clear_achieve() {
  if (GetArenaNoVirtual() == NULL && achieve_ != NULL) {
    delete achieve_;
  }
  achieve_ = NULL;
}
inline const ::KFMsg::PBTaskDatas& PBBattleScore::_internal_achieve() const {
  return *achieve_;
}
inline const ::KFMsg::PBTaskDatas& PBBattleScore::achieve() const {
  const ::KFMsg::PBTaskDatas* p = achieve_;
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.achieve)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBTaskDatas*>(
      &::KFMsg::_PBTaskDatas_default_instance_);
}
inline ::KFMsg::PBTaskDatas* PBBattleScore::release_achieve() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBattleScore.achieve)
  
  ::KFMsg::PBTaskDatas* temp = achieve_;
  achieve_ = NULL;
  return temp;
}
inline ::KFMsg::PBTaskDatas* PBBattleScore::mutable_achieve() {
  
  if (achieve_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBTaskDatas>(GetArenaNoVirtual());
    achieve_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattleScore.achieve)
  return achieve_;
}
inline void PBBattleScore::set_allocated_achieve(::KFMsg::PBTaskDatas* achieve) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete achieve_;
  }
  if (achieve) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      achieve = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, achieve, submessage_arena);
    }
    
  } else {
    
  }
  achieve_ = achieve;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBattleScore.achieve)
}

// repeated uint64 members = 8;
inline int PBBattleScore::members_size() const {
  return members_.size();
}
inline void PBBattleScore::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint64 PBBattleScore::members(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.members)
  return members_.Get(index);
}
inline void PBBattleScore::set_members(int index, ::google::protobuf::uint64 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.members)
}
inline void PBBattleScore::add_members(::google::protobuf::uint64 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBBattleScore.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBBattleScore::members() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBBattleScore.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBBattleScore::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBBattleScore.members)
  return &members_;
}

// uint32 playercount = 9;
inline void PBBattleScore::clear_playercount() {
  playercount_ = 0u;
}
inline ::google::protobuf::uint32 PBBattleScore::playercount() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleScore.playercount)
  return playercount_;
}
inline void PBBattleScore::set_playercount(::google::protobuf::uint32 value) {
  
  playercount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleScore.playercount)
}

// -------------------------------------------------------------------

// PBRecentData

// uint64 playerid = 1;
inline void PBRecentData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRecentData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.playerid)
  return playerid_;
}
inline void PBRecentData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.playerid)
}

// uint32 ranking = 2;
inline void PBRecentData::clear_ranking() {
  ranking_ = 0u;
}
inline ::google::protobuf::uint32 PBRecentData::ranking() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.ranking)
  return ranking_;
}
inline void PBRecentData::set_ranking(::google::protobuf::uint32 value) {
  
  ranking_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.ranking)
}

// uint32 totalnum = 3;
inline void PBRecentData::clear_totalnum() {
  totalnum_ = 0u;
}
inline ::google::protobuf::uint32 PBRecentData::totalnum() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.totalnum)
  return totalnum_;
}
inline void PBRecentData::set_totalnum(::google::protobuf::uint32 value) {
  
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.totalnum)
}

// uint32 kill = 4;
inline void PBRecentData::clear_kill() {
  kill_ = 0u;
}
inline ::google::protobuf::uint32 PBRecentData::kill() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.kill)
  return kill_;
}
inline void PBRecentData::set_kill(::google::protobuf::uint32 value) {
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.kill)
}

// uint32 score = 5;
inline void PBRecentData::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 PBRecentData::score() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.score)
  return score_;
}
inline void PBRecentData::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.score)
}

// uint32 bekillid = 6;
inline void PBRecentData::clear_bekillid() {
  bekillid_ = 0u;
}
inline ::google::protobuf::uint32 PBRecentData::bekillid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.bekillid)
  return bekillid_;
}
inline void PBRecentData::set_bekillid(::google::protobuf::uint32 value) {
  
  bekillid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.bekillid)
}

// uint32 relationtype = 7;
inline void PBRecentData::clear_relationtype() {
  relationtype_ = 0u;
}
inline ::google::protobuf::uint32 PBRecentData::relationtype() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRecentData.relationtype)
  return relationtype_;
}
inline void PBRecentData::set_relationtype(::google::protobuf::uint32 value) {
  
  relationtype_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRecentData.relationtype)
}

// -------------------------------------------------------------------

// PBApplicationlist

// uint64 playerid = 1;
inline void PBApplicationlist::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBApplicationlist::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBApplicationlist.playerid)
  return playerid_;
}
inline void PBApplicationlist::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBApplicationlist.playerid)
}

// uint64 time = 2;
inline void PBApplicationlist::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBApplicationlist::time() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBApplicationlist.time)
  return time_;
}
inline void PBApplicationlist::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBApplicationlist.time)
}

// .KFMsg.PBStrings basic = 3;
inline bool PBApplicationlist::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
inline void PBApplicationlist::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) {
    delete basic_;
  }
  basic_ = NULL;
}
inline const ::KFMsg::PBStrings& PBApplicationlist::_internal_basic() const {
  return *basic_;
}
inline const ::KFMsg::PBStrings& PBApplicationlist::basic() const {
  const ::KFMsg::PBStrings* p = basic_;
  // @@protoc_insertion_point(field_get:KFMsg.PBApplicationlist.basic)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBStrings*>(
      &::KFMsg::_PBStrings_default_instance_);
}
inline ::KFMsg::PBStrings* PBApplicationlist::release_basic() {
  // @@protoc_insertion_point(field_release:KFMsg.PBApplicationlist.basic)
  
  ::KFMsg::PBStrings* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline ::KFMsg::PBStrings* PBApplicationlist::mutable_basic() {
  
  if (basic_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBStrings>(GetArenaNoVirtual());
    basic_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.PBApplicationlist.basic)
  return basic_;
}
inline void PBApplicationlist::set_allocated_basic(::KFMsg::PBStrings* basic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete basic_;
  }
  if (basic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      basic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, basic, submessage_arena);
    }
    
  } else {
    
  }
  basic_ = basic;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBApplicationlist.basic)
}

// -------------------------------------------------------------------

// PBApplicationlists

// repeated .KFMsg.PBApplicationlist applylists = 1;
inline int PBApplicationlists::applylists_size() const {
  return applylists_.size();
}
inline void PBApplicationlists::clear_applylists() {
  applylists_.Clear();
}
inline ::KFMsg::PBApplicationlist* PBApplicationlists::mutable_applylists(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBApplicationlists.applylists)
  return applylists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBApplicationlist >*
PBApplicationlists::mutable_applylists() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBApplicationlists.applylists)
  return &applylists_;
}
inline const ::KFMsg::PBApplicationlist& PBApplicationlists::applylists(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBApplicationlists.applylists)
  return applylists_.Get(index);
}
inline ::KFMsg::PBApplicationlist* PBApplicationlists::add_applylists() {
  // @@protoc_insertion_point(field_add:KFMsg.PBApplicationlists.applylists)
  return applylists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBApplicationlist >&
PBApplicationlists::applylists() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBApplicationlists.applylists)
  return applylists_;
}

// -------------------------------------------------------------------

// PBGuildIdArray

// repeated uint64 guildid = 1;
inline int PBGuildIdArray::guildid_size() const {
  return guildid_.size();
}
inline void PBGuildIdArray::clear_guildid() {
  guildid_.Clear();
}
inline ::google::protobuf::uint64 PBGuildIdArray::guildid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBGuildIdArray.guildid)
  return guildid_.Get(index);
}
inline void PBGuildIdArray::set_guildid(int index, ::google::protobuf::uint64 value) {
  guildid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.PBGuildIdArray.guildid)
}
inline void PBGuildIdArray::add_guildid(::google::protobuf::uint64 value) {
  guildid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.PBGuildIdArray.guildid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBGuildIdArray::guildid() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBGuildIdArray.guildid)
  return guildid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBGuildIdArray::mutable_guildid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBGuildIdArray.guildid)
  return &guildid_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFDefineMessage_2eproto
