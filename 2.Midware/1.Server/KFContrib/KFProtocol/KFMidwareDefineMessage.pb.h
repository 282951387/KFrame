// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFMidwareDefineMessage.proto

#ifndef PROTOBUF_INCLUDED_KFMidwareDefineMessage_2eproto
#define PROTOBUF_INCLUDED_KFMidwareDefineMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareDefineMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_KFMidwareDefineMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_KFMidwareDefineMessage_2eproto
namespace KFMsg {
class PBRankData;
class PBRankDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRankDataDefaultTypeInternal _PBRankData_default_instance_;
class PBRankData_PbdataEntry_DoNotUse;
class PBRankData_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRankData_PbdataEntry_DoNotUseDefaultTypeInternal _PBRankData_PbdataEntry_DoNotUse_default_instance_;
class PBRankDatas;
class PBRankDatasDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRankDatasDefaultTypeInternal _PBRankDatas_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::PBRankData* Arena::CreateMaybeMessage<::KFMsg::PBRankData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRankData_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBRankData_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRankDatas* Arena::CreateMaybeMessage<::KFMsg::PBRankDatas>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

// ===================================================================

class PBRankData_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBRankData_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBRankData_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBRankData_PbdataEntry_DoNotUse();
  PBRankData_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBRankData_PbdataEntry_DoNotUse& other);
  static const PBRankData_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBRankData_PbdataEntry_DoNotUse*>(&_PBRankData_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRankData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRankData) */ {
 public:
  PBRankData();
  virtual ~PBRankData();

  PBRankData(const PBRankData& from);

  inline PBRankData& operator=(const PBRankData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRankData(PBRankData&& from) noexcept
    : PBRankData() {
    *this = ::std::move(from);
  }

  inline PBRankData& operator=(PBRankData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRankData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRankData* internal_default_instance() {
    return reinterpret_cast<const PBRankData*>(
               &_PBRankData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PBRankData* other);
  friend void swap(PBRankData& a, PBRankData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRankData* New() const final {
    return CreateMaybeMessage<PBRankData>(NULL);
  }

  PBRankData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRankData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRankData& from);
  void MergeFrom(const PBRankData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRankData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 4;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 rankscore = 3;
  void clear_rankscore();
  static const int kRankscoreFieldNumber = 3;
  ::google::protobuf::uint64 rankscore() const;
  void set_rankscore(::google::protobuf::uint64 value);

  // uint32 rankindex = 1;
  void clear_rankindex();
  static const int kRankindexFieldNumber = 1;
  ::google::protobuf::uint32 rankindex() const;
  void set_rankindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBRankData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBRankData_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 rankscore_;
  ::google::protobuf::uint32 rankindex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareDefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRankDatas : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRankDatas) */ {
 public:
  PBRankDatas();
  virtual ~PBRankDatas();

  PBRankDatas(const PBRankDatas& from);

  inline PBRankDatas& operator=(const PBRankDatas& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRankDatas(PBRankDatas&& from) noexcept
    : PBRankDatas() {
    *this = ::std::move(from);
  }

  inline PBRankDatas& operator=(PBRankDatas&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRankDatas& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRankDatas* internal_default_instance() {
    return reinterpret_cast<const PBRankDatas*>(
               &_PBRankDatas_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PBRankDatas* other);
  friend void swap(PBRankDatas& a, PBRankDatas& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRankDatas* New() const final {
    return CreateMaybeMessage<PBRankDatas>(NULL);
  }

  PBRankDatas* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRankDatas>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRankDatas& from);
  void MergeFrom(const PBRankDatas& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRankDatas* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRankData rankdata = 1;
  int rankdata_size() const;
  void clear_rankdata();
  static const int kRankdataFieldNumber = 1;
  ::KFMsg::PBRankData* mutable_rankdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >*
      mutable_rankdata();
  const ::KFMsg::PBRankData& rankdata(int index) const;
  ::KFMsg::PBRankData* add_rankdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >&
      rankdata() const;

  // @@protoc_insertion_point(class_scope:KFMsg.PBRankDatas)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData > rankdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_KFMidwareDefineMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PBRankData

// uint32 rankindex = 1;
inline void PBRankData::clear_rankindex() {
  rankindex_ = 0u;
}
inline ::google::protobuf::uint32 PBRankData::rankindex() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.rankindex)
  return rankindex_;
}
inline void PBRankData::set_rankindex(::google::protobuf::uint32 value) {
  
  rankindex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRankData.rankindex)
}

// uint64 playerid = 2;
inline void PBRankData::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRankData::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.playerid)
  return playerid_;
}
inline void PBRankData::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRankData.playerid)
}

// uint64 rankscore = 3;
inline void PBRankData::clear_rankscore() {
  rankscore_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRankData::rankscore() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankData.rankscore)
  return rankscore_;
}
inline void PBRankData::set_rankscore(::google::protobuf::uint64 value) {
  
  rankscore_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRankData.rankscore)
}

// map<string, bytes> pbdata = 4;
inline int PBRankData::pbdata_size() const {
  return pbdata_.size();
}
inline void PBRankData::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBRankData::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBRankData.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBRankData::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBRankData.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// PBRankDatas

// repeated .KFMsg.PBRankData rankdata = 1;
inline int PBRankDatas::rankdata_size() const {
  return rankdata_.size();
}
inline void PBRankDatas::clear_rankdata() {
  rankdata_.Clear();
}
inline ::KFMsg::PBRankData* PBRankDatas::mutable_rankdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBRankDatas.rankdata)
  return rankdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >*
PBRankDatas::mutable_rankdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBRankDatas.rankdata)
  return &rankdata_;
}
inline const ::KFMsg::PBRankData& PBRankDatas::rankdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRankDatas.rankdata)
  return rankdata_.Get(index);
}
inline ::KFMsg::PBRankData* PBRankDatas::add_rankdata() {
  // @@protoc_insertion_point(field_add:KFMsg.PBRankDatas.rankdata)
  return rankdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRankData >&
PBRankDatas::rankdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBRankDatas.rankdata)
  return rankdata_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KFMidwareDefineMessage_2eproto
