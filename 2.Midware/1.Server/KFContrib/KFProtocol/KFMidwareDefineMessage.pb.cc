// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFMidwareDefineMessage.proto

#include "KFMidwareDefineMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_KFMidwareDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRankData_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData;
}  // namespace protobuf_KFMidwareDefineMessage_2eproto
namespace KFMsg {
class PBRankData_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankData_PbdataEntry_DoNotUse>
      _instance;
} _PBRankData_PbdataEntry_DoNotUse_default_instance_;
class PBRankDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankData>
      _instance;
} _PBRankData_default_instance_;
class PBRankDatasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRankDatas>
      _instance;
} _PBRankDatas_default_instance_;
}  // namespace KFMsg
namespace protobuf_KFMidwareDefineMessage_2eproto {
static void InitDefaultsPBRankData_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankData_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRankData_PbdataEntry_DoNotUse();
  }
  ::KFMsg::PBRankData_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRankData_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRankData_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRankData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankData_default_instance_;
    new (ptr) ::KFMsg::PBRankData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRankData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRankData}, {
      &protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankData_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsPBRankDatas() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRankDatas_default_instance_;
    new (ptr) ::KFMsg::PBRankDatas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRankDatas::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankDatas =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBRankDatas}, {
      &protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankData.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankData_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRankDatas.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, rankindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, rankscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankData, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRankDatas, rankdata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::KFMsg::PBRankData_PbdataEntry_DoNotUse)},
  { 9, -1, sizeof(::KFMsg::PBRankData)},
  { 18, -1, sizeof(::KFMsg::PBRankDatas)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankData_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRankDatas_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "KFMidwareDefineMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034KFMidwareDefineMessage.proto\022\005KFMsg\"\242\001"
      "\n\nPBRankData\022\021\n\trankindex\030\001 \001(\r\022\020\n\010playe"
      "rid\030\002 \001(\004\022\021\n\trankscore\030\003 \001(\004\022-\n\006pbdata\030\004"
      " \003(\0132\035.KFMsg.PBRankData.PbdataEntry\032-\n\013P"
      "bdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\002"
      "8\001\"2\n\013PBRankDatas\022#\n\010rankdata\030\001 \003(\0132\021.KF"
      "Msg.PBRankDatab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 262);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFMidwareDefineMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_KFMidwareDefineMessage_2eproto
namespace KFMsg {

// ===================================================================

PBRankData_PbdataEntry_DoNotUse::PBRankData_PbdataEntry_DoNotUse() {}
PBRankData_PbdataEntry_DoNotUse::PBRankData_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRankData_PbdataEntry_DoNotUse::MergeFrom(const PBRankData_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRankData_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFMidwareDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareDefineMessage_2eproto::file_level_metadata[0];
}
void PBRankData_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRankData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRankData::kRankindexFieldNumber;
const int PBRankData::kPlayeridFieldNumber;
const int PBRankData::kRankscoreFieldNumber;
const int PBRankData::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRankData::PBRankData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRankData)
}
PBRankData::PBRankData(const PBRankData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rankindex_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRankData)
}

void PBRankData::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankindex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
}

PBRankData::~PBRankData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRankData)
  SharedDtor();
}

void PBRankData::SharedDtor() {
}

void PBRankData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRankData::descriptor() {
  ::protobuf_KFMidwareDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRankData& PBRankData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankData.base);
  return *internal_default_instance();
}


void PBRankData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankindex_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankindex_));
  _internal_metadata_.Clear();
}

bool PBRankData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRankData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankindex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 rankscore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rankscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          PBRankData_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRankData_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRankData.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRankData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRankData)
  return false;
#undef DO_
}

void PBRankData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankindex(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->rankscore(), output);
  }

  // map<string, bytes> pbdata = 4;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRankData.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRankData)
}

::google::protobuf::uint8* PBRankData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRankData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankindex(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->rankscore(), target);
  }

  // map<string, bytes> pbdata = 4;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRankData.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRankData)
  return target;
}

size_t PBRankData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRankData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<PBRankData_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 rankscore = 3;
  if (this->rankscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rankscore());
  }

  // uint32 rankindex = 1;
  if (this->rankindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRankData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRankData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRankData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRankData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRankData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRankData)
    MergeFrom(*source);
  }
}

void PBRankData::MergeFrom(const PBRankData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRankData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankscore() != 0) {
    set_rankscore(from.rankscore());
  }
  if (from.rankindex() != 0) {
    set_rankindex(from.rankindex());
  }
}

void PBRankData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRankData::CopyFrom(const PBRankData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRankData::IsInitialized() const {
  return true;
}

void PBRankData::Swap(PBRankData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRankData::InternalSwap(PBRankData* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(playerid_, other->playerid_);
  swap(rankscore_, other->rankscore_);
  swap(rankindex_, other->rankindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRankData::GetMetadata() const {
  protobuf_KFMidwareDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBRankDatas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRankDatas::kRankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRankDatas::PBRankDatas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankDatas.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRankDatas)
}
PBRankDatas::PBRankDatas(const PBRankDatas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rankdata_(from.rankdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRankDatas)
}

void PBRankDatas::SharedCtor() {
}

PBRankDatas::~PBRankDatas() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRankDatas)
  SharedDtor();
}

void PBRankDatas::SharedDtor() {
}

void PBRankDatas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRankDatas::descriptor() {
  ::protobuf_KFMidwareDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRankDatas& PBRankDatas::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankDatas.base);
  return *internal_default_instance();
}


void PBRankDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankdata_.Clear();
  _internal_metadata_.Clear();
}

bool PBRankDatas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRankDatas)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBRankData rankdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRankDatas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRankDatas)
  return false;
#undef DO_
}

void PBRankDatas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBRankData rankdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rankdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRankDatas)
}

::google::protobuf::uint8* PBRankDatas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRankDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBRankData rankdata = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rankdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRankDatas)
  return target;
}

size_t PBRankDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRankDatas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRankData rankdata = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rankdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rankdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRankDatas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRankDatas)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRankDatas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRankDatas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRankDatas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRankDatas)
    MergeFrom(*source);
  }
}

void PBRankDatas::MergeFrom(const PBRankDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRankDatas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankdata_.MergeFrom(from.rankdata_);
}

void PBRankDatas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRankDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRankDatas::CopyFrom(const PBRankDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRankDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRankDatas::IsInitialized() const {
  return true;
}

void PBRankDatas::Swap(PBRankDatas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRankDatas::InternalSwap(PBRankDatas* other) {
  using std::swap;
  CastToBase(&rankdata_)->InternalSwap(CastToBase(&other->rankdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRankDatas::GetMetadata() const {
  protobuf_KFMidwareDefineMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareDefineMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankData_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRankData_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankData_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankData* Arena::CreateMaybeMessage< ::KFMsg::PBRankData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRankDatas* Arena::CreateMaybeMessage< ::KFMsg::PBRankDatas >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRankDatas >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
