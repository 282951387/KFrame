// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KFMidwareServerMessage.proto

#include "KFMidwareServerMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_KFDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBLoginData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject;
}  // namespace protobuf_KFDefineMessage_2eproto
namespace protobuf_KFMidwareDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData;
}  // namespace protobuf_KFMidwareDefineMessage_2eproto
namespace protobuf_KFMidwareServerMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBMail_DataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBZoneData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_KFMidwareServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail;
}  // namespace protobuf_KFMidwareServerMessage_2eproto
namespace KFMsg {
class PBZoneDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBZoneData>
      _instance;
} _PBZoneData_default_instance_;
class S2SUpdateZoneToLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateZoneToLoginReq>
      _instance;
} _S2SUpdateZoneToLoginReq_default_instance_;
class S2SUpdateZoneToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateZoneToWorldReq>
      _instance;
} _S2SUpdateZoneToWorldReq_default_instance_;
class S2SDisconnectZoneToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDisconnectZoneToWorldReq>
      _instance;
} _S2SDisconnectZoneToWorldReq_default_instance_;
class S2SLoginToLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToLoginReq>
      _instance;
} _S2SLoginToLoginReq_default_instance_;
class S2SLoginToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToGateAck>
      _instance;
} _S2SLoginToGateAck_default_instance_;
class S2SLoginToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToWorldReq>
      _instance;
} _S2SLoginToWorldReq_default_instance_;
class S2SLoginToLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToLoginAck>
      _instance;
} _S2SLoginToLoginAck_default_instance_;
class S2SLoginToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToGameReq>
      _instance;
} _S2SLoginToGameReq_default_instance_;
class S2SEnterToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SEnterToGateAck>
      _instance;
} _S2SEnterToGateAck_default_instance_;
class S2SLogoutToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLogoutToGameReq>
      _instance;
} _S2SLogoutToGameReq_default_instance_;
class S2SDisconnectToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDisconnectToGameReq>
      _instance;
} _S2SDisconnectToGameReq_default_instance_;
class S2SLoadPlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoadPlayerToDataReq>
      _instance;
} _S2SLoadPlayerToDataReq_default_instance_;
class S2SLoadPlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoadPlayerToGameAck>
      _instance;
} _S2SLoadPlayerToGameAck_default_instance_;
class S2SSavePlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSavePlayerToDataReq>
      _instance;
} _S2SSavePlayerToDataReq_default_instance_;
class S2SQueryPlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerToDataReq>
      _instance;
} _S2SQueryPlayerToDataReq_default_instance_;
class S2SQueryPlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerToGameAck>
      _instance;
} _S2SQueryPlayerToGameAck_default_instance_;
class S2SSetPlayerNameToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameToDataReq>
      _instance;
} _S2SSetPlayerNameToDataReq_default_instance_;
class S2SSetPlayerNameToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameToGameAck>
      _instance;
} _S2SSetPlayerNameToGameAck_default_instance_;
class S2SPlayerEnterToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterToWorldReq>
      _instance;
} _S2SPlayerEnterToWorldReq_default_instance_;
class S2SPlayerLeaveToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveToWorldReq>
      _instance;
} _S2SPlayerLeaveToWorldReq_default_instance_;
class S2SPlayerSyncToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerSyncToWorldReq>
      _instance;
} _S2SPlayerSyncToWorldReq_default_instance_;
class S2SKickPlayerToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToGameReq>
      _instance;
} _S2SKickPlayerToGameReq_default_instance_;
class S2SKickPlayerToGateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToGateReq>
      _instance;
} _S2SKickPlayerToGateReq_default_instance_;
class S2SBroadcastToGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGame>
      _instance;
} _S2SBroadcastToGame_default_instance_;
class S2SBroadcastToGateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGate>
      _instance;
} _S2SBroadcastToGate_default_instance_;
class S2STransmitToPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STransmitToPlayer>
      _instance;
} _S2STransmitToPlayer_default_instance_;
class PBMail_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail_DataEntry_DoNotUse>
      _instance;
} _PBMail_DataEntry_DoNotUse_default_instance_;
class PBMailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail>
      _instance;
} _PBMail_default_instance_;
class S2SQueryMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailReq>
      _instance;
} _S2SQueryMailReq_default_instance_;
class S2SQueryMailAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailAck>
      _instance;
} _S2SQueryMailAck_default_instance_;
class S2SAddMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddMailReq>
      _instance;
} _S2SAddMailReq_default_instance_;
class S2SNoticeNewMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNoticeNewMailReq>
      _instance;
} _S2SNoticeNewMailReq_default_instance_;
class S2SNewPlayerMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNewPlayerMailReq>
      _instance;
} _S2SNewPlayerMailReq_default_instance_;
class S2SUpdateMailStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailStatusReq>
      _instance;
} _S2SUpdateMailStatusReq_default_instance_;
class S2SUpdateMailStatusAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailStatusAck>
      _instance;
} _S2SUpdateMailStatusAck_default_instance_;
class S2SUpdateRankDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateRankDataReq>
      _instance;
} _S2SUpdateRankDataReq_default_instance_;
class S2SQueryRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRankListReq>
      _instance;
} _S2SQueryRankListReq_default_instance_;
class S2SQueryFriendRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendRankListReq>
      _instance;
} _S2SQueryFriendRankListReq_default_instance_;
}  // namespace KFMsg
namespace protobuf_KFMidwareServerMessage_2eproto {
static void InitDefaultsPBZoneData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBZoneData_default_instance_;
    new (ptr) ::KFMsg::PBZoneData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBZoneData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBZoneData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBZoneData}, {}};

static void InitDefaultsS2SUpdateZoneToLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateZoneToLoginReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateZoneToLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateZoneToLoginReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateZoneToLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateZoneToLoginReq}, {
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBZoneData.base,}};

static void InitDefaultsS2SUpdateZoneToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateZoneToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateZoneToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateZoneToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateZoneToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateZoneToWorldReq}, {
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBZoneData.base,}};

static void InitDefaultsS2SDisconnectZoneToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDisconnectZoneToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SDisconnectZoneToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDisconnectZoneToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDisconnectZoneToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDisconnectZoneToWorldReq}, {}};

static void InitDefaultsS2SLoginToLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToLoginReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToLoginReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToLoginReq}, {}};

static void InitDefaultsS2SLoginToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToGateAck}, {}};

static void InitDefaultsS2SLoginToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginToWorldReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoginToLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToLoginAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToLoginAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToLoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToLoginAck}, {}};

static void InitDefaultsS2SLoginToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginToGameReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SEnterToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SEnterToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SEnterToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SEnterToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SEnterToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SEnterToGateAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SLogoutToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLogoutToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLogoutToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLogoutToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLogoutToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLogoutToGameReq}, {}};

static void InitDefaultsS2SDisconnectToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDisconnectToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SDisconnectToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDisconnectToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDisconnectToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDisconnectToGameReq}, {}};

static void InitDefaultsS2SLoadPlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoadPlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoadPlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoadPlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoadPlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoadPlayerToDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoadPlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoadPlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoadPlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoadPlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SLoadPlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SLoadPlayerToGameAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSavePlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSavePlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SSavePlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSavePlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSavePlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSavePlayerToDataReq}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SQueryPlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryPlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryPlayerToDataReq}, {}};

static void InitDefaultsS2SQueryPlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryPlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryPlayerToGameAck}, {
      &protobuf_KFDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSetPlayerNameToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameToDataReq}, {}};

static void InitDefaultsS2SSetPlayerNameToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameToGameAck}, {}};

static void InitDefaultsS2SPlayerEnterToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerEnterToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerEnterToWorldReq}, {}};

static void InitDefaultsS2SPlayerLeaveToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveToWorldReq}, {}};

static void InitDefaultsS2SPlayerSyncToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerSyncToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerSyncToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerSyncToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerSyncToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerSyncToWorldReq}, {}};

static void InitDefaultsS2SKickPlayerToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToGameReq}, {}};

static void InitDefaultsS2SKickPlayerToGateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToGateReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToGateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToGateReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToGateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToGateReq}, {}};

static void InitDefaultsS2SBroadcastToGame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGame_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGame::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGame}, {}};

static void InitDefaultsS2SBroadcastToGate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGate_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGate::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGate}, {}};

static void InitDefaultsS2STransmitToPlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STransmitToPlayer_default_instance_;
    new (ptr) ::KFMsg::S2STransmitToPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STransmitToPlayer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STransmitToPlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STransmitToPlayer}, {}};

static void InitDefaultsPBMail_DataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBMail_DataEntry_DoNotUse();
  }
  ::KFMsg::PBMail_DataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBMail_DataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBMail_DataEntry_DoNotUse}, {}};

static void InitDefaultsPBMail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_default_instance_;
    new (ptr) ::KFMsg::PBMail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMail::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMail}, {
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBMail_DataEntry_DoNotUse.base,}};

static void InitDefaultsS2SQueryMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryMailReq}, {}};

static void InitDefaultsS2SQueryMailAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryMailAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryMailAck}, {
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SAddMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddMailReq}, {
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SNoticeNewMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNoticeNewMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNoticeNewMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNoticeNewMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNoticeNewMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNoticeNewMailReq}, {}};

static void InitDefaultsS2SNewPlayerMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNewPlayerMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNewPlayerMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNewPlayerMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNewPlayerMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNewPlayerMailReq}, {}};

static void InitDefaultsS2SUpdateMailStatusReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailStatusReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailStatusReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailStatusReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailStatusReq}, {}};

static void InitDefaultsS2SUpdateMailStatusAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailStatusAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailStatusAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailStatusAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailStatusAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailStatusAck}, {}};

static void InitDefaultsS2SUpdateRankDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateRankDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateRankDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateRankDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateRankDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateRankDataReq}, {
      &protobuf_KFMidwareDefineMessage_2eproto::scc_info_PBRankData.base,}};

static void InitDefaultsS2SQueryRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRankListReq}, {}};

static void InitDefaultsS2SQueryFriendRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendRankListReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBZoneData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateZoneToLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateZoneToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDisconnectZoneToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToLoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SEnterToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLogoutToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDisconnectToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoadPlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoadPlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSavePlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerSyncToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToGateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STransmitToPlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail_DataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNoticeNewMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNewPlayerMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailStatusReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailStatusAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateRankDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendRankListReq.base);
}

::google::protobuf::Metadata file_level_metadata[39];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToLoginReq, zonedata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToWorldReq, zonedata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectZoneToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectZoneToWorldReq, appid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, bantime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToWorldReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGameReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, servertime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLogoutToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLogoutToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToDataReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, oldname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, itemuuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, itemuuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerSyncToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerSyncToWorldReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGame, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGame, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGate, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGate, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STransmitToPlayer, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, maxid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, mail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, pbmail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, pbrankdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, friendid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::PBZoneData)},
  { 9, -1, sizeof(::KFMsg::S2SUpdateZoneToLoginReq)},
  { 15, -1, sizeof(::KFMsg::S2SUpdateZoneToWorldReq)},
  { 21, -1, sizeof(::KFMsg::S2SDisconnectZoneToWorldReq)},
  { 27, -1, sizeof(::KFMsg::S2SLoginToLoginReq)},
  { 36, -1, sizeof(::KFMsg::S2SLoginToGateAck)},
  { 45, -1, sizeof(::KFMsg::S2SLoginToWorldReq)},
  { 51, -1, sizeof(::KFMsg::S2SLoginToLoginAck)},
  { 60, -1, sizeof(::KFMsg::S2SLoginToGameReq)},
  { 66, -1, sizeof(::KFMsg::S2SEnterToGateAck)},
  { 74, -1, sizeof(::KFMsg::S2SLogoutToGameReq)},
  { 80, -1, sizeof(::KFMsg::S2SDisconnectToGameReq)},
  { 86, -1, sizeof(::KFMsg::S2SLoadPlayerToDataReq)},
  { 92, -1, sizeof(::KFMsg::S2SLoadPlayerToGameAck)},
  { 100, -1, sizeof(::KFMsg::S2SSavePlayerToDataReq)},
  { 107, -1, sizeof(::KFMsg::S2SQueryPlayerToDataReq)},
  { 113, -1, sizeof(::KFMsg::S2SQueryPlayerToGameAck)},
  { 120, -1, sizeof(::KFMsg::S2SSetPlayerNameToDataReq)},
  { 129, -1, sizeof(::KFMsg::S2SSetPlayerNameToGameAck)},
  { 138, -1, sizeof(::KFMsg::S2SPlayerEnterToWorldReq)},
  { 145, -1, sizeof(::KFMsg::S2SPlayerLeaveToWorldReq)},
  { 152, -1, sizeof(::KFMsg::S2SPlayerSyncToWorldReq)},
  { 158, -1, sizeof(::KFMsg::S2SKickPlayerToGameReq)},
  { 165, -1, sizeof(::KFMsg::S2SKickPlayerToGateReq)},
  { 172, -1, sizeof(::KFMsg::S2SBroadcastToGame)},
  { 179, -1, sizeof(::KFMsg::S2SBroadcastToGate)},
  { 186, -1, sizeof(::KFMsg::S2STransmitToPlayer)},
  { 194, 201, sizeof(::KFMsg::PBMail_DataEntry_DoNotUse)},
  { 203, -1, sizeof(::KFMsg::PBMail)},
  { 209, -1, sizeof(::KFMsg::S2SQueryMailReq)},
  { 217, -1, sizeof(::KFMsg::S2SQueryMailAck)},
  { 224, -1, sizeof(::KFMsg::S2SAddMailReq)},
  { 232, -1, sizeof(::KFMsg::S2SNoticeNewMailReq)},
  { 238, -1, sizeof(::KFMsg::S2SNewPlayerMailReq)},
  { 245, -1, sizeof(::KFMsg::S2SUpdateMailStatusReq)},
  { 254, -1, sizeof(::KFMsg::S2SUpdateMailStatusAck)},
  { 262, -1, sizeof(::KFMsg::S2SUpdateRankDataReq)},
  { 271, -1, sizeof(::KFMsg::S2SQueryRankListReq)},
  { 279, -1, sizeof(::KFMsg::S2SQueryFriendRankListReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBZoneData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateZoneToLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateZoneToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDisconnectZoneToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SEnterToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLogoutToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDisconnectToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoadPlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoadPlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSavePlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerSyncToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToGateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STransmitToPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNoticeNewMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNewPlayerMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailStatusAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateRankDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendRankListReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "KFMidwareServerMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 39);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034KFMidwareServerMessage.proto\022\005KFMsg\032\025K"
      "FDefineMessage.proto\032\034KFMidwareDefineMes"
      "sage.proto\"D\n\nPBZoneData\022\r\n\005appid\030\001 \001(\004\022"
      "\n\n\002ip\030\002 \001(\014\022\014\n\004port\030\003 \001(\r\022\r\n\005count\030\004 \001(\r"
      "\">\n\027S2SUpdateZoneToLoginReq\022#\n\010zonedata\030"
      "\001 \001(\0132\021.KFMsg.PBZoneData\">\n\027S2SUpdateZon"
      "eToWorldReq\022#\n\010zonedata\030\001 \001(\0132\021.KFMsg.PB"
      "ZoneData\",\n\033S2SDisconnectZoneToWorldReq\022"
      "\r\n\005appid\030\001 \001(\004\"U\n\022S2SLoginToLoginReq\022\n\n\002"
      "ip\030\001 \001(\014\022\r\n\005token\030\002 \001(\014\022\021\n\taccountid\030\003 \001"
      "(\004\022\021\n\tsessionid\030\004 \001(\004\"Z\n\021S2SLoginToGateA"
      "ck\022\016\n\006result\030\001 \001(\r\022\021\n\taccountid\030\002 \001(\004\022\021\n"
      "\tsessionid\030\003 \001(\004\022\017\n\007bantime\030\004 \001(\004\"9\n\022S2S"
      "LoginToWorldReq\022#\n\007pblogin\030\001 \001(\0132\022.KFMsg"
      ".PBLoginData\"Z\n\022S2SLoginToLoginAck\022\016\n\006re"
      "sult\030\001 \001(\r\022\016\n\006gateid\030\002 \001(\004\022\021\n\taccountid\030"
      "\003 \001(\004\022\021\n\tsessionid\030\004 \001(\004\"8\n\021S2SLoginToGa"
      "meReq\022#\n\007pblogin\030\001 \001(\0132\022.KFMsg.PBLoginDa"
      "ta\"q\n\021S2SEnterToGateAck\022#\n\007pblogin\030\001 \001(\013"
      "2\022.KFMsg.PBLoginData\022#\n\nplayerdata\030\002 \001(\013"
      "2\017.KFMsg.PBObject\022\022\n\nservertime\030\003 \001(\004\"&\n"
      "\022S2SLogoutToGameReq\022\020\n\010playerid\030\001 \001(\004\"*\n"
      "\026S2SDisconnectToGameReq\022\020\n\010playerid\030\001 \001("
      "\004\"=\n\026S2SLoadPlayerToDataReq\022#\n\007pblogin\030\001"
      " \001(\0132\022.KFMsg.PBLoginData\"r\n\026S2SLoadPlaye"
      "rToGameAck\022\016\n\006result\030\001 \001(\r\022#\n\007pblogin\030\002 "
      "\001(\0132\022.KFMsg.PBLoginData\022#\n\nplayerdata\030\003 "
      "\001(\0132\017.KFMsg.PBObject\"C\n\026S2SSavePlayerToD"
      "ataReq\022\n\n\002id\030\001 \001(\004\022\035\n\004data\030\003 \001(\0132\017.KFMsg"
      ".PBObject\"+\n\027S2SQueryPlayerToDataReq\022\020\n\010"
      "playerid\030\001 \001(\004\"N\n\027S2SQueryPlayerToGameAc"
      "k\022\016\n\006result\030\001 \001(\r\022#\n\nplayerdata\030\002 \001(\0132\017."
      "KFMsg.PBObject\"a\n\031S2SSetPlayerNameToData"
      "Req\022\020\n\010playerid\030\001 \001(\004\022\017\n\007oldname\030\002 \001(\014\022\017"
      "\n\007newname\030\003 \001(\014\022\020\n\010itemuuid\030\004 \001(\004\"]\n\031S2S"
      "SetPlayerNameToGameAck\022\016\n\006result\030\001 \001(\r\022\020"
      "\n\010playerid\030\002 \001(\004\022\014\n\004name\030\003 \001(\014\022\020\n\010itemuu"
      "id\030\004 \001(\004\"\?\n\030S2SPlayerEnterToWorldReq\022\020\n\010"
      "playerid\030\001 \001(\004\022\021\n\taccountid\030\002 \001(\004\"\?\n\030S2S"
      "PlayerLeaveToWorldReq\022\020\n\010playerid\030\001 \001(\004\022"
      "\021\n\taccountid\030\002 \001(\004\"+\n\027S2SPlayerSyncToWor"
      "ldReq\022\020\n\010playerid\030\001 \003(\004\"8\n\026S2SKickPlayer"
      "ToGameReq\022\014\n\004type\030\001 \001(\r\022\020\n\010playerid\030\002 \001("
      "\004\"8\n\026S2SKickPlayerToGateReq\022\014\n\004type\030\001 \001("
      "\r\022\020\n\010playerid\030\002 \001(\004\"4\n\022S2SBroadcastToGam"
      "e\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\"4\n\022S2S"
      "BroadcastToGate\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdat"
      "a\030\002 \001(\014\"G\n\023S2STransmitToPlayer\022\020\n\010player"
      "id\030\001 \001(\004\022\r\n\005msgid\030\002 \001(\r\022\017\n\007msgdata\030\003 \001(\014"
      "\"\\\n\006PBMail\022%\n\004data\030\001 \003(\0132\027.KFMsg.PBMail."
      "DataEntry\032+\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\014:\0028\001\"B\n\017S2SQueryMailReq\022\020\n\010pla"
      "yerid\030\001 \001(\004\022\016\n\006zoneid\030\002 \001(\r\022\r\n\005maxid\030\003 \001"
      "(\004\"@\n\017S2SQueryMailAck\022\020\n\010playerid\030\001 \001(\004\022"
      "\033\n\004mail\030\002 \003(\0132\r.KFMsg.PBMail\"N\n\rS2SAddMa"
      "ilReq\022\014\n\004flag\030\001 \001(\r\022\020\n\010objectid\030\002 \001(\004\022\035\n"
      "\006pbmail\030\003 \001(\0132\r.KFMsg.PBMail\"\'\n\023S2SNotic"
      "eNewMailReq\022\020\n\010playerid\030\001 \001(\004\"7\n\023S2SNewP"
      "layerMailReq\022\020\n\010playerid\030\001 \001(\004\022\016\n\006zoneid"
      "\030\002 \001(\r\"T\n\026S2SUpdateMailStatusReq\022\020\n\010play"
      "erid\030\001 \001(\004\022\n\n\002id\030\002 \001(\004\022\014\n\004flag\030\003 \001(\r\022\016\n\006"
      "status\030\004 \001(\r\"F\n\026S2SUpdateMailStatusAck\022\020"
      "\n\010playerid\030\001 \001(\004\022\n\n\002id\030\002 \001(\004\022\016\n\006status\030\003"
      " \001(\r\"o\n\024S2SUpdateRankDataReq\022\020\n\010playerid"
      "\030\001 \001(\004\022\016\n\006rankid\030\002 \001(\r\022\016\n\006zoneid\030\003 \001(\r\022%"
      "\n\npbrankdata\030\004 \001(\0132\021.KFMsg.PBRankData\"G\n"
      "\023S2SQueryRankListReq\022\020\n\010playerid\030\001 \001(\004\022\016"
      "\n\006rankid\030\002 \001(\r\022\016\n\006zoneid\030\003 \001(\r\"O\n\031S2SQue"
      "ryFriendRankListReq\022\020\n\010playerid\030\001 \001(\004\022\016\n"
      "\006rankid\030\002 \001(\r\022\020\n\010friendid\030\003 \003(\004*\333\t\n\025Midw"
      "areServerProtocol\022%\n!S2S_MIDWARE_SERVER_"
      "PROTOCOL_BEGIN\020\000\022\"\n\034S2S_UPDATE_ZONE_TO_L"
      "OGIN_REQ\020\241\234\001\022\"\n\034S2S_UPDATE_ZONE_TO_WORLD"
      "_REQ\020\242\234\001\022&\n S2S_DISCONNECT_ZONE_TO_WORLD"
      "_REQ\020\243\234\001\022\034\n\026S2S_LOGIN_TO_LOGIN_REQ\020\205\235\001\022\033"
      "\n\025S2S_LOGIN_TO_GATE_ACK\020\206\235\001\022\034\n\026S2S_LOGIN"
      "_TO_WORLD_REQ\020\207\235\001\022\034\n\026S2S_LOGIN_TO_LOGIN_"
      "ACK\020\210\235\001\022\033\n\025S2S_LOGIN_TO_GAME_REQ\020\211\235\001\022\034\n\026"
      "S2S_LOGOUT_TO_GAME_REQ\020\212\235\001\022 \n\032S2S_DISCON"
      "NECT_TO_GAME_REQ\020\213\235\001\022\033\n\025S2S_ENTER_TO_GAT"
      "E_ACK\020\214\235\001\022\"\n\034S2S_PLAYER_SYNC_TO_WORLD_RE"
      "Q\020\351\235\001\022#\n\035S2S_PLAYER_ENTER_TO_WORLD_REQ\020\352"
      "\235\001\022#\n\035S2S_PLAYER_LEAVE_TO_WORLD_REQ\020\353\235\001\022"
      "!\n\033S2S_KICK_PLAYER_TO_GAME_REQ\020\354\235\001\022!\n\033S2"
      "S_KICK_PLAYER_TO_GATE_REQ\020\355\235\001\022\033\n\025S2S_BRO"
      "ADCAST_TO_GAME\020\315\236\001\022\033\n\025S2S_BROADCAST_TO_G"
      "ATE\020\316\236\001\022\034\n\026S2S_TRANSMIT_TO_PLAYER\020\317\236\001\022!\n"
      "\033S2S_LOAD_PLAYER_TO_DATA_REQ\020\261\237\001\022!\n\033S2S_"
      "LOAD_PLAYER_TO_GAME_ACK\020\262\237\001\022!\n\033S2S_SAVE_"
      "PLAYER_TO_DATA_REQ\020\263\237\001\022\"\n\034S2S_QUERY_PLAY"
      "ER_TO_DATA_REQ\020\264\237\001\022\"\n\034S2S_QUERY_PLAYER_T"
      "O_GAME_ACK\020\265\237\001\022$\n\036S2S_SET_PLAYERNAME_TO_"
      "DATA_REQ\020\266\237\001\022$\n\036S2S_SET_PLAYERNAME_TO_GA"
      "ME_ACK\020\267\237\001\022\035\n\027S2S_NEW_PLAYER_MAIL_REQ\020\225\240"
      "\001\022\030\n\022S2S_QUERY_MAIL_REQ\020\226\240\001\022\030\n\022S2S_QUERY"
      "_MAIL_ACK\020\227\240\001\022\026\n\020S2S_ADD_MAIL_REQ\020\230\240\001\022\035\n"
      "\027S2S_NOTICE_NEW_MAIL_REQ\020\231\240\001\022 \n\032S2S_UPDA"
      "TE_MAIL_STATUS_REQ\020\232\240\001\022 \n\032S2S_UPDATE_MAI"
      "L_STATUS_ACK\020\233\240\001\022\036\n\030S2S_UPDATE_RANK_DATA"
      "_REQ\020\371\240\001\022\035\n\027S2S_QUERY_RANK_LIST_REQ\020\372\240\001\022"
      "$\n\036S2S_QUERY_FRIEND_RANK_LIST_REQ\020\373\240\001b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4045);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KFMidwareServerMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_KFDefineMessage_2eproto::AddDescriptors();
  ::protobuf_KFMidwareDefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_KFMidwareServerMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* MidwareServerProtocol_descriptor() {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KFMidwareServerMessage_2eproto::file_level_enum_descriptors[0];
}
bool MidwareServerProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 20001:
    case 20002:
    case 20003:
    case 20101:
    case 20102:
    case 20103:
    case 20104:
    case 20105:
    case 20106:
    case 20107:
    case 20108:
    case 20201:
    case 20202:
    case 20203:
    case 20204:
    case 20205:
    case 20301:
    case 20302:
    case 20303:
    case 20401:
    case 20402:
    case 20403:
    case 20404:
    case 20405:
    case 20406:
    case 20407:
    case 20501:
    case 20502:
    case 20503:
    case 20504:
    case 20505:
    case 20506:
    case 20507:
    case 20601:
    case 20602:
    case 20603:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PBZoneData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBZoneData::kAppidFieldNumber;
const int PBZoneData::kIpFieldNumber;
const int PBZoneData::kPortFieldNumber;
const int PBZoneData::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBZoneData::PBZoneData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBZoneData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBZoneData)
}
PBZoneData::PBZoneData(const PBZoneData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBZoneData)
}

void PBZoneData::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(count_));
}

PBZoneData::~PBZoneData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBZoneData)
  SharedDtor();
}

void PBZoneData::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBZoneData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBZoneData::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBZoneData& PBZoneData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_PBZoneData.base);
  return *internal_default_instance();
}


void PBZoneData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBZoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool PBZoneData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBZoneData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBZoneData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBZoneData)
  return false;
#undef DO_
}

void PBZoneData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBZoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBZoneData)
}

::google::protobuf::uint8* PBZoneData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBZoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBZoneData)
  return target;
}

size_t PBZoneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBZoneData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 appid = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBZoneData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBZoneData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBZoneData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBZoneData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBZoneData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBZoneData)
    MergeFrom(*source);
  }
}

void PBZoneData::MergeFrom(const PBZoneData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBZoneData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PBZoneData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBZoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBZoneData::CopyFrom(const PBZoneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBZoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBZoneData::IsInitialized() const {
  return true;
}

void PBZoneData::Swap(PBZoneData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBZoneData::InternalSwap(PBZoneData* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(port_, other->port_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBZoneData::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateZoneToLoginReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateZoneToLoginReq_default_instance_._instance.get_mutable()->zonedata_ = const_cast< ::KFMsg::PBZoneData*>(
      ::KFMsg::PBZoneData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateZoneToLoginReq::kZonedataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateZoneToLoginReq::S2SUpdateZoneToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateZoneToLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateZoneToLoginReq)
}
S2SUpdateZoneToLoginReq::S2SUpdateZoneToLoginReq(const S2SUpdateZoneToLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_zonedata()) {
    zonedata_ = new ::KFMsg::PBZoneData(*from.zonedata_);
  } else {
    zonedata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateZoneToLoginReq)
}

void S2SUpdateZoneToLoginReq::SharedCtor() {
  zonedata_ = NULL;
}

S2SUpdateZoneToLoginReq::~S2SUpdateZoneToLoginReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateZoneToLoginReq)
  SharedDtor();
}

void S2SUpdateZoneToLoginReq::SharedDtor() {
  if (this != internal_default_instance()) delete zonedata_;
}

void S2SUpdateZoneToLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateZoneToLoginReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateZoneToLoginReq& S2SUpdateZoneToLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateZoneToLoginReq.base);
  return *internal_default_instance();
}


void S2SUpdateZoneToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateZoneToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && zonedata_ != NULL) {
    delete zonedata_;
  }
  zonedata_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SUpdateZoneToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateZoneToLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBZoneData zonedata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zonedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateZoneToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateZoneToLoginReq)
  return false;
#undef DO_
}

void S2SUpdateZoneToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateZoneToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_zonedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateZoneToLoginReq)
}

::google::protobuf::uint8* S2SUpdateZoneToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateZoneToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_zonedata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateZoneToLoginReq)
  return target;
}

size_t S2SUpdateZoneToLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateZoneToLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zonedata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateZoneToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateZoneToLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateZoneToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateZoneToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateZoneToLoginReq)
    MergeFrom(*source);
  }
}

void S2SUpdateZoneToLoginReq::MergeFrom(const S2SUpdateZoneToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_zonedata()) {
    mutable_zonedata()->::KFMsg::PBZoneData::MergeFrom(from.zonedata());
  }
}

void S2SUpdateZoneToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateZoneToLoginReq::CopyFrom(const S2SUpdateZoneToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateZoneToLoginReq::IsInitialized() const {
  return true;
}

void S2SUpdateZoneToLoginReq::Swap(S2SUpdateZoneToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateZoneToLoginReq::InternalSwap(S2SUpdateZoneToLoginReq* other) {
  using std::swap;
  swap(zonedata_, other->zonedata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateZoneToLoginReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateZoneToWorldReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateZoneToWorldReq_default_instance_._instance.get_mutable()->zonedata_ = const_cast< ::KFMsg::PBZoneData*>(
      ::KFMsg::PBZoneData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateZoneToWorldReq::kZonedataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateZoneToWorldReq::S2SUpdateZoneToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateZoneToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateZoneToWorldReq)
}
S2SUpdateZoneToWorldReq::S2SUpdateZoneToWorldReq(const S2SUpdateZoneToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_zonedata()) {
    zonedata_ = new ::KFMsg::PBZoneData(*from.zonedata_);
  } else {
    zonedata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateZoneToWorldReq)
}

void S2SUpdateZoneToWorldReq::SharedCtor() {
  zonedata_ = NULL;
}

S2SUpdateZoneToWorldReq::~S2SUpdateZoneToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateZoneToWorldReq)
  SharedDtor();
}

void S2SUpdateZoneToWorldReq::SharedDtor() {
  if (this != internal_default_instance()) delete zonedata_;
}

void S2SUpdateZoneToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateZoneToWorldReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateZoneToWorldReq& S2SUpdateZoneToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateZoneToWorldReq.base);
  return *internal_default_instance();
}


void S2SUpdateZoneToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateZoneToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && zonedata_ != NULL) {
    delete zonedata_;
  }
  zonedata_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SUpdateZoneToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateZoneToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBZoneData zonedata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zonedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateZoneToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateZoneToWorldReq)
  return false;
#undef DO_
}

void S2SUpdateZoneToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateZoneToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_zonedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateZoneToWorldReq)
}

::google::protobuf::uint8* S2SUpdateZoneToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateZoneToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_zonedata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateZoneToWorldReq)
  return target;
}

size_t S2SUpdateZoneToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateZoneToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zonedata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateZoneToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateZoneToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateZoneToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateZoneToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateZoneToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateZoneToWorldReq)
    MergeFrom(*source);
  }
}

void S2SUpdateZoneToWorldReq::MergeFrom(const S2SUpdateZoneToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateZoneToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_zonedata()) {
    mutable_zonedata()->::KFMsg::PBZoneData::MergeFrom(from.zonedata());
  }
}

void S2SUpdateZoneToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateZoneToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateZoneToWorldReq::CopyFrom(const S2SUpdateZoneToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateZoneToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateZoneToWorldReq::IsInitialized() const {
  return true;
}

void S2SUpdateZoneToWorldReq::Swap(S2SUpdateZoneToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateZoneToWorldReq::InternalSwap(S2SUpdateZoneToWorldReq* other) {
  using std::swap;
  swap(zonedata_, other->zonedata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateZoneToWorldReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDisconnectZoneToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDisconnectZoneToWorldReq::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDisconnectZoneToWorldReq::S2SDisconnectZoneToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SDisconnectZoneToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDisconnectZoneToWorldReq)
}
S2SDisconnectZoneToWorldReq::S2SDisconnectZoneToWorldReq(const S2SDisconnectZoneToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDisconnectZoneToWorldReq)
}

void S2SDisconnectZoneToWorldReq::SharedCtor() {
  appid_ = GOOGLE_ULONGLONG(0);
}

S2SDisconnectZoneToWorldReq::~S2SDisconnectZoneToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDisconnectZoneToWorldReq)
  SharedDtor();
}

void S2SDisconnectZoneToWorldReq::SharedDtor() {
}

void S2SDisconnectZoneToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDisconnectZoneToWorldReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDisconnectZoneToWorldReq& S2SDisconnectZoneToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SDisconnectZoneToWorldReq.base);
  return *internal_default_instance();
}


void S2SDisconnectZoneToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDisconnectZoneToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDisconnectZoneToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDisconnectZoneToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDisconnectZoneToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDisconnectZoneToWorldReq)
  return false;
#undef DO_
}

void S2SDisconnectZoneToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDisconnectZoneToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDisconnectZoneToWorldReq)
}

::google::protobuf::uint8* S2SDisconnectZoneToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDisconnectZoneToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDisconnectZoneToWorldReq)
  return target;
}

size_t S2SDisconnectZoneToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDisconnectZoneToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 appid = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDisconnectZoneToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDisconnectZoneToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDisconnectZoneToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDisconnectZoneToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDisconnectZoneToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDisconnectZoneToWorldReq)
    MergeFrom(*source);
  }
}

void S2SDisconnectZoneToWorldReq::MergeFrom(const S2SDisconnectZoneToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDisconnectZoneToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appid() != 0) {
    set_appid(from.appid());
  }
}

void S2SDisconnectZoneToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDisconnectZoneToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDisconnectZoneToWorldReq::CopyFrom(const S2SDisconnectZoneToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDisconnectZoneToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDisconnectZoneToWorldReq::IsInitialized() const {
  return true;
}

void S2SDisconnectZoneToWorldReq::Swap(S2SDisconnectZoneToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDisconnectZoneToWorldReq::InternalSwap(S2SDisconnectZoneToWorldReq* other) {
  using std::swap;
  swap(appid_, other->appid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDisconnectZoneToWorldReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToLoginReq::kIpFieldNumber;
const int S2SLoginToLoginReq::kTokenFieldNumber;
const int S2SLoginToLoginReq::kAccountidFieldNumber;
const int S2SLoginToLoginReq::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToLoginReq::S2SLoginToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToLoginReq)
}
S2SLoginToLoginReq::S2SLoginToLoginReq(const S2SLoginToLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToLoginReq)
}

void S2SLoginToLoginReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
}

S2SLoginToLoginReq::~S2SLoginToLoginReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToLoginReq)
  SharedDtor();
}

void S2SLoginToLoginReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SLoginToLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToLoginReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToLoginReq& S2SLoginToLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToLoginReq.base);
  return *internal_default_instance();
}


void S2SLoginToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool S2SLoginToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToLoginReq)
  return false;
#undef DO_
}

void S2SLoginToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToLoginReq)
}

::google::protobuf::uint8* S2SLoginToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToLoginReq)
  return target;
}

size_t S2SLoginToLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToLoginReq)
    MergeFrom(*source);
  }
}

void S2SLoginToLoginReq::MergeFrom(const S2SLoginToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void S2SLoginToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToLoginReq::CopyFrom(const S2SLoginToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToLoginReq::IsInitialized() const {
  return true;
}

void S2SLoginToLoginReq::Swap(S2SLoginToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToLoginReq::InternalSwap(S2SLoginToLoginReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToLoginReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToGateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToGateAck::kResultFieldNumber;
const int S2SLoginToGateAck::kAccountidFieldNumber;
const int S2SLoginToGateAck::kSessionidFieldNumber;
const int S2SLoginToGateAck::kBantimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToGateAck::S2SLoginToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToGateAck)
}
S2SLoginToGateAck::S2SLoginToGateAck(const S2SLoginToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToGateAck)
}

void S2SLoginToGateAck::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
}

S2SLoginToGateAck::~S2SLoginToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToGateAck)
  SharedDtor();
}

void S2SLoginToGateAck::SharedDtor() {
}

void S2SLoginToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToGateAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToGateAck& S2SLoginToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToGateAck.base);
  return *internal_default_instance();
}


void S2SLoginToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bantime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bantime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToGateAck)
  return false;
#undef DO_
}

void S2SLoginToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bantime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToGateAck)
}

::google::protobuf::uint8* S2SLoginToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bantime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToGateAck)
  return target;
}

size_t S2SLoginToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bantime());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToGateAck)
    MergeFrom(*source);
  }
}

void S2SLoginToGateAck::MergeFrom(const S2SLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.bantime() != 0) {
    set_bantime(from.bantime());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToGateAck::CopyFrom(const S2SLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToGateAck::IsInitialized() const {
  return true;
}

void S2SLoginToGateAck::Swap(S2SLoginToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToGateAck::InternalSwap(S2SLoginToGateAck* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(bantime_, other->bantime_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToGateAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToWorldReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginToWorldReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoginToWorldReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToWorldReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToWorldReq::S2SLoginToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToWorldReq)
}
S2SLoginToWorldReq::S2SLoginToWorldReq(const S2SLoginToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToWorldReq)
}

void S2SLoginToWorldReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginToWorldReq::~S2SLoginToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToWorldReq)
  SharedDtor();
}

void S2SLoginToWorldReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToWorldReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToWorldReq& S2SLoginToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToWorldReq.base);
  return *internal_default_instance();
}


void S2SLoginToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToWorldReq)
  return false;
#undef DO_
}

void S2SLoginToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToWorldReq)
}

::google::protobuf::uint8* S2SLoginToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToWorldReq)
  return target;
}

size_t S2SLoginToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToWorldReq)
    MergeFrom(*source);
  }
}

void S2SLoginToWorldReq::MergeFrom(const S2SLoginToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToWorldReq::CopyFrom(const S2SLoginToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToWorldReq::IsInitialized() const {
  return true;
}

void S2SLoginToWorldReq::Swap(S2SLoginToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToWorldReq::InternalSwap(S2SLoginToWorldReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToWorldReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToLoginAck::kResultFieldNumber;
const int S2SLoginToLoginAck::kGateidFieldNumber;
const int S2SLoginToLoginAck::kAccountidFieldNumber;
const int S2SLoginToLoginAck::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToLoginAck::S2SLoginToLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToLoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToLoginAck)
}
S2SLoginToLoginAck::S2SLoginToLoginAck(const S2SLoginToLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToLoginAck)
}

void S2SLoginToLoginAck::SharedCtor() {
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
}

S2SLoginToLoginAck::~S2SLoginToLoginAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToLoginAck)
  SharedDtor();
}

void S2SLoginToLoginAck::SharedDtor() {
}

void S2SLoginToLoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToLoginAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToLoginAck& S2SLoginToLoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToLoginAck.base);
  return *internal_default_instance();
}


void S2SLoginToLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginToLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToLoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToLoginAck)
  return false;
#undef DO_
}

void S2SLoginToLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToLoginAck)
}

::google::protobuf::uint8* S2SLoginToLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToLoginAck)
  return target;
}

size_t S2SLoginToLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToLoginAck)
    MergeFrom(*source);
  }
}

void S2SLoginToLoginAck::MergeFrom(const S2SLoginToLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginToLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToLoginAck::CopyFrom(const S2SLoginToLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToLoginAck::IsInitialized() const {
  return true;
}

void S2SLoginToLoginAck::Swap(S2SLoginToLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToLoginAck::InternalSwap(S2SLoginToLoginAck* other) {
  using std::swap;
  swap(gateid_, other->gateid_);
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToLoginAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToGameReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginToGameReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoginToGameReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToGameReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToGameReq::S2SLoginToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToGameReq)
}
S2SLoginToGameReq::S2SLoginToGameReq(const S2SLoginToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToGameReq)
}

void S2SLoginToGameReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginToGameReq::~S2SLoginToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToGameReq)
  SharedDtor();
}

void S2SLoginToGameReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToGameReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToGameReq& S2SLoginToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoginToGameReq.base);
  return *internal_default_instance();
}


void S2SLoginToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToGameReq)
  return false;
#undef DO_
}

void S2SLoginToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToGameReq)
}

::google::protobuf::uint8* S2SLoginToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToGameReq)
  return target;
}

size_t S2SLoginToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToGameReq)
    MergeFrom(*source);
  }
}

void S2SLoginToGameReq::MergeFrom(const S2SLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToGameReq::CopyFrom(const S2SLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToGameReq::IsInitialized() const {
  return true;
}

void S2SLoginToGameReq::Swap(S2SLoginToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToGameReq::InternalSwap(S2SLoginToGameReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToGameReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SEnterToGateAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SEnterToGateAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SEnterToGateAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SEnterToGateAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
void S2SEnterToGateAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SEnterToGateAck::kPbloginFieldNumber;
const int S2SEnterToGateAck::kPlayerdataFieldNumber;
const int S2SEnterToGateAck::kServertimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SEnterToGateAck::S2SEnterToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SEnterToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SEnterToGateAck)
}
S2SEnterToGateAck::S2SEnterToGateAck(const S2SEnterToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  servertime_ = from.servertime_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SEnterToGateAck)
}

void S2SEnterToGateAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(servertime_));
}

S2SEnterToGateAck::~S2SEnterToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SEnterToGateAck)
  SharedDtor();
}

void S2SEnterToGateAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SEnterToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SEnterToGateAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SEnterToGateAck& S2SEnterToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SEnterToGateAck.base);
  return *internal_default_instance();
}


void S2SEnterToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  servertime_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SEnterToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SEnterToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 servertime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SEnterToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SEnterToGateAck)
  return false;
#undef DO_
}

void S2SEnterToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->servertime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SEnterToGateAck)
}

::google::protobuf::uint8* S2SEnterToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->servertime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SEnterToGateAck)
  return target;
}

size_t S2SEnterToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SEnterToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SEnterToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SEnterToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SEnterToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SEnterToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SEnterToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SEnterToGateAck)
    MergeFrom(*source);
  }
}

void S2SEnterToGateAck::MergeFrom(const S2SEnterToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SEnterToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
}

void S2SEnterToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SEnterToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SEnterToGateAck::CopyFrom(const S2SEnterToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SEnterToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SEnterToGateAck::IsInitialized() const {
  return true;
}

void S2SEnterToGateAck::Swap(S2SEnterToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SEnterToGateAck::InternalSwap(S2SEnterToGateAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(servertime_, other->servertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SEnterToGateAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLogoutToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLogoutToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLogoutToGameReq::S2SLogoutToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLogoutToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLogoutToGameReq)
}
S2SLogoutToGameReq::S2SLogoutToGameReq(const S2SLogoutToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLogoutToGameReq)
}

void S2SLogoutToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLogoutToGameReq::~S2SLogoutToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLogoutToGameReq)
  SharedDtor();
}

void S2SLogoutToGameReq::SharedDtor() {
}

void S2SLogoutToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLogoutToGameReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLogoutToGameReq& S2SLogoutToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLogoutToGameReq.base);
  return *internal_default_instance();
}


void S2SLogoutToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLogoutToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLogoutToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLogoutToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLogoutToGameReq)
  return false;
#undef DO_
}

void S2SLogoutToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLogoutToGameReq)
}

::google::protobuf::uint8* S2SLogoutToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLogoutToGameReq)
  return target;
}

size_t S2SLogoutToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLogoutToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLogoutToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLogoutToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLogoutToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLogoutToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLogoutToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLogoutToGameReq)
    MergeFrom(*source);
  }
}

void S2SLogoutToGameReq::MergeFrom(const S2SLogoutToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLogoutToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLogoutToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLogoutToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLogoutToGameReq::CopyFrom(const S2SLogoutToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLogoutToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLogoutToGameReq::IsInitialized() const {
  return true;
}

void S2SLogoutToGameReq::Swap(S2SLogoutToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLogoutToGameReq::InternalSwap(S2SLogoutToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLogoutToGameReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDisconnectToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDisconnectToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDisconnectToGameReq::S2SDisconnectToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SDisconnectToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDisconnectToGameReq)
}
S2SDisconnectToGameReq::S2SDisconnectToGameReq(const S2SDisconnectToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDisconnectToGameReq)
}

void S2SDisconnectToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SDisconnectToGameReq::~S2SDisconnectToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDisconnectToGameReq)
  SharedDtor();
}

void S2SDisconnectToGameReq::SharedDtor() {
}

void S2SDisconnectToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDisconnectToGameReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDisconnectToGameReq& S2SDisconnectToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SDisconnectToGameReq.base);
  return *internal_default_instance();
}


void S2SDisconnectToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDisconnectToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDisconnectToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDisconnectToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDisconnectToGameReq)
  return false;
#undef DO_
}

void S2SDisconnectToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDisconnectToGameReq)
}

::google::protobuf::uint8* S2SDisconnectToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDisconnectToGameReq)
  return target;
}

size_t S2SDisconnectToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDisconnectToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDisconnectToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDisconnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDisconnectToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDisconnectToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDisconnectToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDisconnectToGameReq)
    MergeFrom(*source);
  }
}

void S2SDisconnectToGameReq::MergeFrom(const S2SDisconnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDisconnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SDisconnectToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDisconnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDisconnectToGameReq::CopyFrom(const S2SDisconnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDisconnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDisconnectToGameReq::IsInitialized() const {
  return true;
}

void S2SDisconnectToGameReq::Swap(S2SDisconnectToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDisconnectToGameReq::InternalSwap(S2SDisconnectToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDisconnectToGameReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoadPlayerToDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoadPlayerToDataReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoadPlayerToDataReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoadPlayerToDataReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoadPlayerToDataReq::S2SLoadPlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoadPlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoadPlayerToDataReq)
}
S2SLoadPlayerToDataReq::S2SLoadPlayerToDataReq(const S2SLoadPlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoadPlayerToDataReq)
}

void S2SLoadPlayerToDataReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoadPlayerToDataReq::~S2SLoadPlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoadPlayerToDataReq)
  SharedDtor();
}

void S2SLoadPlayerToDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoadPlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoadPlayerToDataReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoadPlayerToDataReq& S2SLoadPlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoadPlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SLoadPlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoadPlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoadPlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoadPlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoadPlayerToDataReq)
  return false;
#undef DO_
}

void S2SLoadPlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoadPlayerToDataReq)
}

::google::protobuf::uint8* S2SLoadPlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoadPlayerToDataReq)
  return target;
}

size_t S2SLoadPlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoadPlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoadPlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoadPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoadPlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoadPlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoadPlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoadPlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SLoadPlayerToDataReq::MergeFrom(const S2SLoadPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoadPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoadPlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoadPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoadPlayerToDataReq::CopyFrom(const S2SLoadPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoadPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoadPlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SLoadPlayerToDataReq::Swap(S2SLoadPlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoadPlayerToDataReq::InternalSwap(S2SLoadPlayerToDataReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoadPlayerToDataReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoadPlayerToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoadPlayerToGameAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SLoadPlayerToGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SLoadPlayerToGameAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
void S2SLoadPlayerToGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoadPlayerToGameAck::kResultFieldNumber;
const int S2SLoadPlayerToGameAck::kPbloginFieldNumber;
const int S2SLoadPlayerToGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoadPlayerToGameAck::S2SLoadPlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoadPlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoadPlayerToGameAck)
}
S2SLoadPlayerToGameAck::S2SLoadPlayerToGameAck(const S2SLoadPlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoadPlayerToGameAck)
}

void S2SLoadPlayerToGameAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(result_));
}

S2SLoadPlayerToGameAck::~S2SLoadPlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoadPlayerToGameAck)
  SharedDtor();
}

void S2SLoadPlayerToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SLoadPlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoadPlayerToGameAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoadPlayerToGameAck& S2SLoadPlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SLoadPlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SLoadPlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SLoadPlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoadPlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBLoginData pblogin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoadPlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoadPlayerToGameAck)
  return false;
#undef DO_
}

void S2SLoadPlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pblogin(), output);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoadPlayerToGameAck)
}

::google::protobuf::uint8* S2SLoadPlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pblogin(), deterministic, target);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoadPlayerToGameAck)
  return target;
}

size_t S2SLoadPlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoadPlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoadPlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoadPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoadPlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoadPlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoadPlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoadPlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SLoadPlayerToGameAck::MergeFrom(const S2SLoadPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoadPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoadPlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoadPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoadPlayerToGameAck::CopyFrom(const S2SLoadPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoadPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoadPlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SLoadPlayerToGameAck::Swap(S2SLoadPlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoadPlayerToGameAck::InternalSwap(S2SLoadPlayerToGameAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoadPlayerToGameAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSavePlayerToDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SSavePlayerToDataReq_default_instance_._instance.get_mutable()->data_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSavePlayerToDataReq::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSavePlayerToDataReq::kIdFieldNumber;
const int S2SSavePlayerToDataReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSavePlayerToDataReq::S2SSavePlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SSavePlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSavePlayerToDataReq)
}
S2SSavePlayerToDataReq::S2SSavePlayerToDataReq(const S2SSavePlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::KFMsg::PBObject(*from.data_);
  } else {
    data_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSavePlayerToDataReq)
}

void S2SSavePlayerToDataReq::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(id_));
}

S2SSavePlayerToDataReq::~S2SSavePlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSavePlayerToDataReq)
  SharedDtor();
}

void S2SSavePlayerToDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void S2SSavePlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSavePlayerToDataReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSavePlayerToDataReq& S2SSavePlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SSavePlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SSavePlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SSavePlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSavePlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSavePlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSavePlayerToDataReq)
  return false;
#undef DO_
}

void S2SSavePlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSavePlayerToDataReq)
}

::google::protobuf::uint8* S2SSavePlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSavePlayerToDataReq)
  return target;
}

size_t S2SSavePlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSavePlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSavePlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSavePlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSavePlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSavePlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSavePlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSavePlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SSavePlayerToDataReq::MergeFrom(const S2SSavePlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSavePlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::KFMsg::PBObject::MergeFrom(from.data());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SSavePlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSavePlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSavePlayerToDataReq::CopyFrom(const S2SSavePlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSavePlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSavePlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SSavePlayerToDataReq::Swap(S2SSavePlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSavePlayerToDataReq::InternalSwap(S2SSavePlayerToDataReq* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSavePlayerToDataReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerToDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerToDataReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerToDataReq::S2SQueryPlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryPlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerToDataReq)
}
S2SQueryPlayerToDataReq::S2SQueryPlayerToDataReq(const S2SQueryPlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerToDataReq)
}

void S2SQueryPlayerToDataReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryPlayerToDataReq::~S2SQueryPlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerToDataReq)
  SharedDtor();
}

void S2SQueryPlayerToDataReq::SharedDtor() {
}

void S2SQueryPlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerToDataReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerToDataReq& S2SQueryPlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryPlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SQueryPlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerToDataReq)
  return false;
#undef DO_
}

void S2SQueryPlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerToDataReq)
}

::google::protobuf::uint8* S2SQueryPlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerToDataReq)
  return target;
}

size_t S2SQueryPlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerToDataReq::MergeFrom(const S2SQueryPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryPlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerToDataReq::CopyFrom(const S2SQueryPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SQueryPlayerToDataReq::Swap(S2SQueryPlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerToDataReq::InternalSwap(S2SQueryPlayerToDataReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerToDataReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryPlayerToGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SQueryPlayerToGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerToGameAck::kResultFieldNumber;
const int S2SQueryPlayerToGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerToGameAck::S2SQueryPlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryPlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerToGameAck)
}
S2SQueryPlayerToGameAck::S2SQueryPlayerToGameAck(const S2SQueryPlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerToGameAck)
}

void S2SQueryPlayerToGameAck::SharedCtor() {
  ::memset(&playerdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerdata_)) + sizeof(result_));
}

S2SQueryPlayerToGameAck::~S2SQueryPlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerToGameAck)
  SharedDtor();
}

void S2SQueryPlayerToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SQueryPlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerToGameAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerToGameAck& S2SQueryPlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryPlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryPlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerToGameAck)
  return false;
#undef DO_
}

void S2SQueryPlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerToGameAck)
}

::google::protobuf::uint8* S2SQueryPlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerToGameAck)
  return target;
}

size_t S2SQueryPlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerToGameAck::MergeFrom(const S2SQueryPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SQueryPlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerToGameAck::CopyFrom(const S2SQueryPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryPlayerToGameAck::Swap(S2SQueryPlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerToGameAck::InternalSwap(S2SQueryPlayerToGameAck* other) {
  using std::swap;
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerToGameAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameToDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameToDataReq::kPlayeridFieldNumber;
const int S2SSetPlayerNameToDataReq::kOldnameFieldNumber;
const int S2SSetPlayerNameToDataReq::kNewnameFieldNumber;
const int S2SSetPlayerNameToDataReq::kItemuuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameToDataReq::S2SSetPlayerNameToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SSetPlayerNameToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameToDataReq)
}
S2SSetPlayerNameToDataReq::S2SSetPlayerNameToDataReq(const S2SSetPlayerNameToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oldname().size() > 0) {
    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemuuid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(itemuuid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameToDataReq)
}

void S2SSetPlayerNameToDataReq::SharedCtor() {
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemuuid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(itemuuid_));
}

S2SSetPlayerNameToDataReq::~S2SSetPlayerNameToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameToDataReq)
  SharedDtor();
}

void S2SSetPlayerNameToDataReq::SharedDtor() {
  oldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameToDataReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameToDataReq& S2SSetPlayerNameToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SSetPlayerNameToDataReq.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemuuid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(itemuuid_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes oldname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oldname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 itemuuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemuuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameToDataReq)
  return false;
#undef DO_
}

void S2SSetPlayerNameToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->oldname(), output);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->newname(), output);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->itemuuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameToDataReq)
}

::google::protobuf::uint8* S2SSetPlayerNameToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->oldname(), target);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->newname(), target);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->itemuuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameToDataReq)
  return target;
}

size_t S2SSetPlayerNameToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oldname());
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemuuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameToDataReq)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameToDataReq::MergeFrom(const S2SSetPlayerNameToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.itemuuid() != 0) {
    set_itemuuid(from.itemuuid());
  }
}

void S2SSetPlayerNameToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameToDataReq::CopyFrom(const S2SSetPlayerNameToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameToDataReq::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameToDataReq::Swap(S2SSetPlayerNameToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameToDataReq::InternalSwap(S2SSetPlayerNameToDataReq* other) {
  using std::swap;
  oldname_.Swap(&other->oldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(itemuuid_, other->itemuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameToDataReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameToGameAck::kResultFieldNumber;
const int S2SSetPlayerNameToGameAck::kPlayeridFieldNumber;
const int S2SSetPlayerNameToGameAck::kNameFieldNumber;
const int S2SSetPlayerNameToGameAck::kItemuuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameToGameAck::S2SSetPlayerNameToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SSetPlayerNameToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameToGameAck)
}
S2SSetPlayerNameToGameAck::S2SSetPlayerNameToGameAck(const S2SSetPlayerNameToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameToGameAck)
}

void S2SSetPlayerNameToGameAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
}

S2SSetPlayerNameToGameAck::~S2SSetPlayerNameToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameToGameAck)
  SharedDtor();
}

void S2SSetPlayerNameToGameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameToGameAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameToGameAck& S2SSetPlayerNameToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SSetPlayerNameToGameAck.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 itemuuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemuuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameToGameAck)
  return false;
#undef DO_
}

void S2SSetPlayerNameToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->itemuuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameToGameAck)
}

::google::protobuf::uint8* S2SSetPlayerNameToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->itemuuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameToGameAck)
  return target;
}

size_t S2SSetPlayerNameToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemuuid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameToGameAck)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameToGameAck::MergeFrom(const S2SSetPlayerNameToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.itemuuid() != 0) {
    set_itemuuid(from.itemuuid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SSetPlayerNameToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameToGameAck::CopyFrom(const S2SSetPlayerNameToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameToGameAck::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameToGameAck::Swap(S2SSetPlayerNameToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameToGameAck::InternalSwap(S2SSetPlayerNameToGameAck* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(itemuuid_, other->itemuuid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameToGameAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterToWorldReq::kPlayeridFieldNumber;
const int S2SPlayerEnterToWorldReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterToWorldReq::S2SPlayerEnterToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SPlayerEnterToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterToWorldReq)
}
S2SPlayerEnterToWorldReq::S2SPlayerEnterToWorldReq(const S2SPlayerEnterToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterToWorldReq)
}

void S2SPlayerEnterToWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SPlayerEnterToWorldReq::~S2SPlayerEnterToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterToWorldReq)
  SharedDtor();
}

void S2SPlayerEnterToWorldReq::SharedDtor() {
}

void S2SPlayerEnterToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterToWorldReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterToWorldReq& S2SPlayerEnterToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SPlayerEnterToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerEnterToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerEnterToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterToWorldReq)
}

::google::protobuf::uint8* S2SPlayerEnterToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterToWorldReq)
  return target;
}

size_t S2SPlayerEnterToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterToWorldReq::MergeFrom(const S2SPlayerEnterToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SPlayerEnterToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterToWorldReq::CopyFrom(const S2SPlayerEnterToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerEnterToWorldReq::Swap(S2SPlayerEnterToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterToWorldReq::InternalSwap(S2SPlayerEnterToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterToWorldReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveToWorldReq::kPlayeridFieldNumber;
const int S2SPlayerLeaveToWorldReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveToWorldReq::S2SPlayerLeaveToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SPlayerLeaveToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveToWorldReq)
}
S2SPlayerLeaveToWorldReq::S2SPlayerLeaveToWorldReq(const S2SPlayerLeaveToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveToWorldReq)
}

void S2SPlayerLeaveToWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SPlayerLeaveToWorldReq::~S2SPlayerLeaveToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveToWorldReq)
  SharedDtor();
}

void S2SPlayerLeaveToWorldReq::SharedDtor() {
}

void S2SPlayerLeaveToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveToWorldReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveToWorldReq& S2SPlayerLeaveToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SPlayerLeaveToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveToWorldReq)
}

::google::protobuf::uint8* S2SPlayerLeaveToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveToWorldReq)
  return target;
}

size_t S2SPlayerLeaveToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveToWorldReq::MergeFrom(const S2SPlayerLeaveToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SPlayerLeaveToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveToWorldReq::CopyFrom(const S2SPlayerLeaveToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveToWorldReq::Swap(S2SPlayerLeaveToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveToWorldReq::InternalSwap(S2SPlayerLeaveToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveToWorldReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerSyncToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerSyncToWorldReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerSyncToWorldReq::S2SPlayerSyncToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SPlayerSyncToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerSyncToWorldReq)
}
S2SPlayerSyncToWorldReq::S2SPlayerSyncToWorldReq(const S2SPlayerSyncToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerid_(from.playerid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerSyncToWorldReq)
}

void S2SPlayerSyncToWorldReq::SharedCtor() {
}

S2SPlayerSyncToWorldReq::~S2SPlayerSyncToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerSyncToWorldReq)
  SharedDtor();
}

void S2SPlayerSyncToWorldReq::SharedDtor() {
}

void S2SPlayerSyncToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerSyncToWorldReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerSyncToWorldReq& S2SPlayerSyncToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SPlayerSyncToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerSyncToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerSyncToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.Clear();
  _internal_metadata_.Clear();
}

bool S2SPlayerSyncToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerSyncToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_playerid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_playerid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerSyncToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerSyncToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerSyncToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerSyncToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 playerid = 1;
  if (this->playerid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _playerid_cached_byte_size_));
  }
  for (int i = 0, n = this->playerid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->playerid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerSyncToWorldReq)
}

::google::protobuf::uint8* S2SPlayerSyncToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerSyncToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 playerid = 1;
  if (this->playerid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _playerid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->playerid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerSyncToWorldReq)
  return target;
}

size_t S2SPlayerSyncToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerSyncToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 playerid = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->playerid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _playerid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerSyncToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerSyncToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerSyncToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerSyncToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerSyncToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerSyncToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerSyncToWorldReq::MergeFrom(const S2SPlayerSyncToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerSyncToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerid_.MergeFrom(from.playerid_);
}

void S2SPlayerSyncToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerSyncToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerSyncToWorldReq::CopyFrom(const S2SPlayerSyncToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerSyncToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerSyncToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerSyncToWorldReq::Swap(S2SPlayerSyncToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerSyncToWorldReq::InternalSwap(S2SPlayerSyncToWorldReq* other) {
  using std::swap;
  playerid_.InternalSwap(&other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerSyncToWorldReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToGameReq::kTypeFieldNumber;
const int S2SKickPlayerToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToGameReq::S2SKickPlayerToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SKickPlayerToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToGameReq)
}
S2SKickPlayerToGameReq::S2SKickPlayerToGameReq(const S2SKickPlayerToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToGameReq)
}

void S2SKickPlayerToGameReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToGameReq::~S2SKickPlayerToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToGameReq)
  SharedDtor();
}

void S2SKickPlayerToGameReq::SharedDtor() {
}

void S2SKickPlayerToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToGameReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToGameReq& S2SKickPlayerToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SKickPlayerToGameReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToGameReq)
  return false;
#undef DO_
}

void S2SKickPlayerToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToGameReq)
}

::google::protobuf::uint8* S2SKickPlayerToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToGameReq)
  return target;
}

size_t S2SKickPlayerToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToGameReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToGameReq::MergeFrom(const S2SKickPlayerToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToGameReq::CopyFrom(const S2SKickPlayerToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToGameReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToGameReq::Swap(S2SKickPlayerToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToGameReq::InternalSwap(S2SKickPlayerToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToGameReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToGateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToGateReq::kTypeFieldNumber;
const int S2SKickPlayerToGateReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToGateReq::S2SKickPlayerToGateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SKickPlayerToGateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToGateReq)
}
S2SKickPlayerToGateReq::S2SKickPlayerToGateReq(const S2SKickPlayerToGateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToGateReq)
}

void S2SKickPlayerToGateReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToGateReq::~S2SKickPlayerToGateReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToGateReq)
  SharedDtor();
}

void S2SKickPlayerToGateReq::SharedDtor() {
}

void S2SKickPlayerToGateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToGateReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToGateReq& S2SKickPlayerToGateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SKickPlayerToGateReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToGateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToGateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToGateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToGateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToGateReq)
  return false;
#undef DO_
}

void S2SKickPlayerToGateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToGateReq)
}

::google::protobuf::uint8* S2SKickPlayerToGateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToGateReq)
  return target;
}

size_t S2SKickPlayerToGateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToGateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToGateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToGateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToGateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToGateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToGateReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToGateReq::MergeFrom(const S2SKickPlayerToGateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToGateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToGateReq::CopyFrom(const S2SKickPlayerToGateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToGateReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToGateReq::Swap(S2SKickPlayerToGateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToGateReq::InternalSwap(S2SKickPlayerToGateReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToGateReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGame::kMsgidFieldNumber;
const int S2SBroadcastToGame::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGame::S2SBroadcastToGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SBroadcastToGame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGame)
}
S2SBroadcastToGame::S2SBroadcastToGame(const S2SBroadcastToGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGame)
}

void S2SBroadcastToGame::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToGame::~S2SBroadcastToGame() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGame)
  SharedDtor();
}

void S2SBroadcastToGame::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGame::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGame& S2SBroadcastToGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SBroadcastToGame.base);
  return *internal_default_instance();
}


void S2SBroadcastToGame::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGame)
  return false;
#undef DO_
}

void S2SBroadcastToGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGame)
}

::google::protobuf::uint8* S2SBroadcastToGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGame)
  return target;
}

size_t S2SBroadcastToGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGame)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGame)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGame::MergeFrom(const S2SBroadcastToGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGame::CopyFrom(const S2SBroadcastToGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGame::IsInitialized() const {
  return true;
}

void S2SBroadcastToGame::Swap(S2SBroadcastToGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGame::InternalSwap(S2SBroadcastToGame* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGame::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGate::kMsgidFieldNumber;
const int S2SBroadcastToGate::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGate::S2SBroadcastToGate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SBroadcastToGate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGate)
}
S2SBroadcastToGate::S2SBroadcastToGate(const S2SBroadcastToGate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGate)
}

void S2SBroadcastToGate::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToGate::~S2SBroadcastToGate() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGate)
  SharedDtor();
}

void S2SBroadcastToGate::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGate::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGate& S2SBroadcastToGate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SBroadcastToGate.base);
  return *internal_default_instance();
}


void S2SBroadcastToGate::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGate)
  return false;
#undef DO_
}

void S2SBroadcastToGate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGate)
}

::google::protobuf::uint8* S2SBroadcastToGate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGate)
  return target;
}

size_t S2SBroadcastToGate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGate)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGate)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGate::MergeFrom(const S2SBroadcastToGate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToGate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGate::CopyFrom(const S2SBroadcastToGate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGate::IsInitialized() const {
  return true;
}

void S2SBroadcastToGate::Swap(S2SBroadcastToGate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGate::InternalSwap(S2SBroadcastToGate* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGate::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STransmitToPlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STransmitToPlayer::kPlayeridFieldNumber;
const int S2STransmitToPlayer::kMsgidFieldNumber;
const int S2STransmitToPlayer::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STransmitToPlayer::S2STransmitToPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2STransmitToPlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STransmitToPlayer)
}
S2STransmitToPlayer::S2STransmitToPlayer(const S2STransmitToPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STransmitToPlayer)
}

void S2STransmitToPlayer::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
}

S2STransmitToPlayer::~S2STransmitToPlayer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STransmitToPlayer)
  SharedDtor();
}

void S2STransmitToPlayer::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2STransmitToPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STransmitToPlayer::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STransmitToPlayer& S2STransmitToPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2STransmitToPlayer.base);
  return *internal_default_instance();
}


void S2STransmitToPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STransmitToPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(msgid_));
  _internal_metadata_.Clear();
}

bool S2STransmitToPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STransmitToPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STransmitToPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STransmitToPlayer)
  return false;
#undef DO_
}

void S2STransmitToPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STransmitToPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STransmitToPlayer)
}

::google::protobuf::uint8* S2STransmitToPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STransmitToPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STransmitToPlayer)
  return target;
}

size_t S2STransmitToPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STransmitToPlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STransmitToPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STransmitToPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STransmitToPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STransmitToPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STransmitToPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STransmitToPlayer)
    MergeFrom(*source);
  }
}

void S2STransmitToPlayer::MergeFrom(const S2STransmitToPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STransmitToPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2STransmitToPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STransmitToPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STransmitToPlayer::CopyFrom(const S2STransmitToPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STransmitToPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STransmitToPlayer::IsInitialized() const {
  return true;
}

void S2STransmitToPlayer::Swap(S2STransmitToPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STransmitToPlayer::InternalSwap(S2STransmitToPlayer* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STransmitToPlayer::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBMail_DataEntry_DoNotUse::PBMail_DataEntry_DoNotUse() {}
PBMail_DataEntry_DoNotUse::PBMail_DataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBMail_DataEntry_DoNotUse::MergeFrom(const PBMail_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBMail_DataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[27];
}
void PBMail_DataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBMail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMail::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMail::PBMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_PBMail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMail)
}
PBMail::PBMail(const PBMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMail)
}

void PBMail::SharedCtor() {
}

PBMail::~PBMail() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMail)
  SharedDtor();
}

void PBMail::SharedDtor() {
}

void PBMail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMail::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMail& PBMail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_PBMail.base);
  return *internal_default_instance();
}


void PBMail::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool PBMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBMail_DataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBMail_DataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBMail.DataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMail)
  return false;
#undef DO_
}

void PBMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMail.DataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMail)
}

::google::protobuf::uint8* PBMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMail.DataEntry.key");
      }
    };

    if (deterministic &&
        this->data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMail)
  return target;
}

size_t PBMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  {
    ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMail)
    MergeFrom(*source);
  }
}

void PBMail::MergeFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PBMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMail::CopyFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMail::IsInitialized() const {
  return true;
}

void PBMail::Swap(PBMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMail::InternalSwap(PBMail* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMail::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailReq::kPlayeridFieldNumber;
const int S2SQueryMailReq::kZoneidFieldNumber;
const int S2SQueryMailReq::kMaxidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailReq::S2SQueryMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailReq)
}
S2SQueryMailReq::S2SQueryMailReq(const S2SQueryMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailReq)
}

void S2SQueryMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryMailReq::~S2SQueryMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailReq)
  SharedDtor();
}

void S2SQueryMailReq::SharedDtor() {
}

void S2SQueryMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailReq& S2SQueryMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  return *internal_default_instance();
}


void S2SQueryMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 maxid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailReq)
  return false;
#undef DO_
}

void S2SQueryMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->maxid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailReq)
}

::google::protobuf::uint8* S2SQueryMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->maxid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailReq)
  return target;
}

size_t S2SQueryMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maxid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailReq)
    MergeFrom(*source);
  }
}

void S2SQueryMailReq::MergeFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.maxid() != 0) {
    set_maxid(from.maxid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailReq::CopyFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailReq::IsInitialized() const {
  return true;
}

void S2SQueryMailReq::Swap(S2SQueryMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailReq::InternalSwap(S2SQueryMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(maxid_, other->maxid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailAck::kPlayeridFieldNumber;
const int S2SQueryMailAck::kMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailAck::S2SQueryMailAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailAck)
}
S2SQueryMailAck::S2SQueryMailAck(const S2SQueryMailAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_(from.mail_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailAck)
}

void S2SQueryMailAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryMailAck::~S2SQueryMailAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailAck)
  SharedDtor();
}

void S2SQueryMailAck::SharedDtor() {
}

void S2SQueryMailAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailAck& S2SQueryMailAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  return *internal_default_instance();
}


void S2SQueryMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryMailAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBMail mail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailAck)
  return false;
#undef DO_
}

void S2SQueryMailAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBMail mail = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->mail(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailAck)
}

::google::protobuf::uint8* S2SQueryMailAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBMail mail = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mail(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailAck)
  return target;
}

size_t S2SQueryMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBMail mail = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mail_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mail(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailAck)
    MergeFrom(*source);
  }
}

void S2SQueryMailAck::MergeFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_.MergeFrom(from.mail_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryMailAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailAck::CopyFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailAck::IsInitialized() const {
  return true;
}

void S2SQueryMailAck::Swap(S2SQueryMailAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailAck::InternalSwap(S2SQueryMailAck* other) {
  using std::swap;
  CastToBase(&mail_)->InternalSwap(CastToBase(&other->mail_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddMailReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddMailReq_default_instance_._instance.get_mutable()->pbmail_ = const_cast< ::KFMsg::PBMail*>(
      ::KFMsg::PBMail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddMailReq::kFlagFieldNumber;
const int S2SAddMailReq::kObjectidFieldNumber;
const int S2SAddMailReq::kPbmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddMailReq::S2SAddMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddMailReq)
}
S2SAddMailReq::S2SAddMailReq(const S2SAddMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmail()) {
    pbmail_ = new ::KFMsg::PBMail(*from.pbmail_);
  } else {
    pbmail_ = NULL;
  }
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddMailReq)
}

void S2SAddMailReq::SharedCtor() {
  ::memset(&pbmail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&pbmail_)) + sizeof(flag_));
}

S2SAddMailReq::~S2SAddMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddMailReq)
  SharedDtor();
}

void S2SAddMailReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmail_;
}

void S2SAddMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddMailReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddMailReq& S2SAddMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  return *internal_default_instance();
}


void S2SAddMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SAddMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMail pbmail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddMailReq)
  return false;
#undef DO_
}

void S2SAddMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flag = 1;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flag(), output);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->objectid(), output);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbmail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddMailReq)
}

::google::protobuf::uint8* S2SAddMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flag = 1;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flag(), target);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->objectid(), target);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbmail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddMailReq)
  return target;
}

size_t S2SAddMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmail_);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 flag = 1;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddMailReq)
    MergeFrom(*source);
  }
}

void S2SAddMailReq::MergeFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmail()) {
    mutable_pbmail()->::KFMsg::PBMail::MergeFrom(from.pbmail());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SAddMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddMailReq::CopyFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddMailReq::IsInitialized() const {
  return true;
}

void S2SAddMailReq::Swap(S2SAddMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddMailReq::InternalSwap(S2SAddMailReq* other) {
  using std::swap;
  swap(pbmail_, other->pbmail_);
  swap(objectid_, other->objectid_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddMailReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNoticeNewMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNoticeNewMailReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNoticeNewMailReq::S2SNoticeNewMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNoticeNewMailReq)
}
S2SNoticeNewMailReq::S2SNoticeNewMailReq(const S2SNoticeNewMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNoticeNewMailReq)
}

void S2SNoticeNewMailReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SNoticeNewMailReq::~S2SNoticeNewMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNoticeNewMailReq)
  SharedDtor();
}

void S2SNoticeNewMailReq::SharedDtor() {
}

void S2SNoticeNewMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNoticeNewMailReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNoticeNewMailReq& S2SNoticeNewMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  return *internal_default_instance();
}


void S2SNoticeNewMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SNoticeNewMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNoticeNewMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNoticeNewMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNoticeNewMailReq)
  return false;
#undef DO_
}

void S2SNoticeNewMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNoticeNewMailReq)
}

::google::protobuf::uint8* S2SNoticeNewMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNoticeNewMailReq)
  return target;
}

size_t S2SNoticeNewMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNoticeNewMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNoticeNewMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNoticeNewMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNoticeNewMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNoticeNewMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNoticeNewMailReq)
    MergeFrom(*source);
  }
}

void S2SNoticeNewMailReq::MergeFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SNoticeNewMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNoticeNewMailReq::CopyFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNoticeNewMailReq::IsInitialized() const {
  return true;
}

void S2SNoticeNewMailReq::Swap(S2SNoticeNewMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNoticeNewMailReq::InternalSwap(S2SNoticeNewMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNoticeNewMailReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNewPlayerMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNewPlayerMailReq::kPlayeridFieldNumber;
const int S2SNewPlayerMailReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNewPlayerMailReq::S2SNewPlayerMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SNewPlayerMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNewPlayerMailReq)
}
S2SNewPlayerMailReq::S2SNewPlayerMailReq(const S2SNewPlayerMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNewPlayerMailReq)
}

void S2SNewPlayerMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SNewPlayerMailReq::~S2SNewPlayerMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNewPlayerMailReq)
  SharedDtor();
}

void S2SNewPlayerMailReq::SharedDtor() {
}

void S2SNewPlayerMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNewPlayerMailReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNewPlayerMailReq& S2SNewPlayerMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SNewPlayerMailReq.base);
  return *internal_default_instance();
}


void S2SNewPlayerMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SNewPlayerMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNewPlayerMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNewPlayerMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNewPlayerMailReq)
  return false;
#undef DO_
}

void S2SNewPlayerMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNewPlayerMailReq)
}

::google::protobuf::uint8* S2SNewPlayerMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNewPlayerMailReq)
  return target;
}

size_t S2SNewPlayerMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNewPlayerMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNewPlayerMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNewPlayerMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNewPlayerMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNewPlayerMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNewPlayerMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNewPlayerMailReq)
    MergeFrom(*source);
  }
}

void S2SNewPlayerMailReq::MergeFrom(const S2SNewPlayerMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNewPlayerMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SNewPlayerMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNewPlayerMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNewPlayerMailReq::CopyFrom(const S2SNewPlayerMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNewPlayerMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNewPlayerMailReq::IsInitialized() const {
  return true;
}

void S2SNewPlayerMailReq::Swap(S2SNewPlayerMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNewPlayerMailReq::InternalSwap(S2SNewPlayerMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNewPlayerMailReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailStatusReq::kPlayeridFieldNumber;
const int S2SUpdateMailStatusReq::kIdFieldNumber;
const int S2SUpdateMailStatusReq::kFlagFieldNumber;
const int S2SUpdateMailStatusReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailStatusReq::S2SUpdateMailStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateMailStatusReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailStatusReq)
}
S2SUpdateMailStatusReq::S2SUpdateMailStatusReq(const S2SUpdateMailStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailStatusReq)
}

void S2SUpdateMailStatusReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
}

S2SUpdateMailStatusReq::~S2SUpdateMailStatusReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailStatusReq)
  SharedDtor();
}

void S2SUpdateMailStatusReq::SharedDtor() {
}

void S2SUpdateMailStatusReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailStatusReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailStatusReq& S2SUpdateMailStatusReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateMailStatusReq.base);
  return *internal_default_instance();
}


void S2SUpdateMailStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailStatusReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailStatusReq)
  return false;
#undef DO_
}

void S2SUpdateMailStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flag(), output);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailStatusReq)
}

::google::protobuf::uint8* S2SUpdateMailStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flag(), target);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailStatusReq)
  return target;
}

size_t S2SUpdateMailStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailStatusReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailStatusReq)
    MergeFrom(*source);
  }
}

void S2SUpdateMailStatusReq::MergeFrom(const S2SUpdateMailStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void S2SUpdateMailStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailStatusReq::CopyFrom(const S2SUpdateMailStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailStatusReq::IsInitialized() const {
  return true;
}

void S2SUpdateMailStatusReq::Swap(S2SUpdateMailStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailStatusReq::InternalSwap(S2SUpdateMailStatusReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(flag_, other->flag_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailStatusReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailStatusAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailStatusAck::kPlayeridFieldNumber;
const int S2SUpdateMailStatusAck::kIdFieldNumber;
const int S2SUpdateMailStatusAck::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailStatusAck::S2SUpdateMailStatusAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateMailStatusAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailStatusAck)
}
S2SUpdateMailStatusAck::S2SUpdateMailStatusAck(const S2SUpdateMailStatusAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailStatusAck)
}

void S2SUpdateMailStatusAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
}

S2SUpdateMailStatusAck::~S2SUpdateMailStatusAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailStatusAck)
  SharedDtor();
}

void S2SUpdateMailStatusAck::SharedDtor() {
}

void S2SUpdateMailStatusAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailStatusAck::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailStatusAck& S2SUpdateMailStatusAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateMailStatusAck.base);
  return *internal_default_instance();
}


void S2SUpdateMailStatusAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailStatusAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailStatusAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailStatusAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailStatusAck)
  return false;
#undef DO_
}

void S2SUpdateMailStatusAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailStatusAck)
}

::google::protobuf::uint8* S2SUpdateMailStatusAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailStatusAck)
  return target;
}

size_t S2SUpdateMailStatusAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailStatusAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailStatusAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailStatusAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailStatusAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailStatusAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailStatusAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailStatusAck)
    MergeFrom(*source);
  }
}

void S2SUpdateMailStatusAck::MergeFrom(const S2SUpdateMailStatusAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailStatusAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void S2SUpdateMailStatusAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailStatusAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailStatusAck::CopyFrom(const S2SUpdateMailStatusAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailStatusAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailStatusAck::IsInitialized() const {
  return true;
}

void S2SUpdateMailStatusAck::Swap(S2SUpdateMailStatusAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailStatusAck::InternalSwap(S2SUpdateMailStatusAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailStatusAck::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateRankDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateRankDataReq_default_instance_._instance.get_mutable()->pbrankdata_ = const_cast< ::KFMsg::PBRankData*>(
      ::KFMsg::PBRankData::internal_default_instance());
}
void S2SUpdateRankDataReq::clear_pbrankdata() {
  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateRankDataReq::kPlayeridFieldNumber;
const int S2SUpdateRankDataReq::kRankidFieldNumber;
const int S2SUpdateRankDataReq::kZoneidFieldNumber;
const int S2SUpdateRankDataReq::kPbrankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateRankDataReq::S2SUpdateRankDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateRankDataReq)
}
S2SUpdateRankDataReq::S2SUpdateRankDataReq(const S2SUpdateRankDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbrankdata()) {
    pbrankdata_ = new ::KFMsg::PBRankData(*from.pbrankdata_);
  } else {
    pbrankdata_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateRankDataReq)
}

void S2SUpdateRankDataReq::SharedCtor() {
  ::memset(&pbrankdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&pbrankdata_)) + sizeof(zoneid_));
}

S2SUpdateRankDataReq::~S2SUpdateRankDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateRankDataReq)
  SharedDtor();
}

void S2SUpdateRankDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbrankdata_;
}

void S2SUpdateRankDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateRankDataReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateRankDataReq& S2SUpdateRankDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  return *internal_default_instance();
}


void S2SUpdateRankDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateRankDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateRankDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRankData pbrankdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbrankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateRankDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateRankDataReq)
  return false;
#undef DO_
}

void S2SUpdateRankDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rankid(), output);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbrankdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateRankDataReq)
}

::google::protobuf::uint8* S2SUpdateRankDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rankid(), target);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbrankdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateRankDataReq)
  return target;
}

size_t S2SUpdateRankDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateRankDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbrankdata_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateRankDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateRankDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateRankDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateRankDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateRankDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdateRankDataReq::MergeFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbrankdata()) {
    mutable_pbrankdata()->::KFMsg::PBRankData::MergeFrom(from.pbrankdata());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SUpdateRankDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateRankDataReq::CopyFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateRankDataReq::IsInitialized() const {
  return true;
}

void S2SUpdateRankDataReq::Swap(S2SUpdateRankDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateRankDataReq::InternalSwap(S2SUpdateRankDataReq* other) {
  using std::swap;
  swap(pbrankdata_, other->pbrankdata_);
  swap(playerid_, other->playerid_);
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateRankDataReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRankListReq::kPlayeridFieldNumber;
const int S2SQueryRankListReq::kRankidFieldNumber;
const int S2SQueryRankListReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRankListReq::S2SQueryRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRankListReq)
}
S2SQueryRankListReq::S2SQueryRankListReq(const S2SQueryRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRankListReq)
}

void S2SQueryRankListReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryRankListReq::~S2SQueryRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRankListReq)
  SharedDtor();
}

void S2SQueryRankListReq::SharedDtor() {
}

void S2SQueryRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRankListReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRankListReq& S2SQueryRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRankListReq)
  return false;
#undef DO_
}

void S2SQueryRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rankid(), output);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRankListReq)
}

::google::protobuf::uint8* S2SQueryRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rankid(), target);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRankListReq)
  return target;
}

size_t S2SQueryRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryRankListReq::MergeFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRankListReq::CopyFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryRankListReq::Swap(S2SQueryRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRankListReq::InternalSwap(S2SQueryRankListReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRankListReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendRankListReq::kPlayeridFieldNumber;
const int S2SQueryFriendRankListReq::kRankidFieldNumber;
const int S2SQueryFriendRankListReq::kFriendidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendRankListReq::S2SQueryFriendRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendRankListReq)
}
S2SQueryFriendRankListReq::S2SQueryFriendRankListReq(const S2SQueryFriendRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friendid_(from.friendid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rankid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(rankid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendRankListReq)
}

void S2SQueryFriendRankListReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankid_));
}

S2SQueryFriendRankListReq::~S2SQueryFriendRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendRankListReq)
  SharedDtor();
}

void S2SQueryFriendRankListReq::SharedDtor() {
}

void S2SQueryFriendRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendRankListReq::descriptor() {
  ::protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendRankListReq& S2SQueryFriendRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_KFMidwareServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendid_.Clear();
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rankid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(rankid_));
  _internal_metadata_.Clear();
}

bool S2SQueryFriendRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 friendid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friendid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_friendid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendRankListReq)
  return false;
#undef DO_
}

void S2SQueryFriendRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rankid(), output);
  }

  // repeated uint64 friendid = 3;
  if (this->friendid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friendid_cached_byte_size_));
  }
  for (int i = 0, n = this->friendid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->friendid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendRankListReq)
}

::google::protobuf::uint8* S2SQueryFriendRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rankid(), target);
  }

  // repeated uint64 friendid = 3;
  if (this->friendid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _friendid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->friendid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendRankListReq)
  return target;
}

size_t S2SQueryFriendRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 friendid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friendid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friendid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendRankListReq::MergeFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendid_.MergeFrom(from.friendid_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SQueryFriendRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendRankListReq::CopyFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendRankListReq::Swap(S2SQueryFriendRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendRankListReq::InternalSwap(S2SQueryFriendRankListReq* other) {
  using std::swap;
  friendid_.InternalSwap(&other->friendid_);
  swap(playerid_, other->playerid_);
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendRankListReq::GetMetadata() const {
  protobuf_KFMidwareServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_KFMidwareServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBZoneData* Arena::CreateMaybeMessage< ::KFMsg::PBZoneData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBZoneData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateZoneToLoginReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateZoneToLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateZoneToLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateZoneToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateZoneToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateZoneToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDisconnectZoneToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDisconnectZoneToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDisconnectZoneToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToLoginReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToLoginAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToLoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToLoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SEnterToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SEnterToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SEnterToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLogoutToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLogoutToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLogoutToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDisconnectToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDisconnectToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDisconnectToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoadPlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoadPlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoadPlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoadPlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoadPlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoadPlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSavePlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSavePlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSavePlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerSyncToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerSyncToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerSyncToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToGateReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToGateReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToGateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGame* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGame >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGate* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGate >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STransmitToPlayer* Arena::CreateMaybeMessage< ::KFMsg::S2STransmitToPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STransmitToPlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBMail_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail_DataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail* Arena::CreateMaybeMessage< ::KFMsg::PBMail >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNoticeNewMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNoticeNewMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNoticeNewMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNewPlayerMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNewPlayerMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNewPlayerMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailStatusReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailStatusReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailStatusReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailStatusAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailStatusAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailStatusAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateRankDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateRankDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateRankDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendRankListReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
